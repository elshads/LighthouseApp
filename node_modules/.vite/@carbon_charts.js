import {
  __commonJS,
  __esm,
  __export,
  __toModule
} from "./chunk-WC6BDPVA.js";

// node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js
var require_formatDistance = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js"(exports4, module2) {
    "use strict";
    Object.defineProperty(exports4, "__esModule", {
      value: true
    });
    exports4.default = formatDistance3;
    var formatDistanceLocale2 = {
      lessThanXSeconds: {
        one: "less than a second",
        other: "less than {{count}} seconds"
      },
      xSeconds: {
        one: "1 second",
        other: "{{count}} seconds"
      },
      halfAMinute: "half a minute",
      lessThanXMinutes: {
        one: "less than a minute",
        other: "less than {{count}} minutes"
      },
      xMinutes: {
        one: "1 minute",
        other: "{{count}} minutes"
      },
      aboutXHours: {
        one: "about 1 hour",
        other: "about {{count}} hours"
      },
      xHours: {
        one: "1 hour",
        other: "{{count}} hours"
      },
      xDays: {
        one: "1 day",
        other: "{{count}} days"
      },
      aboutXMonths: {
        one: "about 1 month",
        other: "about {{count}} months"
      },
      xMonths: {
        one: "1 month",
        other: "{{count}} months"
      },
      aboutXYears: {
        one: "about 1 year",
        other: "about {{count}} years"
      },
      xYears: {
        one: "1 year",
        other: "{{count}} years"
      },
      overXYears: {
        one: "over 1 year",
        other: "over {{count}} years"
      },
      almostXYears: {
        one: "almost 1 year",
        other: "almost {{count}} years"
      }
    };
    function formatDistance3(token, count4, options2) {
      options2 = options2 || {};
      var result2;
      if (typeof formatDistanceLocale2[token] === "string") {
        result2 = formatDistanceLocale2[token];
      } else if (count4 === 1) {
        result2 = formatDistanceLocale2[token].one;
      } else {
        result2 = formatDistanceLocale2[token].other.replace("{{count}}", count4);
      }
      if (options2.addSuffix) {
        if (options2.comparison > 0) {
          return "in " + result2;
        } else {
          return result2 + " ago";
        }
      }
      return result2;
    }
    module2.exports = exports4.default;
  }
});

// node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js
var require_buildFormatLongFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js"(exports4, module2) {
    "use strict";
    Object.defineProperty(exports4, "__esModule", {
      value: true
    });
    exports4.default = buildFormatLongFn2;
    function buildFormatLongFn2(args) {
      return function(dirtyOptions) {
        var options2 = dirtyOptions || {};
        var width = options2.width ? String(options2.width) : args.defaultWidth;
        var format3 = args.formats[width] || args.formats[args.defaultWidth];
        return format3;
      };
    }
    module2.exports = exports4.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatLong/index.js
var require_formatLong = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatLong/index.js"(exports4, module2) {
    "use strict";
    Object.defineProperty(exports4, "__esModule", {
      value: true
    });
    exports4.default = void 0;
    var _index = _interopRequireDefault(require_buildFormatLongFn());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var dateFormats2 = {
      full: "EEEE, MMMM do, y",
      long: "MMMM do, y",
      medium: "MMM d, y",
      short: "MM/dd/yyyy"
    };
    var timeFormats2 = {
      full: "h:mm:ss a zzzz",
      long: "h:mm:ss a z",
      medium: "h:mm:ss a",
      short: "h:mm a"
    };
    var dateTimeFormats2 = {
      full: "{{date}} 'at' {{time}}",
      long: "{{date}} 'at' {{time}}",
      medium: "{{date}}, {{time}}",
      short: "{{date}}, {{time}}"
    };
    var formatLong2 = {
      date: (0, _index.default)({
        formats: dateFormats2,
        defaultWidth: "full"
      }),
      time: (0, _index.default)({
        formats: timeFormats2,
        defaultWidth: "full"
      }),
      dateTime: (0, _index.default)({
        formats: dateTimeFormats2,
        defaultWidth: "full"
      })
    };
    var _default = formatLong2;
    exports4.default = _default;
    module2.exports = exports4.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js
var require_formatRelative = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js"(exports4, module2) {
    "use strict";
    Object.defineProperty(exports4, "__esModule", {
      value: true
    });
    exports4.default = formatRelative3;
    var formatRelativeLocale2 = {
      lastWeek: "'last' eeee 'at' p",
      yesterday: "'yesterday at' p",
      today: "'today at' p",
      tomorrow: "'tomorrow at' p",
      nextWeek: "eeee 'at' p",
      other: "P"
    };
    function formatRelative3(token, _date, _baseDate, _options) {
      return formatRelativeLocale2[token];
    }
    module2.exports = exports4.default;
  }
});

// node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js
var require_buildLocalizeFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js"(exports4, module2) {
    "use strict";
    Object.defineProperty(exports4, "__esModule", {
      value: true
    });
    exports4.default = buildLocalizeFn2;
    function buildLocalizeFn2(args) {
      return function(dirtyIndex, dirtyOptions) {
        var options2 = dirtyOptions || {};
        var context = options2.context ? String(options2.context) : "standalone";
        var valuesArray;
        if (context === "formatting" && args.formattingValues) {
          var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
          var width = options2.width ? String(options2.width) : defaultWidth;
          valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
        } else {
          var _defaultWidth = args.defaultWidth;
          var _width = options2.width ? String(options2.width) : args.defaultWidth;
          valuesArray = args.values[_width] || args.values[_defaultWidth];
        }
        var index4 = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
        return valuesArray[index4];
      };
    }
    module2.exports = exports4.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/localize/index.js
var require_localize = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/localize/index.js"(exports4, module2) {
    "use strict";
    Object.defineProperty(exports4, "__esModule", {
      value: true
    });
    exports4.default = void 0;
    var _index = _interopRequireDefault(require_buildLocalizeFn());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var eraValues2 = {
      narrow: ["B", "A"],
      abbreviated: ["BC", "AD"],
      wide: ["Before Christ", "Anno Domini"]
    };
    var quarterValues2 = {
      narrow: ["1", "2", "3", "4"],
      abbreviated: ["Q1", "Q2", "Q3", "Q4"],
      wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
    };
    var monthValues2 = {
      narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
      abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
    };
    var dayValues2 = {
      narrow: ["S", "M", "T", "W", "T", "F", "S"],
      short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
    };
    var dayPeriodValues2 = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "morning",
        afternoon: "afternoon",
        evening: "evening",
        night: "night"
      }
    };
    var formattingDayPeriodValues2 = {
      narrow: {
        am: "a",
        pm: "p",
        midnight: "mi",
        noon: "n",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      },
      abbreviated: {
        am: "AM",
        pm: "PM",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      },
      wide: {
        am: "a.m.",
        pm: "p.m.",
        midnight: "midnight",
        noon: "noon",
        morning: "in the morning",
        afternoon: "in the afternoon",
        evening: "in the evening",
        night: "at night"
      }
    };
    function ordinalNumber2(dirtyNumber, _dirtyOptions) {
      var number5 = Number(dirtyNumber);
      var rem100 = number5 % 100;
      if (rem100 > 20 || rem100 < 10) {
        switch (rem100 % 10) {
          case 1:
            return number5 + "st";
          case 2:
            return number5 + "nd";
          case 3:
            return number5 + "rd";
        }
      }
      return number5 + "th";
    }
    var localize2 = {
      ordinalNumber: ordinalNumber2,
      era: (0, _index.default)({
        values: eraValues2,
        defaultWidth: "wide"
      }),
      quarter: (0, _index.default)({
        values: quarterValues2,
        defaultWidth: "wide",
        argumentCallback: function(quarter) {
          return Number(quarter) - 1;
        }
      }),
      month: (0, _index.default)({
        values: monthValues2,
        defaultWidth: "wide"
      }),
      day: (0, _index.default)({
        values: dayValues2,
        defaultWidth: "wide"
      }),
      dayPeriod: (0, _index.default)({
        values: dayPeriodValues2,
        defaultWidth: "wide",
        formattingValues: formattingDayPeriodValues2,
        defaultFormattingWidth: "wide"
      })
    };
    var _default = localize2;
    exports4.default = _default;
    module2.exports = exports4.default;
  }
});

// node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js
var require_buildMatchPatternFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js"(exports4, module2) {
    "use strict";
    Object.defineProperty(exports4, "__esModule", {
      value: true
    });
    exports4.default = buildMatchPatternFn2;
    function buildMatchPatternFn2(args) {
      return function(dirtyString, dirtyOptions) {
        var string = String(dirtyString);
        var options2 = dirtyOptions || {};
        var matchResult = string.match(args.matchPattern);
        if (!matchResult) {
          return null;
        }
        var matchedString = matchResult[0];
        var parseResult = string.match(args.parsePattern);
        if (!parseResult) {
          return null;
        }
        var value2 = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
        value2 = options2.valueCallback ? options2.valueCallback(value2) : value2;
        return {
          value: value2,
          rest: string.slice(matchedString.length)
        };
      };
    }
    module2.exports = exports4.default;
  }
});

// node_modules/date-fns/locale/_lib/buildMatchFn/index.js
var require_buildMatchFn = __commonJS({
  "node_modules/date-fns/locale/_lib/buildMatchFn/index.js"(exports4, module2) {
    "use strict";
    Object.defineProperty(exports4, "__esModule", {
      value: true
    });
    exports4.default = buildMatchFn2;
    function buildMatchFn2(args) {
      return function(dirtyString, dirtyOptions) {
        var string = String(dirtyString);
        var options2 = dirtyOptions || {};
        var width = options2.width;
        var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
        var matchResult = string.match(matchPattern);
        if (!matchResult) {
          return null;
        }
        var matchedString = matchResult[0];
        var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
        var value2;
        if (Object.prototype.toString.call(parsePatterns) === "[object Array]") {
          value2 = findIndex3(parsePatterns, function(pattern) {
            return pattern.test(string);
          });
        } else {
          value2 = findKey3(parsePatterns, function(pattern) {
            return pattern.test(string);
          });
        }
        value2 = args.valueCallback ? args.valueCallback(value2) : value2;
        value2 = options2.valueCallback ? options2.valueCallback(value2) : value2;
        return {
          value: value2,
          rest: string.slice(matchedString.length)
        };
      };
    }
    function findKey3(object, predicate) {
      for (var key in object) {
        if (object.hasOwnProperty(key) && predicate(object[key])) {
          return key;
        }
      }
    }
    function findIndex3(array4, predicate) {
      for (var key = 0; key < array4.length; key++) {
        if (predicate(array4[key])) {
          return key;
        }
      }
    }
    module2.exports = exports4.default;
  }
});

// node_modules/date-fns/locale/en-US/_lib/match/index.js
var require_match = __commonJS({
  "node_modules/date-fns/locale/en-US/_lib/match/index.js"(exports4, module2) {
    "use strict";
    Object.defineProperty(exports4, "__esModule", {
      value: true
    });
    exports4.default = void 0;
    var _index = _interopRequireDefault(require_buildMatchPatternFn());
    var _index2 = _interopRequireDefault(require_buildMatchFn());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var matchOrdinalNumberPattern2 = /^(\d+)(th|st|nd|rd)?/i;
    var parseOrdinalNumberPattern2 = /\d+/i;
    var matchEraPatterns2 = {
      narrow: /^(b|a)/i,
      abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
      wide: /^(before christ|before common era|anno domini|common era)/i
    };
    var parseEraPatterns2 = {
      any: [/^b/i, /^(a|c)/i]
    };
    var matchQuarterPatterns2 = {
      narrow: /^[1234]/i,
      abbreviated: /^q[1234]/i,
      wide: /^[1234](th|st|nd|rd)? quarter/i
    };
    var parseQuarterPatterns2 = {
      any: [/1/i, /2/i, /3/i, /4/i]
    };
    var matchMonthPatterns2 = {
      narrow: /^[jfmasond]/i,
      abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
    };
    var parseMonthPatterns2 = {
      narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
      any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
    };
    var matchDayPatterns2 = {
      narrow: /^[smtwf]/i,
      short: /^(su|mo|tu|we|th|fr|sa)/i,
      abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
    };
    var parseDayPatterns2 = {
      narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
    };
    var matchDayPeriodPatterns2 = {
      narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
      any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
    };
    var parseDayPeriodPatterns2 = {
      any: {
        am: /^a/i,
        pm: /^p/i,
        midnight: /^mi/i,
        noon: /^no/i,
        morning: /morning/i,
        afternoon: /afternoon/i,
        evening: /evening/i,
        night: /night/i
      }
    };
    var match2 = {
      ordinalNumber: (0, _index.default)({
        matchPattern: matchOrdinalNumberPattern2,
        parsePattern: parseOrdinalNumberPattern2,
        valueCallback: function(value2) {
          return parseInt(value2, 10);
        }
      }),
      era: (0, _index2.default)({
        matchPatterns: matchEraPatterns2,
        defaultMatchWidth: "wide",
        parsePatterns: parseEraPatterns2,
        defaultParseWidth: "any"
      }),
      quarter: (0, _index2.default)({
        matchPatterns: matchQuarterPatterns2,
        defaultMatchWidth: "wide",
        parsePatterns: parseQuarterPatterns2,
        defaultParseWidth: "any",
        valueCallback: function(index4) {
          return index4 + 1;
        }
      }),
      month: (0, _index2.default)({
        matchPatterns: matchMonthPatterns2,
        defaultMatchWidth: "wide",
        parsePatterns: parseMonthPatterns2,
        defaultParseWidth: "any"
      }),
      day: (0, _index2.default)({
        matchPatterns: matchDayPatterns2,
        defaultMatchWidth: "wide",
        parsePatterns: parseDayPatterns2,
        defaultParseWidth: "any"
      }),
      dayPeriod: (0, _index2.default)({
        matchPatterns: matchDayPeriodPatterns2,
        defaultMatchWidth: "any",
        parsePatterns: parseDayPeriodPatterns2,
        defaultParseWidth: "any"
      })
    };
    var _default = match2;
    exports4.default = _default;
    module2.exports = exports4.default;
  }
});

// node_modules/date-fns/locale/en-US/index.js
var require_en_US = __commonJS({
  "node_modules/date-fns/locale/en-US/index.js"(exports4, module2) {
    "use strict";
    Object.defineProperty(exports4, "__esModule", {
      value: true
    });
    exports4.default = void 0;
    var _index = _interopRequireDefault(require_formatDistance());
    var _index2 = _interopRequireDefault(require_formatLong());
    var _index3 = _interopRequireDefault(require_formatRelative());
    var _index4 = _interopRequireDefault(require_localize());
    var _index5 = _interopRequireDefault(require_match());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var locale4 = {
      code: "en-US",
      formatDistance: _index.default,
      formatLong: _index2.default,
      formatRelative: _index3.default,
      localize: _index4.default,
      match: _index5.default,
      options: {
        weekStartsOn: 0,
        firstWeekContainsDate: 1
      }
    };
    var _default = locale4;
    exports4.default = _default;
    module2.exports = exports4.default;
  }
});

// node_modules/dom-to-image/src/dom-to-image.js
var require_dom_to_image = __commonJS({
  "node_modules/dom-to-image/src/dom-to-image.js"(exports4, module2) {
    (function(global2) {
      "use strict";
      var util = newUtil();
      var inliner = newInliner();
      var fontFaces = newFontFaces();
      var images = newImages();
      var defaultOptions = {
        imagePlaceholder: void 0,
        cacheBust: false
      };
      var domtoimage = {
        toSvg,
        toPng,
        toJpeg,
        toBlob,
        toPixelData,
        impl: {
          fontFaces,
          images,
          util,
          inliner,
          options: {}
        }
      };
      if (typeof module2 !== "undefined")
        module2.exports = domtoimage;
      else
        global2.domtoimage = domtoimage;
      function toSvg(node, options2) {
        options2 = options2 || {};
        copyOptions(options2);
        return Promise.resolve(node).then(function(node2) {
          return cloneNode(node2, options2.filter, true);
        }).then(embedFonts).then(inlineImages).then(applyOptions).then(function(clone2) {
          return makeSvgDataUri(clone2, options2.width || util.width(node), options2.height || util.height(node));
        });
        function applyOptions(clone2) {
          if (options2.bgcolor)
            clone2.style.backgroundColor = options2.bgcolor;
          if (options2.width)
            clone2.style.width = options2.width + "px";
          if (options2.height)
            clone2.style.height = options2.height + "px";
          if (options2.style)
            Object.keys(options2.style).forEach(function(property2) {
              clone2.style[property2] = options2.style[property2];
            });
          return clone2;
        }
      }
      function toPixelData(node, options2) {
        return draw(node, options2 || {}).then(function(canvas) {
          return canvas.getContext("2d").getImageData(0, 0, util.width(node), util.height(node)).data;
        });
      }
      function toPng(node, options2) {
        return draw(node, options2 || {}).then(function(canvas) {
          return canvas.toDataURL();
        });
      }
      function toJpeg(node, options2) {
        options2 = options2 || {};
        return draw(node, options2).then(function(canvas) {
          return canvas.toDataURL("image/jpeg", options2.quality || 1);
        });
      }
      function toBlob(node, options2) {
        return draw(node, options2 || {}).then(util.canvasToBlob);
      }
      function copyOptions(options2) {
        if (typeof options2.imagePlaceholder === "undefined") {
          domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;
        } else {
          domtoimage.impl.options.imagePlaceholder = options2.imagePlaceholder;
        }
        if (typeof options2.cacheBust === "undefined") {
          domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;
        } else {
          domtoimage.impl.options.cacheBust = options2.cacheBust;
        }
      }
      function draw(domNode, options2) {
        return toSvg(domNode, options2).then(util.makeImage).then(util.delay(100)).then(function(image) {
          var canvas = newCanvas(domNode);
          canvas.getContext("2d").drawImage(image, 0, 0);
          return canvas;
        });
        function newCanvas(domNode2) {
          var canvas = document.createElement("canvas");
          canvas.width = options2.width || util.width(domNode2);
          canvas.height = options2.height || util.height(domNode2);
          if (options2.bgcolor) {
            var ctx = canvas.getContext("2d");
            ctx.fillStyle = options2.bgcolor;
            ctx.fillRect(0, 0, canvas.width, canvas.height);
          }
          return canvas;
        }
      }
      function cloneNode(node, filter5, root3) {
        if (!root3 && filter5 && !filter5(node))
          return Promise.resolve();
        return Promise.resolve(node).then(makeNodeCopy).then(function(clone2) {
          return cloneChildren(node, clone2, filter5);
        }).then(function(clone2) {
          return processClone(node, clone2);
        });
        function makeNodeCopy(node2) {
          if (node2 instanceof HTMLCanvasElement)
            return util.makeImage(node2.toDataURL());
          return node2.cloneNode(false);
        }
        function cloneChildren(original, clone2, filter6) {
          var children2 = original.childNodes;
          if (children2.length === 0)
            return Promise.resolve(clone2);
          return cloneChildrenInOrder(clone2, util.asArray(children2), filter6).then(function() {
            return clone2;
          });
          function cloneChildrenInOrder(parent2, children3, filter7) {
            var done = Promise.resolve();
            children3.forEach(function(child) {
              done = done.then(function() {
                return cloneNode(child, filter7);
              }).then(function(childClone) {
                if (childClone)
                  parent2.appendChild(childClone);
              });
            });
            return done;
          }
        }
        function processClone(original, clone2) {
          if (!(clone2 instanceof Element))
            return clone2;
          return Promise.resolve().then(cloneStyle).then(clonePseudoElements).then(copyUserInput).then(fixSvg).then(function() {
            return clone2;
          });
          function cloneStyle() {
            copyStyle(window.getComputedStyle(original), clone2.style);
            function copyStyle(source, target) {
              if (source.cssText)
                target.cssText = source.cssText;
              else
                copyProperties(source, target);
              function copyProperties(source2, target2) {
                util.asArray(source2).forEach(function(name) {
                  target2.setProperty(name, source2.getPropertyValue(name), source2.getPropertyPriority(name));
                });
              }
            }
          }
          function clonePseudoElements() {
            [":before", ":after"].forEach(function(element) {
              clonePseudoElement(element);
            });
            function clonePseudoElement(element) {
              var style = window.getComputedStyle(original, element);
              var content = style.getPropertyValue("content");
              if (content === "" || content === "none")
                return;
              var className = util.uid();
              clone2.className = clone2.className + " " + className;
              var styleElement = document.createElement("style");
              styleElement.appendChild(formatPseudoElementStyle(className, element, style));
              clone2.appendChild(styleElement);
              function formatPseudoElementStyle(className2, element2, style2) {
                var selector = "." + className2 + ":" + element2;
                var cssText = style2.cssText ? formatCssText(style2) : formatCssProperties(style2);
                return document.createTextNode(selector + "{" + cssText + "}");
                function formatCssText(style3) {
                  var content2 = style3.getPropertyValue("content");
                  return style3.cssText + " content: " + content2 + ";";
                }
                function formatCssProperties(style3) {
                  return util.asArray(style3).map(formatProperty).join("; ") + ";";
                  function formatProperty(name) {
                    return name + ": " + style3.getPropertyValue(name) + (style3.getPropertyPriority(name) ? " !important" : "");
                  }
                }
              }
            }
          }
          function copyUserInput() {
            if (original instanceof HTMLTextAreaElement)
              clone2.innerHTML = original.value;
            if (original instanceof HTMLInputElement)
              clone2.setAttribute("value", original.value);
          }
          function fixSvg() {
            if (!(clone2 instanceof SVGElement))
              return;
            clone2.setAttribute("xmlns", "http://www.w3.org/2000/svg");
            if (!(clone2 instanceof SVGRectElement))
              return;
            ["width", "height"].forEach(function(attribute) {
              var value2 = clone2.getAttribute(attribute);
              if (!value2)
                return;
              clone2.style.setProperty(attribute, value2);
            });
          }
        }
      }
      function embedFonts(node) {
        return fontFaces.resolveAll().then(function(cssText) {
          var styleNode = document.createElement("style");
          node.appendChild(styleNode);
          styleNode.appendChild(document.createTextNode(cssText));
          return node;
        });
      }
      function inlineImages(node) {
        return images.inlineAll(node).then(function() {
          return node;
        });
      }
      function makeSvgDataUri(node, width, height) {
        return Promise.resolve(node).then(function(node2) {
          node2.setAttribute("xmlns", "http://www.w3.org/1999/xhtml");
          return new XMLSerializer().serializeToString(node2);
        }).then(util.escapeXhtml).then(function(xhtml2) {
          return '<foreignObject x="0" y="0" width="100%" height="100%">' + xhtml2 + "</foreignObject>";
        }).then(function(foreignObject) {
          return '<svg xmlns="http://www.w3.org/2000/svg" width="' + width + '" height="' + height + '">' + foreignObject + "</svg>";
        }).then(function(svg) {
          return "data:image/svg+xml;charset=utf-8," + svg;
        });
      }
      function newUtil() {
        return {
          escape: escape2,
          parseExtension,
          mimeType,
          dataAsUrl,
          isDataUrl,
          canvasToBlob,
          resolveUrl,
          getAndEncode,
          uid: uid(),
          delay: delay2,
          asArray,
          escapeXhtml,
          makeImage,
          width,
          height
        };
        function mimes() {
          var WOFF = "application/font-woff";
          var JPEG = "image/jpeg";
          return {
            "woff": WOFF,
            "woff2": WOFF,
            "ttf": "application/font-truetype",
            "eot": "application/vnd.ms-fontobject",
            "png": "image/png",
            "jpg": JPEG,
            "jpeg": JPEG,
            "gif": "image/gif",
            "tiff": "image/tiff",
            "svg": "image/svg+xml"
          };
        }
        function parseExtension(url) {
          var match2 = /\.([^\.\/]*?)$/g.exec(url);
          if (match2)
            return match2[1];
          else
            return "";
        }
        function mimeType(url) {
          var extension = parseExtension(url).toLowerCase();
          return mimes()[extension] || "";
        }
        function isDataUrl(url) {
          return url.search(/^(data:)/) !== -1;
        }
        function toBlob2(canvas) {
          return new Promise(function(resolve) {
            var binaryString = window.atob(canvas.toDataURL().split(",")[1]);
            var length = binaryString.length;
            var binaryArray = new Uint8Array(length);
            for (var i = 0; i < length; i++)
              binaryArray[i] = binaryString.charCodeAt(i);
            resolve(new Blob([binaryArray], {
              type: "image/png"
            }));
          });
        }
        function canvasToBlob(canvas) {
          if (canvas.toBlob)
            return new Promise(function(resolve) {
              canvas.toBlob(resolve);
            });
          return toBlob2(canvas);
        }
        function resolveUrl(url, baseUrl) {
          var doc = document.implementation.createHTMLDocument();
          var base = doc.createElement("base");
          doc.head.appendChild(base);
          var a3 = doc.createElement("a");
          doc.body.appendChild(a3);
          base.href = baseUrl;
          a3.href = url;
          return a3.href;
        }
        function uid() {
          var index4 = 0;
          return function() {
            return "u" + fourRandomChars() + index4++;
            function fourRandomChars() {
              return ("0000" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);
            }
          };
        }
        function makeImage(uri) {
          return new Promise(function(resolve, reject2) {
            var image = new Image();
            image.onload = function() {
              resolve(image);
            };
            image.onerror = reject2;
            image.src = uri;
          });
        }
        function getAndEncode(url) {
          var TIMEOUT = 3e4;
          if (domtoimage.impl.options.cacheBust) {
            url += (/\?/.test(url) ? "&" : "?") + new Date().getTime();
          }
          return new Promise(function(resolve) {
            var request = new XMLHttpRequest();
            request.onreadystatechange = done;
            request.ontimeout = timeout2;
            request.responseType = "blob";
            request.timeout = TIMEOUT;
            request.open("GET", url, true);
            request.send();
            var placeholder;
            if (domtoimage.impl.options.imagePlaceholder) {
              var split2 = domtoimage.impl.options.imagePlaceholder.split(/,/);
              if (split2 && split2[1]) {
                placeholder = split2[1];
              }
            }
            function done() {
              if (request.readyState !== 4)
                return;
              if (request.status !== 200) {
                if (placeholder) {
                  resolve(placeholder);
                } else {
                  fail("cannot fetch resource: " + url + ", status: " + request.status);
                }
                return;
              }
              var encoder = new FileReader();
              encoder.onloadend = function() {
                var content = encoder.result.split(/,/)[1];
                resolve(content);
              };
              encoder.readAsDataURL(request.response);
            }
            function timeout2() {
              if (placeholder) {
                resolve(placeholder);
              } else {
                fail("timeout of " + TIMEOUT + "ms occured while fetching resource: " + url);
              }
            }
            function fail(message) {
              console.error(message);
              resolve("");
            }
          });
        }
        function dataAsUrl(content, type2) {
          return "data:" + type2 + ";base64," + content;
        }
        function escape2(string) {
          return string.replace(/([.*+?^${}()|\[\]\/\\])/g, "\\$1");
        }
        function delay2(ms) {
          return function(arg) {
            return new Promise(function(resolve) {
              setTimeout(function() {
                resolve(arg);
              }, ms);
            });
          };
        }
        function asArray(arrayLike) {
          var array4 = [];
          var length = arrayLike.length;
          for (var i = 0; i < length; i++)
            array4.push(arrayLike[i]);
          return array4;
        }
        function escapeXhtml(string) {
          return string.replace(/#/g, "%23").replace(/\n/g, "%0A");
        }
        function width(node) {
          var leftBorder = px(node, "border-left-width");
          var rightBorder = px(node, "border-right-width");
          return node.scrollWidth + leftBorder + rightBorder;
        }
        function height(node) {
          var topBorder = px(node, "border-top-width");
          var bottomBorder = px(node, "border-bottom-width");
          return node.scrollHeight + topBorder + bottomBorder;
        }
        function px(node, styleProperty) {
          var value2 = window.getComputedStyle(node).getPropertyValue(styleProperty);
          return parseFloat(value2.replace("px", ""));
        }
      }
      function newInliner() {
        var URL_REGEX = /url\(['"]?([^'"]+?)['"]?\)/g;
        return {
          inlineAll,
          shouldProcess,
          impl: {
            readUrls,
            inline
          }
        };
        function shouldProcess(string) {
          return string.search(URL_REGEX) !== -1;
        }
        function readUrls(string) {
          var result2 = [];
          var match2;
          while ((match2 = URL_REGEX.exec(string)) !== null) {
            result2.push(match2[1]);
          }
          return result2.filter(function(url) {
            return !util.isDataUrl(url);
          });
        }
        function inline(string, url, baseUrl, get5) {
          return Promise.resolve(url).then(function(url2) {
            return baseUrl ? util.resolveUrl(url2, baseUrl) : url2;
          }).then(get5 || util.getAndEncode).then(function(data) {
            return util.dataAsUrl(data, util.mimeType(url));
          }).then(function(dataUrl) {
            return string.replace(urlAsRegex(url), "$1" + dataUrl + "$3");
          });
          function urlAsRegex(url2) {
            return new RegExp(`(url\\(['"]?)(` + util.escape(url2) + `)(['"]?\\))`, "g");
          }
        }
        function inlineAll(string, baseUrl, get5) {
          if (nothingToInline())
            return Promise.resolve(string);
          return Promise.resolve(string).then(readUrls).then(function(urls) {
            var done = Promise.resolve(string);
            urls.forEach(function(url) {
              done = done.then(function(string2) {
                return inline(string2, url, baseUrl, get5);
              });
            });
            return done;
          });
          function nothingToInline() {
            return !shouldProcess(string);
          }
        }
      }
      function newFontFaces() {
        return {
          resolveAll,
          impl: {
            readAll
          }
        };
        function resolveAll() {
          return readAll(document).then(function(webFonts) {
            return Promise.all(webFonts.map(function(webFont) {
              return webFont.resolve();
            }));
          }).then(function(cssStrings) {
            return cssStrings.join("\n");
          });
        }
        function readAll() {
          return Promise.resolve(util.asArray(document.styleSheets)).then(getCssRules).then(selectWebFontRules).then(function(rules) {
            return rules.map(newWebFont);
          });
          function selectWebFontRules(cssRules) {
            return cssRules.filter(function(rule) {
              return rule.type === CSSRule.FONT_FACE_RULE;
            }).filter(function(rule) {
              return inliner.shouldProcess(rule.style.getPropertyValue("src"));
            });
          }
          function getCssRules(styleSheets) {
            var cssRules = [];
            styleSheets.forEach(function(sheet) {
              try {
                util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));
              } catch (e) {
                console.log("Error while reading CSS rules from " + sheet.href, e.toString());
              }
            });
            return cssRules;
          }
          function newWebFont(webFontRule) {
            return {
              resolve: function resolve() {
                var baseUrl = (webFontRule.parentStyleSheet || {}).href;
                return inliner.inlineAll(webFontRule.cssText, baseUrl);
              },
              src: function() {
                return webFontRule.style.getPropertyValue("src");
              }
            };
          }
        }
      }
      function newImages() {
        return {
          inlineAll,
          impl: {
            newImage
          }
        };
        function newImage(element) {
          return {
            inline
          };
          function inline(get5) {
            if (util.isDataUrl(element.src))
              return Promise.resolve();
            return Promise.resolve(element.src).then(get5 || util.getAndEncode).then(function(data) {
              return util.dataAsUrl(data, util.mimeType(element.src));
            }).then(function(dataUrl) {
              return new Promise(function(resolve, reject2) {
                element.onload = resolve;
                element.onerror = reject2;
                element.src = dataUrl;
              });
            });
          }
        }
        function inlineAll(node) {
          if (!(node instanceof Element))
            return Promise.resolve(node);
          return inlineBackground(node).then(function() {
            if (node instanceof HTMLImageElement)
              return newImage(node).inline();
            else
              return Promise.all(util.asArray(node.childNodes).map(function(child) {
                return inlineAll(child);
              }));
          });
          function inlineBackground(node2) {
            var background = node2.style.getPropertyValue("background");
            if (!background)
              return Promise.resolve(node2);
            return inliner.inlineAll(background).then(function(inlined) {
              node2.style.setProperty("background", inlined, node2.style.getPropertyPriority("background"));
            }).then(function() {
              return node2;
            });
          }
        }
      }
    })(exports4);
  }
});

// node_modules/warning/browser.js
var require_browser = __commonJS({
  "node_modules/warning/browser.js"(exports4, module2) {
    "use strict";
    var warning3 = function() {
    };
    if (true) {
      warning3 = function(condition, format3, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format3 === void 0) {
          throw new Error("`warning(condition, format, ...args)` requires a warning message argument");
        }
        if (format3.length < 10 || /^[s\W]*$/.test(format3)) {
          throw new Error("The warning format should be able to uniquely identify this warning. Please, use a more descriptive format than: " + format3);
        }
        if (!condition) {
          var argIndex = 0;
          var message = "Warning: " + format3.replace(/%s/g, function() {
            return args[argIndex++];
          });
          if (typeof console !== "undefined") {
            console.error(message);
          }
          try {
            throw new Error(message);
          } catch (x3) {
          }
        }
      };
    }
    module2.exports = warning3;
  }
});

// node_modules/carbon-components/node_modules/flatpickr/dist/flatpickr.js
var require_flatpickr = __commonJS({
  "node_modules/carbon-components/node_modules/flatpickr/dist/flatpickr.js"(exports4, module2) {
    (function(global2, factory) {
      typeof exports4 === "object" && typeof module2 !== "undefined" ? module2.exports = factory() : typeof define === "function" && define.amd ? define(factory) : (global2 = global2 || self, global2.flatpickr = factory());
    })(exports4, function() {
      "use strict";
      var __assign5 = function() {
        __assign5 = Object.assign || function __assign6(t) {
          for (var s3, i = 1, n = arguments.length; i < n; i++) {
            s3 = arguments[i];
            for (var p in s3)
              if (Object.prototype.hasOwnProperty.call(s3, p))
                t[p] = s3[p];
          }
          return t;
        };
        return __assign5.apply(this, arguments);
      };
      var HOOKS = [
        "onChange",
        "onClose",
        "onDayCreate",
        "onDestroy",
        "onKeyDown",
        "onMonthChange",
        "onOpen",
        "onParseConfig",
        "onReady",
        "onValueUpdate",
        "onYearChange",
        "onPreCalendarPosition"
      ];
      var defaults2 = {
        _disable: [],
        _enable: [],
        allowInput: false,
        altFormat: "F j, Y",
        altInput: false,
        altInputClass: "form-control input",
        animate: typeof window === "object" && window.navigator.userAgent.indexOf("MSIE") === -1,
        ariaDateFormat: "F j, Y",
        clickOpens: true,
        closeOnSelect: true,
        conjunction: ", ",
        dateFormat: "Y-m-d",
        defaultHour: 12,
        defaultMinute: 0,
        defaultSeconds: 0,
        disable: [],
        disableMobile: false,
        enable: [],
        enableSeconds: false,
        enableTime: false,
        errorHandler: function(err) {
          return typeof console !== "undefined" && console.warn(err);
        },
        getWeek: function(givenDate) {
          var date2 = new Date(givenDate.getTime());
          date2.setHours(0, 0, 0, 0);
          date2.setDate(date2.getDate() + 3 - (date2.getDay() + 6) % 7);
          var week1 = new Date(date2.getFullYear(), 0, 4);
          return 1 + Math.round(((date2.getTime() - week1.getTime()) / 864e5 - 3 + (week1.getDay() + 6) % 7) / 7);
        },
        hourIncrement: 1,
        ignoredFocusElements: [],
        inline: false,
        locale: "default",
        minuteIncrement: 5,
        mode: "single",
        nextArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>",
        noCalendar: false,
        now: new Date(),
        onChange: [],
        onClose: [],
        onDayCreate: [],
        onDestroy: [],
        onKeyDown: [],
        onMonthChange: [],
        onOpen: [],
        onParseConfig: [],
        onReady: [],
        onValueUpdate: [],
        onYearChange: [],
        onPreCalendarPosition: [],
        plugins: [],
        position: "auto",
        positionElement: void 0,
        prevArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>",
        shorthandCurrentMonth: false,
        showMonths: 1,
        static: false,
        time_24hr: false,
        weekNumbers: false,
        wrap: false
      };
      var english = {
        weekdays: {
          shorthand: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          longhand: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        months: {
          shorthand: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
          ],
          longhand: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
          ]
        },
        daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
        firstDayOfWeek: 0,
        ordinal: function(nth2) {
          var s3 = nth2 % 100;
          if (s3 > 3 && s3 < 21)
            return "th";
          switch (s3 % 10) {
            case 1:
              return "st";
            case 2:
              return "nd";
            case 3:
              return "rd";
            default:
              return "th";
          }
        },
        rangeSeparator: " to ",
        weekAbbreviation: "Wk",
        scrollTitle: "Scroll to increment",
        toggleTitle: "Click to toggle",
        amPM: ["AM", "PM"],
        yearAriaLabel: "Year",
        time_24hr: false
      };
      var pad3 = function(number5) {
        return ("0" + number5).slice(-2);
      };
      var int = function(bool) {
        return bool === true ? 1 : 0;
      };
      function debounce3(func, wait, immediate) {
        if (immediate === void 0) {
          immediate = false;
        }
        var timeout2;
        return function() {
          var context = this, args = arguments;
          timeout2 !== null && clearTimeout(timeout2);
          timeout2 = window.setTimeout(function() {
            timeout2 = null;
            if (!immediate)
              func.apply(context, args);
          }, wait);
          if (immediate && !timeout2)
            func.apply(context, args);
        };
      }
      var arrayify = function(obj) {
        return obj instanceof Array ? obj : [obj];
      };
      function toggleClass(elem, className, bool) {
        if (bool === true)
          return elem.classList.add(className);
        elem.classList.remove(className);
      }
      function createElement(tag, className, content) {
        var e = window.document.createElement(tag);
        className = className || "";
        content = content || "";
        e.className = className;
        if (content !== void 0)
          e.textContent = content;
        return e;
      }
      function clearNode(node) {
        while (node.firstChild)
          node.removeChild(node.firstChild);
      }
      function findParent(node, condition) {
        if (condition(node))
          return node;
        else if (node.parentNode)
          return findParent(node.parentNode, condition);
        return void 0;
      }
      function createNumberInput(inputClassName, opts) {
        var wrapper = createElement("div", "numInputWrapper"), numInput = createElement("input", "numInput " + inputClassName), arrowUp = createElement("span", "arrowUp"), arrowDown = createElement("span", "arrowDown");
        if (navigator.userAgent.indexOf("MSIE 9.0") === -1) {
          numInput.type = "number";
        } else {
          numInput.type = "text";
          numInput.pattern = "\\d*";
        }
        if (opts !== void 0)
          for (var key in opts)
            numInput.setAttribute(key, opts[key]);
        wrapper.appendChild(numInput);
        wrapper.appendChild(arrowUp);
        wrapper.appendChild(arrowDown);
        return wrapper;
      }
      function getEventTarget(event) {
        if (typeof event.composedPath === "function") {
          var path3 = event.composedPath();
          return path3[0];
        }
        return event.target;
      }
      var doNothing = function() {
        return void 0;
      };
      var monthToStr3 = function(monthNumber, shorthand, locale4) {
        return locale4.months[shorthand ? "shorthand" : "longhand"][monthNumber];
      };
      var revFormat = {
        D: doNothing,
        F: function(dateObj, monthName, locale4) {
          dateObj.setMonth(locale4.months.longhand.indexOf(monthName));
        },
        G: function(dateObj, hour2) {
          dateObj.setHours(parseFloat(hour2));
        },
        H: function(dateObj, hour2) {
          dateObj.setHours(parseFloat(hour2));
        },
        J: function(dateObj, day2) {
          dateObj.setDate(parseFloat(day2));
        },
        K: function(dateObj, amPM, locale4) {
          dateObj.setHours(dateObj.getHours() % 12 + 12 * int(new RegExp(locale4.amPM[1], "i").test(amPM)));
        },
        M: function(dateObj, shortMonth, locale4) {
          dateObj.setMonth(locale4.months.shorthand.indexOf(shortMonth));
        },
        S: function(dateObj, seconds2) {
          dateObj.setSeconds(parseFloat(seconds2));
        },
        U: function(_, unixSeconds) {
          return new Date(parseFloat(unixSeconds) * 1e3);
        },
        W: function(dateObj, weekNum, locale4) {
          var weekNumber = parseInt(weekNum);
          var date2 = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);
          date2.setDate(date2.getDate() - date2.getDay() + locale4.firstDayOfWeek);
          return date2;
        },
        Y: function(dateObj, year2) {
          dateObj.setFullYear(parseFloat(year2));
        },
        Z: function(_, ISODate) {
          return new Date(ISODate);
        },
        d: function(dateObj, day2) {
          dateObj.setDate(parseFloat(day2));
        },
        h: function(dateObj, hour2) {
          dateObj.setHours(parseFloat(hour2));
        },
        i: function(dateObj, minutes2) {
          dateObj.setMinutes(parseFloat(minutes2));
        },
        j: function(dateObj, day2) {
          dateObj.setDate(parseFloat(day2));
        },
        l: doNothing,
        m: function(dateObj, month2) {
          dateObj.setMonth(parseFloat(month2) - 1);
        },
        n: function(dateObj, month2) {
          dateObj.setMonth(parseFloat(month2) - 1);
        },
        s: function(dateObj, seconds2) {
          dateObj.setSeconds(parseFloat(seconds2));
        },
        u: function(_, unixMillSeconds) {
          return new Date(parseFloat(unixMillSeconds));
        },
        w: doNothing,
        y: function(dateObj, year2) {
          dateObj.setFullYear(2e3 + parseFloat(year2));
        }
      };
      var tokenRegex = {
        D: "(\\w+)",
        F: "(\\w+)",
        G: "(\\d\\d|\\d)",
        H: "(\\d\\d|\\d)",
        J: "(\\d\\d|\\d)\\w+",
        K: "",
        M: "(\\w+)",
        S: "(\\d\\d|\\d)",
        U: "(.+)",
        W: "(\\d\\d|\\d)",
        Y: "(\\d{4})",
        Z: "(.+)",
        d: "(\\d\\d|\\d)",
        h: "(\\d\\d|\\d)",
        i: "(\\d\\d|\\d)",
        j: "(\\d\\d|\\d)",
        l: "(\\w+)",
        m: "(\\d\\d|\\d)",
        n: "(\\d\\d|\\d)",
        s: "(\\d\\d|\\d)",
        u: "(.+)",
        w: "(\\d\\d|\\d)",
        y: "(\\d{2})"
      };
      var formats = {
        Z: function(date2) {
          return date2.toISOString();
        },
        D: function(date2, locale4, options2) {
          return locale4.weekdays.shorthand[formats.w(date2, locale4, options2)];
        },
        F: function(date2, locale4, options2) {
          return monthToStr3(formats.n(date2, locale4, options2) - 1, false, locale4);
        },
        G: function(date2, locale4, options2) {
          return pad3(formats.h(date2, locale4, options2));
        },
        H: function(date2) {
          return pad3(date2.getHours());
        },
        J: function(date2, locale4) {
          return locale4.ordinal !== void 0 ? date2.getDate() + locale4.ordinal(date2.getDate()) : date2.getDate();
        },
        K: function(date2, locale4) {
          return locale4.amPM[int(date2.getHours() > 11)];
        },
        M: function(date2, locale4) {
          return monthToStr3(date2.getMonth(), true, locale4);
        },
        S: function(date2) {
          return pad3(date2.getSeconds());
        },
        U: function(date2) {
          return date2.getTime() / 1e3;
        },
        W: function(date2, _, options2) {
          return options2.getWeek(date2);
        },
        Y: function(date2) {
          return date2.getFullYear();
        },
        d: function(date2) {
          return pad3(date2.getDate());
        },
        h: function(date2) {
          return date2.getHours() % 12 ? date2.getHours() % 12 : 12;
        },
        i: function(date2) {
          return pad3(date2.getMinutes());
        },
        j: function(date2) {
          return date2.getDate();
        },
        l: function(date2, locale4) {
          return locale4.weekdays.longhand[date2.getDay()];
        },
        m: function(date2) {
          return pad3(date2.getMonth() + 1);
        },
        n: function(date2) {
          return date2.getMonth() + 1;
        },
        s: function(date2) {
          return date2.getSeconds();
        },
        u: function(date2) {
          return date2.getTime();
        },
        w: function(date2) {
          return date2.getDay();
        },
        y: function(date2) {
          return String(date2.getFullYear()).substring(2);
        }
      };
      var createDateFormatter = function(_a4) {
        var _b = _a4.config, config = _b === void 0 ? defaults2 : _b, _c = _a4.l10n, l10n = _c === void 0 ? english : _c;
        return function(dateObj, frmt, overrideLocale) {
          var locale4 = overrideLocale || l10n;
          if (config.formatDate !== void 0) {
            return config.formatDate(dateObj, frmt, locale4);
          }
          return frmt.split("").map(function(c, i, arr) {
            return formats[c] && arr[i - 1] !== "\\" ? formats[c](dateObj, locale4, config) : c !== "\\" ? c : "";
          }).join("");
        };
      };
      var createDateParser = function(_a4) {
        var _b = _a4.config, config = _b === void 0 ? defaults2 : _b, _c = _a4.l10n, l10n = _c === void 0 ? english : _c;
        return function(date2, givenFormat, timeless, customLocale) {
          if (date2 !== 0 && !date2)
            return void 0;
          var locale4 = customLocale || l10n;
          var parsedDate;
          var dateOrig = date2;
          if (date2 instanceof Date)
            parsedDate = new Date(date2.getTime());
          else if (typeof date2 !== "string" && date2.toFixed !== void 0)
            parsedDate = new Date(date2);
          else if (typeof date2 === "string") {
            var format3 = givenFormat || (config || defaults2).dateFormat;
            var datestr = String(date2).trim();
            if (datestr === "today") {
              parsedDate = new Date();
              timeless = true;
            } else if (/Z$/.test(datestr) || /GMT$/.test(datestr))
              parsedDate = new Date(date2);
            else if (config && config.parseDate)
              parsedDate = config.parseDate(date2, format3);
            else {
              parsedDate = !config || !config.noCalendar ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0) : new Date(new Date().setHours(0, 0, 0, 0));
              var matched = void 0, ops = [];
              for (var i = 0, matchIndex = 0, regexStr = ""; i < format3.length; i++) {
                var token_1 = format3[i];
                var isBackSlash = token_1 === "\\";
                var escaped = format3[i - 1] === "\\" || isBackSlash;
                if (tokenRegex[token_1] && !escaped) {
                  regexStr += tokenRegex[token_1];
                  var match2 = new RegExp(regexStr).exec(date2);
                  if (match2 && (matched = true)) {
                    ops[token_1 !== "Y" ? "push" : "unshift"]({
                      fn: revFormat[token_1],
                      val: match2[++matchIndex]
                    });
                  }
                } else if (!isBackSlash)
                  regexStr += ".";
                ops.forEach(function(_a5) {
                  var fn = _a5.fn, val = _a5.val;
                  return parsedDate = fn(parsedDate, val, locale4) || parsedDate;
                });
              }
              parsedDate = matched ? parsedDate : void 0;
            }
          }
          if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {
            config.errorHandler(new Error("Invalid date provided: " + dateOrig));
            return void 0;
          }
          if (timeless === true)
            parsedDate.setHours(0, 0, 0, 0);
          return parsedDate;
        };
      };
      function compareDates(date1, date2, timeless) {
        if (timeless === void 0) {
          timeless = true;
        }
        if (timeless !== false) {
          return new Date(date1.getTime()).setHours(0, 0, 0, 0) - new Date(date2.getTime()).setHours(0, 0, 0, 0);
        }
        return date1.getTime() - date2.getTime();
      }
      var isBetween = function(ts, ts1, ts2) {
        return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);
      };
      var duration = {
        DAY: 864e5
      };
      if (typeof Object.assign !== "function") {
        Object.assign = function(target) {
          var args = [];
          for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
          }
          if (!target) {
            throw TypeError("Cannot convert undefined or null to object");
          }
          var _loop_1 = function(source2) {
            if (source2) {
              Object.keys(source2).forEach(function(key) {
                return target[key] = source2[key];
              });
            }
          };
          for (var _a4 = 0, args_1 = args; _a4 < args_1.length; _a4++) {
            var source = args_1[_a4];
            _loop_1(source);
          }
          return target;
        };
      }
      var DEBOUNCED_CHANGE_MS = 300;
      function FlatpickrInstance(element, instanceConfig) {
        var self2 = {
          config: __assign5({}, defaults2, flatpickr.defaultConfig),
          l10n: english
        };
        self2.parseDate = createDateParser({ config: self2.config, l10n: self2.l10n });
        self2._handlers = [];
        self2.pluginElements = [];
        self2.loadedPlugins = [];
        self2._bind = bind2;
        self2._setHoursFromDate = setHoursFromDate;
        self2._positionCalendar = positionCalendar;
        self2.changeMonth = changeMonth;
        self2.changeYear = changeYear;
        self2.clear = clear;
        self2.close = close;
        self2._createElement = createElement;
        self2.destroy = destroy;
        self2.isEnabled = isEnabled;
        self2.jumpToDate = jumpToDate;
        self2.open = open;
        self2.redraw = redraw;
        self2.set = set7;
        self2.setDate = setDate2;
        self2.toggle = toggle;
        function setupHelperFunctions() {
          self2.utils = {
            getDaysInMonth: function(month2, yr) {
              if (month2 === void 0) {
                month2 = self2.currentMonth;
              }
              if (yr === void 0) {
                yr = self2.currentYear;
              }
              if (month2 === 1 && (yr % 4 === 0 && yr % 100 !== 0 || yr % 400 === 0))
                return 29;
              return self2.l10n.daysInMonth[month2];
            }
          };
        }
        function init2() {
          self2.element = self2.input = element;
          self2.isOpen = false;
          parseConfig();
          setupLocale();
          setupInputs();
          setupDates();
          setupHelperFunctions();
          if (!self2.isMobile)
            build();
          bindEvents();
          if (self2.selectedDates.length || self2.config.noCalendar) {
            if (self2.config.enableTime) {
              setHoursFromDate(self2.config.noCalendar ? self2.latestSelectedDateObj || self2.config.minDate : void 0);
            }
            updateValue(false);
          }
          setCalendarWidth();
          self2.showTimeInput = self2.selectedDates.length > 0 || self2.config.noCalendar;
          var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
          if (!self2.isMobile && isSafari) {
            positionCalendar();
          }
          triggerEvent("onReady");
        }
        function bindToInstance(fn) {
          return fn.bind(self2);
        }
        function setCalendarWidth() {
          var config = self2.config;
          if (config.weekNumbers === false && config.showMonths === 1)
            return;
          else if (config.noCalendar !== true) {
            window.requestAnimationFrame(function() {
              if (self2.calendarContainer !== void 0) {
                self2.calendarContainer.style.visibility = "hidden";
                self2.calendarContainer.style.display = "block";
              }
              if (self2.daysContainer !== void 0) {
                var daysWidth = (self2.days.offsetWidth + 1) * config.showMonths;
                self2.daysContainer.style.width = daysWidth + "px";
                self2.calendarContainer.style.width = daysWidth + (self2.weekWrapper !== void 0 ? self2.weekWrapper.offsetWidth : 0) + "px";
                self2.calendarContainer.style.removeProperty("visibility");
                self2.calendarContainer.style.removeProperty("display");
              }
            });
          }
        }
        function updateTime(e) {
          if (self2.selectedDates.length === 0) {
            setDefaultTime();
          }
          if (e !== void 0 && e.type !== "blur") {
            timeWrapper(e);
          }
          var prevValue = self2._input.value;
          setHoursFromInputs();
          updateValue();
          if (self2._input.value !== prevValue) {
            self2._debouncedChange();
          }
        }
        function ampm2military(hour2, amPM) {
          return hour2 % 12 + 12 * int(amPM === self2.l10n.amPM[1]);
        }
        function military2ampm(hour2) {
          switch (hour2 % 24) {
            case 0:
            case 12:
              return 12;
            default:
              return hour2 % 12;
          }
        }
        function setHoursFromInputs() {
          if (self2.hourElement === void 0 || self2.minuteElement === void 0)
            return;
          var hours2 = (parseInt(self2.hourElement.value.slice(-2), 10) || 0) % 24, minutes2 = (parseInt(self2.minuteElement.value, 10) || 0) % 60, seconds2 = self2.secondElement !== void 0 ? (parseInt(self2.secondElement.value, 10) || 0) % 60 : 0;
          if (self2.amPM !== void 0) {
            hours2 = ampm2military(hours2, self2.amPM.textContent);
          }
          var limitMinHours = self2.config.minTime !== void 0 || self2.config.minDate && self2.minDateHasTime && self2.latestSelectedDateObj && compareDates(self2.latestSelectedDateObj, self2.config.minDate, true) === 0;
          var limitMaxHours = self2.config.maxTime !== void 0 || self2.config.maxDate && self2.maxDateHasTime && self2.latestSelectedDateObj && compareDates(self2.latestSelectedDateObj, self2.config.maxDate, true) === 0;
          if (limitMaxHours) {
            var maxTime2 = self2.config.maxTime !== void 0 ? self2.config.maxTime : self2.config.maxDate;
            hours2 = Math.min(hours2, maxTime2.getHours());
            if (hours2 === maxTime2.getHours())
              minutes2 = Math.min(minutes2, maxTime2.getMinutes());
            if (minutes2 === maxTime2.getMinutes())
              seconds2 = Math.min(seconds2, maxTime2.getSeconds());
          }
          if (limitMinHours) {
            var minTime2 = self2.config.minTime !== void 0 ? self2.config.minTime : self2.config.minDate;
            hours2 = Math.max(hours2, minTime2.getHours());
            if (hours2 === minTime2.getHours())
              minutes2 = Math.max(minutes2, minTime2.getMinutes());
            if (minutes2 === minTime2.getMinutes())
              seconds2 = Math.max(seconds2, minTime2.getSeconds());
          }
          setHours2(hours2, minutes2, seconds2);
        }
        function setHoursFromDate(dateObj) {
          var date2 = dateObj || self2.latestSelectedDateObj;
          if (date2)
            setHours2(date2.getHours(), date2.getMinutes(), date2.getSeconds());
        }
        function setDefaultHours() {
          var hours2 = self2.config.defaultHour;
          var minutes2 = self2.config.defaultMinute;
          var seconds2 = self2.config.defaultSeconds;
          if (self2.config.minDate !== void 0) {
            var minHr = self2.config.minDate.getHours();
            var minMinutes = self2.config.minDate.getMinutes();
            hours2 = Math.max(hours2, minHr);
            if (hours2 === minHr)
              minutes2 = Math.max(minMinutes, minutes2);
            if (hours2 === minHr && minutes2 === minMinutes)
              seconds2 = self2.config.minDate.getSeconds();
          }
          if (self2.config.maxDate !== void 0) {
            var maxHr = self2.config.maxDate.getHours();
            var maxMinutes = self2.config.maxDate.getMinutes();
            hours2 = Math.min(hours2, maxHr);
            if (hours2 === maxHr)
              minutes2 = Math.min(maxMinutes, minutes2);
            if (hours2 === maxHr && minutes2 === maxMinutes)
              seconds2 = self2.config.maxDate.getSeconds();
          }
          setHours2(hours2, minutes2, seconds2);
        }
        function setHours2(hours2, minutes2, seconds2) {
          if (self2.latestSelectedDateObj !== void 0) {
            self2.latestSelectedDateObj.setHours(hours2 % 24, minutes2, seconds2 || 0, 0);
          }
          if (!self2.hourElement || !self2.minuteElement || self2.isMobile)
            return;
          self2.hourElement.value = pad3(!self2.config.time_24hr ? (12 + hours2) % 12 + 12 * int(hours2 % 12 === 0) : hours2);
          self2.minuteElement.value = pad3(minutes2);
          if (self2.amPM !== void 0)
            self2.amPM.textContent = self2.l10n.amPM[int(hours2 >= 12)];
          if (self2.secondElement !== void 0)
            self2.secondElement.value = pad3(seconds2);
        }
        function onYearInput(event) {
          var year2 = parseInt(event.target.value) + (event.delta || 0);
          if (year2 / 1e3 > 1 || event.key === "Enter" && !/[^\d]/.test(year2.toString())) {
            changeYear(year2);
          }
        }
        function bind2(element2, event, handler, options2) {
          if (event instanceof Array)
            return event.forEach(function(ev) {
              return bind2(element2, ev, handler, options2);
            });
          if (element2 instanceof Array)
            return element2.forEach(function(el) {
              return bind2(el, event, handler, options2);
            });
          element2.addEventListener(event, handler, options2);
          self2._handlers.push({
            element: element2,
            event,
            handler,
            options: options2
          });
        }
        function onClick(handler) {
          return function(evt) {
            evt.which === 1 && handler(evt);
          };
        }
        function triggerChange() {
          triggerEvent("onChange");
        }
        function bindEvents() {
          if (self2.config.wrap) {
            ["open", "close", "toggle", "clear"].forEach(function(evt) {
              Array.prototype.forEach.call(self2.element.querySelectorAll("[data-" + evt + "]"), function(el) {
                return bind2(el, "click", self2[evt]);
              });
            });
          }
          if (self2.isMobile) {
            setupMobile();
            return;
          }
          var debouncedResize = debounce3(onResize, 50);
          self2._debouncedChange = debounce3(triggerChange, DEBOUNCED_CHANGE_MS);
          if (self2.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))
            bind2(self2.daysContainer, "mouseover", function(e) {
              if (self2.config.mode === "range")
                onMouseOver(e.target);
            });
          bind2(window.document.body, "keydown", onKeyDown);
          if (!self2.config.inline && !self2.config.static)
            bind2(window, "resize", debouncedResize);
          if (window.ontouchstart !== void 0)
            bind2(window.document, "touchstart", documentClick);
          else
            bind2(window.document, "mousedown", onClick(documentClick));
          bind2(window.document, "focus", documentClick, { capture: true });
          if (self2.config.clickOpens === true) {
            bind2(self2._input, "focus", self2.open);
            bind2(self2._input, "mousedown", onClick(self2.open));
          }
          if (self2.daysContainer !== void 0) {
            bind2(self2.monthNav, "mousedown", onClick(onMonthNavClick));
            bind2(self2.monthNav, ["keyup", "increment"], onYearInput);
            bind2(self2.daysContainer, "mousedown", onClick(selectDate));
          }
          if (self2.timeContainer !== void 0 && self2.minuteElement !== void 0 && self2.hourElement !== void 0) {
            var selText = function(e) {
              return e.target.select();
            };
            bind2(self2.timeContainer, ["increment"], updateTime);
            bind2(self2.timeContainer, "blur", updateTime, { capture: true });
            bind2(self2.timeContainer, "mousedown", onClick(timeIncrement));
            bind2([self2.hourElement, self2.minuteElement], ["focus", "click"], selText);
            if (self2.secondElement !== void 0)
              bind2(self2.secondElement, "focus", function() {
                return self2.secondElement && self2.secondElement.select();
              });
            if (self2.amPM !== void 0) {
              bind2(self2.amPM, "mousedown", onClick(function(e) {
                updateTime(e);
                triggerChange();
              }));
            }
          }
        }
        function jumpToDate(jumpDate, triggerChange2) {
          var jumpTo = jumpDate !== void 0 ? self2.parseDate(jumpDate) : self2.latestSelectedDateObj || (self2.config.minDate && self2.config.minDate > self2.now ? self2.config.minDate : self2.config.maxDate && self2.config.maxDate < self2.now ? self2.config.maxDate : self2.now);
          var oldYear = self2.currentYear;
          var oldMonth = self2.currentMonth;
          try {
            if (jumpTo !== void 0) {
              self2.currentYear = jumpTo.getFullYear();
              self2.currentMonth = jumpTo.getMonth();
            }
          } catch (e) {
            e.message = "Invalid date supplied: " + jumpTo;
            self2.config.errorHandler(e);
          }
          if (triggerChange2 && self2.currentYear !== oldYear) {
            triggerEvent("onYearChange");
            buildMonthSwitch();
          }
          if (triggerChange2 && (self2.currentYear !== oldYear || self2.currentMonth !== oldMonth)) {
            triggerEvent("onMonthChange");
          }
          self2.redraw();
        }
        function timeIncrement(e) {
          if (~e.target.className.indexOf("arrow"))
            incrementNumInput(e, e.target.classList.contains("arrowUp") ? 1 : -1);
        }
        function incrementNumInput(e, delta, inputElem) {
          var target = e && e.target;
          var input = inputElem || target && target.parentNode && target.parentNode.firstChild;
          var event = createEvent("increment");
          event.delta = delta;
          input && input.dispatchEvent(event);
        }
        function build() {
          var fragment = window.document.createDocumentFragment();
          self2.calendarContainer = createElement("div", "flatpickr-calendar");
          self2.calendarContainer.tabIndex = -1;
          if (!self2.config.noCalendar) {
            fragment.appendChild(buildMonthNav());
            self2.innerContainer = createElement("div", "flatpickr-innerContainer");
            if (self2.config.weekNumbers) {
              var _a4 = buildWeeks(), weekWrapper = _a4.weekWrapper, weekNumbers = _a4.weekNumbers;
              self2.innerContainer.appendChild(weekWrapper);
              self2.weekNumbers = weekNumbers;
              self2.weekWrapper = weekWrapper;
            }
            self2.rContainer = createElement("div", "flatpickr-rContainer");
            self2.rContainer.appendChild(buildWeekdays());
            if (!self2.daysContainer) {
              self2.daysContainer = createElement("div", "flatpickr-days");
              self2.daysContainer.tabIndex = -1;
            }
            buildDays();
            self2.rContainer.appendChild(self2.daysContainer);
            self2.innerContainer.appendChild(self2.rContainer);
            fragment.appendChild(self2.innerContainer);
          }
          if (self2.config.enableTime) {
            fragment.appendChild(buildTime());
          }
          toggleClass(self2.calendarContainer, "rangeMode", self2.config.mode === "range");
          toggleClass(self2.calendarContainer, "animate", self2.config.animate === true);
          toggleClass(self2.calendarContainer, "multiMonth", self2.config.showMonths > 1);
          self2.calendarContainer.appendChild(fragment);
          var customAppend = self2.config.appendTo !== void 0 && self2.config.appendTo.nodeType !== void 0;
          if (self2.config.inline || self2.config.static) {
            self2.calendarContainer.classList.add(self2.config.inline ? "inline" : "static");
            if (self2.config.inline) {
              if (!customAppend && self2.element.parentNode)
                self2.element.parentNode.insertBefore(self2.calendarContainer, self2._input.nextSibling);
              else if (self2.config.appendTo !== void 0)
                self2.config.appendTo.appendChild(self2.calendarContainer);
            }
            if (self2.config.static) {
              var wrapper = createElement("div", "flatpickr-wrapper");
              if (self2.element.parentNode)
                self2.element.parentNode.insertBefore(wrapper, self2.element);
              wrapper.appendChild(self2.element);
              if (self2.altInput)
                wrapper.appendChild(self2.altInput);
              wrapper.appendChild(self2.calendarContainer);
            }
          }
          if (!self2.config.static && !self2.config.inline)
            (self2.config.appendTo !== void 0 ? self2.config.appendTo : window.document.body).appendChild(self2.calendarContainer);
        }
        function createDay(className, date2, dayNumber, i) {
          var dateIsEnabled = isEnabled(date2, true), dayElement = createElement("span", "flatpickr-day " + className, date2.getDate().toString());
          dayElement.dateObj = date2;
          dayElement.$i = i;
          dayElement.setAttribute("aria-label", self2.formatDate(date2, self2.config.ariaDateFormat));
          if (className.indexOf("hidden") === -1 && compareDates(date2, self2.now) === 0) {
            self2.todayDateElem = dayElement;
            dayElement.classList.add("today");
            dayElement.setAttribute("aria-current", "date");
          }
          if (dateIsEnabled) {
            dayElement.tabIndex = -1;
            if (isDateSelected(date2)) {
              dayElement.classList.add("selected");
              self2.selectedDateElem = dayElement;
              if (self2.config.mode === "range") {
                toggleClass(dayElement, "startRange", self2.selectedDates[0] && compareDates(date2, self2.selectedDates[0], true) === 0);
                toggleClass(dayElement, "endRange", self2.selectedDates[1] && compareDates(date2, self2.selectedDates[1], true) === 0);
                if (className === "nextMonthDay")
                  dayElement.classList.add("inRange");
              }
            }
          } else {
            dayElement.classList.add("flatpickr-disabled");
          }
          if (self2.config.mode === "range") {
            if (isDateInRange(date2) && !isDateSelected(date2))
              dayElement.classList.add("inRange");
          }
          if (self2.weekNumbers && self2.config.showMonths === 1 && className !== "prevMonthDay" && dayNumber % 7 === 1) {
            self2.weekNumbers.insertAdjacentHTML("beforeend", "<span class='flatpickr-day'>" + self2.config.getWeek(date2) + "</span>");
          }
          triggerEvent("onDayCreate", dayElement);
          return dayElement;
        }
        function focusOnDayElem(targetNode) {
          targetNode.focus();
          if (self2.config.mode === "range")
            onMouseOver(targetNode);
        }
        function getFirstAvailableDay(delta) {
          var startMonth = delta > 0 ? 0 : self2.config.showMonths - 1;
          var endMonth = delta > 0 ? self2.config.showMonths : -1;
          for (var m = startMonth; m != endMonth; m += delta) {
            var month2 = self2.daysContainer.children[m];
            var startIndex = delta > 0 ? 0 : month2.children.length - 1;
            var endIndex = delta > 0 ? month2.children.length : -1;
            for (var i = startIndex; i != endIndex; i += delta) {
              var c = month2.children[i];
              if (c.className.indexOf("hidden") === -1 && isEnabled(c.dateObj))
                return c;
            }
          }
          return void 0;
        }
        function getNextAvailableDay(current, delta) {
          var givenMonth = current.className.indexOf("Month") === -1 ? current.dateObj.getMonth() : self2.currentMonth;
          var endMonth = delta > 0 ? self2.config.showMonths : -1;
          var loopDelta = delta > 0 ? 1 : -1;
          for (var m = givenMonth - self2.currentMonth; m != endMonth; m += loopDelta) {
            var month2 = self2.daysContainer.children[m];
            var startIndex = givenMonth - self2.currentMonth === m ? current.$i + delta : delta < 0 ? month2.children.length - 1 : 0;
            var numMonthDays = month2.children.length;
            for (var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {
              var c = month2.children[i];
              if (c.className.indexOf("hidden") === -1 && isEnabled(c.dateObj) && Math.abs(current.$i - i) >= Math.abs(delta))
                return focusOnDayElem(c);
            }
          }
          self2.changeMonth(loopDelta);
          focusOnDay(getFirstAvailableDay(loopDelta), 0);
          return void 0;
        }
        function focusOnDay(current, offset) {
          var dayFocused = isInView(document.activeElement || document.body);
          var startElem = current !== void 0 ? current : dayFocused ? document.activeElement : self2.selectedDateElem !== void 0 && isInView(self2.selectedDateElem) ? self2.selectedDateElem : self2.todayDateElem !== void 0 && isInView(self2.todayDateElem) ? self2.todayDateElem : getFirstAvailableDay(offset > 0 ? 1 : -1);
          if (startElem === void 0)
            return self2._input.focus();
          if (!dayFocused)
            return focusOnDayElem(startElem);
          getNextAvailableDay(startElem, offset);
        }
        function buildMonthDays(year2, month2) {
          var firstOfMonth = (new Date(year2, month2, 1).getDay() - self2.l10n.firstDayOfWeek + 7) % 7;
          var prevMonthDays = self2.utils.getDaysInMonth((month2 - 1 + 12) % 12);
          var daysInMonth = self2.utils.getDaysInMonth(month2), days2 = window.document.createDocumentFragment(), isMultiMonth = self2.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? "prevMonthDay hidden" : "prevMonthDay", nextMonthDayClass = isMultiMonth ? "nextMonthDay hidden" : "nextMonthDay";
          var dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;
          for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {
            days2.appendChild(createDay(prevMonthDayClass, new Date(year2, month2 - 1, dayNumber), dayNumber, dayIndex));
          }
          for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {
            days2.appendChild(createDay("", new Date(year2, month2, dayNumber), dayNumber, dayIndex));
          }
          for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth && (self2.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {
            days2.appendChild(createDay(nextMonthDayClass, new Date(year2, month2 + 1, dayNum % daysInMonth), dayNum, dayIndex));
          }
          var dayContainer = createElement("div", "dayContainer");
          dayContainer.appendChild(days2);
          return dayContainer;
        }
        function buildDays() {
          if (self2.daysContainer === void 0) {
            return;
          }
          clearNode(self2.daysContainer);
          if (self2.weekNumbers)
            clearNode(self2.weekNumbers);
          var frag = document.createDocumentFragment();
          for (var i = 0; i < self2.config.showMonths; i++) {
            var d = new Date(self2.currentYear, self2.currentMonth, 1);
            d.setMonth(self2.currentMonth + i);
            frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));
          }
          self2.daysContainer.appendChild(frag);
          self2.days = self2.daysContainer.firstChild;
          if (self2.config.mode === "range" && self2.selectedDates.length === 1) {
            onMouseOver();
          }
        }
        function buildMonthSwitch() {
          if (self2.config.showMonths > 1)
            return;
          var shouldBuildMonth = function(month3) {
            if (self2.config.minDate !== void 0 && self2.currentYear === self2.config.minDate.getFullYear() && month3 < self2.config.minDate.getMonth()) {
              return false;
            }
            return !(self2.config.maxDate !== void 0 && self2.currentYear === self2.config.maxDate.getFullYear() && month3 > self2.config.maxDate.getMonth());
          };
          self2.monthsDropdownContainer.tabIndex = -1;
          self2.monthsDropdownContainer.innerHTML = "";
          for (var i = 0; i < 12; i++) {
            if (!shouldBuildMonth(i))
              continue;
            var month2 = createElement("option", "flatpickr-monthDropdown-month");
            month2.value = new Date(self2.currentYear, i).getMonth().toString();
            month2.textContent = monthToStr3(i, false, self2.l10n);
            month2.tabIndex = -1;
            if (self2.currentMonth === i) {
              month2.selected = true;
            }
            self2.monthsDropdownContainer.appendChild(month2);
          }
        }
        function buildMonth() {
          var container = createElement("div", "flatpickr-month");
          var monthNavFragment = window.document.createDocumentFragment();
          var monthElement;
          if (self2.config.showMonths > 1) {
            monthElement = createElement("span", "cur-month");
          } else {
            self2.monthsDropdownContainer = createElement("select", "flatpickr-monthDropdown-months");
            bind2(self2.monthsDropdownContainer, "change", function(e) {
              var target = e.target;
              var selectedMonth = parseInt(target.value, 10);
              self2.changeMonth(selectedMonth - self2.currentMonth);
              triggerEvent("onMonthChange");
            });
            buildMonthSwitch();
            monthElement = self2.monthsDropdownContainer;
          }
          var yearInput = createNumberInput("cur-year", { tabindex: "-1" });
          var yearElement = yearInput.getElementsByTagName("input")[0];
          yearElement.setAttribute("aria-label", self2.l10n.yearAriaLabel);
          if (self2.config.minDate) {
            yearElement.setAttribute("min", self2.config.minDate.getFullYear().toString());
          }
          if (self2.config.maxDate) {
            yearElement.setAttribute("max", self2.config.maxDate.getFullYear().toString());
            yearElement.disabled = !!self2.config.minDate && self2.config.minDate.getFullYear() === self2.config.maxDate.getFullYear();
          }
          var currentMonth = createElement("div", "flatpickr-current-month");
          currentMonth.appendChild(monthElement);
          currentMonth.appendChild(yearInput);
          monthNavFragment.appendChild(currentMonth);
          container.appendChild(monthNavFragment);
          return {
            container,
            yearElement,
            monthElement
          };
        }
        function buildMonths() {
          clearNode(self2.monthNav);
          self2.monthNav.appendChild(self2.prevMonthNav);
          if (self2.config.showMonths) {
            self2.yearElements = [];
            self2.monthElements = [];
          }
          for (var m = self2.config.showMonths; m--; ) {
            var month2 = buildMonth();
            self2.yearElements.push(month2.yearElement);
            self2.monthElements.push(month2.monthElement);
            self2.monthNav.appendChild(month2.container);
          }
          self2.monthNav.appendChild(self2.nextMonthNav);
        }
        function buildMonthNav() {
          self2.monthNav = createElement("div", "flatpickr-months");
          self2.yearElements = [];
          self2.monthElements = [];
          self2.prevMonthNav = createElement("span", "flatpickr-prev-month");
          self2.prevMonthNav.innerHTML = self2.config.prevArrow;
          self2.nextMonthNav = createElement("span", "flatpickr-next-month");
          self2.nextMonthNav.innerHTML = self2.config.nextArrow;
          buildMonths();
          Object.defineProperty(self2, "_hidePrevMonthArrow", {
            get: function() {
              return self2.__hidePrevMonthArrow;
            },
            set: function(bool) {
              if (self2.__hidePrevMonthArrow !== bool) {
                toggleClass(self2.prevMonthNav, "flatpickr-disabled", bool);
                self2.__hidePrevMonthArrow = bool;
              }
            }
          });
          Object.defineProperty(self2, "_hideNextMonthArrow", {
            get: function() {
              return self2.__hideNextMonthArrow;
            },
            set: function(bool) {
              if (self2.__hideNextMonthArrow !== bool) {
                toggleClass(self2.nextMonthNav, "flatpickr-disabled", bool);
                self2.__hideNextMonthArrow = bool;
              }
            }
          });
          self2.currentYearElement = self2.yearElements[0];
          updateNavigationCurrentMonth();
          return self2.monthNav;
        }
        function buildTime() {
          self2.calendarContainer.classList.add("hasTime");
          if (self2.config.noCalendar)
            self2.calendarContainer.classList.add("noCalendar");
          self2.timeContainer = createElement("div", "flatpickr-time");
          self2.timeContainer.tabIndex = -1;
          var separator = createElement("span", "flatpickr-time-separator", ":");
          var hourInput = createNumberInput("flatpickr-hour");
          self2.hourElement = hourInput.getElementsByTagName("input")[0];
          var minuteInput = createNumberInput("flatpickr-minute");
          self2.minuteElement = minuteInput.getElementsByTagName("input")[0];
          self2.hourElement.tabIndex = self2.minuteElement.tabIndex = -1;
          self2.hourElement.value = pad3(self2.latestSelectedDateObj ? self2.latestSelectedDateObj.getHours() : self2.config.time_24hr ? self2.config.defaultHour : military2ampm(self2.config.defaultHour));
          self2.minuteElement.value = pad3(self2.latestSelectedDateObj ? self2.latestSelectedDateObj.getMinutes() : self2.config.defaultMinute);
          self2.hourElement.setAttribute("step", self2.config.hourIncrement.toString());
          self2.minuteElement.setAttribute("step", self2.config.minuteIncrement.toString());
          self2.hourElement.setAttribute("min", self2.config.time_24hr ? "0" : "1");
          self2.hourElement.setAttribute("max", self2.config.time_24hr ? "23" : "12");
          self2.minuteElement.setAttribute("min", "0");
          self2.minuteElement.setAttribute("max", "59");
          self2.timeContainer.appendChild(hourInput);
          self2.timeContainer.appendChild(separator);
          self2.timeContainer.appendChild(minuteInput);
          if (self2.config.time_24hr)
            self2.timeContainer.classList.add("time24hr");
          if (self2.config.enableSeconds) {
            self2.timeContainer.classList.add("hasSeconds");
            var secondInput = createNumberInput("flatpickr-second");
            self2.secondElement = secondInput.getElementsByTagName("input")[0];
            self2.secondElement.value = pad3(self2.latestSelectedDateObj ? self2.latestSelectedDateObj.getSeconds() : self2.config.defaultSeconds);
            self2.secondElement.setAttribute("step", self2.minuteElement.getAttribute("step"));
            self2.secondElement.setAttribute("min", "0");
            self2.secondElement.setAttribute("max", "59");
            self2.timeContainer.appendChild(createElement("span", "flatpickr-time-separator", ":"));
            self2.timeContainer.appendChild(secondInput);
          }
          if (!self2.config.time_24hr) {
            self2.amPM = createElement("span", "flatpickr-am-pm", self2.l10n.amPM[int((self2.latestSelectedDateObj ? self2.hourElement.value : self2.config.defaultHour) > 11)]);
            self2.amPM.title = self2.l10n.toggleTitle;
            self2.amPM.tabIndex = -1;
            self2.timeContainer.appendChild(self2.amPM);
          }
          return self2.timeContainer;
        }
        function buildWeekdays() {
          if (!self2.weekdayContainer)
            self2.weekdayContainer = createElement("div", "flatpickr-weekdays");
          else
            clearNode(self2.weekdayContainer);
          for (var i = self2.config.showMonths; i--; ) {
            var container = createElement("div", "flatpickr-weekdaycontainer");
            self2.weekdayContainer.appendChild(container);
          }
          updateWeekdays();
          return self2.weekdayContainer;
        }
        function updateWeekdays() {
          var firstDayOfWeek = self2.l10n.firstDayOfWeek;
          var weekdays = self2.l10n.weekdays.shorthand.slice();
          if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {
            weekdays = weekdays.splice(firstDayOfWeek, weekdays.length).concat(weekdays.splice(0, firstDayOfWeek));
          }
          for (var i = self2.config.showMonths; i--; ) {
            self2.weekdayContainer.children[i].innerHTML = "\n      <span class='flatpickr-weekday'>\n        " + weekdays.join("</span><span class='flatpickr-weekday'>") + "\n      </span>\n      ";
          }
        }
        function buildWeeks() {
          self2.calendarContainer.classList.add("hasWeeks");
          var weekWrapper = createElement("div", "flatpickr-weekwrapper");
          weekWrapper.appendChild(createElement("span", "flatpickr-weekday", self2.l10n.weekAbbreviation));
          var weekNumbers = createElement("div", "flatpickr-weeks");
          weekWrapper.appendChild(weekNumbers);
          return {
            weekWrapper,
            weekNumbers
          };
        }
        function changeMonth(value2, isOffset) {
          if (isOffset === void 0) {
            isOffset = true;
          }
          var delta = isOffset ? value2 : value2 - self2.currentMonth;
          if (delta < 0 && self2._hidePrevMonthArrow === true || delta > 0 && self2._hideNextMonthArrow === true)
            return;
          self2.currentMonth += delta;
          if (self2.currentMonth < 0 || self2.currentMonth > 11) {
            self2.currentYear += self2.currentMonth > 11 ? 1 : -1;
            self2.currentMonth = (self2.currentMonth + 12) % 12;
            triggerEvent("onYearChange");
            buildMonthSwitch();
          }
          buildDays();
          triggerEvent("onMonthChange");
          updateNavigationCurrentMonth();
        }
        function clear(triggerChangeEvent, toInitial) {
          if (triggerChangeEvent === void 0) {
            triggerChangeEvent = true;
          }
          if (toInitial === void 0) {
            toInitial = true;
          }
          self2.input.value = "";
          if (self2.altInput !== void 0)
            self2.altInput.value = "";
          if (self2.mobileInput !== void 0)
            self2.mobileInput.value = "";
          self2.selectedDates = [];
          self2.latestSelectedDateObj = void 0;
          if (toInitial === true) {
            self2.currentYear = self2._initialDate.getFullYear();
            self2.currentMonth = self2._initialDate.getMonth();
          }
          self2.showTimeInput = false;
          if (self2.config.enableTime === true) {
            setDefaultHours();
          }
          self2.redraw();
          if (triggerChangeEvent)
            triggerEvent("onChange");
        }
        function close() {
          self2.isOpen = false;
          if (!self2.isMobile) {
            if (self2.calendarContainer !== void 0) {
              self2.calendarContainer.classList.remove("open");
            }
            if (self2._input !== void 0) {
              self2._input.classList.remove("active");
            }
          }
          triggerEvent("onClose");
        }
        function destroy() {
          if (self2.config !== void 0)
            triggerEvent("onDestroy");
          for (var i = self2._handlers.length; i--; ) {
            var h = self2._handlers[i];
            h.element.removeEventListener(h.event, h.handler, h.options);
          }
          self2._handlers = [];
          if (self2.mobileInput) {
            if (self2.mobileInput.parentNode)
              self2.mobileInput.parentNode.removeChild(self2.mobileInput);
            self2.mobileInput = void 0;
          } else if (self2.calendarContainer && self2.calendarContainer.parentNode) {
            if (self2.config.static && self2.calendarContainer.parentNode) {
              var wrapper = self2.calendarContainer.parentNode;
              wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);
              if (wrapper.parentNode) {
                while (wrapper.firstChild)
                  wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);
                wrapper.parentNode.removeChild(wrapper);
              }
            } else
              self2.calendarContainer.parentNode.removeChild(self2.calendarContainer);
          }
          if (self2.altInput) {
            self2.input.type = "text";
            if (self2.altInput.parentNode)
              self2.altInput.parentNode.removeChild(self2.altInput);
            delete self2.altInput;
          }
          if (self2.input) {
            self2.input.type = self2.input._type;
            self2.input.classList.remove("flatpickr-input");
            self2.input.removeAttribute("readonly");
            self2.input.value = "";
          }
          [
            "_showTimeInput",
            "latestSelectedDateObj",
            "_hideNextMonthArrow",
            "_hidePrevMonthArrow",
            "__hideNextMonthArrow",
            "__hidePrevMonthArrow",
            "isMobile",
            "isOpen",
            "selectedDateElem",
            "minDateHasTime",
            "maxDateHasTime",
            "days",
            "daysContainer",
            "_input",
            "_positionElement",
            "innerContainer",
            "rContainer",
            "monthNav",
            "todayDateElem",
            "calendarContainer",
            "weekdayContainer",
            "prevMonthNav",
            "nextMonthNav",
            "monthsDropdownContainer",
            "currentMonthElement",
            "currentYearElement",
            "navigationCurrentMonth",
            "selectedDateElem",
            "config"
          ].forEach(function(k3) {
            try {
              delete self2[k3];
            } catch (_) {
            }
          });
        }
        function isCalendarElem(elem) {
          if (self2.config.appendTo && self2.config.appendTo.contains(elem))
            return true;
          return self2.calendarContainer.contains(elem);
        }
        function documentClick(e) {
          if (self2.isOpen && !self2.config.inline) {
            var eventTarget_1 = getEventTarget(e);
            var isCalendarElement = isCalendarElem(eventTarget_1);
            var isInput = eventTarget_1 === self2.input || eventTarget_1 === self2.altInput || self2.element.contains(eventTarget_1) || e.path && e.path.indexOf && (~e.path.indexOf(self2.input) || ~e.path.indexOf(self2.altInput));
            var lostFocus = e.type === "blur" ? isInput && e.relatedTarget && !isCalendarElem(e.relatedTarget) : !isInput && !isCalendarElement && !isCalendarElem(e.relatedTarget);
            var isIgnored = !self2.config.ignoredFocusElements.some(function(elem) {
              return elem.contains(eventTarget_1);
            });
            if (lostFocus && isIgnored) {
              self2.close();
              if (self2.config.mode === "range" && self2.selectedDates.length === 1) {
                self2.clear(false);
                self2.redraw();
              }
            }
          }
        }
        function changeYear(newYear) {
          if (!newYear || self2.config.minDate && newYear < self2.config.minDate.getFullYear() || self2.config.maxDate && newYear > self2.config.maxDate.getFullYear())
            return;
          var newYearNum = newYear, isNewYear = self2.currentYear !== newYearNum;
          self2.currentYear = newYearNum || self2.currentYear;
          if (self2.config.maxDate && self2.currentYear === self2.config.maxDate.getFullYear()) {
            self2.currentMonth = Math.min(self2.config.maxDate.getMonth(), self2.currentMonth);
          } else if (self2.config.minDate && self2.currentYear === self2.config.minDate.getFullYear()) {
            self2.currentMonth = Math.max(self2.config.minDate.getMonth(), self2.currentMonth);
          }
          if (isNewYear) {
            self2.redraw();
            triggerEvent("onYearChange");
            buildMonthSwitch();
          }
        }
        function isEnabled(date2, timeless) {
          if (timeless === void 0) {
            timeless = true;
          }
          var dateToCheck = self2.parseDate(date2, void 0, timeless);
          if (self2.config.minDate && dateToCheck && compareDates(dateToCheck, self2.config.minDate, timeless !== void 0 ? timeless : !self2.minDateHasTime) < 0 || self2.config.maxDate && dateToCheck && compareDates(dateToCheck, self2.config.maxDate, timeless !== void 0 ? timeless : !self2.maxDateHasTime) > 0)
            return false;
          if (self2.config.enable.length === 0 && self2.config.disable.length === 0)
            return true;
          if (dateToCheck === void 0)
            return false;
          var bool = self2.config.enable.length > 0, array4 = bool ? self2.config.enable : self2.config.disable;
          for (var i = 0, d = void 0; i < array4.length; i++) {
            d = array4[i];
            if (typeof d === "function" && d(dateToCheck))
              return bool;
            else if (d instanceof Date && dateToCheck !== void 0 && d.getTime() === dateToCheck.getTime())
              return bool;
            else if (typeof d === "string" && dateToCheck !== void 0) {
              var parsed = self2.parseDate(d, void 0, true);
              return parsed && parsed.getTime() === dateToCheck.getTime() ? bool : !bool;
            } else if (typeof d === "object" && dateToCheck !== void 0 && d.from && d.to && dateToCheck.getTime() >= d.from.getTime() && dateToCheck.getTime() <= d.to.getTime())
              return bool;
          }
          return !bool;
        }
        function isInView(elem) {
          if (self2.daysContainer !== void 0)
            return elem.className.indexOf("hidden") === -1 && self2.daysContainer.contains(elem);
          return false;
        }
        function onKeyDown(e) {
          var isInput = e.target === self2._input;
          var allowInput = self2.config.allowInput;
          var allowKeydown = self2.isOpen && (!allowInput || !isInput);
          var allowInlineKeydown = self2.config.inline && isInput && !allowInput;
          if (e.keyCode === 13 && isInput) {
            if (allowInput) {
              self2.setDate(self2._input.value, true, e.target === self2.altInput ? self2.config.altFormat : self2.config.dateFormat);
              return e.target.blur();
            } else {
              self2.open();
            }
          } else if (isCalendarElem(e.target) || allowKeydown || allowInlineKeydown) {
            var isTimeObj = !!self2.timeContainer && self2.timeContainer.contains(e.target);
            switch (e.keyCode) {
              case 13:
                if (isTimeObj) {
                  e.preventDefault();
                  updateTime();
                  focusAndClose();
                } else
                  selectDate(e);
                break;
              case 27:
                e.preventDefault();
                focusAndClose();
                break;
              case 8:
              case 46:
                if (isInput && !self2.config.allowInput) {
                  e.preventDefault();
                  self2.clear();
                }
                break;
              case 37:
              case 39:
                if (!isTimeObj && !isInput) {
                  e.preventDefault();
                  if (self2.daysContainer !== void 0 && (allowInput === false || document.activeElement && isInView(document.activeElement))) {
                    var delta_1 = e.keyCode === 39 ? 1 : -1;
                    if (!e.ctrlKey)
                      focusOnDay(void 0, delta_1);
                    else {
                      e.stopPropagation();
                      changeMonth(delta_1);
                      focusOnDay(getFirstAvailableDay(1), 0);
                    }
                  }
                } else if (self2.hourElement)
                  self2.hourElement.focus();
                break;
              case 38:
              case 40:
                e.preventDefault();
                var delta = e.keyCode === 40 ? 1 : -1;
                if (self2.daysContainer && e.target.$i !== void 0 || e.target === self2.input) {
                  if (e.ctrlKey) {
                    e.stopPropagation();
                    changeYear(self2.currentYear - delta);
                    focusOnDay(getFirstAvailableDay(1), 0);
                  } else if (!isTimeObj)
                    focusOnDay(void 0, delta * 7);
                } else if (e.target === self2.currentYearElement) {
                  changeYear(self2.currentYear - delta);
                } else if (self2.config.enableTime) {
                  if (!isTimeObj && self2.hourElement)
                    self2.hourElement.focus();
                  updateTime(e);
                  self2._debouncedChange();
                }
                break;
              case 9:
                if (isTimeObj) {
                  var elems = [
                    self2.hourElement,
                    self2.minuteElement,
                    self2.secondElement,
                    self2.amPM
                  ].concat(self2.pluginElements).filter(function(x3) {
                    return x3;
                  });
                  var i = elems.indexOf(e.target);
                  if (i !== -1) {
                    var target = elems[i + (e.shiftKey ? -1 : 1)];
                    e.preventDefault();
                    (target || self2._input).focus();
                  }
                } else if (!self2.config.noCalendar && self2.daysContainer && self2.daysContainer.contains(e.target) && e.shiftKey) {
                  e.preventDefault();
                  self2._input.focus();
                }
                break;
              default:
                break;
            }
          }
          if (self2.amPM !== void 0 && e.target === self2.amPM) {
            switch (e.key) {
              case self2.l10n.amPM[0].charAt(0):
              case self2.l10n.amPM[0].charAt(0).toLowerCase():
                self2.amPM.textContent = self2.l10n.amPM[0];
                setHoursFromInputs();
                updateValue();
                break;
              case self2.l10n.amPM[1].charAt(0):
              case self2.l10n.amPM[1].charAt(0).toLowerCase():
                self2.amPM.textContent = self2.l10n.amPM[1];
                setHoursFromInputs();
                updateValue();
                break;
            }
          }
          if (isInput || isCalendarElem(e.target)) {
            triggerEvent("onKeyDown", e);
          }
        }
        function onMouseOver(elem) {
          if (self2.selectedDates.length !== 1 || elem && (!elem.classList.contains("flatpickr-day") || elem.classList.contains("flatpickr-disabled")))
            return;
          var hoverDate = elem ? elem.dateObj.getTime() : self2.days.firstElementChild.dateObj.getTime(), initialDate = self2.parseDate(self2.selectedDates[0], void 0, true).getTime(), rangeStartDate = Math.min(hoverDate, self2.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self2.selectedDates[0].getTime());
          var containsDisabled = false;
          var minRange = 0, maxRange = 0;
          for (var t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {
            if (!isEnabled(new Date(t), true)) {
              containsDisabled = containsDisabled || t > rangeStartDate && t < rangeEndDate;
              if (t < initialDate && (!minRange || t > minRange))
                minRange = t;
              else if (t > initialDate && (!maxRange || t < maxRange))
                maxRange = t;
            }
          }
          for (var m = 0; m < self2.config.showMonths; m++) {
            var month2 = self2.daysContainer.children[m];
            var _loop_1 = function(i2, l2) {
              var dayElem = month2.children[i2], date2 = dayElem.dateObj;
              var timestamp = date2.getTime();
              var outOfRange = minRange > 0 && timestamp < minRange || maxRange > 0 && timestamp > maxRange;
              if (outOfRange) {
                dayElem.classList.add("notAllowed");
                ["inRange", "startRange", "endRange"].forEach(function(c) {
                  dayElem.classList.remove(c);
                });
                return "continue";
              } else if (containsDisabled && !outOfRange)
                return "continue";
              ["startRange", "inRange", "endRange", "notAllowed"].forEach(function(c) {
                dayElem.classList.remove(c);
              });
              if (elem !== void 0) {
                elem.classList.add(hoverDate <= self2.selectedDates[0].getTime() ? "startRange" : "endRange");
                if (initialDate < hoverDate && timestamp === initialDate)
                  dayElem.classList.add("startRange");
                else if (initialDate > hoverDate && timestamp === initialDate)
                  dayElem.classList.add("endRange");
                if (timestamp >= minRange && (maxRange === 0 || timestamp <= maxRange) && isBetween(timestamp, initialDate, hoverDate))
                  dayElem.classList.add("inRange");
              }
            };
            for (var i = 0, l = month2.children.length; i < l; i++) {
              _loop_1(i, l);
            }
          }
        }
        function onResize() {
          if (self2.isOpen && !self2.config.static && !self2.config.inline)
            positionCalendar();
        }
        function setDefaultTime() {
          self2.setDate(self2.config.minDate !== void 0 ? new Date(self2.config.minDate.getTime()) : new Date(), true);
          setDefaultHours();
          updateValue();
        }
        function open(e, positionElement) {
          if (positionElement === void 0) {
            positionElement = self2._positionElement;
          }
          if (self2.isMobile === true) {
            if (e) {
              e.preventDefault();
              e.target && e.target.blur();
            }
            if (self2.mobileInput !== void 0) {
              self2.mobileInput.focus();
              self2.mobileInput.click();
            }
            triggerEvent("onOpen");
            return;
          }
          if (self2._input.disabled || self2.config.inline)
            return;
          var wasOpen = self2.isOpen;
          self2.isOpen = true;
          if (!wasOpen) {
            self2.calendarContainer.classList.add("open");
            self2._input.classList.add("active");
            triggerEvent("onOpen");
            positionCalendar(positionElement);
          }
          if (self2.config.enableTime === true && self2.config.noCalendar === true) {
            if (self2.selectedDates.length === 0) {
              setDefaultTime();
            }
            if (self2.config.allowInput === false && (e === void 0 || !self2.timeContainer.contains(e.relatedTarget))) {
              setTimeout(function() {
                return self2.hourElement.select();
              }, 50);
            }
          }
        }
        function minMaxDateSetter(type2) {
          return function(date2) {
            var dateObj = self2.config["_" + type2 + "Date"] = self2.parseDate(date2, self2.config.dateFormat);
            var inverseDateObj = self2.config["_" + (type2 === "min" ? "max" : "min") + "Date"];
            if (dateObj !== void 0) {
              self2[type2 === "min" ? "minDateHasTime" : "maxDateHasTime"] = dateObj.getHours() > 0 || dateObj.getMinutes() > 0 || dateObj.getSeconds() > 0;
            }
            if (self2.selectedDates) {
              self2.selectedDates = self2.selectedDates.filter(function(d) {
                return isEnabled(d);
              });
              if (!self2.selectedDates.length && type2 === "min")
                setHoursFromDate(dateObj);
              updateValue();
            }
            if (self2.daysContainer) {
              redraw();
              if (dateObj !== void 0)
                self2.currentYearElement[type2] = dateObj.getFullYear().toString();
              else
                self2.currentYearElement.removeAttribute(type2);
              self2.currentYearElement.disabled = !!inverseDateObj && dateObj !== void 0 && inverseDateObj.getFullYear() === dateObj.getFullYear();
            }
          };
        }
        function parseConfig() {
          var boolOpts = [
            "wrap",
            "weekNumbers",
            "allowInput",
            "clickOpens",
            "time_24hr",
            "enableTime",
            "noCalendar",
            "altInput",
            "shorthandCurrentMonth",
            "inline",
            "static",
            "enableSeconds",
            "disableMobile"
          ];
          var userConfig = __assign5({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));
          var formats2 = {};
          self2.config.parseDate = userConfig.parseDate;
          self2.config.formatDate = userConfig.formatDate;
          Object.defineProperty(self2.config, "enable", {
            get: function() {
              return self2.config._enable;
            },
            set: function(dates) {
              self2.config._enable = parseDateRules(dates);
            }
          });
          Object.defineProperty(self2.config, "disable", {
            get: function() {
              return self2.config._disable;
            },
            set: function(dates) {
              self2.config._disable = parseDateRules(dates);
            }
          });
          var timeMode = userConfig.mode === "time";
          if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {
            var defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaults2.dateFormat;
            formats2.dateFormat = userConfig.noCalendar || timeMode ? "H:i" + (userConfig.enableSeconds ? ":S" : "") : defaultDateFormat + " H:i" + (userConfig.enableSeconds ? ":S" : "");
          }
          if (userConfig.altInput && (userConfig.enableTime || timeMode) && !userConfig.altFormat) {
            var defaultAltFormat = flatpickr.defaultConfig.altFormat || defaults2.altFormat;
            formats2.altFormat = userConfig.noCalendar || timeMode ? "h:i" + (userConfig.enableSeconds ? ":S K" : " K") : defaultAltFormat + (" h:i" + (userConfig.enableSeconds ? ":S" : "") + " K");
          }
          if (!userConfig.altInputClass) {
            self2.config.altInputClass = self2.input.className + " " + self2.config.altInputClass;
          }
          Object.defineProperty(self2.config, "minDate", {
            get: function() {
              return self2.config._minDate;
            },
            set: minMaxDateSetter("min")
          });
          Object.defineProperty(self2.config, "maxDate", {
            get: function() {
              return self2.config._maxDate;
            },
            set: minMaxDateSetter("max")
          });
          var minMaxTimeSetter = function(type2) {
            return function(val) {
              self2.config[type2 === "min" ? "_minTime" : "_maxTime"] = self2.parseDate(val, "H:i");
            };
          };
          Object.defineProperty(self2.config, "minTime", {
            get: function() {
              return self2.config._minTime;
            },
            set: minMaxTimeSetter("min")
          });
          Object.defineProperty(self2.config, "maxTime", {
            get: function() {
              return self2.config._maxTime;
            },
            set: minMaxTimeSetter("max")
          });
          if (userConfig.mode === "time") {
            self2.config.noCalendar = true;
            self2.config.enableTime = true;
          }
          Object.assign(self2.config, formats2, userConfig);
          for (var i = 0; i < boolOpts.length; i++)
            self2.config[boolOpts[i]] = self2.config[boolOpts[i]] === true || self2.config[boolOpts[i]] === "true";
          HOOKS.filter(function(hook) {
            return self2.config[hook] !== void 0;
          }).forEach(function(hook) {
            self2.config[hook] = arrayify(self2.config[hook] || []).map(bindToInstance);
          });
          self2.isMobile = !self2.config.disableMobile && !self2.config.inline && self2.config.mode === "single" && !self2.config.disable.length && !self2.config.enable.length && !self2.config.weekNumbers && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
          for (var i = 0; i < self2.config.plugins.length; i++) {
            var pluginConf = self2.config.plugins[i](self2) || {};
            for (var key in pluginConf) {
              if (HOOKS.indexOf(key) > -1) {
                self2.config[key] = arrayify(pluginConf[key]).map(bindToInstance).concat(self2.config[key]);
              } else if (typeof userConfig[key] === "undefined")
                self2.config[key] = pluginConf[key];
            }
          }
          triggerEvent("onParseConfig");
        }
        function setupLocale() {
          if (typeof self2.config.locale !== "object" && typeof flatpickr.l10ns[self2.config.locale] === "undefined")
            self2.config.errorHandler(new Error("flatpickr: invalid locale " + self2.config.locale));
          self2.l10n = __assign5({}, flatpickr.l10ns["default"], typeof self2.config.locale === "object" ? self2.config.locale : self2.config.locale !== "default" ? flatpickr.l10ns[self2.config.locale] : void 0);
          tokenRegex.K = "(" + self2.l10n.amPM[0] + "|" + self2.l10n.amPM[1] + "|" + self2.l10n.amPM[0].toLowerCase() + "|" + self2.l10n.amPM[1].toLowerCase() + ")";
          var userConfig = __assign5({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));
          if (userConfig.time_24hr === void 0 && flatpickr.defaultConfig.time_24hr === void 0) {
            self2.config.time_24hr = self2.l10n.time_24hr;
          }
          self2.formatDate = createDateFormatter(self2);
          self2.parseDate = createDateParser({ config: self2.config, l10n: self2.l10n });
        }
        function positionCalendar(customPositionElement) {
          if (self2.calendarContainer === void 0)
            return;
          triggerEvent("onPreCalendarPosition");
          var positionElement = customPositionElement || self2._positionElement;
          var calendarHeight = Array.prototype.reduce.call(self2.calendarContainer.children, function(acc, child) {
            return acc + child.offsetHeight;
          }, 0), calendarWidth = self2.calendarContainer.offsetWidth, configPos = self2.config.position.split(" "), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === "above" || configPosVertical !== "below" && distanceFromBottom < calendarHeight && inputBounds.top > calendarHeight;
          var top2 = window.pageYOffset + inputBounds.top + (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);
          toggleClass(self2.calendarContainer, "arrowTop", !showOnTop);
          toggleClass(self2.calendarContainer, "arrowBottom", showOnTop);
          if (self2.config.inline)
            return;
          var left3 = window.pageXOffset + inputBounds.left - (configPosHorizontal != null && configPosHorizontal === "center" ? (calendarWidth - inputBounds.width) / 2 : 0);
          var right3 = window.document.body.offsetWidth - inputBounds.right;
          var rightMost = left3 + calendarWidth > window.document.body.offsetWidth;
          var centerMost = right3 + calendarWidth > window.document.body.offsetWidth;
          toggleClass(self2.calendarContainer, "rightMost", rightMost);
          if (self2.config.static)
            return;
          self2.calendarContainer.style.top = top2 + "px";
          if (!rightMost) {
            self2.calendarContainer.style.left = left3 + "px";
            self2.calendarContainer.style.right = "auto";
          } else if (!centerMost) {
            self2.calendarContainer.style.left = "auto";
            self2.calendarContainer.style.right = right3 + "px";
          } else {
            var doc = document.styleSheets[0];
            if (doc === void 0)
              return;
            var bodyWidth = window.document.body.offsetWidth;
            var centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);
            var centerBefore = ".flatpickr-calendar.centerMost:before";
            var centerAfter = ".flatpickr-calendar.centerMost:after";
            var centerIndex = doc.cssRules.length;
            var centerStyle = "{left:" + inputBounds.left + "px;right:auto;}";
            toggleClass(self2.calendarContainer, "rightMost", false);
            toggleClass(self2.calendarContainer, "centerMost", true);
            doc.insertRule(centerBefore + "," + centerAfter + centerStyle, centerIndex);
            self2.calendarContainer.style.left = centerLeft + "px";
            self2.calendarContainer.style.right = "auto";
          }
        }
        function redraw() {
          if (self2.config.noCalendar || self2.isMobile)
            return;
          updateNavigationCurrentMonth();
          buildDays();
        }
        function focusAndClose() {
          self2._input.focus();
          if (window.navigator.userAgent.indexOf("MSIE") !== -1 || navigator.msMaxTouchPoints !== void 0) {
            setTimeout(self2.close, 0);
          } else {
            self2.close();
          }
        }
        function selectDate(e) {
          e.preventDefault();
          e.stopPropagation();
          var isSelectable = function(day2) {
            return day2.classList && day2.classList.contains("flatpickr-day") && !day2.classList.contains("flatpickr-disabled") && !day2.classList.contains("notAllowed");
          };
          var t = findParent(e.target, isSelectable);
          if (t === void 0)
            return;
          var target = t;
          var selectedDate = self2.latestSelectedDateObj = new Date(target.dateObj.getTime());
          var shouldChangeMonth = (selectedDate.getMonth() < self2.currentMonth || selectedDate.getMonth() > self2.currentMonth + self2.config.showMonths - 1) && self2.config.mode !== "range";
          self2.selectedDateElem = target;
          if (self2.config.mode === "single")
            self2.selectedDates = [selectedDate];
          else if (self2.config.mode === "multiple") {
            var selectedIndex = isDateSelected(selectedDate);
            if (selectedIndex)
              self2.selectedDates.splice(parseInt(selectedIndex), 1);
            else
              self2.selectedDates.push(selectedDate);
          } else if (self2.config.mode === "range") {
            if (self2.selectedDates.length === 2) {
              self2.clear(false, false);
            }
            self2.latestSelectedDateObj = selectedDate;
            self2.selectedDates.push(selectedDate);
            if (compareDates(selectedDate, self2.selectedDates[0], true) !== 0)
              self2.selectedDates.sort(function(a3, b) {
                return a3.getTime() - b.getTime();
              });
          }
          setHoursFromInputs();
          if (shouldChangeMonth) {
            var isNewYear = self2.currentYear !== selectedDate.getFullYear();
            self2.currentYear = selectedDate.getFullYear();
            self2.currentMonth = selectedDate.getMonth();
            if (isNewYear) {
              triggerEvent("onYearChange");
              buildMonthSwitch();
            }
            triggerEvent("onMonthChange");
          }
          updateNavigationCurrentMonth();
          buildDays();
          updateValue();
          if (self2.config.enableTime)
            setTimeout(function() {
              return self2.showTimeInput = true;
            }, 50);
          if (!shouldChangeMonth && self2.config.mode !== "range" && self2.config.showMonths === 1)
            focusOnDayElem(target);
          else if (self2.selectedDateElem !== void 0 && self2.hourElement === void 0) {
            self2.selectedDateElem && self2.selectedDateElem.focus();
          }
          if (self2.hourElement !== void 0)
            self2.hourElement !== void 0 && self2.hourElement.focus();
          if (self2.config.closeOnSelect) {
            var single = self2.config.mode === "single" && !self2.config.enableTime;
            var range3 = self2.config.mode === "range" && self2.selectedDates.length === 2 && !self2.config.enableTime;
            if (single || range3) {
              focusAndClose();
            }
          }
          triggerChange();
        }
        var CALLBACKS = {
          locale: [setupLocale, updateWeekdays],
          showMonths: [buildMonths, setCalendarWidth, buildWeekdays],
          minDate: [jumpToDate],
          maxDate: [jumpToDate]
        };
        function set7(option, value2) {
          if (option !== null && typeof option === "object") {
            Object.assign(self2.config, option);
            for (var key in option) {
              if (CALLBACKS[key] !== void 0)
                CALLBACKS[key].forEach(function(x3) {
                  return x3();
                });
            }
          } else {
            self2.config[option] = value2;
            if (CALLBACKS[option] !== void 0)
              CALLBACKS[option].forEach(function(x3) {
                return x3();
              });
            else if (HOOKS.indexOf(option) > -1)
              self2.config[option] = arrayify(value2);
          }
          self2.redraw();
          updateValue(false);
        }
        function setSelectedDate(inputDate, format3) {
          var dates = [];
          if (inputDate instanceof Array)
            dates = inputDate.map(function(d) {
              return self2.parseDate(d, format3);
            });
          else if (inputDate instanceof Date || typeof inputDate === "number")
            dates = [self2.parseDate(inputDate, format3)];
          else if (typeof inputDate === "string") {
            switch (self2.config.mode) {
              case "single":
              case "time":
                dates = [self2.parseDate(inputDate, format3)];
                break;
              case "multiple":
                dates = inputDate.split(self2.config.conjunction).map(function(date2) {
                  return self2.parseDate(date2, format3);
                });
                break;
              case "range":
                dates = inputDate.split(self2.l10n.rangeSeparator).map(function(date2) {
                  return self2.parseDate(date2, format3);
                });
                break;
              default:
                break;
            }
          } else
            self2.config.errorHandler(new Error("Invalid date supplied: " + JSON.stringify(inputDate)));
          self2.selectedDates = dates.filter(function(d) {
            return d instanceof Date && isEnabled(d, false);
          });
          if (self2.config.mode === "range")
            self2.selectedDates.sort(function(a3, b) {
              return a3.getTime() - b.getTime();
            });
        }
        function setDate2(date2, triggerChange2, format3) {
          if (triggerChange2 === void 0) {
            triggerChange2 = false;
          }
          if (format3 === void 0) {
            format3 = self2.config.dateFormat;
          }
          if (date2 !== 0 && !date2 || date2 instanceof Array && date2.length === 0)
            return self2.clear(triggerChange2);
          setSelectedDate(date2, format3);
          self2.showTimeInput = self2.selectedDates.length > 0;
          self2.latestSelectedDateObj = self2.selectedDates[self2.selectedDates.length - 1];
          self2.redraw();
          jumpToDate();
          setHoursFromDate();
          if (self2.selectedDates.length === 0) {
            self2.clear(false);
          }
          updateValue(triggerChange2);
          if (triggerChange2)
            triggerEvent("onChange");
        }
        function parseDateRules(arr) {
          return arr.slice().map(function(rule) {
            if (typeof rule === "string" || typeof rule === "number" || rule instanceof Date) {
              return self2.parseDate(rule, void 0, true);
            } else if (rule && typeof rule === "object" && rule.from && rule.to)
              return {
                from: self2.parseDate(rule.from, void 0),
                to: self2.parseDate(rule.to, void 0)
              };
            return rule;
          }).filter(function(x3) {
            return x3;
          });
        }
        function setupDates() {
          self2.selectedDates = [];
          self2.now = self2.parseDate(self2.config.now) || new Date();
          var preloadedDate = self2.config.defaultDate || ((self2.input.nodeName === "INPUT" || self2.input.nodeName === "TEXTAREA") && self2.input.placeholder && self2.input.value === self2.input.placeholder ? null : self2.input.value);
          if (preloadedDate)
            setSelectedDate(preloadedDate, self2.config.dateFormat);
          self2._initialDate = self2.selectedDates.length > 0 ? self2.selectedDates[0] : self2.config.minDate && self2.config.minDate.getTime() > self2.now.getTime() ? self2.config.minDate : self2.config.maxDate && self2.config.maxDate.getTime() < self2.now.getTime() ? self2.config.maxDate : self2.now;
          self2.currentYear = self2._initialDate.getFullYear();
          self2.currentMonth = self2._initialDate.getMonth();
          if (self2.selectedDates.length > 0)
            self2.latestSelectedDateObj = self2.selectedDates[0];
          if (self2.config.minTime !== void 0)
            self2.config.minTime = self2.parseDate(self2.config.minTime, "H:i");
          if (self2.config.maxTime !== void 0)
            self2.config.maxTime = self2.parseDate(self2.config.maxTime, "H:i");
          self2.minDateHasTime = !!self2.config.minDate && (self2.config.minDate.getHours() > 0 || self2.config.minDate.getMinutes() > 0 || self2.config.minDate.getSeconds() > 0);
          self2.maxDateHasTime = !!self2.config.maxDate && (self2.config.maxDate.getHours() > 0 || self2.config.maxDate.getMinutes() > 0 || self2.config.maxDate.getSeconds() > 0);
          Object.defineProperty(self2, "showTimeInput", {
            get: function() {
              return self2._showTimeInput;
            },
            set: function(bool) {
              self2._showTimeInput = bool;
              if (self2.calendarContainer)
                toggleClass(self2.calendarContainer, "showTimeInput", bool);
              self2.isOpen && positionCalendar();
            }
          });
        }
        function setupInputs() {
          self2.input = self2.config.wrap ? element.querySelector("[data-input]") : element;
          if (!self2.input) {
            self2.config.errorHandler(new Error("Invalid input element specified"));
            return;
          }
          self2.input._type = self2.input.type;
          self2.input.type = "text";
          self2.input.classList.add("flatpickr-input");
          self2._input = self2.input;
          if (self2.config.altInput) {
            self2.altInput = createElement(self2.input.nodeName, self2.config.altInputClass);
            self2._input = self2.altInput;
            self2.altInput.placeholder = self2.input.placeholder;
            self2.altInput.disabled = self2.input.disabled;
            self2.altInput.required = self2.input.required;
            self2.altInput.tabIndex = self2.input.tabIndex;
            self2.altInput.type = "text";
            self2.input.setAttribute("type", "hidden");
            if (!self2.config.static && self2.input.parentNode)
              self2.input.parentNode.insertBefore(self2.altInput, self2.input.nextSibling);
          }
          if (!self2.config.allowInput)
            self2._input.setAttribute("readonly", "readonly");
          self2._positionElement = self2.config.positionElement || self2._input;
        }
        function setupMobile() {
          var inputType = self2.config.enableTime ? self2.config.noCalendar ? "time" : "datetime-local" : "date";
          self2.mobileInput = createElement("input", self2.input.className + " flatpickr-mobile");
          self2.mobileInput.step = self2.input.getAttribute("step") || "any";
          self2.mobileInput.tabIndex = 1;
          self2.mobileInput.type = inputType;
          self2.mobileInput.disabled = self2.input.disabled;
          self2.mobileInput.required = self2.input.required;
          self2.mobileInput.placeholder = self2.input.placeholder;
          self2.mobileFormatStr = inputType === "datetime-local" ? "Y-m-d\\TH:i:S" : inputType === "date" ? "Y-m-d" : "H:i:S";
          if (self2.selectedDates.length > 0) {
            self2.mobileInput.defaultValue = self2.mobileInput.value = self2.formatDate(self2.selectedDates[0], self2.mobileFormatStr);
          }
          if (self2.config.minDate)
            self2.mobileInput.min = self2.formatDate(self2.config.minDate, "Y-m-d");
          if (self2.config.maxDate)
            self2.mobileInput.max = self2.formatDate(self2.config.maxDate, "Y-m-d");
          self2.input.type = "hidden";
          if (self2.altInput !== void 0)
            self2.altInput.type = "hidden";
          try {
            if (self2.input.parentNode)
              self2.input.parentNode.insertBefore(self2.mobileInput, self2.input.nextSibling);
          } catch (_a4) {
          }
          bind2(self2.mobileInput, "change", function(e) {
            self2.setDate(e.target.value, false, self2.mobileFormatStr);
            triggerEvent("onChange");
            triggerEvent("onClose");
          });
        }
        function toggle(e) {
          if (self2.isOpen === true)
            return self2.close();
          self2.open(e);
        }
        function triggerEvent(event, data) {
          if (self2.config === void 0)
            return;
          var hooks = self2.config[event];
          if (hooks !== void 0 && hooks.length > 0) {
            for (var i = 0; hooks[i] && i < hooks.length; i++)
              hooks[i](self2.selectedDates, self2.input.value, self2, data);
          }
          if (event === "onChange") {
            self2.input.dispatchEvent(createEvent("change"));
            self2.input.dispatchEvent(createEvent("input"));
          }
        }
        function createEvent(name) {
          var e = document.createEvent("Event");
          e.initEvent(name, true, true);
          return e;
        }
        function isDateSelected(date2) {
          for (var i = 0; i < self2.selectedDates.length; i++) {
            if (compareDates(self2.selectedDates[i], date2) === 0)
              return "" + i;
          }
          return false;
        }
        function isDateInRange(date2) {
          if (self2.config.mode !== "range" || self2.selectedDates.length < 2)
            return false;
          return compareDates(date2, self2.selectedDates[0]) >= 0 && compareDates(date2, self2.selectedDates[1]) <= 0;
        }
        function updateNavigationCurrentMonth() {
          if (self2.config.noCalendar || self2.isMobile || !self2.monthNav)
            return;
          self2.yearElements.forEach(function(yearElement, i) {
            var d = new Date(self2.currentYear, self2.currentMonth, 1);
            d.setMonth(self2.currentMonth + i);
            if (self2.config.showMonths > 1) {
              self2.monthElements[i].textContent = monthToStr3(d.getMonth(), self2.config.shorthandCurrentMonth, self2.l10n) + " ";
            } else {
              self2.monthsDropdownContainer.value = d.getMonth().toString();
            }
            yearElement.value = d.getFullYear().toString();
          });
          self2._hidePrevMonthArrow = self2.config.minDate !== void 0 && (self2.currentYear === self2.config.minDate.getFullYear() ? self2.currentMonth <= self2.config.minDate.getMonth() : self2.currentYear < self2.config.minDate.getFullYear());
          self2._hideNextMonthArrow = self2.config.maxDate !== void 0 && (self2.currentYear === self2.config.maxDate.getFullYear() ? self2.currentMonth + 1 > self2.config.maxDate.getMonth() : self2.currentYear > self2.config.maxDate.getFullYear());
        }
        function getDateStr(format3) {
          return self2.selectedDates.map(function(dObj) {
            return self2.formatDate(dObj, format3);
          }).filter(function(d, i, arr) {
            return self2.config.mode !== "range" || self2.config.enableTime || arr.indexOf(d) === i;
          }).join(self2.config.mode !== "range" ? self2.config.conjunction : self2.l10n.rangeSeparator);
        }
        function updateValue(triggerChange2) {
          if (triggerChange2 === void 0) {
            triggerChange2 = true;
          }
          if (self2.mobileInput !== void 0 && self2.mobileFormatStr) {
            self2.mobileInput.value = self2.latestSelectedDateObj !== void 0 ? self2.formatDate(self2.latestSelectedDateObj, self2.mobileFormatStr) : "";
          }
          self2.input.value = getDateStr(self2.config.dateFormat);
          if (self2.altInput !== void 0) {
            self2.altInput.value = getDateStr(self2.config.altFormat);
          }
          if (triggerChange2 !== false)
            triggerEvent("onValueUpdate");
        }
        function onMonthNavClick(e) {
          var isPrevMonth = self2.prevMonthNav.contains(e.target);
          var isNextMonth = self2.nextMonthNav.contains(e.target);
          if (isPrevMonth || isNextMonth) {
            changeMonth(isPrevMonth ? -1 : 1);
          } else if (self2.yearElements.indexOf(e.target) >= 0) {
            e.target.select();
          } else if (e.target.classList.contains("arrowUp")) {
            self2.changeYear(self2.currentYear + 1);
          } else if (e.target.classList.contains("arrowDown")) {
            self2.changeYear(self2.currentYear - 1);
          }
        }
        function timeWrapper(e) {
          e.preventDefault();
          var isKeyDown = e.type === "keydown", input = e.target;
          if (self2.amPM !== void 0 && e.target === self2.amPM) {
            self2.amPM.textContent = self2.l10n.amPM[int(self2.amPM.textContent === self2.l10n.amPM[0])];
          }
          var min8 = parseFloat(input.getAttribute("min")), max8 = parseFloat(input.getAttribute("max")), step = parseFloat(input.getAttribute("step")), curValue = parseInt(input.value, 10), delta = e.delta || (isKeyDown ? e.which === 38 ? 1 : -1 : 0);
          var newValue = curValue + step * delta;
          if (typeof input.value !== "undefined" && input.value.length === 2) {
            var isHourElem = input === self2.hourElement, isMinuteElem = input === self2.minuteElement;
            if (newValue < min8) {
              newValue = max8 + newValue + int(!isHourElem) + (int(isHourElem) && int(!self2.amPM));
              if (isMinuteElem)
                incrementNumInput(void 0, -1, self2.hourElement);
            } else if (newValue > max8) {
              newValue = input === self2.hourElement ? newValue - max8 - int(!self2.amPM) : min8;
              if (isMinuteElem)
                incrementNumInput(void 0, 1, self2.hourElement);
            }
            if (self2.amPM && isHourElem && (step === 1 ? newValue + curValue === 23 : Math.abs(newValue - curValue) > step)) {
              self2.amPM.textContent = self2.l10n.amPM[int(self2.amPM.textContent === self2.l10n.amPM[0])];
            }
            input.value = pad3(newValue);
          }
        }
        init2();
        return self2;
      }
      function _flatpickr(nodeList, config) {
        var nodes = Array.prototype.slice.call(nodeList).filter(function(x3) {
          return x3 instanceof HTMLElement;
        });
        var instances = [];
        for (var i = 0; i < nodes.length; i++) {
          var node = nodes[i];
          try {
            if (node.getAttribute("data-fp-omit") !== null)
              continue;
            if (node._flatpickr !== void 0) {
              node._flatpickr.destroy();
              node._flatpickr = void 0;
            }
            node._flatpickr = FlatpickrInstance(node, config || {});
            instances.push(node._flatpickr);
          } catch (e) {
            console.error(e);
          }
        }
        return instances.length === 1 ? instances[0] : instances;
      }
      if (typeof HTMLElement !== "undefined" && typeof HTMLCollection !== "undefined" && typeof NodeList !== "undefined") {
        HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function(config) {
          return _flatpickr(this, config);
        };
        HTMLElement.prototype.flatpickr = function(config) {
          return _flatpickr([this], config);
        };
      }
      var flatpickr = function(selector, config) {
        if (typeof selector === "string") {
          return _flatpickr(window.document.querySelectorAll(selector), config);
        } else if (selector instanceof Node) {
          return _flatpickr([selector], config);
        } else {
          return _flatpickr(selector, config);
        }
      };
      flatpickr.defaultConfig = {};
      flatpickr.l10ns = {
        en: __assign5({}, english),
        "default": __assign5({}, english)
      };
      flatpickr.localize = function(l10n) {
        flatpickr.l10ns["default"] = __assign5({}, flatpickr.l10ns["default"], l10n);
      };
      flatpickr.setDefaults = function(config) {
        flatpickr.defaultConfig = __assign5({}, flatpickr.defaultConfig, config);
      };
      flatpickr.parseDate = createDateParser({});
      flatpickr.formatDate = createDateFormatter({});
      flatpickr.compareDates = compareDates;
      if (typeof jQuery !== "undefined" && typeof jQuery.fn !== "undefined") {
        jQuery.fn.flatpickr = function(config) {
          return _flatpickr(this, config);
        };
      }
      Date.prototype.fp_incr = function(days2) {
        return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days2 === "string" ? parseInt(days2, 10) : days2));
      };
      if (typeof window !== "undefined") {
        window.flatpickr = flatpickr;
      }
      return flatpickr;
    });
  }
});

// node_modules/lodash.debounce/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.debounce/index.js"(exports4, module2) {
    var FUNC_ERROR_TEXT13 = "Expected a function";
    var NAN4 = 0 / 0;
    var symbolTag5 = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex2 = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary2 = /^0b[01]+$/i;
    var reIsOctal2 = /^0o[0-7]+$/i;
    var freeParseInt2 = parseInt;
    var freeGlobal2 = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf2 = typeof self == "object" && self && self.Object === Object && self;
    var root3 = freeGlobal2 || freeSelf2 || Function("return this")();
    var objectProto30 = Object.prototype;
    var objectToString2 = objectProto30.toString;
    var nativeMax18 = Math.max;
    var nativeMin16 = Math.min;
    var now3 = function() {
      return root3.Date.now();
    };
    function debounce3(func, wait, options2) {
      var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT13);
      }
      wait = toNumber2(wait) || 0;
      if (isObject2(options2)) {
        leading = !!options2.leading;
        maxing = "maxWait" in options2;
        maxWait = maxing ? nativeMax18(toNumber2(options2.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options2 ? !!options2.trailing : trailing;
      }
      function invokeFunc(time2) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time2;
        result2 = func.apply(thisArg, args);
        return result2;
      }
      function leadingEdge(time2) {
        lastInvokeTime = time2;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time2) : result2;
      }
      function remainingWait(time2) {
        var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime, result3 = wait - timeSinceLastCall;
        return maxing ? nativeMin16(result3, maxWait - timeSinceLastInvoke) : result3;
      }
      function shouldInvoke(time2) {
        var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time2 = now3();
        if (shouldInvoke(time2)) {
          return trailingEdge(time2);
        }
        timerId = setTimeout(timerExpired, remainingWait(time2));
      }
      function trailingEdge(time2) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time2);
        }
        lastArgs = lastThis = void 0;
        return result2;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result2 : trailingEdge(now3());
      }
      function debounced() {
        var time2 = now3(), isInvoking = shouldInvoke(time2);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time2;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result2;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    function isObject2(value2) {
      var type2 = typeof value2;
      return !!value2 && (type2 == "object" || type2 == "function");
    }
    function isObjectLike2(value2) {
      return !!value2 && typeof value2 == "object";
    }
    function isSymbol2(value2) {
      return typeof value2 == "symbol" || isObjectLike2(value2) && objectToString2.call(value2) == symbolTag5;
    }
    function toNumber2(value2) {
      if (typeof value2 == "number") {
        return value2;
      }
      if (isSymbol2(value2)) {
        return NAN4;
      }
      if (isObject2(value2)) {
        var other = typeof value2.valueOf == "function" ? value2.valueOf() : value2;
        value2 = isObject2(other) ? other + "" : other;
      }
      if (typeof value2 != "string") {
        return value2 === 0 ? value2 : +value2;
      }
      value2 = value2.replace(reTrim, "");
      var isBinary = reIsBinary2.test(value2);
      return isBinary || reIsOctal2.test(value2) ? freeParseInt2(value2.slice(2), isBinary ? 2 : 8) : reIsBadHex2.test(value2) ? NAN4 : +value2;
    }
    module2.exports = debounce3;
  }
});

// node_modules/d3-cloud/node_modules/d3-dispatch/src/dispatch.js
function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || t in _ || /[\s.]/.test(t))
      throw new Error("illegal type: " + t);
    _[t] = [];
  }
  return new Dispatch(_);
}
function Dispatch(_) {
  this._ = _;
}
function parseTypenames2(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0)
      name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t))
      throw new Error("unknown type: " + t);
    return { type: t, name };
  });
}
function get2(type2, name) {
  for (var i = 0, n = type2.length, c; i < n; ++i) {
    if ((c = type2[i]).name === name) {
      return c.value;
    }
  }
}
function set3(type2, name, callback) {
  for (var i = 0, n = type2.length; i < n; ++i) {
    if (type2[i].name === name) {
      type2[i] = noop2, type2 = type2.slice(0, i).concat(type2.slice(i + 1));
      break;
    }
  }
  if (callback != null)
    type2.push({ name, value: callback });
  return type2;
}
var noop2, dispatch_default2;
var init_dispatch = __esm({
  "node_modules/d3-cloud/node_modules/d3-dispatch/src/dispatch.js"() {
    noop2 = { value: function() {
    } };
    Dispatch.prototype = dispatch.prototype = {
      constructor: Dispatch,
      on: function(typename, callback) {
        var _ = this._, T = parseTypenames2(typename + "", _), t, i = -1, n = T.length;
        if (arguments.length < 2) {
          while (++i < n)
            if ((t = (typename = T[i]).type) && (t = get2(_[t], typename.name)))
              return t;
          return;
        }
        if (callback != null && typeof callback !== "function")
          throw new Error("invalid callback: " + callback);
        while (++i < n) {
          if (t = (typename = T[i]).type)
            _[t] = set3(_[t], typename.name, callback);
          else if (callback == null)
            for (t in _)
              _[t] = set3(_[t], typename.name, null);
        }
        return this;
      },
      copy: function() {
        var copy3 = {}, _ = this._;
        for (var t in _)
          copy3[t] = _[t].slice();
        return new Dispatch(copy3);
      },
      call: function(type2, that) {
        if ((n = arguments.length - 2) > 0)
          for (var args = new Array(n), i = 0, n, t; i < n; ++i)
            args[i] = arguments[i + 2];
        if (!this._.hasOwnProperty(type2))
          throw new Error("unknown type: " + type2);
        for (t = this._[type2], i = 0, n = t.length; i < n; ++i)
          t[i].value.apply(that, args);
      },
      apply: function(type2, that, args) {
        if (!this._.hasOwnProperty(type2))
          throw new Error("unknown type: " + type2);
        for (var t = this._[type2], i = 0, n = t.length; i < n; ++i)
          t[i].value.apply(that, args);
      }
    };
    dispatch_default2 = dispatch;
  }
});

// node_modules/d3-cloud/node_modules/d3-dispatch/src/index.js
var src_exports = {};
__export(src_exports, {
  dispatch: () => dispatch_default2
});
var init_src = __esm({
  "node_modules/d3-cloud/node_modules/d3-dispatch/src/index.js"() {
    init_dispatch();
  }
});

// node_modules/d3-cloud/index.js
var require_d3_cloud = __commonJS({
  "node_modules/d3-cloud/index.js"(exports4, module2) {
    var dispatch3 = (init_src(), src_exports).dispatch;
    var cloudRadians = Math.PI / 180;
    var cw = 1 << 11 >> 5;
    var ch = 1 << 11;
    module2.exports = function() {
      var size2 = [256, 256], text = cloudText, font = cloudFont, fontSize = cloudFontSize, fontStyle = cloudFontNormal, fontWeight = cloudFontNormal, rotate = cloudRotate, padding = cloudPadding, spiral = archimedeanSpiral, words2 = [], timeInterval = Infinity, event = dispatch3("word", "end"), timer2 = null, random2 = Math.random, cloud2 = {}, canvas = cloudCanvas;
      cloud2.canvas = function(_) {
        return arguments.length ? (canvas = functor(_), cloud2) : canvas;
      };
      cloud2.start = function() {
        var contextAndRatio = getContext(canvas()), board = zeroArray((size2[0] >> 5) * size2[1]), bounds = null, n = words2.length, i = -1, tags = [], data = words2.map(function(d, i2) {
          d.text = text.call(this, d, i2);
          d.font = font.call(this, d, i2);
          d.style = fontStyle.call(this, d, i2);
          d.weight = fontWeight.call(this, d, i2);
          d.rotate = rotate.call(this, d, i2);
          d.size = ~~fontSize.call(this, d, i2);
          d.padding = padding.call(this, d, i2);
          return d;
        }).sort(function(a3, b) {
          return b.size - a3.size;
        });
        if (timer2)
          clearInterval(timer2);
        timer2 = setInterval(step, 0);
        step();
        return cloud2;
        function step() {
          var start2 = Date.now();
          while (Date.now() - start2 < timeInterval && ++i < n && timer2) {
            var d = data[i];
            d.x = size2[0] * (random2() + 0.5) >> 1;
            d.y = size2[1] * (random2() + 0.5) >> 1;
            cloudSprite(contextAndRatio, d, data, i);
            if (d.hasText && place2(board, d, bounds)) {
              tags.push(d);
              event.call("word", cloud2, d);
              if (bounds)
                cloudBounds(bounds, d);
              else
                bounds = [{ x: d.x + d.x0, y: d.y + d.y0 }, { x: d.x + d.x1, y: d.y + d.y1 }];
              d.x -= size2[0] >> 1;
              d.y -= size2[1] >> 1;
            }
          }
          if (i >= n) {
            cloud2.stop();
            event.call("end", cloud2, tags, bounds);
          }
        }
      };
      cloud2.stop = function() {
        if (timer2) {
          clearInterval(timer2);
          timer2 = null;
        }
        return cloud2;
      };
      function getContext(canvas2) {
        canvas2.width = canvas2.height = 1;
        var ratio = Math.sqrt(canvas2.getContext("2d").getImageData(0, 0, 1, 1).data.length >> 2);
        canvas2.width = (cw << 5) / ratio;
        canvas2.height = ch / ratio;
        var context = canvas2.getContext("2d");
        context.fillStyle = context.strokeStyle = "red";
        context.textAlign = "center";
        return { context, ratio };
      }
      function place2(board, tag, bounds) {
        var perimeter = [{ x: 0, y: 0 }, { x: size2[0], y: size2[1] }], startX = tag.x, startY = tag.y, maxDelta = Math.sqrt(size2[0] * size2[0] + size2[1] * size2[1]), s3 = spiral(size2), dt = random2() < 0.5 ? 1 : -1, t = -dt, dxdy, dx, dy;
        while (dxdy = s3(t += dt)) {
          dx = ~~dxdy[0];
          dy = ~~dxdy[1];
          if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta)
            break;
          tag.x = startX + dx;
          tag.y = startY + dy;
          if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 || tag.x + tag.x1 > size2[0] || tag.y + tag.y1 > size2[1])
            continue;
          if (!bounds || !cloudCollide(tag, board, size2[0])) {
            if (!bounds || collideRects(tag, bounds)) {
              var sprite = tag.sprite, w = tag.width >> 5, sw = size2[0] >> 5, lx = tag.x - (w << 4), sx = lx & 127, msx = 32 - sx, h = tag.y1 - tag.y0, x3 = (tag.y + tag.y0) * sw + (lx >> 5), last2;
              for (var j = 0; j < h; j++) {
                last2 = 0;
                for (var i = 0; i <= w; i++) {
                  board[x3 + i] |= last2 << msx | (i < w ? (last2 = sprite[j * w + i]) >>> sx : 0);
                }
                x3 += sw;
              }
              delete tag.sprite;
              return true;
            }
          }
        }
        return false;
      }
      cloud2.timeInterval = function(_) {
        return arguments.length ? (timeInterval = _ == null ? Infinity : _, cloud2) : timeInterval;
      };
      cloud2.words = function(_) {
        return arguments.length ? (words2 = _, cloud2) : words2;
      };
      cloud2.size = function(_) {
        return arguments.length ? (size2 = [+_[0], +_[1]], cloud2) : size2;
      };
      cloud2.font = function(_) {
        return arguments.length ? (font = functor(_), cloud2) : font;
      };
      cloud2.fontStyle = function(_) {
        return arguments.length ? (fontStyle = functor(_), cloud2) : fontStyle;
      };
      cloud2.fontWeight = function(_) {
        return arguments.length ? (fontWeight = functor(_), cloud2) : fontWeight;
      };
      cloud2.rotate = function(_) {
        return arguments.length ? (rotate = functor(_), cloud2) : rotate;
      };
      cloud2.text = function(_) {
        return arguments.length ? (text = functor(_), cloud2) : text;
      };
      cloud2.spiral = function(_) {
        return arguments.length ? (spiral = spirals[_] || _, cloud2) : spiral;
      };
      cloud2.fontSize = function(_) {
        return arguments.length ? (fontSize = functor(_), cloud2) : fontSize;
      };
      cloud2.padding = function(_) {
        return arguments.length ? (padding = functor(_), cloud2) : padding;
      };
      cloud2.random = function(_) {
        return arguments.length ? (random2 = _, cloud2) : random2;
      };
      cloud2.on = function() {
        var value2 = event.on.apply(event, arguments);
        return value2 === event ? cloud2 : value2;
      };
      return cloud2;
    };
    function cloudText(d) {
      return d.text;
    }
    function cloudFont() {
      return "serif";
    }
    function cloudFontNormal() {
      return "normal";
    }
    function cloudFontSize(d) {
      return Math.sqrt(d.value);
    }
    function cloudRotate() {
      return (~~(Math.random() * 6) - 3) * 30;
    }
    function cloudPadding() {
      return 1;
    }
    function cloudSprite(contextAndRatio, d, data, di) {
      if (d.sprite)
        return;
      var c = contextAndRatio.context, ratio = contextAndRatio.ratio;
      c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);
      var x3 = 0, y3 = 0, maxh = 0, n = data.length;
      --di;
      while (++di < n) {
        d = data[di];
        c.save();
        c.font = d.style + " " + d.weight + " " + ~~((d.size + 1) / ratio) + "px " + d.font;
        var w = c.measureText(d.text + "m").width * ratio, h = d.size << 1;
        if (d.rotate) {
          var sr = Math.sin(d.rotate * cloudRadians), cr = Math.cos(d.rotate * cloudRadians), wcr = w * cr, wsr = w * sr, hcr = h * cr, hsr = h * sr;
          w = Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 31 >> 5 << 5;
          h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));
        } else {
          w = w + 31 >> 5 << 5;
        }
        if (h > maxh)
          maxh = h;
        if (x3 + w >= cw << 5) {
          x3 = 0;
          y3 += maxh;
          maxh = 0;
        }
        if (y3 + h >= ch)
          break;
        c.translate((x3 + (w >> 1)) / ratio, (y3 + (h >> 1)) / ratio);
        if (d.rotate)
          c.rotate(d.rotate * cloudRadians);
        c.fillText(d.text, 0, 0);
        if (d.padding)
          c.lineWidth = 2 * d.padding, c.strokeText(d.text, 0, 0);
        c.restore();
        d.width = w;
        d.height = h;
        d.xoff = x3;
        d.yoff = y3;
        d.x1 = w >> 1;
        d.y1 = h >> 1;
        d.x0 = -d.x1;
        d.y0 = -d.y1;
        d.hasText = true;
        x3 += w;
      }
      var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data, sprite = [];
      while (--di >= 0) {
        d = data[di];
        if (!d.hasText)
          continue;
        var w = d.width, w32 = w >> 5, h = d.y1 - d.y0;
        for (var i = 0; i < h * w32; i++)
          sprite[i] = 0;
        x3 = d.xoff;
        if (x3 == null)
          return;
        y3 = d.yoff;
        var seen = 0, seenRow = -1;
        for (var j = 0; j < h; j++) {
          for (var i = 0; i < w; i++) {
            var k3 = w32 * j + (i >> 5), m = pixels[(y3 + j) * (cw << 5) + (x3 + i) << 2] ? 1 << 31 - i % 32 : 0;
            sprite[k3] |= m;
            seen |= m;
          }
          if (seen)
            seenRow = j;
          else {
            d.y0++;
            h--;
            j--;
            y3++;
          }
        }
        d.y1 = d.y0 + seenRow;
        d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);
      }
    }
    function cloudCollide(tag, board, sw) {
      sw >>= 5;
      var sprite = tag.sprite, w = tag.width >> 5, lx = tag.x - (w << 4), sx = lx & 127, msx = 32 - sx, h = tag.y1 - tag.y0, x3 = (tag.y + tag.y0) * sw + (lx >> 5), last2;
      for (var j = 0; j < h; j++) {
        last2 = 0;
        for (var i = 0; i <= w; i++) {
          if ((last2 << msx | (i < w ? (last2 = sprite[j * w + i]) >>> sx : 0)) & board[x3 + i])
            return true;
        }
        x3 += sw;
      }
      return false;
    }
    function cloudBounds(bounds, d) {
      var b02 = bounds[0], b12 = bounds[1];
      if (d.x + d.x0 < b02.x)
        b02.x = d.x + d.x0;
      if (d.y + d.y0 < b02.y)
        b02.y = d.y + d.y0;
      if (d.x + d.x1 > b12.x)
        b12.x = d.x + d.x1;
      if (d.y + d.y1 > b12.y)
        b12.y = d.y + d.y1;
    }
    function collideRects(a3, b) {
      return a3.x + a3.x1 > b[0].x && a3.x + a3.x0 < b[1].x && a3.y + a3.y1 > b[0].y && a3.y + a3.y0 < b[1].y;
    }
    function archimedeanSpiral(size2) {
      var e = size2[0] / size2[1];
      return function(t) {
        return [e * (t *= 0.1) * Math.cos(t), t * Math.sin(t)];
      };
    }
    function rectangularSpiral(size2) {
      var dy = 4, dx = dy * size2[0] / size2[1], x3 = 0, y3 = 0;
      return function(t) {
        var sign3 = t < 0 ? -1 : 1;
        switch (Math.sqrt(1 + 4 * sign3 * t) - sign3 & 3) {
          case 0:
            x3 += dx;
            break;
          case 1:
            y3 += dy;
            break;
          case 2:
            x3 -= dx;
            break;
          default:
            y3 -= dy;
            break;
        }
        return [x3, y3];
      };
    }
    function zeroArray(n) {
      var a3 = [], i = -1;
      while (++i < n)
        a3[i] = 0;
      return a3;
    }
    function cloudCanvas() {
      return document.createElement("canvas");
    }
    function functor(d) {
      return typeof d === "function" ? d : function() {
        return d;
      };
    }
    var spirals = {
      archimedean: archimedeanSpiral,
      rectangular: rectangularSpiral
    };
  }
});

// node_modules/@carbon/charts/interfaces/index.js
var interfaces_exports = {};
__export(interfaces_exports, {
  Alignments: () => Alignments,
  ArrowDirections: () => ArrowDirections,
  AxisFlavor: () => AxisFlavor,
  AxisPositions: () => AxisPositions,
  AxisTitleOrientations: () => AxisTitleOrientations,
  CalloutDirections: () => CalloutDirections,
  CartesianOrientations: () => CartesianOrientations,
  ChartTheme: () => ChartTheme,
  ChartTypes: () => ChartTypes,
  ColorClassNameTypes: () => ColorClassNameTypes,
  ColorLegendType: () => ColorLegendType,
  DividerStatus: () => DividerStatus,
  DominantBaseline: () => DominantBaseline,
  Events: () => Events,
  GaugeTypes: () => GaugeTypes,
  LayoutAlignItems: () => LayoutAlignItems,
  LayoutDirection: () => LayoutDirection,
  LayoutGrowth: () => LayoutGrowth,
  LegendItemType: () => LegendItemType,
  LegendOrientations: () => LegendOrientations,
  LegendPositions: () => LegendPositions,
  RenderTypes: () => RenderTypes,
  Roles: () => Roles,
  ScaleTypes: () => ScaleTypes,
  Skeletons: () => Skeletons,
  Statuses: () => Statuses,
  TextAnchor: () => TextAnchor,
  TickRotations: () => TickRotations,
  ToolbarControlTypes: () => ToolbarControlTypes,
  TreeTypes: () => TreeTypes,
  TruncationTypes: () => TruncationTypes,
  ZoomBarTypes: () => ZoomBarTypes
});

// node_modules/@carbon/charts/interfaces/a11y.js
var Roles;
(function(Roles2) {
  Roles2["GRAPHICS_DOCUMENT"] = "graphics-document";
  Roles2["GRAPHICS_OBJECT"] = "graphics-object";
  Roles2["GRAPHICS_SYMBOL"] = "graphics-symbol";
  Roles2["GROUP"] = "group";
  Roles2["DOCUMENT"] = "document";
  Roles2["CHECKBOX"] = "checkbox";
  Roles2["BUTTON"] = "button";
  Roles2["MENU"] = "menu";
  Roles2["MENU_ITEM"] = "menuitem";
  Roles2["IMG"] = "img";
})(Roles || (Roles = {}));

// node_modules/@carbon/charts/interfaces/events.js
var events_exports = {};
__export(events_exports, {
  Alluvial: () => Alluvial,
  Area: () => Area,
  Axis: () => Axis,
  Bar: () => Bar,
  Boxplot: () => Boxplot,
  CanvasZoom: () => CanvasZoom,
  Chart: () => Chart,
  CirclePack: () => CirclePack,
  Gauge: () => Gauge,
  Heatmap: () => Heatmap,
  Legend: () => Legend,
  Line: () => Line,
  Meter: () => Meter,
  Modal: () => Modal,
  Model: () => Model,
  Pie: () => Pie,
  Radar: () => Radar,
  Scatter: () => Scatter,
  Threshold: () => Threshold,
  Toolbar: () => Toolbar,
  Tooltip: () => Tooltip,
  Tree: () => Tree,
  Treemap: () => Treemap,
  WordCloud: () => WordCloud,
  ZoomBar: () => ZoomBar,
  ZoomDomain: () => ZoomDomain
});
var Chart;
(function(Chart3) {
  Chart3["RENDER_FINISHED"] = "render-finished";
  Chart3["RESIZE"] = "chart-resize";
  Chart3["MOUSEOVER"] = "chart-mouseover";
  Chart3["MOUSEOUT"] = "chart-mouseout";
})(Chart || (Chart = {}));
var Modal;
(function(Modal4) {
  Modal4["SHOW"] = "show-modal";
  Modal4["HIDE"] = "hide-modal";
})(Modal || (Modal = {}));
var Model;
(function(Model2) {
  Model2["UPDATE"] = "model-update";
})(Model || (Model = {}));
var Toolbar;
(function(Toolbar4) {
  Toolbar4["SHOW_OVERFLOW_MENU"] = "show-toolbar-overflow-menu";
  Toolbar4["HIDE_OVERFLOW_MENU"] = "hide-toolbar-overflow-menu";
  Toolbar4["BUTTON_CLICK"] = "toolbar-button-click";
})(Toolbar || (Toolbar = {}));
var ZoomBar;
(function(ZoomBar3) {
  ZoomBar3["UPDATE"] = "zoom-bar-update";
  ZoomBar3["SELECTION_START"] = "zoom-bar-selection-start";
  ZoomBar3["SELECTION_IN_PROGRESS"] = "zoom-bar-selection-in-progress";
  ZoomBar3["SELECTION_END"] = "zoom-bar-selection-end";
})(ZoomBar || (ZoomBar = {}));
var ZoomDomain;
(function(ZoomDomain2) {
  ZoomDomain2["CHANGE"] = "zoom-domain-change";
})(ZoomDomain || (ZoomDomain = {}));
var CanvasZoom;
(function(CanvasZoom3) {
  CanvasZoom3["CANVAS_ZOOM_IN"] = "canvas-zoom-in";
  CanvasZoom3["CANVAS_ZOOM_OUT"] = "canvas-zoom-out";
})(CanvasZoom || (CanvasZoom = {}));
var Axis;
(function(Axis3) {
  Axis3["LABEL_MOUSEOVER"] = "axis-label-mouseover";
  Axis3["LABEL_MOUSEMOVE"] = "axis-label-mousemove";
  Axis3["LABEL_CLICK"] = "axis-label-click";
  Axis3["LABEL_MOUSEOUT"] = "axis-label-mouseout";
  Axis3["LABEL_FOCUS"] = "axis-label-focus";
  Axis3["LABEL_BLUR"] = "axis-label-blur";
  Axis3["RENDER_COMPLETE"] = "axis-render-complete";
})(Axis || (Axis = {}));
var Area;
(function(Area3) {
  Area3["POINT_MOUSEOVER"] = "scatter-mouseover";
  Area3["POINT_MOUSEMOVE"] = "scatter-mousemove";
  Area3["POINT_CLICK"] = "scatter-click";
  Area3["POINT_MOUSEOUT"] = "scatter-mouseout";
})(Area || (Area = {}));
var WordCloud;
(function(WordCloud3) {
  WordCloud3["WORD_MOUSEOVER"] = "wordcloud-word-mouseover";
  WordCloud3["WORD_MOUSEMOVE"] = "wordcloud-word-mousemove";
  WordCloud3["WORD_CLICK"] = "wordcloud-word-click";
  WordCloud3["WORD_MOUSEOUT"] = "wordcloud-word-mouseout";
})(WordCloud || (WordCloud = {}));
var Pie;
(function(Pie3) {
  Pie3["SLICE_MOUSEOVER"] = "pie-slice-mouseover";
  Pie3["SLICE_MOUSEMOVE"] = "pie-slice-mousemove";
  Pie3["SLICE_CLICK"] = "pie-slice-click";
  Pie3["SLICE_MOUSEOUT"] = "pie-slice-mouseout";
})(Pie || (Pie = {}));
var Gauge;
(function(Gauge3) {
  Gauge3["ARC_MOUSEOVER"] = "gauge-arc-mouseover";
  Gauge3["ARC_MOUSEMOVE"] = "gauge-arc-mousemove";
  Gauge3["ARC_CLICK"] = "gauge-arc-click";
  Gauge3["ARC_MOUSEOUT"] = "gauge-arc-mouseout";
})(Gauge || (Gauge = {}));
var Bar;
(function(Bar3) {
  Bar3["BAR_MOUSEOVER"] = "bar-mouseover";
  Bar3["BAR_MOUSEMOVE"] = "bar-mousemove";
  Bar3["BAR_CLICK"] = "bar-click";
  Bar3["BAR_MOUSEOUT"] = "bar-mouseout";
})(Bar || (Bar = {}));
var Boxplot;
(function(Boxplot3) {
  Boxplot3["BOX_MOUSEOVER"] = "box-mouseover";
  Boxplot3["BOX_MOUSEMOVE"] = "box-mousemove";
  Boxplot3["BOX_CLICK"] = "box-click";
  Boxplot3["BOX_MOUSEOUT"] = "box-mouseout";
  Boxplot3["OUTLIER_MOUSEOVER"] = "outlier-mouseover";
  Boxplot3["OUTLIER_MOUSEMOVE"] = "outlier-mousemove";
  Boxplot3["OUTLIER_CLICK"] = "outlier-click";
  Boxplot3["OUTLIER_MOUSEOUT"] = "outlier-mouseout";
})(Boxplot || (Boxplot = {}));
var Scatter;
(function(Scatter3) {
  Scatter3["SCATTER_MOUSEOVER"] = "scatter-mouseover";
  Scatter3["SCATTER_MOUSEMOVE"] = "scatter-mousemove";
  Scatter3["SCATTER_CLICK"] = "scatter-click";
  Scatter3["SCATTER_MOUSEOUT"] = "scatter-mouseout";
})(Scatter || (Scatter = {}));
var Line;
(function(Line3) {
  Line3["POINT_MOUSEOVER"] = "scatter-mouseover";
  Line3["POINT_MOUSEMOVE"] = "scatter-mousemove";
  Line3["POINT_CLICK"] = "scatter-click";
  Line3["POINT_MOUSEOUT"] = "scatter-mouseout";
})(Line || (Line = {}));
var Radar;
(function(Radar3) {
  Radar3["X_AXIS_MOUSEOVER"] = "radar-x-axis-mouseover";
  Radar3["X_AXIS_MOUSEMOVE"] = "radar-x-axis-mousemove";
  Radar3["X_AXIS_CLICK"] = "radar-x-axis-click";
  Radar3["X_AXIS_MOUSEOUT"] = "radar-x-axis-mouseout";
})(Radar || (Radar = {}));
var Tree;
(function(Tree3) {
  Tree3["NODE_MOUSEOVER"] = "tree-node-mouseover";
  Tree3["NODE_CLICK"] = "tree-node-click";
  Tree3["NODE_MOUSEOUT"] = "tree-node-mouseout";
})(Tree || (Tree = {}));
var Treemap;
(function(Treemap3) {
  Treemap3["LEAF_MOUSEOVER"] = "leaf-mouseover";
  Treemap3["LEAF_MOUSEMOVE"] = "leaf-mousemove";
  Treemap3["LEAF_CLICK"] = "leaf-click";
  Treemap3["LEAF_MOUSEOUT"] = "leaf-mouseout";
})(Treemap || (Treemap = {}));
var Tooltip;
(function(Tooltip4) {
  Tooltip4["SHOW"] = "show-tooltip";
  Tooltip4["MOVE"] = "move-tooltip";
  Tooltip4["HIDE"] = "hide-tooltip";
})(Tooltip || (Tooltip = {}));
var Threshold;
(function(Threshold3) {
  Threshold3["SHOW"] = "show-threshold";
  Threshold3["HIDE"] = "hide-threshold";
})(Threshold || (Threshold = {}));
var Legend;
(function(Legend3) {
  Legend3["ITEM_HOVER"] = "legend-item-onhover";
  Legend3["ITEM_CLICK"] = "legend-item-onclick";
  Legend3["ITEM_MOUSEOUT"] = "legend-item-onmouseout";
  Legend3["ITEMS_UPDATE"] = "legend-items-update";
})(Legend || (Legend = {}));
var CirclePack;
(function(CirclePack3) {
  CirclePack3["CIRCLE_MOUSEOVER"] = "circle-leaf-mouseover";
  CirclePack3["CIRCLE_CLICK"] = "circle-leaf-click";
  CirclePack3["CIRCLE_MOUSEOUT"] = "circle-leaf-mouseout";
  CirclePack3["CIRCLE_MOUSEMOVE"] = "circle-leaf-mousemove";
})(CirclePack || (CirclePack = {}));
var Alluvial;
(function(Alluvial3) {
  Alluvial3["NODE_MOUSEOVER"] = "alluvial-node-mouseover";
  Alluvial3["NODE_CLICK"] = "alluvial-node-click";
  Alluvial3["NODE_MOUSEOUT"] = "alluvial-node-mouseout";
  Alluvial3["NODE_MOUSEMOVE"] = "alluvial-node-mousemove";
  Alluvial3["LINE_MOUSEOVER"] = "alluvial-line-mouseover";
  Alluvial3["LINE_CLICK"] = "alluvial-line-click";
  Alluvial3["LINE_MOUSEOUT"] = "alluvial-line-mouseout";
  Alluvial3["LINE_MOUSEMOVE"] = "alluvial-line-mousemove";
})(Alluvial || (Alluvial = {}));
var Meter;
(function(Meter3) {
  Meter3["METER_MOUSEOVER"] = "meter-mouseover";
  Meter3["METER_CLICK"] = "meter-click";
  Meter3["METER_MOUSEOUT"] = "meter-mouseout";
  Meter3["METER_MOUSEMOVE"] = "meter-mousemove";
})(Meter || (Meter = {}));
var Heatmap;
(function(Heatmap3) {
  Heatmap3["HEATMAP_MOUSEOVER"] = "heatmap-mouseover";
  Heatmap3["HEATMAP_CLICK"] = "heatmap-click";
  Heatmap3["HEATMAP_MOUSEOUT"] = "heatmap-mouseout";
  Heatmap3["HEATMAP_MOUSEMOVE"] = "hetmap-mousemove";
})(Heatmap || (Heatmap = {}));

// node_modules/@carbon/charts/interfaces/enums.js
var Events = events_exports;
var RenderTypes;
(function(RenderTypes2) {
  RenderTypes2["HTML"] = "html";
  RenderTypes2["SVG"] = "svg";
})(RenderTypes || (RenderTypes = {}));
var ChartTheme;
(function(ChartTheme2) {
  ChartTheme2["DEFAULT"] = "default";
  ChartTheme2["G100"] = "g100";
  ChartTheme2["G90"] = "g90";
  ChartTheme2["G10"] = "g10";
})(ChartTheme || (ChartTheme = {}));
var ColorClassNameTypes;
(function(ColorClassNameTypes2) {
  ColorClassNameTypes2["BACKGROUND"] = "background";
  ColorClassNameTypes2["FILL"] = "fill";
  ColorClassNameTypes2["STROKE"] = "stroke";
  ColorClassNameTypes2["TOOLTIP"] = "tooltip";
})(ColorClassNameTypes || (ColorClassNameTypes = {}));
var AxisPositions;
(function(AxisPositions2) {
  AxisPositions2["LEFT"] = "left";
  AxisPositions2["RIGHT"] = "right";
  AxisPositions2["TOP"] = "top";
  AxisPositions2["BOTTOM"] = "bottom";
})(AxisPositions || (AxisPositions = {}));
var ZoomBarTypes;
(function(ZoomBarTypes2) {
  ZoomBarTypes2["GRAPH_VIEW"] = "graph_view";
  ZoomBarTypes2["SLIDER_VIEW"] = "slider_view";
})(ZoomBarTypes || (ZoomBarTypes = {}));
var TruncationTypes;
(function(TruncationTypes2) {
  TruncationTypes2["END_LINE"] = "end_line";
  TruncationTypes2["MID_LINE"] = "mid_line";
  TruncationTypes2["FRONT_LINE"] = "front_line";
  TruncationTypes2["NONE"] = "none";
})(TruncationTypes || (TruncationTypes = {}));
var CartesianOrientations;
(function(CartesianOrientations2) {
  CartesianOrientations2["VERTICAL"] = "vertical";
  CartesianOrientations2["HORIZONTAL"] = "horizontal";
})(CartesianOrientations || (CartesianOrientations = {}));
var ScaleTypes;
(function(ScaleTypes2) {
  ScaleTypes2["TIME"] = "time";
  ScaleTypes2["LINEAR"] = "linear";
  ScaleTypes2["LOG"] = "log";
  ScaleTypes2["LABELS"] = "labels";
  ScaleTypes2["LABELS_RATIO"] = "labels-ratio";
})(ScaleTypes || (ScaleTypes = {}));
var LegendPositions;
(function(LegendPositions2) {
  LegendPositions2["RIGHT"] = "right";
  LegendPositions2["LEFT"] = "left";
  LegendPositions2["TOP"] = "top";
  LegendPositions2["BOTTOM"] = "bottom";
})(LegendPositions || (LegendPositions = {}));
var Alignments;
(function(Alignments2) {
  Alignments2["LEFT"] = "left";
  Alignments2["CENTER"] = "center";
  Alignments2["RIGHT"] = "right";
})(Alignments || (Alignments = {}));
var LegendOrientations;
(function(LegendOrientations2) {
  LegendOrientations2["HORIZONTAL"] = "horizontal";
  LegendOrientations2["VERTICAL"] = "vertical";
})(LegendOrientations || (LegendOrientations = {}));
var TreeTypes;
(function(TreeTypes2) {
  TreeTypes2["TREE"] = "tree";
  TreeTypes2["DENDROGRAM"] = "dendrogram";
})(TreeTypes || (TreeTypes = {}));
var LayoutDirection;
(function(LayoutDirection2) {
  LayoutDirection2["ROW"] = "row";
  LayoutDirection2["COLUMN"] = "column";
  LayoutDirection2["ROW_REVERSE"] = "row-reverse";
  LayoutDirection2["COLUMN_REVERSE"] = "column-reverse";
})(LayoutDirection || (LayoutDirection = {}));
var LayoutGrowth;
(function(LayoutGrowth2) {
  LayoutGrowth2["FIXED"] = "fixed";
  LayoutGrowth2["PREFERRED"] = "preferred";
  LayoutGrowth2["STRETCH"] = "stretch";
})(LayoutGrowth || (LayoutGrowth = {}));
var LayoutAlignItems;
(function(LayoutAlignItems2) {
  LayoutAlignItems2["CENTER"] = "center";
})(LayoutAlignItems || (LayoutAlignItems = {}));
var CalloutDirections;
(function(CalloutDirections2) {
  CalloutDirections2["LEFT"] = "left";
  CalloutDirections2["RIGHT"] = "right";
})(CalloutDirections || (CalloutDirections = {}));
var Skeletons;
(function(Skeletons2) {
  Skeletons2["GRID"] = "grid";
  Skeletons2["VERT_OR_HORIZ"] = "vertOrHoriz";
  Skeletons2["PIE"] = "pie";
  Skeletons2["DONUT"] = "donut";
})(Skeletons || (Skeletons = {}));
var TextAnchor;
(function(TextAnchor2) {
  TextAnchor2["START"] = "start";
  TextAnchor2["MIDDLE"] = "middle";
  TextAnchor2["END"] = "end";
})(TextAnchor || (TextAnchor = {}));
var DominantBaseline;
(function(DominantBaseline2) {
  DominantBaseline2["BASELINE"] = "baseline";
  DominantBaseline2["MIDDLE"] = "middle";
  DominantBaseline2["HANGING"] = "hanging";
})(DominantBaseline || (DominantBaseline = {}));
var GaugeTypes;
(function(GaugeTypes2) {
  GaugeTypes2["SEMI"] = "semi";
  GaugeTypes2["FULL"] = "full";
})(GaugeTypes || (GaugeTypes = {}));
var ArrowDirections;
(function(ArrowDirections2) {
  ArrowDirections2["UP"] = "up";
  ArrowDirections2["DOWN"] = "down";
})(ArrowDirections || (ArrowDirections = {}));
var Statuses;
(function(Statuses2) {
  Statuses2["SUCCESS"] = "success";
  Statuses2["WARNING"] = "warning";
  Statuses2["DANGER"] = "danger";
})(Statuses || (Statuses = {}));
var TickRotations;
(function(TickRotations2) {
  TickRotations2["ALWAYS"] = "always";
  TickRotations2["AUTO"] = "auto";
  TickRotations2["NEVER"] = "never";
})(TickRotations || (TickRotations = {}));
var ChartTypes;
(function(ChartTypes2) {
  ChartTypes2["SCATTER"] = "scatter";
  ChartTypes2["LINE"] = "line";
  ChartTypes2["SIMPLE_BAR"] = "simple-bar";
  ChartTypes2["STACKED_BAR"] = "stacked-bar";
  ChartTypes2["GROUPED_BAR"] = "grouped-bar";
  ChartTypes2["AREA"] = "area";
  ChartTypes2["STACKED_AREA"] = "stacked-area";
})(ChartTypes || (ChartTypes = {}));
var ToolbarControlTypes;
(function(ToolbarControlTypes2) {
  ToolbarControlTypes2["EXPORT_CSV"] = "Export as CSV";
  ToolbarControlTypes2["EXPORT_PNG"] = "Export as PNG";
  ToolbarControlTypes2["EXPORT_JPG"] = "Export as JPG";
  ToolbarControlTypes2["ZOOM_IN"] = "Zoom in";
  ToolbarControlTypes2["ZOOM_OUT"] = "Zoom out";
  ToolbarControlTypes2["RESET_ZOOM"] = "Reset zoom";
  ToolbarControlTypes2["MAKE_FULLSCREEN"] = "Make fullscreen";
  ToolbarControlTypes2["SHOW_AS_DATATABLE"] = "Show as data-table";
  ToolbarControlTypes2["CUSTOM"] = "Custom";
})(ToolbarControlTypes || (ToolbarControlTypes = {}));
var AxisTitleOrientations;
(function(AxisTitleOrientations2) {
  AxisTitleOrientations2["LEFT"] = "left";
  AxisTitleOrientations2["RIGHT"] = "right";
})(AxisTitleOrientations || (AxisTitleOrientations = {}));
var LegendItemType;
(function(LegendItemType2) {
  LegendItemType2["CHECKBOX"] = "checkbox";
  LegendItemType2["RADIUS"] = "radius";
  LegendItemType2["AREA"] = "area";
  LegendItemType2["SIZE"] = "size";
  LegendItemType2["LINE"] = "line";
  LegendItemType2["QUARTILE"] = "quartile";
  LegendItemType2["ZOOM"] = "zoom";
})(LegendItemType || (LegendItemType = {}));
var ColorLegendType;
(function(ColorLegendType2) {
  ColorLegendType2["LINEAR"] = "linear";
  ColorLegendType2["QUANTIZE"] = "quantize";
})(ColorLegendType || (ColorLegendType = {}));
var DividerStatus;
(function(DividerStatus2) {
  DividerStatus2["ON"] = "on";
  DividerStatus2["AUTO"] = "auto";
  DividerStatus2["OFF"] = "off";
})(DividerStatus || (DividerStatus = {}));
var AxisFlavor;
(function(AxisFlavor2) {
  AxisFlavor2["DEFAULT"] = "default";
  AxisFlavor2["HOVERABLE"] = "hoverable";
})(AxisFlavor || (AxisFlavor = {}));

// node_modules/@carbon/charts/configuration.js
var configuration_exports = {};
__export(configuration_exports, {
  alluvial: () => alluvial,
  area: () => area,
  axis: () => axis,
  baseTooltip: () => baseTooltip,
  boxplot: () => boxplot,
  canvasZoomSettings: () => canvasZoomSettings,
  circlePack: () => circlePack,
  color: () => color,
  defaultLegendAdditionalItems: () => defaultLegendAdditionalItems,
  grid: () => grid,
  heatmap: () => heatmap,
  histogram: () => histogram,
  legend: () => legend,
  lines: () => lines,
  meter: () => meter,
  options: () => options,
  pie: () => pie,
  radar: () => radar,
  ruler: () => ruler,
  spacers: () => spacers,
  timeScale: () => timeScale,
  toolbar: () => toolbar,
  tooltips: () => tooltips,
  transitions: () => transitions,
  zoomBar: () => zoomBar
});

// node_modules/d3-ease/src/linear.js
var linear = (t) => +t;

// node_modules/d3-ease/src/cubic.js
function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}

// node_modules/d3-ease/src/poly.js
var exponent = 3;
var polyIn = function custom(e) {
  e = +e;
  function polyIn2(t) {
    return Math.pow(t, e);
  }
  polyIn2.exponent = custom;
  return polyIn2;
}(exponent);
var polyOut = function custom2(e) {
  e = +e;
  function polyOut2(t) {
    return 1 - Math.pow(1 - t, e);
  }
  polyOut2.exponent = custom2;
  return polyOut2;
}(exponent);
var polyInOut = function custom3(e) {
  e = +e;
  function polyInOut2(t) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
  }
  polyInOut2.exponent = custom3;
  return polyInOut2;
}(exponent);

// node_modules/d3-ease/src/sin.js
var pi = Math.PI;
var halfPi = pi / 2;

// node_modules/d3-ease/src/math.js
function tpmt(x3) {
  return (Math.pow(2, -10 * x3) - 9765625e-10) * 1.0009775171065494;
}

// node_modules/d3-ease/src/bounce.js
var b1 = 4 / 11;
var b2 = 6 / 11;
var b3 = 8 / 11;
var b4 = 3 / 4;
var b5 = 9 / 11;
var b6 = 10 / 11;
var b7 = 15 / 16;
var b8 = 21 / 22;
var b9 = 63 / 64;
var b0 = 1 / b1 / b1;

// node_modules/d3-ease/src/back.js
var overshoot = 1.70158;
var backIn = function custom4(s3) {
  s3 = +s3;
  function backIn2(t) {
    return (t = +t) * t * (s3 * (t - 1) + t);
  }
  backIn2.overshoot = custom4;
  return backIn2;
}(overshoot);
var backOut = function custom5(s3) {
  s3 = +s3;
  function backOut2(t) {
    return --t * t * ((t + 1) * s3 + t) + 1;
  }
  backOut2.overshoot = custom5;
  return backOut2;
}(overshoot);
var backInOut = function custom6(s3) {
  s3 = +s3;
  function backInOut2(t) {
    return ((t *= 2) < 1 ? t * t * ((s3 + 1) * t - s3) : (t -= 2) * t * ((s3 + 1) * t + s3) + 2) / 2;
  }
  backInOut2.overshoot = custom6;
  return backInOut2;
}(overshoot);

// node_modules/d3-ease/src/elastic.js
var tau = 2 * Math.PI;
var amplitude = 1;
var period = 0.3;
var elasticIn = function custom7(a3, p) {
  var s3 = Math.asin(1 / (a3 = Math.max(1, a3))) * (p /= tau);
  function elasticIn2(t) {
    return a3 * tpmt(- --t) * Math.sin((s3 - t) / p);
  }
  elasticIn2.amplitude = function(a4) {
    return custom7(a4, p * tau);
  };
  elasticIn2.period = function(p2) {
    return custom7(a3, p2);
  };
  return elasticIn2;
}(amplitude, period);
var elasticOut = function custom8(a3, p) {
  var s3 = Math.asin(1 / (a3 = Math.max(1, a3))) * (p /= tau);
  function elasticOut2(t) {
    return 1 - a3 * tpmt(t = +t) * Math.sin((t + s3) / p);
  }
  elasticOut2.amplitude = function(a4) {
    return custom8(a4, p * tau);
  };
  elasticOut2.period = function(p2) {
    return custom8(a3, p2);
  };
  return elasticOut2;
}(amplitude, period);
var elasticInOut = function custom9(a3, p) {
  var s3 = Math.asin(1 / (a3 = Math.max(1, a3))) * (p /= tau);
  function elasticInOut2(t) {
    return ((t = t * 2 - 1) < 0 ? a3 * tpmt(-t) * Math.sin((s3 - t) / p) : 2 - a3 * tpmt(t) * Math.sin((s3 + t) / p)) / 2;
  }
  elasticInOut2.amplitude = function(a4) {
    return custom9(a4, p * tau);
  };
  elasticInOut2.period = function(p2) {
    return custom9(a3, p2);
  };
  return elasticInOut2;
}(amplitude, period);

// node_modules/@carbon/charts/configuration-non-customizable.js
var _a;
var area = {
  opacity: {
    unselected: 0.05,
    selected: 0.4
  }
};
var axis = {
  ticks: {
    number: 7,
    rotateIfSmallerThan: 30,
    verticalSpaceRatio: 2.5,
    horizontalSpaceRatio: 3.5
  },
  ratio: {
    reference: "value",
    compareTo: "marker"
  },
  paddingRatio: 0.1,
  hover: {
    rectanglePadding: 4
  }
};
var canvasZoomSettings = {
  duration: 1e3,
  ease: cubicInOut,
  zoomLevel: 3
};
var circlePack = {
  circles: {
    fillOpacity: 0.3,
    hover: {
      stroke: "#FFF"
    }
  },
  padding: {
    mainGroup: 4,
    children: 2
  },
  hierarchyLevel: 2
};
var color = {
  pairingOptions: {
    "1-color": 4,
    "2-color": 5,
    "3-color": 5,
    "4-color": 3,
    "5-color": 2,
    "14-color": 1
  }
};
var boxplot = {
  circle: {
    radius: 4,
    opacity: {
      hovered: 1,
      default: 0.3
    }
  },
  box: {
    opacity: {
      hovered: 0.5,
      default: 0.3
    }
  },
  strokeWidth: {
    default: 1,
    thicker: 2
  }
};
var histogram = {
  defaultBins: 10
};
var legend = {
  items: {
    status: {
      ACTIVE: 1,
      DISABLED: 0
    },
    horizontalSpace: 12,
    verticalSpace: 24,
    textYOffset: 8,
    spaceAfter: 4
  },
  checkbox: {
    radius: 6.5
  },
  radius: {
    iconData: [
      { cx: 7, cy: 7, r: 6.5 },
      { cx: 7, cy: 10, r: 3.5 }
    ],
    fill: null,
    stroke: "#8c8c8c"
  },
  line: {
    yPosition: 6,
    width: 24,
    strokeWidth: 1.4,
    fill: null,
    stroke: "#999999"
  },
  area: {
    width: 24,
    height: 14,
    fill: "#6f6f6f",
    stroke: null
  },
  size: {
    iconData: [
      { width: 23, height: 12 },
      { width: 13, height: 6 }
    ],
    fill: null,
    stroke: "#8D8D8D"
  },
  quartile: {
    iconData: [
      { x: 0, y: 0, width: 24, height: 13 },
      { x: 11, y: 4, width: 1, height: 4 }
    ]
  },
  zoom: {
    iconData: [{ x: 0, y: 0, width: 12, height: 12 }],
    color: "#8D8D8D"
  },
  color: {
    barWidth: 300,
    barHeight: 8,
    axisYTranslation: 10
  }
};
var lines = {
  opacity: {
    unselected: 0.3,
    selected: 1
  },
  weight: {
    selected: 2,
    unselected: 1
  }
};
var meter = {
  statusBar: {
    paddingRight: 5
  },
  status: {
    indicatorSize: 16,
    paddingLeft: 15
  },
  total: {
    paddingLeft: 36,
    paddingRight: 24
  },
  height: {
    default: 8,
    proportional: 16
  },
  dividerWidth: 2
};
var pie = {
  radiusOffset: -15,
  innerRadius: 2,
  padAngle: 7e-3,
  hoverArc: {
    outerRadiusOffset: 3
  },
  xOffset: 30,
  yOffset: 20,
  yOffsetCallout: 10,
  callout: {
    minSliceDegree: 5,
    offsetX: 15,
    offsetY: 12,
    horizontalLineLength: 8,
    textMargin: 2
  }
};
var radar = {
  opacity: {
    unselected: 0.1,
    selected: 0.3
  },
  xLabelPadding: 10,
  yLabelPadding: 8,
  yTicksNumber: 4,
  minRange: 10,
  xAxisRectHeight: 50,
  dotsRadius: 5
};
var alluvial = {
  nodeWidth: 4,
  nodeHoveredWidth: 8,
  minNodePadding: 24,
  opacity: {
    unfocus: 0.3,
    default: 0.8,
    selected: 1
  }
};
var heatmap = {
  minCellDividerDimension: 16,
  chartPadding: 0.5
};
var spacers = {
  default: {
    size: 24
  }
};
var tooltips = {
  horizontalOffset: 10
};
var transitions = {
  default: {
    duration: 300
  },
  pie_slice_mouseover: {
    duration: 100
  },
  pie_chart_titles: {
    duration: 375
  },
  graph_element_mouseover_fill_update: {
    duration: 100
  },
  graph_element_mouseout_fill_update: {
    duration: 100
  }
};
var toolbar = {
  buttonSize: 32,
  iconSize: 20,
  height: 32,
  spacerHeight: 10,
  iconPadding: 6
};
var zoomBar = {
  height: (_a = {}, _a[ZoomBarTypes.GRAPH_VIEW] = 32, _a[ZoomBarTypes.SLIDER_VIEW] = 10, _a),
  spacerHeight: 8,
  handleWidth: 5,
  handleBarWidth: 1,
  handleBarHeight: 12
};
var defaultLegendAdditionalItems = [
  {
    type: LegendItemType.RADIUS,
    name: "Radius"
  },
  {
    type: LegendItemType.AREA,
    name: "Poor area"
  },
  {
    type: LegendItemType.AREA,
    name: "Satisfactory area"
  },
  {
    type: LegendItemType.AREA,
    name: "Great area"
  },
  {
    type: LegendItemType.QUARTILE,
    name: "Quartiles"
  }
];

// node_modules/lodash-es/_freeGlobal.js
var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
var freeGlobal_default = freeGlobal;

// node_modules/lodash-es/_root.js
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root = freeGlobal_default || freeSelf || Function("return this")();
var root_default = root;

// node_modules/lodash-es/_Symbol.js
var Symbol2 = root_default.Symbol;
var Symbol_default = Symbol2;

// node_modules/lodash-es/_getRawTag.js
var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
var nativeObjectToString = objectProto.toString;
var symToStringTag = Symbol_default ? Symbol_default.toStringTag : void 0;
function getRawTag(value2) {
  var isOwn = hasOwnProperty.call(value2, symToStringTag), tag = value2[symToStringTag];
  try {
    value2[symToStringTag] = void 0;
    var unmasked = true;
  } catch (e) {
  }
  var result2 = nativeObjectToString.call(value2);
  if (unmasked) {
    if (isOwn) {
      value2[symToStringTag] = tag;
    } else {
      delete value2[symToStringTag];
    }
  }
  return result2;
}
var getRawTag_default = getRawTag;

// node_modules/lodash-es/_objectToString.js
var objectProto2 = Object.prototype;
var nativeObjectToString2 = objectProto2.toString;
function objectToString(value2) {
  return nativeObjectToString2.call(value2);
}
var objectToString_default = objectToString;

// node_modules/lodash-es/_baseGetTag.js
var nullTag = "[object Null]";
var undefinedTag = "[object Undefined]";
var symToStringTag2 = Symbol_default ? Symbol_default.toStringTag : void 0;
function baseGetTag(value2) {
  if (value2 == null) {
    return value2 === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag2 && symToStringTag2 in Object(value2) ? getRawTag_default(value2) : objectToString_default(value2);
}
var baseGetTag_default = baseGetTag;

// node_modules/lodash-es/isObjectLike.js
function isObjectLike(value2) {
  return value2 != null && typeof value2 == "object";
}
var isObjectLike_default = isObjectLike;

// node_modules/lodash-es/isSymbol.js
var symbolTag = "[object Symbol]";
function isSymbol(value2) {
  return typeof value2 == "symbol" || isObjectLike_default(value2) && baseGetTag_default(value2) == symbolTag;
}
var isSymbol_default = isSymbol;

// node_modules/lodash-es/_baseToNumber.js
var NAN = 0 / 0;
function baseToNumber(value2) {
  if (typeof value2 == "number") {
    return value2;
  }
  if (isSymbol_default(value2)) {
    return NAN;
  }
  return +value2;
}
var baseToNumber_default = baseToNumber;

// node_modules/lodash-es/_arrayMap.js
function arrayMap(array4, iteratee2) {
  var index4 = -1, length = array4 == null ? 0 : array4.length, result2 = Array(length);
  while (++index4 < length) {
    result2[index4] = iteratee2(array4[index4], index4, array4);
  }
  return result2;
}
var arrayMap_default = arrayMap;

// node_modules/lodash-es/isArray.js
var isArray = Array.isArray;
var isArray_default = isArray;

// node_modules/lodash-es/_baseToString.js
var INFINITY = 1 / 0;
var symbolProto = Symbol_default ? Symbol_default.prototype : void 0;
var symbolToString = symbolProto ? symbolProto.toString : void 0;
function baseToString(value2) {
  if (typeof value2 == "string") {
    return value2;
  }
  if (isArray_default(value2)) {
    return arrayMap_default(value2, baseToString) + "";
  }
  if (isSymbol_default(value2)) {
    return symbolToString ? symbolToString.call(value2) : "";
  }
  var result2 = value2 + "";
  return result2 == "0" && 1 / value2 == -INFINITY ? "-0" : result2;
}
var baseToString_default = baseToString;

// node_modules/lodash-es/_createMathOperation.js
function createMathOperation(operator, defaultValue) {
  return function(value2, other) {
    var result2;
    if (value2 === void 0 && other === void 0) {
      return defaultValue;
    }
    if (value2 !== void 0) {
      result2 = value2;
    }
    if (other !== void 0) {
      if (result2 === void 0) {
        return other;
      }
      if (typeof value2 == "string" || typeof other == "string") {
        value2 = baseToString_default(value2);
        other = baseToString_default(other);
      } else {
        value2 = baseToNumber_default(value2);
        other = baseToNumber_default(other);
      }
      result2 = operator(value2, other);
    }
    return result2;
  };
}
var createMathOperation_default = createMathOperation;

// node_modules/lodash-es/add.js
var add = createMathOperation_default(function(augend, addend) {
  return augend + addend;
}, 0);
var add_default = add;

// node_modules/lodash-es/_trimmedEndIndex.js
var reWhitespace = /\s/;
function trimmedEndIndex(string) {
  var index4 = string.length;
  while (index4-- && reWhitespace.test(string.charAt(index4))) {
  }
  return index4;
}
var trimmedEndIndex_default = trimmedEndIndex;

// node_modules/lodash-es/_baseTrim.js
var reTrimStart = /^\s+/;
function baseTrim(string) {
  return string ? string.slice(0, trimmedEndIndex_default(string) + 1).replace(reTrimStart, "") : string;
}
var baseTrim_default = baseTrim;

// node_modules/lodash-es/isObject.js
function isObject(value2) {
  var type2 = typeof value2;
  return value2 != null && (type2 == "object" || type2 == "function");
}
var isObject_default = isObject;

// node_modules/lodash-es/toNumber.js
var NAN2 = 0 / 0;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber(value2) {
  if (typeof value2 == "number") {
    return value2;
  }
  if (isSymbol_default(value2)) {
    return NAN2;
  }
  if (isObject_default(value2)) {
    var other = typeof value2.valueOf == "function" ? value2.valueOf() : value2;
    value2 = isObject_default(other) ? other + "" : other;
  }
  if (typeof value2 != "string") {
    return value2 === 0 ? value2 : +value2;
  }
  value2 = baseTrim_default(value2);
  var isBinary = reIsBinary.test(value2);
  return isBinary || reIsOctal.test(value2) ? freeParseInt(value2.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value2) ? NAN2 : +value2;
}
var toNumber_default = toNumber;

// node_modules/lodash-es/toFinite.js
var INFINITY2 = 1 / 0;
var MAX_INTEGER = 17976931348623157e292;
function toFinite(value2) {
  if (!value2) {
    return value2 === 0 ? value2 : 0;
  }
  value2 = toNumber_default(value2);
  if (value2 === INFINITY2 || value2 === -INFINITY2) {
    var sign3 = value2 < 0 ? -1 : 1;
    return sign3 * MAX_INTEGER;
  }
  return value2 === value2 ? value2 : 0;
}
var toFinite_default = toFinite;

// node_modules/lodash-es/toInteger.js
function toInteger(value2) {
  var result2 = toFinite_default(value2), remainder = result2 % 1;
  return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
}
var toInteger_default = toInteger;

// node_modules/lodash-es/after.js
var FUNC_ERROR_TEXT = "Expected a function";
function after(n, func) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  n = toInteger_default(n);
  return function() {
    if (--n < 1) {
      return func.apply(this, arguments);
    }
  };
}
var after_default = after;

// node_modules/lodash-es/identity.js
function identity(value2) {
  return value2;
}
var identity_default = identity;

// node_modules/lodash-es/isFunction.js
var asyncTag = "[object AsyncFunction]";
var funcTag = "[object Function]";
var genTag = "[object GeneratorFunction]";
var proxyTag = "[object Proxy]";
function isFunction(value2) {
  if (!isObject_default(value2)) {
    return false;
  }
  var tag = baseGetTag_default(value2);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_default = isFunction;

// node_modules/lodash-es/_coreJsData.js
var coreJsData = root_default["__core-js_shared__"];
var coreJsData_default = coreJsData;

// node_modules/lodash-es/_isMasked.js
var maskSrcKey = function() {
  var uid = /[^.]+$/.exec(coreJsData_default && coreJsData_default.keys && coreJsData_default.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
}();
function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var isMasked_default = isMasked;

// node_modules/lodash-es/_toSource.js
var funcProto = Function.prototype;
var funcToString = funcProto.toString;
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {
    }
    try {
      return func + "";
    } catch (e) {
    }
  }
  return "";
}
var toSource_default = toSource;

// node_modules/lodash-es/_baseIsNative.js
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto2 = Function.prototype;
var objectProto3 = Object.prototype;
var funcToString2 = funcProto2.toString;
var hasOwnProperty2 = objectProto3.hasOwnProperty;
var reIsNative = RegExp("^" + funcToString2.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
function baseIsNative(value2) {
  if (!isObject_default(value2) || isMasked_default(value2)) {
    return false;
  }
  var pattern = isFunction_default(value2) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource_default(value2));
}
var baseIsNative_default = baseIsNative;

// node_modules/lodash-es/_getValue.js
function getValue(object, key) {
  return object == null ? void 0 : object[key];
}
var getValue_default = getValue;

// node_modules/lodash-es/_getNative.js
function getNative(object, key) {
  var value2 = getValue_default(object, key);
  return baseIsNative_default(value2) ? value2 : void 0;
}
var getNative_default = getNative;

// node_modules/lodash-es/_WeakMap.js
var WeakMap2 = getNative_default(root_default, "WeakMap");
var WeakMap_default = WeakMap2;

// node_modules/lodash-es/_metaMap.js
var metaMap = WeakMap_default && new WeakMap_default();
var metaMap_default = metaMap;

// node_modules/lodash-es/_baseSetData.js
var baseSetData = !metaMap_default ? identity_default : function(func, data) {
  metaMap_default.set(func, data);
  return func;
};
var baseSetData_default = baseSetData;

// node_modules/lodash-es/_baseCreate.js
var objectCreate = Object.create;
var baseCreate = function() {
  function object() {
  }
  return function(proto) {
    if (!isObject_default(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result2 = new object();
    object.prototype = void 0;
    return result2;
  };
}();
var baseCreate_default = baseCreate;

// node_modules/lodash-es/_createCtor.js
function createCtor(Ctor) {
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0:
        return new Ctor();
      case 1:
        return new Ctor(args[0]);
      case 2:
        return new Ctor(args[0], args[1]);
      case 3:
        return new Ctor(args[0], args[1], args[2]);
      case 4:
        return new Ctor(args[0], args[1], args[2], args[3]);
      case 5:
        return new Ctor(args[0], args[1], args[2], args[3], args[4]);
      case 6:
        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
      case 7:
        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
    }
    var thisBinding = baseCreate_default(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
    return isObject_default(result2) ? result2 : thisBinding;
  };
}
var createCtor_default = createCtor;

// node_modules/lodash-es/_createBind.js
var WRAP_BIND_FLAG = 1;
function createBind(func, bitmask, thisArg) {
  var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor_default(func);
  function wrapper() {
    var fn = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    return fn.apply(isBind ? thisArg : this, arguments);
  }
  return wrapper;
}
var createBind_default = createBind;

// node_modules/lodash-es/_apply.js
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var apply_default = apply;

// node_modules/lodash-es/_composeArgs.js
var nativeMax = Math.max;
function composeArgs(args, partials, holders, isCurried) {
  var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array(leftLength + rangeLength), isUncurried = !isCurried;
  while (++leftIndex < leftLength) {
    result2[leftIndex] = partials[leftIndex];
  }
  while (++argsIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result2[holders[argsIndex]] = args[argsIndex];
    }
  }
  while (rangeLength--) {
    result2[leftIndex++] = args[argsIndex++];
  }
  return result2;
}
var composeArgs_default = composeArgs;

// node_modules/lodash-es/_composeArgsRight.js
var nativeMax2 = Math.max;
function composeArgsRight(args, partials, holders, isCurried) {
  var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax2(argsLength - holdersLength, 0), result2 = Array(rangeLength + rightLength), isUncurried = !isCurried;
  while (++argsIndex < rangeLength) {
    result2[argsIndex] = args[argsIndex];
  }
  var offset = argsIndex;
  while (++rightIndex < rightLength) {
    result2[offset + rightIndex] = partials[rightIndex];
  }
  while (++holdersIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result2[offset + holders[holdersIndex]] = args[argsIndex++];
    }
  }
  return result2;
}
var composeArgsRight_default = composeArgsRight;

// node_modules/lodash-es/_countHolders.js
function countHolders(array4, placeholder) {
  var length = array4.length, result2 = 0;
  while (length--) {
    if (array4[length] === placeholder) {
      ++result2;
    }
  }
  return result2;
}
var countHolders_default = countHolders;

// node_modules/lodash-es/_baseLodash.js
function baseLodash() {
}
var baseLodash_default = baseLodash;

// node_modules/lodash-es/_LazyWrapper.js
var MAX_ARRAY_LENGTH = 4294967295;
function LazyWrapper(value2) {
  this.__wrapped__ = value2;
  this.__actions__ = [];
  this.__dir__ = 1;
  this.__filtered__ = false;
  this.__iteratees__ = [];
  this.__takeCount__ = MAX_ARRAY_LENGTH;
  this.__views__ = [];
}
LazyWrapper.prototype = baseCreate_default(baseLodash_default.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;
var LazyWrapper_default = LazyWrapper;

// node_modules/lodash-es/noop.js
function noop() {
}
var noop_default = noop;

// node_modules/lodash-es/_getData.js
var getData = !metaMap_default ? noop_default : function(func) {
  return metaMap_default.get(func);
};
var getData_default = getData;

// node_modules/lodash-es/_realNames.js
var realNames = {};
var realNames_default = realNames;

// node_modules/lodash-es/_getFuncName.js
var objectProto4 = Object.prototype;
var hasOwnProperty3 = objectProto4.hasOwnProperty;
function getFuncName(func) {
  var result2 = func.name + "", array4 = realNames_default[result2], length = hasOwnProperty3.call(realNames_default, result2) ? array4.length : 0;
  while (length--) {
    var data = array4[length], otherFunc = data.func;
    if (otherFunc == null || otherFunc == func) {
      return data.name;
    }
  }
  return result2;
}
var getFuncName_default = getFuncName;

// node_modules/lodash-es/_LodashWrapper.js
function LodashWrapper(value2, chainAll) {
  this.__wrapped__ = value2;
  this.__actions__ = [];
  this.__chain__ = !!chainAll;
  this.__index__ = 0;
  this.__values__ = void 0;
}
LodashWrapper.prototype = baseCreate_default(baseLodash_default.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;
var LodashWrapper_default = LodashWrapper;

// node_modules/lodash-es/_copyArray.js
function copyArray(source, array4) {
  var index4 = -1, length = source.length;
  array4 || (array4 = Array(length));
  while (++index4 < length) {
    array4[index4] = source[index4];
  }
  return array4;
}
var copyArray_default = copyArray;

// node_modules/lodash-es/_wrapperClone.js
function wrapperClone(wrapper) {
  if (wrapper instanceof LazyWrapper_default) {
    return wrapper.clone();
  }
  var result2 = new LodashWrapper_default(wrapper.__wrapped__, wrapper.__chain__);
  result2.__actions__ = copyArray_default(wrapper.__actions__);
  result2.__index__ = wrapper.__index__;
  result2.__values__ = wrapper.__values__;
  return result2;
}
var wrapperClone_default = wrapperClone;

// node_modules/lodash-es/wrapperLodash.js
var objectProto5 = Object.prototype;
var hasOwnProperty4 = objectProto5.hasOwnProperty;
function lodash(value2) {
  if (isObjectLike_default(value2) && !isArray_default(value2) && !(value2 instanceof LazyWrapper_default)) {
    if (value2 instanceof LodashWrapper_default) {
      return value2;
    }
    if (hasOwnProperty4.call(value2, "__wrapped__")) {
      return wrapperClone_default(value2);
    }
  }
  return new LodashWrapper_default(value2);
}
lodash.prototype = baseLodash_default.prototype;
lodash.prototype.constructor = lodash;
var wrapperLodash_default = lodash;

// node_modules/lodash-es/_isLaziable.js
function isLaziable(func) {
  var funcName = getFuncName_default(func), other = wrapperLodash_default[funcName];
  if (typeof other != "function" || !(funcName in LazyWrapper_default.prototype)) {
    return false;
  }
  if (func === other) {
    return true;
  }
  var data = getData_default(other);
  return !!data && func === data[0];
}
var isLaziable_default = isLaziable;

// node_modules/lodash-es/_shortOut.js
var HOT_COUNT = 800;
var HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut(func) {
  var count4 = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count4 >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count4 = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var shortOut_default = shortOut;

// node_modules/lodash-es/_setData.js
var setData = shortOut_default(baseSetData_default);
var setData_default = setData;

// node_modules/lodash-es/_getWrapDetails.js
var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/;
var reSplitDetails = /,? & /;
function getWrapDetails(source) {
  var match2 = source.match(reWrapDetails);
  return match2 ? match2[1].split(reSplitDetails) : [];
}
var getWrapDetails_default = getWrapDetails;

// node_modules/lodash-es/_insertWrapDetails.js
var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
function insertWrapDetails(source, details) {
  var length = details.length;
  if (!length) {
    return source;
  }
  var lastIndex = length - 1;
  details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
  details = details.join(length > 2 ? ", " : " ");
  return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
}
var insertWrapDetails_default = insertWrapDetails;

// node_modules/lodash-es/constant.js
function constant(value2) {
  return function() {
    return value2;
  };
}
var constant_default = constant;

// node_modules/lodash-es/_defineProperty.js
var defineProperty = function() {
  try {
    var func = getNative_default(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e) {
  }
}();
var defineProperty_default = defineProperty;

// node_modules/lodash-es/_baseSetToString.js
var baseSetToString = !defineProperty_default ? identity_default : function(func, string) {
  return defineProperty_default(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant_default(string),
    "writable": true
  });
};
var baseSetToString_default = baseSetToString;

// node_modules/lodash-es/_setToString.js
var setToString = shortOut_default(baseSetToString_default);
var setToString_default = setToString;

// node_modules/lodash-es/_arrayEach.js
function arrayEach(array4, iteratee2) {
  var index4 = -1, length = array4 == null ? 0 : array4.length;
  while (++index4 < length) {
    if (iteratee2(array4[index4], index4, array4) === false) {
      break;
    }
  }
  return array4;
}
var arrayEach_default = arrayEach;

// node_modules/lodash-es/_baseFindIndex.js
function baseFindIndex(array4, predicate, fromIndex, fromRight) {
  var length = array4.length, index4 = fromIndex + (fromRight ? 1 : -1);
  while (fromRight ? index4-- : ++index4 < length) {
    if (predicate(array4[index4], index4, array4)) {
      return index4;
    }
  }
  return -1;
}
var baseFindIndex_default = baseFindIndex;

// node_modules/lodash-es/_baseIsNaN.js
function baseIsNaN(value2) {
  return value2 !== value2;
}
var baseIsNaN_default = baseIsNaN;

// node_modules/lodash-es/_strictIndexOf.js
function strictIndexOf(array4, value2, fromIndex) {
  var index4 = fromIndex - 1, length = array4.length;
  while (++index4 < length) {
    if (array4[index4] === value2) {
      return index4;
    }
  }
  return -1;
}
var strictIndexOf_default = strictIndexOf;

// node_modules/lodash-es/_baseIndexOf.js
function baseIndexOf(array4, value2, fromIndex) {
  return value2 === value2 ? strictIndexOf_default(array4, value2, fromIndex) : baseFindIndex_default(array4, baseIsNaN_default, fromIndex);
}
var baseIndexOf_default = baseIndexOf;

// node_modules/lodash-es/_arrayIncludes.js
function arrayIncludes(array4, value2) {
  var length = array4 == null ? 0 : array4.length;
  return !!length && baseIndexOf_default(array4, value2, 0) > -1;
}
var arrayIncludes_default = arrayIncludes;

// node_modules/lodash-es/_updateWrapDetails.js
var WRAP_BIND_FLAG2 = 1;
var WRAP_BIND_KEY_FLAG = 2;
var WRAP_CURRY_FLAG = 8;
var WRAP_CURRY_RIGHT_FLAG = 16;
var WRAP_PARTIAL_FLAG = 32;
var WRAP_PARTIAL_RIGHT_FLAG = 64;
var WRAP_ARY_FLAG = 128;
var WRAP_REARG_FLAG = 256;
var WRAP_FLIP_FLAG = 512;
var wrapFlags = [
  ["ary", WRAP_ARY_FLAG],
  ["bind", WRAP_BIND_FLAG2],
  ["bindKey", WRAP_BIND_KEY_FLAG],
  ["curry", WRAP_CURRY_FLAG],
  ["curryRight", WRAP_CURRY_RIGHT_FLAG],
  ["flip", WRAP_FLIP_FLAG],
  ["partial", WRAP_PARTIAL_FLAG],
  ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
  ["rearg", WRAP_REARG_FLAG]
];
function updateWrapDetails(details, bitmask) {
  arrayEach_default(wrapFlags, function(pair) {
    var value2 = "_." + pair[0];
    if (bitmask & pair[1] && !arrayIncludes_default(details, value2)) {
      details.push(value2);
    }
  });
  return details.sort();
}
var updateWrapDetails_default = updateWrapDetails;

// node_modules/lodash-es/_setWrapToString.js
function setWrapToString(wrapper, reference, bitmask) {
  var source = reference + "";
  return setToString_default(wrapper, insertWrapDetails_default(source, updateWrapDetails_default(getWrapDetails_default(source), bitmask)));
}
var setWrapToString_default = setWrapToString;

// node_modules/lodash-es/_createRecurry.js
var WRAP_BIND_FLAG3 = 1;
var WRAP_BIND_KEY_FLAG2 = 2;
var WRAP_CURRY_BOUND_FLAG = 4;
var WRAP_CURRY_FLAG2 = 8;
var WRAP_PARTIAL_FLAG2 = 32;
var WRAP_PARTIAL_RIGHT_FLAG2 = 64;
function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
  var isCurry = bitmask & WRAP_CURRY_FLAG2, newHolders = isCurry ? holders : void 0, newHoldersRight = isCurry ? void 0 : holders, newPartials = isCurry ? partials : void 0, newPartialsRight = isCurry ? void 0 : partials;
  bitmask |= isCurry ? WRAP_PARTIAL_FLAG2 : WRAP_PARTIAL_RIGHT_FLAG2;
  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG2 : WRAP_PARTIAL_FLAG2);
  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
    bitmask &= ~(WRAP_BIND_FLAG3 | WRAP_BIND_KEY_FLAG2);
  }
  var newData = [
    func,
    bitmask,
    thisArg,
    newPartials,
    newHolders,
    newPartialsRight,
    newHoldersRight,
    argPos,
    ary2,
    arity
  ];
  var result2 = wrapFunc.apply(void 0, newData);
  if (isLaziable_default(func)) {
    setData_default(result2, newData);
  }
  result2.placeholder = placeholder;
  return setWrapToString_default(result2, func, bitmask);
}
var createRecurry_default = createRecurry;

// node_modules/lodash-es/_getHolder.js
function getHolder(func) {
  var object = func;
  return object.placeholder;
}
var getHolder_default = getHolder;

// node_modules/lodash-es/_isIndex.js
var MAX_SAFE_INTEGER = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(value2, length) {
  var type2 = typeof value2;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length && (type2 == "number" || type2 != "symbol" && reIsUint.test(value2)) && (value2 > -1 && value2 % 1 == 0 && value2 < length);
}
var isIndex_default = isIndex;

// node_modules/lodash-es/_reorder.js
var nativeMin = Math.min;
function reorder(array4, indexes3) {
  var arrLength = array4.length, length = nativeMin(indexes3.length, arrLength), oldArray = copyArray_default(array4);
  while (length--) {
    var index4 = indexes3[length];
    array4[length] = isIndex_default(index4, arrLength) ? oldArray[index4] : void 0;
  }
  return array4;
}
var reorder_default = reorder;

// node_modules/lodash-es/_replaceHolders.js
var PLACEHOLDER = "__lodash_placeholder__";
function replaceHolders(array4, placeholder) {
  var index4 = -1, length = array4.length, resIndex = 0, result2 = [];
  while (++index4 < length) {
    var value2 = array4[index4];
    if (value2 === placeholder || value2 === PLACEHOLDER) {
      array4[index4] = PLACEHOLDER;
      result2[resIndex++] = index4;
    }
  }
  return result2;
}
var replaceHolders_default = replaceHolders;

// node_modules/lodash-es/_createHybrid.js
var WRAP_BIND_FLAG4 = 1;
var WRAP_BIND_KEY_FLAG3 = 2;
var WRAP_CURRY_FLAG3 = 8;
var WRAP_CURRY_RIGHT_FLAG2 = 16;
var WRAP_ARY_FLAG2 = 128;
var WRAP_FLIP_FLAG2 = 512;
function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
  var isAry = bitmask & WRAP_ARY_FLAG2, isBind = bitmask & WRAP_BIND_FLAG4, isBindKey = bitmask & WRAP_BIND_KEY_FLAG3, isCurried = bitmask & (WRAP_CURRY_FLAG3 | WRAP_CURRY_RIGHT_FLAG2), isFlip = bitmask & WRAP_FLIP_FLAG2, Ctor = isBindKey ? void 0 : createCtor_default(func);
  function wrapper() {
    var length = arguments.length, args = Array(length), index4 = length;
    while (index4--) {
      args[index4] = arguments[index4];
    }
    if (isCurried) {
      var placeholder = getHolder_default(wrapper), holdersCount = countHolders_default(args, placeholder);
    }
    if (partials) {
      args = composeArgs_default(args, partials, holders, isCurried);
    }
    if (partialsRight) {
      args = composeArgsRight_default(args, partialsRight, holdersRight, isCurried);
    }
    length -= holdersCount;
    if (isCurried && length < arity) {
      var newHolders = replaceHolders_default(args, placeholder);
      return createRecurry_default(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary2, arity - length);
    }
    var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
    length = args.length;
    if (argPos) {
      args = reorder_default(args, argPos);
    } else if (isFlip && length > 1) {
      args.reverse();
    }
    if (isAry && ary2 < length) {
      args.length = ary2;
    }
    if (this && this !== root_default && this instanceof wrapper) {
      fn = Ctor || createCtor_default(fn);
    }
    return fn.apply(thisBinding, args);
  }
  return wrapper;
}
var createHybrid_default = createHybrid;

// node_modules/lodash-es/_createCurry.js
function createCurry(func, bitmask, arity) {
  var Ctor = createCtor_default(func);
  function wrapper() {
    var length = arguments.length, args = Array(length), index4 = length, placeholder = getHolder_default(wrapper);
    while (index4--) {
      args[index4] = arguments[index4];
    }
    var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders_default(args, placeholder);
    length -= holders.length;
    if (length < arity) {
      return createRecurry_default(func, bitmask, createHybrid_default, wrapper.placeholder, void 0, args, holders, void 0, void 0, arity - length);
    }
    var fn = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    return apply_default(fn, this, args);
  }
  return wrapper;
}
var createCurry_default = createCurry;

// node_modules/lodash-es/_createPartial.js
var WRAP_BIND_FLAG5 = 1;
function createPartial(func, bitmask, thisArg, partials) {
  var isBind = bitmask & WRAP_BIND_FLAG5, Ctor = createCtor_default(func);
  function wrapper() {
    var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array(leftLength + argsLength), fn = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    while (++leftIndex < leftLength) {
      args[leftIndex] = partials[leftIndex];
    }
    while (argsLength--) {
      args[leftIndex++] = arguments[++argsIndex];
    }
    return apply_default(fn, isBind ? thisArg : this, args);
  }
  return wrapper;
}
var createPartial_default = createPartial;

// node_modules/lodash-es/_mergeData.js
var PLACEHOLDER2 = "__lodash_placeholder__";
var WRAP_BIND_FLAG6 = 1;
var WRAP_BIND_KEY_FLAG4 = 2;
var WRAP_CURRY_BOUND_FLAG2 = 4;
var WRAP_CURRY_FLAG4 = 8;
var WRAP_ARY_FLAG3 = 128;
var WRAP_REARG_FLAG2 = 256;
var nativeMin2 = Math.min;
function mergeData(data, source) {
  var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG6 | WRAP_BIND_KEY_FLAG4 | WRAP_ARY_FLAG3);
  var isCombo = srcBitmask == WRAP_ARY_FLAG3 && bitmask == WRAP_CURRY_FLAG4 || srcBitmask == WRAP_ARY_FLAG3 && bitmask == WRAP_REARG_FLAG2 && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG3 | WRAP_REARG_FLAG2) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG4;
  if (!(isCommon || isCombo)) {
    return data;
  }
  if (srcBitmask & WRAP_BIND_FLAG6) {
    data[2] = source[2];
    newBitmask |= bitmask & WRAP_BIND_FLAG6 ? 0 : WRAP_CURRY_BOUND_FLAG2;
  }
  var value2 = source[3];
  if (value2) {
    var partials = data[3];
    data[3] = partials ? composeArgs_default(partials, value2, source[4]) : value2;
    data[4] = partials ? replaceHolders_default(data[3], PLACEHOLDER2) : source[4];
  }
  value2 = source[5];
  if (value2) {
    partials = data[5];
    data[5] = partials ? composeArgsRight_default(partials, value2, source[6]) : value2;
    data[6] = partials ? replaceHolders_default(data[5], PLACEHOLDER2) : source[6];
  }
  value2 = source[7];
  if (value2) {
    data[7] = value2;
  }
  if (srcBitmask & WRAP_ARY_FLAG3) {
    data[8] = data[8] == null ? source[8] : nativeMin2(data[8], source[8]);
  }
  if (data[9] == null) {
    data[9] = source[9];
  }
  data[0] = source[0];
  data[1] = newBitmask;
  return data;
}
var mergeData_default = mergeData;

// node_modules/lodash-es/_createWrap.js
var FUNC_ERROR_TEXT2 = "Expected a function";
var WRAP_BIND_FLAG7 = 1;
var WRAP_BIND_KEY_FLAG5 = 2;
var WRAP_CURRY_FLAG5 = 8;
var WRAP_CURRY_RIGHT_FLAG3 = 16;
var WRAP_PARTIAL_FLAG3 = 32;
var WRAP_PARTIAL_RIGHT_FLAG3 = 64;
var nativeMax3 = Math.max;
function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG5;
  if (!isBindKey && typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT2);
  }
  var length = partials ? partials.length : 0;
  if (!length) {
    bitmask &= ~(WRAP_PARTIAL_FLAG3 | WRAP_PARTIAL_RIGHT_FLAG3);
    partials = holders = void 0;
  }
  ary2 = ary2 === void 0 ? ary2 : nativeMax3(toInteger_default(ary2), 0);
  arity = arity === void 0 ? arity : toInteger_default(arity);
  length -= holders ? holders.length : 0;
  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG3) {
    var partialsRight = partials, holdersRight = holders;
    partials = holders = void 0;
  }
  var data = isBindKey ? void 0 : getData_default(func);
  var newData = [
    func,
    bitmask,
    thisArg,
    partials,
    holders,
    partialsRight,
    holdersRight,
    argPos,
    ary2,
    arity
  ];
  if (data) {
    mergeData_default(newData, data);
  }
  func = newData[0];
  bitmask = newData[1];
  thisArg = newData[2];
  partials = newData[3];
  holders = newData[4];
  arity = newData[9] = newData[9] === void 0 ? isBindKey ? 0 : func.length : nativeMax3(newData[9] - length, 0);
  if (!arity && bitmask & (WRAP_CURRY_FLAG5 | WRAP_CURRY_RIGHT_FLAG3)) {
    bitmask &= ~(WRAP_CURRY_FLAG5 | WRAP_CURRY_RIGHT_FLAG3);
  }
  if (!bitmask || bitmask == WRAP_BIND_FLAG7) {
    var result2 = createBind_default(func, bitmask, thisArg);
  } else if (bitmask == WRAP_CURRY_FLAG5 || bitmask == WRAP_CURRY_RIGHT_FLAG3) {
    result2 = createCurry_default(func, bitmask, arity);
  } else if ((bitmask == WRAP_PARTIAL_FLAG3 || bitmask == (WRAP_BIND_FLAG7 | WRAP_PARTIAL_FLAG3)) && !holders.length) {
    result2 = createPartial_default(func, bitmask, thisArg, partials);
  } else {
    result2 = createHybrid_default.apply(void 0, newData);
  }
  var setter = data ? baseSetData_default : setData_default;
  return setWrapToString_default(setter(result2, newData), func, bitmask);
}
var createWrap_default = createWrap;

// node_modules/lodash-es/ary.js
var WRAP_ARY_FLAG4 = 128;
function ary(func, n, guard) {
  n = guard ? void 0 : n;
  n = func && n == null ? func.length : n;
  return createWrap_default(func, WRAP_ARY_FLAG4, void 0, void 0, void 0, void 0, n);
}
var ary_default = ary;

// node_modules/lodash-es/_baseAssignValue.js
function baseAssignValue(object, key, value2) {
  if (key == "__proto__" && defineProperty_default) {
    defineProperty_default(object, key, {
      "configurable": true,
      "enumerable": true,
      "value": value2,
      "writable": true
    });
  } else {
    object[key] = value2;
  }
}
var baseAssignValue_default = baseAssignValue;

// node_modules/lodash-es/eq.js
function eq(value2, other) {
  return value2 === other || value2 !== value2 && other !== other;
}
var eq_default = eq;

// node_modules/lodash-es/_assignValue.js
var objectProto6 = Object.prototype;
var hasOwnProperty5 = objectProto6.hasOwnProperty;
function assignValue(object, key, value2) {
  var objValue = object[key];
  if (!(hasOwnProperty5.call(object, key) && eq_default(objValue, value2)) || value2 === void 0 && !(key in object)) {
    baseAssignValue_default(object, key, value2);
  }
}
var assignValue_default = assignValue;

// node_modules/lodash-es/_copyObject.js
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});
  var index4 = -1, length = props.length;
  while (++index4 < length) {
    var key = props[index4];
    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
    if (newValue === void 0) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue_default(object, key, newValue);
    } else {
      assignValue_default(object, key, newValue);
    }
  }
  return object;
}
var copyObject_default = copyObject;

// node_modules/lodash-es/_overRest.js
var nativeMax4 = Math.max;
function overRest(func, start2, transform2) {
  start2 = nativeMax4(start2 === void 0 ? func.length - 1 : start2, 0);
  return function() {
    var args = arguments, index4 = -1, length = nativeMax4(args.length - start2, 0), array4 = Array(length);
    while (++index4 < length) {
      array4[index4] = args[start2 + index4];
    }
    index4 = -1;
    var otherArgs = Array(start2 + 1);
    while (++index4 < start2) {
      otherArgs[index4] = args[index4];
    }
    otherArgs[start2] = transform2(array4);
    return apply_default(func, this, otherArgs);
  };
}
var overRest_default = overRest;

// node_modules/lodash-es/_baseRest.js
function baseRest(func, start2) {
  return setToString_default(overRest_default(func, start2, identity_default), func + "");
}
var baseRest_default = baseRest;

// node_modules/lodash-es/isLength.js
var MAX_SAFE_INTEGER2 = 9007199254740991;
function isLength(value2) {
  return typeof value2 == "number" && value2 > -1 && value2 % 1 == 0 && value2 <= MAX_SAFE_INTEGER2;
}
var isLength_default = isLength;

// node_modules/lodash-es/isArrayLike.js
function isArrayLike(value2) {
  return value2 != null && isLength_default(value2.length) && !isFunction_default(value2);
}
var isArrayLike_default = isArrayLike;

// node_modules/lodash-es/_isIterateeCall.js
function isIterateeCall(value2, index4, object) {
  if (!isObject_default(object)) {
    return false;
  }
  var type2 = typeof index4;
  if (type2 == "number" ? isArrayLike_default(object) && isIndex_default(index4, object.length) : type2 == "string" && index4 in object) {
    return eq_default(object[index4], value2);
  }
  return false;
}
var isIterateeCall_default = isIterateeCall;

// node_modules/lodash-es/_createAssigner.js
function createAssigner(assigner) {
  return baseRest_default(function(object, sources) {
    var index4 = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
    customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
    if (guard && isIterateeCall_default(sources[0], sources[1], guard)) {
      customizer = length < 3 ? void 0 : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index4 < length) {
      var source = sources[index4];
      if (source) {
        assigner(object, source, index4, customizer);
      }
    }
    return object;
  });
}
var createAssigner_default = createAssigner;

// node_modules/lodash-es/_isPrototype.js
var objectProto7 = Object.prototype;
function isPrototype(value2) {
  var Ctor = value2 && value2.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto7;
  return value2 === proto;
}
var isPrototype_default = isPrototype;

// node_modules/lodash-es/_baseTimes.js
function baseTimes(n, iteratee2) {
  var index4 = -1, result2 = Array(n);
  while (++index4 < n) {
    result2[index4] = iteratee2(index4);
  }
  return result2;
}
var baseTimes_default = baseTimes;

// node_modules/lodash-es/_baseIsArguments.js
var argsTag = "[object Arguments]";
function baseIsArguments(value2) {
  return isObjectLike_default(value2) && baseGetTag_default(value2) == argsTag;
}
var baseIsArguments_default = baseIsArguments;

// node_modules/lodash-es/isArguments.js
var objectProto8 = Object.prototype;
var hasOwnProperty6 = objectProto8.hasOwnProperty;
var propertyIsEnumerable = objectProto8.propertyIsEnumerable;
var isArguments = baseIsArguments_default(function() {
  return arguments;
}()) ? baseIsArguments_default : function(value2) {
  return isObjectLike_default(value2) && hasOwnProperty6.call(value2, "callee") && !propertyIsEnumerable.call(value2, "callee");
};
var isArguments_default = isArguments;

// node_modules/lodash-es/stubFalse.js
function stubFalse() {
  return false;
}
var stubFalse_default = stubFalse;

// node_modules/lodash-es/isBuffer.js
var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
var moduleExports = freeModule && freeModule.exports === freeExports;
var Buffer = moduleExports ? root_default.Buffer : void 0;
var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
var isBuffer = nativeIsBuffer || stubFalse_default;
var isBuffer_default = isBuffer;

// node_modules/lodash-es/_baseIsTypedArray.js
var argsTag2 = "[object Arguments]";
var arrayTag = "[object Array]";
var boolTag = "[object Boolean]";
var dateTag = "[object Date]";
var errorTag = "[object Error]";
var funcTag2 = "[object Function]";
var mapTag = "[object Map]";
var numberTag = "[object Number]";
var objectTag = "[object Object]";
var regexpTag = "[object RegExp]";
var setTag = "[object Set]";
var stringTag = "[object String]";
var weakMapTag = "[object WeakMap]";
var arrayBufferTag = "[object ArrayBuffer]";
var dataViewTag = "[object DataView]";
var float32Tag = "[object Float32Array]";
var float64Tag = "[object Float64Array]";
var int8Tag = "[object Int8Array]";
var int16Tag = "[object Int16Array]";
var int32Tag = "[object Int32Array]";
var uint8Tag = "[object Uint8Array]";
var uint8ClampedTag = "[object Uint8ClampedArray]";
var uint16Tag = "[object Uint16Array]";
var uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag2] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag2] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
function baseIsTypedArray(value2) {
  return isObjectLike_default(value2) && isLength_default(value2.length) && !!typedArrayTags[baseGetTag_default(value2)];
}
var baseIsTypedArray_default = baseIsTypedArray;

// node_modules/lodash-es/_baseUnary.js
function baseUnary(func) {
  return function(value2) {
    return func(value2);
  };
}
var baseUnary_default = baseUnary;

// node_modules/lodash-es/_nodeUtil.js
var freeExports2 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule2 = freeExports2 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
var freeProcess = moduleExports2 && freeGlobal_default.process;
var nodeUtil = function() {
  try {
    var types = freeModule2 && freeModule2.require && freeModule2.require("util").types;
    if (types) {
      return types;
    }
    return freeProcess && freeProcess.binding && freeProcess.binding("util");
  } catch (e) {
  }
}();
var nodeUtil_default = nodeUtil;

// node_modules/lodash-es/isTypedArray.js
var nodeIsTypedArray = nodeUtil_default && nodeUtil_default.isTypedArray;
var isTypedArray = nodeIsTypedArray ? baseUnary_default(nodeIsTypedArray) : baseIsTypedArray_default;
var isTypedArray_default = isTypedArray;

// node_modules/lodash-es/_arrayLikeKeys.js
var objectProto9 = Object.prototype;
var hasOwnProperty7 = objectProto9.hasOwnProperty;
function arrayLikeKeys(value2, inherited) {
  var isArr = isArray_default(value2), isArg = !isArr && isArguments_default(value2), isBuff = !isArr && !isArg && isBuffer_default(value2), isType = !isArr && !isArg && !isBuff && isTypedArray_default(value2), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes_default(value2.length, String) : [], length = result2.length;
  for (var key in value2) {
    if ((inherited || hasOwnProperty7.call(value2, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex_default(key, length)))) {
      result2.push(key);
    }
  }
  return result2;
}
var arrayLikeKeys_default = arrayLikeKeys;

// node_modules/lodash-es/_overArg.js
function overArg(func, transform2) {
  return function(arg) {
    return func(transform2(arg));
  };
}
var overArg_default = overArg;

// node_modules/lodash-es/_nativeKeys.js
var nativeKeys = overArg_default(Object.keys, Object);
var nativeKeys_default = nativeKeys;

// node_modules/lodash-es/_baseKeys.js
var objectProto10 = Object.prototype;
var hasOwnProperty8 = objectProto10.hasOwnProperty;
function baseKeys(object) {
  if (!isPrototype_default(object)) {
    return nativeKeys_default(object);
  }
  var result2 = [];
  for (var key in Object(object)) {
    if (hasOwnProperty8.call(object, key) && key != "constructor") {
      result2.push(key);
    }
  }
  return result2;
}
var baseKeys_default = baseKeys;

// node_modules/lodash-es/keys.js
function keys(object) {
  return isArrayLike_default(object) ? arrayLikeKeys_default(object) : baseKeys_default(object);
}
var keys_default = keys;

// node_modules/lodash-es/assign.js
var objectProto11 = Object.prototype;
var hasOwnProperty9 = objectProto11.hasOwnProperty;
var assign = createAssigner_default(function(object, source) {
  if (isPrototype_default(source) || isArrayLike_default(source)) {
    copyObject_default(source, keys_default(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty9.call(source, key)) {
      assignValue_default(object, key, source[key]);
    }
  }
});
var assign_default = assign;

// node_modules/lodash-es/_nativeKeysIn.js
function nativeKeysIn(object) {
  var result2 = [];
  if (object != null) {
    for (var key in Object(object)) {
      result2.push(key);
    }
  }
  return result2;
}
var nativeKeysIn_default = nativeKeysIn;

// node_modules/lodash-es/_baseKeysIn.js
var objectProto12 = Object.prototype;
var hasOwnProperty10 = objectProto12.hasOwnProperty;
function baseKeysIn(object) {
  if (!isObject_default(object)) {
    return nativeKeysIn_default(object);
  }
  var isProto = isPrototype_default(object), result2 = [];
  for (var key in object) {
    if (!(key == "constructor" && (isProto || !hasOwnProperty10.call(object, key)))) {
      result2.push(key);
    }
  }
  return result2;
}
var baseKeysIn_default = baseKeysIn;

// node_modules/lodash-es/keysIn.js
function keysIn(object) {
  return isArrayLike_default(object) ? arrayLikeKeys_default(object, true) : baseKeysIn_default(object);
}
var keysIn_default = keysIn;

// node_modules/lodash-es/assignIn.js
var assignIn = createAssigner_default(function(object, source) {
  copyObject_default(source, keysIn_default(source), object);
});
var assignIn_default = assignIn;

// node_modules/lodash-es/assignInWith.js
var assignInWith = createAssigner_default(function(object, source, srcIndex, customizer) {
  copyObject_default(source, keysIn_default(source), object, customizer);
});
var assignInWith_default = assignInWith;

// node_modules/lodash-es/assignWith.js
var assignWith = createAssigner_default(function(object, source, srcIndex, customizer) {
  copyObject_default(source, keys_default(source), object, customizer);
});
var assignWith_default = assignWith;

// node_modules/lodash-es/_isKey.js
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var reIsPlainProp = /^\w*$/;
function isKey(value2, object) {
  if (isArray_default(value2)) {
    return false;
  }
  var type2 = typeof value2;
  if (type2 == "number" || type2 == "symbol" || type2 == "boolean" || value2 == null || isSymbol_default(value2)) {
    return true;
  }
  return reIsPlainProp.test(value2) || !reIsDeepProp.test(value2) || object != null && value2 in Object(object);
}
var isKey_default = isKey;

// node_modules/lodash-es/_nativeCreate.js
var nativeCreate = getNative_default(Object, "create");
var nativeCreate_default = nativeCreate;

// node_modules/lodash-es/_hashClear.js
function hashClear() {
  this.__data__ = nativeCreate_default ? nativeCreate_default(null) : {};
  this.size = 0;
}
var hashClear_default = hashClear;

// node_modules/lodash-es/_hashDelete.js
function hashDelete(key) {
  var result2 = this.has(key) && delete this.__data__[key];
  this.size -= result2 ? 1 : 0;
  return result2;
}
var hashDelete_default = hashDelete;

// node_modules/lodash-es/_hashGet.js
var HASH_UNDEFINED = "__lodash_hash_undefined__";
var objectProto13 = Object.prototype;
var hasOwnProperty11 = objectProto13.hasOwnProperty;
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate_default) {
    var result2 = data[key];
    return result2 === HASH_UNDEFINED ? void 0 : result2;
  }
  return hasOwnProperty11.call(data, key) ? data[key] : void 0;
}
var hashGet_default = hashGet;

// node_modules/lodash-es/_hashHas.js
var objectProto14 = Object.prototype;
var hasOwnProperty12 = objectProto14.hasOwnProperty;
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate_default ? data[key] !== void 0 : hasOwnProperty12.call(data, key);
}
var hashHas_default = hashHas;

// node_modules/lodash-es/_hashSet.js
var HASH_UNDEFINED2 = "__lodash_hash_undefined__";
function hashSet(key, value2) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate_default && value2 === void 0 ? HASH_UNDEFINED2 : value2;
  return this;
}
var hashSet_default = hashSet;

// node_modules/lodash-es/_Hash.js
function Hash(entries) {
  var index4 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index4 < length) {
    var entry = entries[index4];
    this.set(entry[0], entry[1]);
  }
}
Hash.prototype.clear = hashClear_default;
Hash.prototype["delete"] = hashDelete_default;
Hash.prototype.get = hashGet_default;
Hash.prototype.has = hashHas_default;
Hash.prototype.set = hashSet_default;
var Hash_default = Hash;

// node_modules/lodash-es/_listCacheClear.js
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}
var listCacheClear_default = listCacheClear;

// node_modules/lodash-es/_assocIndexOf.js
function assocIndexOf(array4, key) {
  var length = array4.length;
  while (length--) {
    if (eq_default(array4[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var assocIndexOf_default = assocIndexOf;

// node_modules/lodash-es/_listCacheDelete.js
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete(key) {
  var data = this.__data__, index4 = assocIndexOf_default(data, key);
  if (index4 < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index4 == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index4, 1);
  }
  --this.size;
  return true;
}
var listCacheDelete_default = listCacheDelete;

// node_modules/lodash-es/_listCacheGet.js
function listCacheGet(key) {
  var data = this.__data__, index4 = assocIndexOf_default(data, key);
  return index4 < 0 ? void 0 : data[index4][1];
}
var listCacheGet_default = listCacheGet;

// node_modules/lodash-es/_listCacheHas.js
function listCacheHas(key) {
  return assocIndexOf_default(this.__data__, key) > -1;
}
var listCacheHas_default = listCacheHas;

// node_modules/lodash-es/_listCacheSet.js
function listCacheSet(key, value2) {
  var data = this.__data__, index4 = assocIndexOf_default(data, key);
  if (index4 < 0) {
    ++this.size;
    data.push([key, value2]);
  } else {
    data[index4][1] = value2;
  }
  return this;
}
var listCacheSet_default = listCacheSet;

// node_modules/lodash-es/_ListCache.js
function ListCache(entries) {
  var index4 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index4 < length) {
    var entry = entries[index4];
    this.set(entry[0], entry[1]);
  }
}
ListCache.prototype.clear = listCacheClear_default;
ListCache.prototype["delete"] = listCacheDelete_default;
ListCache.prototype.get = listCacheGet_default;
ListCache.prototype.has = listCacheHas_default;
ListCache.prototype.set = listCacheSet_default;
var ListCache_default = ListCache;

// node_modules/lodash-es/_Map.js
var Map2 = getNative_default(root_default, "Map");
var Map_default = Map2;

// node_modules/lodash-es/_mapCacheClear.js
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash_default(),
    "map": new (Map_default || ListCache_default)(),
    "string": new Hash_default()
  };
}
var mapCacheClear_default = mapCacheClear;

// node_modules/lodash-es/_isKeyable.js
function isKeyable(value2) {
  var type2 = typeof value2;
  return type2 == "string" || type2 == "number" || type2 == "symbol" || type2 == "boolean" ? value2 !== "__proto__" : value2 === null;
}
var isKeyable_default = isKeyable;

// node_modules/lodash-es/_getMapData.js
function getMapData(map7, key) {
  var data = map7.__data__;
  return isKeyable_default(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
}
var getMapData_default = getMapData;

// node_modules/lodash-es/_mapCacheDelete.js
function mapCacheDelete(key) {
  var result2 = getMapData_default(this, key)["delete"](key);
  this.size -= result2 ? 1 : 0;
  return result2;
}
var mapCacheDelete_default = mapCacheDelete;

// node_modules/lodash-es/_mapCacheGet.js
function mapCacheGet(key) {
  return getMapData_default(this, key).get(key);
}
var mapCacheGet_default = mapCacheGet;

// node_modules/lodash-es/_mapCacheHas.js
function mapCacheHas(key) {
  return getMapData_default(this, key).has(key);
}
var mapCacheHas_default = mapCacheHas;

// node_modules/lodash-es/_mapCacheSet.js
function mapCacheSet(key, value2) {
  var data = getMapData_default(this, key), size2 = data.size;
  data.set(key, value2);
  this.size += data.size == size2 ? 0 : 1;
  return this;
}
var mapCacheSet_default = mapCacheSet;

// node_modules/lodash-es/_MapCache.js
function MapCache(entries) {
  var index4 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index4 < length) {
    var entry = entries[index4];
    this.set(entry[0], entry[1]);
  }
}
MapCache.prototype.clear = mapCacheClear_default;
MapCache.prototype["delete"] = mapCacheDelete_default;
MapCache.prototype.get = mapCacheGet_default;
MapCache.prototype.has = mapCacheHas_default;
MapCache.prototype.set = mapCacheSet_default;
var MapCache_default = MapCache;

// node_modules/lodash-es/memoize.js
var FUNC_ERROR_TEXT3 = "Expected a function";
function memoize(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT3);
  }
  var memoized = function() {
    var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
    if (cache.has(key)) {
      return cache.get(key);
    }
    var result2 = func.apply(this, args);
    memoized.cache = cache.set(key, result2) || cache;
    return result2;
  };
  memoized.cache = new (memoize.Cache || MapCache_default)();
  return memoized;
}
memoize.Cache = MapCache_default;
var memoize_default = memoize;

// node_modules/lodash-es/_memoizeCapped.js
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped(func) {
  var result2 = memoize_default(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });
  var cache = result2.cache;
  return result2;
}
var memoizeCapped_default = memoizeCapped;

// node_modules/lodash-es/_stringToPath.js
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath = memoizeCapped_default(function(string) {
  var result2 = [];
  if (string.charCodeAt(0) === 46) {
    result2.push("");
  }
  string.replace(rePropName, function(match2, number5, quote, subString) {
    result2.push(quote ? subString.replace(reEscapeChar, "$1") : number5 || match2);
  });
  return result2;
});
var stringToPath_default = stringToPath;

// node_modules/lodash-es/toString.js
function toString(value2) {
  return value2 == null ? "" : baseToString_default(value2);
}
var toString_default = toString;

// node_modules/lodash-es/_castPath.js
function castPath(value2, object) {
  if (isArray_default(value2)) {
    return value2;
  }
  return isKey_default(value2, object) ? [value2] : stringToPath_default(toString_default(value2));
}
var castPath_default = castPath;

// node_modules/lodash-es/_toKey.js
var INFINITY3 = 1 / 0;
function toKey(value2) {
  if (typeof value2 == "string" || isSymbol_default(value2)) {
    return value2;
  }
  var result2 = value2 + "";
  return result2 == "0" && 1 / value2 == -INFINITY3 ? "-0" : result2;
}
var toKey_default = toKey;

// node_modules/lodash-es/_baseGet.js
function baseGet(object, path3) {
  path3 = castPath_default(path3, object);
  var index4 = 0, length = path3.length;
  while (object != null && index4 < length) {
    object = object[toKey_default(path3[index4++])];
  }
  return index4 && index4 == length ? object : void 0;
}
var baseGet_default = baseGet;

// node_modules/lodash-es/get.js
function get(object, path3, defaultValue) {
  var result2 = object == null ? void 0 : baseGet_default(object, path3);
  return result2 === void 0 ? defaultValue : result2;
}
var get_default = get;

// node_modules/lodash-es/_baseAt.js
function baseAt(object, paths) {
  var index4 = -1, length = paths.length, result2 = Array(length), skip = object == null;
  while (++index4 < length) {
    result2[index4] = skip ? void 0 : get_default(object, paths[index4]);
  }
  return result2;
}
var baseAt_default = baseAt;

// node_modules/lodash-es/_arrayPush.js
function arrayPush(array4, values2) {
  var index4 = -1, length = values2.length, offset = array4.length;
  while (++index4 < length) {
    array4[offset + index4] = values2[index4];
  }
  return array4;
}
var arrayPush_default = arrayPush;

// node_modules/lodash-es/_isFlattenable.js
var spreadableSymbol = Symbol_default ? Symbol_default.isConcatSpreadable : void 0;
function isFlattenable(value2) {
  return isArray_default(value2) || isArguments_default(value2) || !!(spreadableSymbol && value2 && value2[spreadableSymbol]);
}
var isFlattenable_default = isFlattenable;

// node_modules/lodash-es/_baseFlatten.js
function baseFlatten(array4, depth, predicate, isStrict, result2) {
  var index4 = -1, length = array4.length;
  predicate || (predicate = isFlattenable_default);
  result2 || (result2 = []);
  while (++index4 < length) {
    var value2 = array4[index4];
    if (depth > 0 && predicate(value2)) {
      if (depth > 1) {
        baseFlatten(value2, depth - 1, predicate, isStrict, result2);
      } else {
        arrayPush_default(result2, value2);
      }
    } else if (!isStrict) {
      result2[result2.length] = value2;
    }
  }
  return result2;
}
var baseFlatten_default = baseFlatten;

// node_modules/lodash-es/flatten.js
function flatten(array4) {
  var length = array4 == null ? 0 : array4.length;
  return length ? baseFlatten_default(array4, 1) : [];
}
var flatten_default = flatten;

// node_modules/lodash-es/_flatRest.js
function flatRest(func) {
  return setToString_default(overRest_default(func, void 0, flatten_default), func + "");
}
var flatRest_default = flatRest;

// node_modules/lodash-es/at.js
var at = flatRest_default(baseAt_default);
var at_default = at;

// node_modules/lodash-es/_getPrototype.js
var getPrototype = overArg_default(Object.getPrototypeOf, Object);
var getPrototype_default = getPrototype;

// node_modules/lodash-es/isPlainObject.js
var objectTag2 = "[object Object]";
var funcProto3 = Function.prototype;
var objectProto15 = Object.prototype;
var funcToString3 = funcProto3.toString;
var hasOwnProperty13 = objectProto15.hasOwnProperty;
var objectCtorString = funcToString3.call(Object);
function isPlainObject(value2) {
  if (!isObjectLike_default(value2) || baseGetTag_default(value2) != objectTag2) {
    return false;
  }
  var proto = getPrototype_default(value2);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty13.call(proto, "constructor") && proto.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString3.call(Ctor) == objectCtorString;
}
var isPlainObject_default = isPlainObject;

// node_modules/lodash-es/isError.js
var domExcTag = "[object DOMException]";
var errorTag2 = "[object Error]";
function isError(value2) {
  if (!isObjectLike_default(value2)) {
    return false;
  }
  var tag = baseGetTag_default(value2);
  return tag == errorTag2 || tag == domExcTag || typeof value2.message == "string" && typeof value2.name == "string" && !isPlainObject_default(value2);
}
var isError_default = isError;

// node_modules/lodash-es/attempt.js
var attempt = baseRest_default(function(func, args) {
  try {
    return apply_default(func, void 0, args);
  } catch (e) {
    return isError_default(e) ? e : new Error(e);
  }
});
var attempt_default = attempt;

// node_modules/lodash-es/before.js
var FUNC_ERROR_TEXT4 = "Expected a function";
function before(n, func) {
  var result2;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT4);
  }
  n = toInteger_default(n);
  return function() {
    if (--n > 0) {
      result2 = func.apply(this, arguments);
    }
    if (n <= 1) {
      func = void 0;
    }
    return result2;
  };
}
var before_default = before;

// node_modules/lodash-es/bind.js
var WRAP_BIND_FLAG8 = 1;
var WRAP_PARTIAL_FLAG4 = 32;
var bind = baseRest_default(function(func, thisArg, partials) {
  var bitmask = WRAP_BIND_FLAG8;
  if (partials.length) {
    var holders = replaceHolders_default(partials, getHolder_default(bind));
    bitmask |= WRAP_PARTIAL_FLAG4;
  }
  return createWrap_default(func, bitmask, thisArg, partials, holders);
});
bind.placeholder = {};
var bind_default = bind;

// node_modules/lodash-es/bindAll.js
var bindAll = flatRest_default(function(object, methodNames) {
  arrayEach_default(methodNames, function(key) {
    key = toKey_default(key);
    baseAssignValue_default(object, key, bind_default(object[key], object));
  });
  return object;
});
var bindAll_default = bindAll;

// node_modules/lodash-es/bindKey.js
var WRAP_BIND_FLAG9 = 1;
var WRAP_BIND_KEY_FLAG6 = 2;
var WRAP_PARTIAL_FLAG5 = 32;
var bindKey = baseRest_default(function(object, key, partials) {
  var bitmask = WRAP_BIND_FLAG9 | WRAP_BIND_KEY_FLAG6;
  if (partials.length) {
    var holders = replaceHolders_default(partials, getHolder_default(bindKey));
    bitmask |= WRAP_PARTIAL_FLAG5;
  }
  return createWrap_default(key, bitmask, object, partials, holders);
});
bindKey.placeholder = {};
var bindKey_default = bindKey;

// node_modules/lodash-es/_baseSlice.js
function baseSlice(array4, start2, end) {
  var index4 = -1, length = array4.length;
  if (start2 < 0) {
    start2 = -start2 > length ? 0 : length + start2;
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start2 > end ? 0 : end - start2 >>> 0;
  start2 >>>= 0;
  var result2 = Array(length);
  while (++index4 < length) {
    result2[index4] = array4[index4 + start2];
  }
  return result2;
}
var baseSlice_default = baseSlice;

// node_modules/lodash-es/_castSlice.js
function castSlice(array4, start2, end) {
  var length = array4.length;
  end = end === void 0 ? length : end;
  return !start2 && end >= length ? array4 : baseSlice_default(array4, start2, end);
}
var castSlice_default = castSlice;

// node_modules/lodash-es/_hasUnicode.js
var rsAstralRange = "\\ud800-\\udfff";
var rsComboMarksRange = "\\u0300-\\u036f";
var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange = "\\u20d0-\\u20ff";
var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
var rsVarRange = "\\ufe0e\\ufe0f";
var rsZWJ = "\\u200d";
var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
function hasUnicode(string) {
  return reHasUnicode.test(string);
}
var hasUnicode_default = hasUnicode;

// node_modules/lodash-es/_asciiToArray.js
function asciiToArray(string) {
  return string.split("");
}
var asciiToArray_default = asciiToArray;

// node_modules/lodash-es/_unicodeToArray.js
var rsAstralRange2 = "\\ud800-\\udfff";
var rsComboMarksRange2 = "\\u0300-\\u036f";
var reComboHalfMarksRange2 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange2 = "\\u20d0-\\u20ff";
var rsComboRange2 = rsComboMarksRange2 + reComboHalfMarksRange2 + rsComboSymbolsRange2;
var rsVarRange2 = "\\ufe0e\\ufe0f";
var rsAstral = "[" + rsAstralRange2 + "]";
var rsCombo = "[" + rsComboRange2 + "]";
var rsFitz = "\\ud83c[\\udffb-\\udfff]";
var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
var rsNonAstral = "[^" + rsAstralRange2 + "]";
var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsZWJ2 = "\\u200d";
var reOptMod = rsModifier + "?";
var rsOptVar = "[" + rsVarRange2 + "]?";
var rsOptJoin = "(?:" + rsZWJ2 + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
var rsSeq = rsOptVar + reOptMod + rsOptJoin;
var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}
var unicodeToArray_default = unicodeToArray;

// node_modules/lodash-es/_stringToArray.js
function stringToArray(string) {
  return hasUnicode_default(string) ? unicodeToArray_default(string) : asciiToArray_default(string);
}
var stringToArray_default = stringToArray;

// node_modules/lodash-es/_createCaseFirst.js
function createCaseFirst(methodName) {
  return function(string) {
    string = toString_default(string);
    var strSymbols = hasUnicode_default(string) ? stringToArray_default(string) : void 0;
    var chr = strSymbols ? strSymbols[0] : string.charAt(0);
    var trailing = strSymbols ? castSlice_default(strSymbols, 1).join("") : string.slice(1);
    return chr[methodName]() + trailing;
  };
}
var createCaseFirst_default = createCaseFirst;

// node_modules/lodash-es/upperFirst.js
var upperFirst = createCaseFirst_default("toUpperCase");
var upperFirst_default = upperFirst;

// node_modules/lodash-es/capitalize.js
function capitalize(string) {
  return upperFirst_default(toString_default(string).toLowerCase());
}
var capitalize_default = capitalize;

// node_modules/lodash-es/_arrayReduce.js
function arrayReduce(array4, iteratee2, accumulator, initAccum) {
  var index4 = -1, length = array4 == null ? 0 : array4.length;
  if (initAccum && length) {
    accumulator = array4[++index4];
  }
  while (++index4 < length) {
    accumulator = iteratee2(accumulator, array4[index4], index4, array4);
  }
  return accumulator;
}
var arrayReduce_default = arrayReduce;

// node_modules/lodash-es/_basePropertyOf.js
function basePropertyOf(object) {
  return function(key) {
    return object == null ? void 0 : object[key];
  };
}
var basePropertyOf_default = basePropertyOf;

// node_modules/lodash-es/_deburrLetter.js
var deburredLetters = {
  "\xC0": "A",
  "\xC1": "A",
  "\xC2": "A",
  "\xC3": "A",
  "\xC4": "A",
  "\xC5": "A",
  "\xE0": "a",
  "\xE1": "a",
  "\xE2": "a",
  "\xE3": "a",
  "\xE4": "a",
  "\xE5": "a",
  "\xC7": "C",
  "\xE7": "c",
  "\xD0": "D",
  "\xF0": "d",
  "\xC8": "E",
  "\xC9": "E",
  "\xCA": "E",
  "\xCB": "E",
  "\xE8": "e",
  "\xE9": "e",
  "\xEA": "e",
  "\xEB": "e",
  "\xCC": "I",
  "\xCD": "I",
  "\xCE": "I",
  "\xCF": "I",
  "\xEC": "i",
  "\xED": "i",
  "\xEE": "i",
  "\xEF": "i",
  "\xD1": "N",
  "\xF1": "n",
  "\xD2": "O",
  "\xD3": "O",
  "\xD4": "O",
  "\xD5": "O",
  "\xD6": "O",
  "\xD8": "O",
  "\xF2": "o",
  "\xF3": "o",
  "\xF4": "o",
  "\xF5": "o",
  "\xF6": "o",
  "\xF8": "o",
  "\xD9": "U",
  "\xDA": "U",
  "\xDB": "U",
  "\xDC": "U",
  "\xF9": "u",
  "\xFA": "u",
  "\xFB": "u",
  "\xFC": "u",
  "\xDD": "Y",
  "\xFD": "y",
  "\xFF": "y",
  "\xC6": "Ae",
  "\xE6": "ae",
  "\xDE": "Th",
  "\xFE": "th",
  "\xDF": "ss",
  "\u0100": "A",
  "\u0102": "A",
  "\u0104": "A",
  "\u0101": "a",
  "\u0103": "a",
  "\u0105": "a",
  "\u0106": "C",
  "\u0108": "C",
  "\u010A": "C",
  "\u010C": "C",
  "\u0107": "c",
  "\u0109": "c",
  "\u010B": "c",
  "\u010D": "c",
  "\u010E": "D",
  "\u0110": "D",
  "\u010F": "d",
  "\u0111": "d",
  "\u0112": "E",
  "\u0114": "E",
  "\u0116": "E",
  "\u0118": "E",
  "\u011A": "E",
  "\u0113": "e",
  "\u0115": "e",
  "\u0117": "e",
  "\u0119": "e",
  "\u011B": "e",
  "\u011C": "G",
  "\u011E": "G",
  "\u0120": "G",
  "\u0122": "G",
  "\u011D": "g",
  "\u011F": "g",
  "\u0121": "g",
  "\u0123": "g",
  "\u0124": "H",
  "\u0126": "H",
  "\u0125": "h",
  "\u0127": "h",
  "\u0128": "I",
  "\u012A": "I",
  "\u012C": "I",
  "\u012E": "I",
  "\u0130": "I",
  "\u0129": "i",
  "\u012B": "i",
  "\u012D": "i",
  "\u012F": "i",
  "\u0131": "i",
  "\u0134": "J",
  "\u0135": "j",
  "\u0136": "K",
  "\u0137": "k",
  "\u0138": "k",
  "\u0139": "L",
  "\u013B": "L",
  "\u013D": "L",
  "\u013F": "L",
  "\u0141": "L",
  "\u013A": "l",
  "\u013C": "l",
  "\u013E": "l",
  "\u0140": "l",
  "\u0142": "l",
  "\u0143": "N",
  "\u0145": "N",
  "\u0147": "N",
  "\u014A": "N",
  "\u0144": "n",
  "\u0146": "n",
  "\u0148": "n",
  "\u014B": "n",
  "\u014C": "O",
  "\u014E": "O",
  "\u0150": "O",
  "\u014D": "o",
  "\u014F": "o",
  "\u0151": "o",
  "\u0154": "R",
  "\u0156": "R",
  "\u0158": "R",
  "\u0155": "r",
  "\u0157": "r",
  "\u0159": "r",
  "\u015A": "S",
  "\u015C": "S",
  "\u015E": "S",
  "\u0160": "S",
  "\u015B": "s",
  "\u015D": "s",
  "\u015F": "s",
  "\u0161": "s",
  "\u0162": "T",
  "\u0164": "T",
  "\u0166": "T",
  "\u0163": "t",
  "\u0165": "t",
  "\u0167": "t",
  "\u0168": "U",
  "\u016A": "U",
  "\u016C": "U",
  "\u016E": "U",
  "\u0170": "U",
  "\u0172": "U",
  "\u0169": "u",
  "\u016B": "u",
  "\u016D": "u",
  "\u016F": "u",
  "\u0171": "u",
  "\u0173": "u",
  "\u0174": "W",
  "\u0175": "w",
  "\u0176": "Y",
  "\u0177": "y",
  "\u0178": "Y",
  "\u0179": "Z",
  "\u017B": "Z",
  "\u017D": "Z",
  "\u017A": "z",
  "\u017C": "z",
  "\u017E": "z",
  "\u0132": "IJ",
  "\u0133": "ij",
  "\u0152": "Oe",
  "\u0153": "oe",
  "\u0149": "'n",
  "\u017F": "s"
};
var deburrLetter = basePropertyOf_default(deburredLetters);
var deburrLetter_default = deburrLetter;

// node_modules/lodash-es/deburr.js
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
var rsComboMarksRange3 = "\\u0300-\\u036f";
var reComboHalfMarksRange3 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange3 = "\\u20d0-\\u20ff";
var rsComboRange3 = rsComboMarksRange3 + reComboHalfMarksRange3 + rsComboSymbolsRange3;
var rsCombo2 = "[" + rsComboRange3 + "]";
var reComboMark = RegExp(rsCombo2, "g");
function deburr(string) {
  string = toString_default(string);
  return string && string.replace(reLatin, deburrLetter_default).replace(reComboMark, "");
}
var deburr_default = deburr;

// node_modules/lodash-es/_asciiWords.js
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}
var asciiWords_default = asciiWords;

// node_modules/lodash-es/_hasUnicodeWord.js
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}
var hasUnicodeWord_default = hasUnicodeWord;

// node_modules/lodash-es/_unicodeWords.js
var rsAstralRange3 = "\\ud800-\\udfff";
var rsComboMarksRange4 = "\\u0300-\\u036f";
var reComboHalfMarksRange4 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange4 = "\\u20d0-\\u20ff";
var rsComboRange4 = rsComboMarksRange4 + reComboHalfMarksRange4 + rsComboSymbolsRange4;
var rsDingbatRange = "\\u2700-\\u27bf";
var rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff";
var rsMathOpRange = "\\xac\\xb1\\xd7\\xf7";
var rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
var rsPunctuationRange = "\\u2000-\\u206f";
var rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
var rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde";
var rsVarRange3 = "\\ufe0e\\ufe0f";
var rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
var rsApos = "['\u2019]";
var rsBreak = "[" + rsBreakRange + "]";
var rsCombo3 = "[" + rsComboRange4 + "]";
var rsDigits = "\\d+";
var rsDingbat = "[" + rsDingbatRange + "]";
var rsLower = "[" + rsLowerRange + "]";
var rsMisc = "[^" + rsAstralRange3 + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]";
var rsFitz2 = "\\ud83c[\\udffb-\\udfff]";
var rsModifier2 = "(?:" + rsCombo3 + "|" + rsFitz2 + ")";
var rsNonAstral2 = "[^" + rsAstralRange3 + "]";
var rsRegional2 = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair2 = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsUpper = "[" + rsUpperRange + "]";
var rsZWJ3 = "\\u200d";
var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")";
var rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")";
var rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?";
var rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?";
var reOptMod2 = rsModifier2 + "?";
var rsOptVar2 = "[" + rsVarRange3 + "]?";
var rsOptJoin2 = "(?:" + rsZWJ3 + "(?:" + [rsNonAstral2, rsRegional2, rsSurrPair2].join("|") + ")" + rsOptVar2 + reOptMod2 + ")*";
var rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])";
var rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])";
var rsSeq2 = rsOptVar2 + reOptMod2 + rsOptJoin2;
var rsEmoji = "(?:" + [rsDingbat, rsRegional2, rsSurrPair2].join("|") + ")" + rsSeq2;
var reUnicodeWord = RegExp([
  rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
  rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
  rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
  rsUpper + "+" + rsOptContrUpper,
  rsOrdUpper,
  rsOrdLower,
  rsDigits,
  rsEmoji
].join("|"), "g");
function unicodeWords(string) {
  return string.match(reUnicodeWord) || [];
}
var unicodeWords_default = unicodeWords;

// node_modules/lodash-es/words.js
function words(string, pattern, guard) {
  string = toString_default(string);
  pattern = guard ? void 0 : pattern;
  if (pattern === void 0) {
    return hasUnicodeWord_default(string) ? unicodeWords_default(string) : asciiWords_default(string);
  }
  return string.match(pattern) || [];
}
var words_default = words;

// node_modules/lodash-es/_createCompounder.js
var rsApos2 = "['\u2019]";
var reApos = RegExp(rsApos2, "g");
function createCompounder(callback) {
  return function(string) {
    return arrayReduce_default(words_default(deburr_default(string).replace(reApos, "")), callback, "");
  };
}
var createCompounder_default = createCompounder;

// node_modules/lodash-es/camelCase.js
var camelCase = createCompounder_default(function(result2, word, index4) {
  word = word.toLowerCase();
  return result2 + (index4 ? capitalize_default(word) : word);
});
var camelCase_default = camelCase;

// node_modules/lodash-es/castArray.js
function castArray() {
  if (!arguments.length) {
    return [];
  }
  var value2 = arguments[0];
  return isArray_default(value2) ? value2 : [value2];
}
var castArray_default = castArray;

// node_modules/lodash-es/_createRound.js
var nativeIsFinite = root_default.isFinite;
var nativeMin3 = Math.min;
function createRound(methodName) {
  var func = Math[methodName];
  return function(number5, precision) {
    number5 = toNumber_default(number5);
    precision = precision == null ? 0 : nativeMin3(toInteger_default(precision), 292);
    if (precision && nativeIsFinite(number5)) {
      var pair = (toString_default(number5) + "e").split("e"), value2 = func(pair[0] + "e" + (+pair[1] + precision));
      pair = (toString_default(value2) + "e").split("e");
      return +(pair[0] + "e" + (+pair[1] - precision));
    }
    return func(number5);
  };
}
var createRound_default = createRound;

// node_modules/lodash-es/ceil.js
var ceil = createRound_default("ceil");
var ceil_default = ceil;

// node_modules/lodash-es/chain.js
function chain(value2) {
  var result2 = wrapperLodash_default(value2);
  result2.__chain__ = true;
  return result2;
}
var chain_default = chain;

// node_modules/lodash-es/chunk.js
var nativeCeil = Math.ceil;
var nativeMax5 = Math.max;
function chunk(array4, size2, guard) {
  if (guard ? isIterateeCall_default(array4, size2, guard) : size2 === void 0) {
    size2 = 1;
  } else {
    size2 = nativeMax5(toInteger_default(size2), 0);
  }
  var length = array4 == null ? 0 : array4.length;
  if (!length || size2 < 1) {
    return [];
  }
  var index4 = 0, resIndex = 0, result2 = Array(nativeCeil(length / size2));
  while (index4 < length) {
    result2[resIndex++] = baseSlice_default(array4, index4, index4 += size2);
  }
  return result2;
}
var chunk_default = chunk;

// node_modules/lodash-es/_baseClamp.js
function baseClamp(number5, lower2, upper) {
  if (number5 === number5) {
    if (upper !== void 0) {
      number5 = number5 <= upper ? number5 : upper;
    }
    if (lower2 !== void 0) {
      number5 = number5 >= lower2 ? number5 : lower2;
    }
  }
  return number5;
}
var baseClamp_default = baseClamp;

// node_modules/lodash-es/clamp.js
function clamp(number5, lower2, upper) {
  if (upper === void 0) {
    upper = lower2;
    lower2 = void 0;
  }
  if (upper !== void 0) {
    upper = toNumber_default(upper);
    upper = upper === upper ? upper : 0;
  }
  if (lower2 !== void 0) {
    lower2 = toNumber_default(lower2);
    lower2 = lower2 === lower2 ? lower2 : 0;
  }
  return baseClamp_default(toNumber_default(number5), lower2, upper);
}
var clamp_default = clamp;

// node_modules/lodash-es/_stackClear.js
function stackClear() {
  this.__data__ = new ListCache_default();
  this.size = 0;
}
var stackClear_default = stackClear;

// node_modules/lodash-es/_stackDelete.js
function stackDelete(key) {
  var data = this.__data__, result2 = data["delete"](key);
  this.size = data.size;
  return result2;
}
var stackDelete_default = stackDelete;

// node_modules/lodash-es/_stackGet.js
function stackGet(key) {
  return this.__data__.get(key);
}
var stackGet_default = stackGet;

// node_modules/lodash-es/_stackHas.js
function stackHas(key) {
  return this.__data__.has(key);
}
var stackHas_default = stackHas;

// node_modules/lodash-es/_stackSet.js
var LARGE_ARRAY_SIZE = 200;
function stackSet(key, value2) {
  var data = this.__data__;
  if (data instanceof ListCache_default) {
    var pairs3 = data.__data__;
    if (!Map_default || pairs3.length < LARGE_ARRAY_SIZE - 1) {
      pairs3.push([key, value2]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache_default(pairs3);
  }
  data.set(key, value2);
  this.size = data.size;
  return this;
}
var stackSet_default = stackSet;

// node_modules/lodash-es/_Stack.js
function Stack(entries) {
  var data = this.__data__ = new ListCache_default(entries);
  this.size = data.size;
}
Stack.prototype.clear = stackClear_default;
Stack.prototype["delete"] = stackDelete_default;
Stack.prototype.get = stackGet_default;
Stack.prototype.has = stackHas_default;
Stack.prototype.set = stackSet_default;
var Stack_default = Stack;

// node_modules/lodash-es/_baseAssign.js
function baseAssign(object, source) {
  return object && copyObject_default(source, keys_default(source), object);
}
var baseAssign_default = baseAssign;

// node_modules/lodash-es/_baseAssignIn.js
function baseAssignIn(object, source) {
  return object && copyObject_default(source, keysIn_default(source), object);
}
var baseAssignIn_default = baseAssignIn;

// node_modules/lodash-es/_cloneBuffer.js
var freeExports3 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule3 = freeExports3 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports3 = freeModule3 && freeModule3.exports === freeExports3;
var Buffer2 = moduleExports3 ? root_default.Buffer : void 0;
var allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : void 0;
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
  buffer.copy(result2);
  return result2;
}
var cloneBuffer_default = cloneBuffer;

// node_modules/lodash-es/_arrayFilter.js
function arrayFilter(array4, predicate) {
  var index4 = -1, length = array4 == null ? 0 : array4.length, resIndex = 0, result2 = [];
  while (++index4 < length) {
    var value2 = array4[index4];
    if (predicate(value2, index4, array4)) {
      result2[resIndex++] = value2;
    }
  }
  return result2;
}
var arrayFilter_default = arrayFilter;

// node_modules/lodash-es/stubArray.js
function stubArray() {
  return [];
}
var stubArray_default = stubArray;

// node_modules/lodash-es/_getSymbols.js
var objectProto16 = Object.prototype;
var propertyIsEnumerable2 = objectProto16.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols = !nativeGetSymbols ? stubArray_default : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter_default(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable2.call(object, symbol);
  });
};
var getSymbols_default = getSymbols;

// node_modules/lodash-es/_copySymbols.js
function copySymbols(source, object) {
  return copyObject_default(source, getSymbols_default(source), object);
}
var copySymbols_default = copySymbols;

// node_modules/lodash-es/_getSymbolsIn.js
var nativeGetSymbols2 = Object.getOwnPropertySymbols;
var getSymbolsIn = !nativeGetSymbols2 ? stubArray_default : function(object) {
  var result2 = [];
  while (object) {
    arrayPush_default(result2, getSymbols_default(object));
    object = getPrototype_default(object);
  }
  return result2;
};
var getSymbolsIn_default = getSymbolsIn;

// node_modules/lodash-es/_copySymbolsIn.js
function copySymbolsIn(source, object) {
  return copyObject_default(source, getSymbolsIn_default(source), object);
}
var copySymbolsIn_default = copySymbolsIn;

// node_modules/lodash-es/_baseGetAllKeys.js
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result2 = keysFunc(object);
  return isArray_default(object) ? result2 : arrayPush_default(result2, symbolsFunc(object));
}
var baseGetAllKeys_default = baseGetAllKeys;

// node_modules/lodash-es/_getAllKeys.js
function getAllKeys(object) {
  return baseGetAllKeys_default(object, keys_default, getSymbols_default);
}
var getAllKeys_default = getAllKeys;

// node_modules/lodash-es/_getAllKeysIn.js
function getAllKeysIn(object) {
  return baseGetAllKeys_default(object, keysIn_default, getSymbolsIn_default);
}
var getAllKeysIn_default = getAllKeysIn;

// node_modules/lodash-es/_DataView.js
var DataView2 = getNative_default(root_default, "DataView");
var DataView_default = DataView2;

// node_modules/lodash-es/_Promise.js
var Promise2 = getNative_default(root_default, "Promise");
var Promise_default = Promise2;

// node_modules/lodash-es/_Set.js
var Set2 = getNative_default(root_default, "Set");
var Set_default = Set2;

// node_modules/lodash-es/_getTag.js
var mapTag2 = "[object Map]";
var objectTag3 = "[object Object]";
var promiseTag = "[object Promise]";
var setTag2 = "[object Set]";
var weakMapTag2 = "[object WeakMap]";
var dataViewTag2 = "[object DataView]";
var dataViewCtorString = toSource_default(DataView_default);
var mapCtorString = toSource_default(Map_default);
var promiseCtorString = toSource_default(Promise_default);
var setCtorString = toSource_default(Set_default);
var weakMapCtorString = toSource_default(WeakMap_default);
var getTag = baseGetTag_default;
if (DataView_default && getTag(new DataView_default(new ArrayBuffer(1))) != dataViewTag2 || Map_default && getTag(new Map_default()) != mapTag2 || Promise_default && getTag(Promise_default.resolve()) != promiseTag || Set_default && getTag(new Set_default()) != setTag2 || WeakMap_default && getTag(new WeakMap_default()) != weakMapTag2) {
  getTag = function(value2) {
    var result2 = baseGetTag_default(value2), Ctor = result2 == objectTag3 ? value2.constructor : void 0, ctorString = Ctor ? toSource_default(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag2;
        case mapCtorString:
          return mapTag2;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag2;
        case weakMapCtorString:
          return weakMapTag2;
      }
    }
    return result2;
  };
}
var getTag_default = getTag;

// node_modules/lodash-es/_initCloneArray.js
var objectProto17 = Object.prototype;
var hasOwnProperty14 = objectProto17.hasOwnProperty;
function initCloneArray(array4) {
  var length = array4.length, result2 = new array4.constructor(length);
  if (length && typeof array4[0] == "string" && hasOwnProperty14.call(array4, "index")) {
    result2.index = array4.index;
    result2.input = array4.input;
  }
  return result2;
}
var initCloneArray_default = initCloneArray;

// node_modules/lodash-es/_Uint8Array.js
var Uint8Array2 = root_default.Uint8Array;
var Uint8Array_default = Uint8Array2;

// node_modules/lodash-es/_cloneArrayBuffer.js
function cloneArrayBuffer(arrayBuffer) {
  var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array_default(result2).set(new Uint8Array_default(arrayBuffer));
  return result2;
}
var cloneArrayBuffer_default = cloneArrayBuffer;

// node_modules/lodash-es/_cloneDataView.js
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer_default(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}
var cloneDataView_default = cloneDataView;

// node_modules/lodash-es/_cloneRegExp.js
var reFlags = /\w*$/;
function cloneRegExp(regexp) {
  var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result2.lastIndex = regexp.lastIndex;
  return result2;
}
var cloneRegExp_default = cloneRegExp;

// node_modules/lodash-es/_cloneSymbol.js
var symbolProto2 = Symbol_default ? Symbol_default.prototype : void 0;
var symbolValueOf = symbolProto2 ? symbolProto2.valueOf : void 0;
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}
var cloneSymbol_default = cloneSymbol;

// node_modules/lodash-es/_cloneTypedArray.js
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer_default(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}
var cloneTypedArray_default = cloneTypedArray;

// node_modules/lodash-es/_initCloneByTag.js
var boolTag2 = "[object Boolean]";
var dateTag2 = "[object Date]";
var mapTag3 = "[object Map]";
var numberTag2 = "[object Number]";
var regexpTag2 = "[object RegExp]";
var setTag3 = "[object Set]";
var stringTag2 = "[object String]";
var symbolTag2 = "[object Symbol]";
var arrayBufferTag2 = "[object ArrayBuffer]";
var dataViewTag3 = "[object DataView]";
var float32Tag2 = "[object Float32Array]";
var float64Tag2 = "[object Float64Array]";
var int8Tag2 = "[object Int8Array]";
var int16Tag2 = "[object Int16Array]";
var int32Tag2 = "[object Int32Array]";
var uint8Tag2 = "[object Uint8Array]";
var uint8ClampedTag2 = "[object Uint8ClampedArray]";
var uint16Tag2 = "[object Uint16Array]";
var uint32Tag2 = "[object Uint32Array]";
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag2:
      return cloneArrayBuffer_default(object);
    case boolTag2:
    case dateTag2:
      return new Ctor(+object);
    case dataViewTag3:
      return cloneDataView_default(object, isDeep);
    case float32Tag2:
    case float64Tag2:
    case int8Tag2:
    case int16Tag2:
    case int32Tag2:
    case uint8Tag2:
    case uint8ClampedTag2:
    case uint16Tag2:
    case uint32Tag2:
      return cloneTypedArray_default(object, isDeep);
    case mapTag3:
      return new Ctor();
    case numberTag2:
    case stringTag2:
      return new Ctor(object);
    case regexpTag2:
      return cloneRegExp_default(object);
    case setTag3:
      return new Ctor();
    case symbolTag2:
      return cloneSymbol_default(object);
  }
}
var initCloneByTag_default = initCloneByTag;

// node_modules/lodash-es/_initCloneObject.js
function initCloneObject(object) {
  return typeof object.constructor == "function" && !isPrototype_default(object) ? baseCreate_default(getPrototype_default(object)) : {};
}
var initCloneObject_default = initCloneObject;

// node_modules/lodash-es/_baseIsMap.js
var mapTag4 = "[object Map]";
function baseIsMap(value2) {
  return isObjectLike_default(value2) && getTag_default(value2) == mapTag4;
}
var baseIsMap_default = baseIsMap;

// node_modules/lodash-es/isMap.js
var nodeIsMap = nodeUtil_default && nodeUtil_default.isMap;
var isMap = nodeIsMap ? baseUnary_default(nodeIsMap) : baseIsMap_default;
var isMap_default = isMap;

// node_modules/lodash-es/_baseIsSet.js
var setTag4 = "[object Set]";
function baseIsSet(value2) {
  return isObjectLike_default(value2) && getTag_default(value2) == setTag4;
}
var baseIsSet_default = baseIsSet;

// node_modules/lodash-es/isSet.js
var nodeIsSet = nodeUtil_default && nodeUtil_default.isSet;
var isSet = nodeIsSet ? baseUnary_default(nodeIsSet) : baseIsSet_default;
var isSet_default = isSet;

// node_modules/lodash-es/_baseClone.js
var CLONE_DEEP_FLAG = 1;
var CLONE_FLAT_FLAG = 2;
var CLONE_SYMBOLS_FLAG = 4;
var argsTag3 = "[object Arguments]";
var arrayTag2 = "[object Array]";
var boolTag3 = "[object Boolean]";
var dateTag3 = "[object Date]";
var errorTag3 = "[object Error]";
var funcTag3 = "[object Function]";
var genTag2 = "[object GeneratorFunction]";
var mapTag5 = "[object Map]";
var numberTag3 = "[object Number]";
var objectTag4 = "[object Object]";
var regexpTag3 = "[object RegExp]";
var setTag5 = "[object Set]";
var stringTag3 = "[object String]";
var symbolTag3 = "[object Symbol]";
var weakMapTag3 = "[object WeakMap]";
var arrayBufferTag3 = "[object ArrayBuffer]";
var dataViewTag4 = "[object DataView]";
var float32Tag3 = "[object Float32Array]";
var float64Tag3 = "[object Float64Array]";
var int8Tag3 = "[object Int8Array]";
var int16Tag3 = "[object Int16Array]";
var int32Tag3 = "[object Int32Array]";
var uint8Tag3 = "[object Uint8Array]";
var uint8ClampedTag3 = "[object Uint8ClampedArray]";
var uint16Tag3 = "[object Uint16Array]";
var uint32Tag3 = "[object Uint32Array]";
var cloneableTags = {};
cloneableTags[argsTag3] = cloneableTags[arrayTag2] = cloneableTags[arrayBufferTag3] = cloneableTags[dataViewTag4] = cloneableTags[boolTag3] = cloneableTags[dateTag3] = cloneableTags[float32Tag3] = cloneableTags[float64Tag3] = cloneableTags[int8Tag3] = cloneableTags[int16Tag3] = cloneableTags[int32Tag3] = cloneableTags[mapTag5] = cloneableTags[numberTag3] = cloneableTags[objectTag4] = cloneableTags[regexpTag3] = cloneableTags[setTag5] = cloneableTags[stringTag3] = cloneableTags[symbolTag3] = cloneableTags[uint8Tag3] = cloneableTags[uint8ClampedTag3] = cloneableTags[uint16Tag3] = cloneableTags[uint32Tag3] = true;
cloneableTags[errorTag3] = cloneableTags[funcTag3] = cloneableTags[weakMapTag3] = false;
function baseClone(value2, bitmask, customizer, key, object, stack) {
  var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
  if (customizer) {
    result2 = object ? customizer(value2, key, object, stack) : customizer(value2);
  }
  if (result2 !== void 0) {
    return result2;
  }
  if (!isObject_default(value2)) {
    return value2;
  }
  var isArr = isArray_default(value2);
  if (isArr) {
    result2 = initCloneArray_default(value2);
    if (!isDeep) {
      return copyArray_default(value2, result2);
    }
  } else {
    var tag = getTag_default(value2), isFunc = tag == funcTag3 || tag == genTag2;
    if (isBuffer_default(value2)) {
      return cloneBuffer_default(value2, isDeep);
    }
    if (tag == objectTag4 || tag == argsTag3 || isFunc && !object) {
      result2 = isFlat || isFunc ? {} : initCloneObject_default(value2);
      if (!isDeep) {
        return isFlat ? copySymbolsIn_default(value2, baseAssignIn_default(result2, value2)) : copySymbols_default(value2, baseAssign_default(result2, value2));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value2 : {};
      }
      result2 = initCloneByTag_default(value2, tag, isDeep);
    }
  }
  stack || (stack = new Stack_default());
  var stacked = stack.get(value2);
  if (stacked) {
    return stacked;
  }
  stack.set(value2, result2);
  if (isSet_default(value2)) {
    value2.forEach(function(subValue) {
      result2.add(baseClone(subValue, bitmask, customizer, subValue, value2, stack));
    });
  } else if (isMap_default(value2)) {
    value2.forEach(function(subValue, key2) {
      result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value2, stack));
    });
  }
  var keysFunc = isFull ? isFlat ? getAllKeysIn_default : getAllKeys_default : isFlat ? keysIn_default : keys_default;
  var props = isArr ? void 0 : keysFunc(value2);
  arrayEach_default(props || value2, function(subValue, key2) {
    if (props) {
      key2 = subValue;
      subValue = value2[key2];
    }
    assignValue_default(result2, key2, baseClone(subValue, bitmask, customizer, key2, value2, stack));
  });
  return result2;
}
var baseClone_default = baseClone;

// node_modules/lodash-es/clone.js
var CLONE_SYMBOLS_FLAG2 = 4;
function clone(value2) {
  return baseClone_default(value2, CLONE_SYMBOLS_FLAG2);
}
var clone_default = clone;

// node_modules/lodash-es/cloneDeep.js
var CLONE_DEEP_FLAG2 = 1;
var CLONE_SYMBOLS_FLAG3 = 4;
function cloneDeep(value2) {
  return baseClone_default(value2, CLONE_DEEP_FLAG2 | CLONE_SYMBOLS_FLAG3);
}
var cloneDeep_default = cloneDeep;

// node_modules/lodash-es/cloneDeepWith.js
var CLONE_DEEP_FLAG3 = 1;
var CLONE_SYMBOLS_FLAG4 = 4;
function cloneDeepWith(value2, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseClone_default(value2, CLONE_DEEP_FLAG3 | CLONE_SYMBOLS_FLAG4, customizer);
}
var cloneDeepWith_default = cloneDeepWith;

// node_modules/lodash-es/cloneWith.js
var CLONE_SYMBOLS_FLAG5 = 4;
function cloneWith(value2, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseClone_default(value2, CLONE_SYMBOLS_FLAG5, customizer);
}
var cloneWith_default = cloneWith;

// node_modules/lodash-es/commit.js
function wrapperCommit() {
  return new LodashWrapper_default(this.value(), this.__chain__);
}
var commit_default = wrapperCommit;

// node_modules/lodash-es/compact.js
function compact(array4) {
  var index4 = -1, length = array4 == null ? 0 : array4.length, resIndex = 0, result2 = [];
  while (++index4 < length) {
    var value2 = array4[index4];
    if (value2) {
      result2[resIndex++] = value2;
    }
  }
  return result2;
}
var compact_default = compact;

// node_modules/lodash-es/concat.js
function concat() {
  var length = arguments.length;
  if (!length) {
    return [];
  }
  var args = Array(length - 1), array4 = arguments[0], index4 = length;
  while (index4--) {
    args[index4 - 1] = arguments[index4];
  }
  return arrayPush_default(isArray_default(array4) ? copyArray_default(array4) : [array4], baseFlatten_default(args, 1));
}
var concat_default = concat;

// node_modules/lodash-es/_setCacheAdd.js
var HASH_UNDEFINED3 = "__lodash_hash_undefined__";
function setCacheAdd(value2) {
  this.__data__.set(value2, HASH_UNDEFINED3);
  return this;
}
var setCacheAdd_default = setCacheAdd;

// node_modules/lodash-es/_setCacheHas.js
function setCacheHas(value2) {
  return this.__data__.has(value2);
}
var setCacheHas_default = setCacheHas;

// node_modules/lodash-es/_SetCache.js
function SetCache(values2) {
  var index4 = -1, length = values2 == null ? 0 : values2.length;
  this.__data__ = new MapCache_default();
  while (++index4 < length) {
    this.add(values2[index4]);
  }
}
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd_default;
SetCache.prototype.has = setCacheHas_default;
var SetCache_default = SetCache;

// node_modules/lodash-es/_arraySome.js
function arraySome(array4, predicate) {
  var index4 = -1, length = array4 == null ? 0 : array4.length;
  while (++index4 < length) {
    if (predicate(array4[index4], index4, array4)) {
      return true;
    }
  }
  return false;
}
var arraySome_default = arraySome;

// node_modules/lodash-es/_cacheHas.js
function cacheHas(cache, key) {
  return cache.has(key);
}
var cacheHas_default = cacheHas;

// node_modules/lodash-es/_equalArrays.js
var COMPARE_PARTIAL_FLAG = 1;
var COMPARE_UNORDERED_FLAG = 2;
function equalArrays(array4, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array4.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array4);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array4;
  }
  var index4 = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache_default() : void 0;
  stack.set(array4, other);
  stack.set(other, array4);
  while (++index4 < arrLength) {
    var arrValue = array4[index4], othValue = other[index4];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index4, other, array4, stack) : customizer(arrValue, othValue, index4, array4, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result2 = false;
      break;
    }
    if (seen) {
      if (!arraySome_default(other, function(othValue2, othIndex) {
        if (!cacheHas_default(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result2 = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result2 = false;
      break;
    }
  }
  stack["delete"](array4);
  stack["delete"](other);
  return result2;
}
var equalArrays_default = equalArrays;

// node_modules/lodash-es/_mapToArray.js
function mapToArray(map7) {
  var index4 = -1, result2 = Array(map7.size);
  map7.forEach(function(value2, key) {
    result2[++index4] = [key, value2];
  });
  return result2;
}
var mapToArray_default = mapToArray;

// node_modules/lodash-es/_setToArray.js
function setToArray(set7) {
  var index4 = -1, result2 = Array(set7.size);
  set7.forEach(function(value2) {
    result2[++index4] = value2;
  });
  return result2;
}
var setToArray_default = setToArray;

// node_modules/lodash-es/_equalByTag.js
var COMPARE_PARTIAL_FLAG2 = 1;
var COMPARE_UNORDERED_FLAG2 = 2;
var boolTag4 = "[object Boolean]";
var dateTag4 = "[object Date]";
var errorTag4 = "[object Error]";
var mapTag6 = "[object Map]";
var numberTag4 = "[object Number]";
var regexpTag4 = "[object RegExp]";
var setTag6 = "[object Set]";
var stringTag4 = "[object String]";
var symbolTag4 = "[object Symbol]";
var arrayBufferTag4 = "[object ArrayBuffer]";
var dataViewTag5 = "[object DataView]";
var symbolProto3 = Symbol_default ? Symbol_default.prototype : void 0;
var symbolValueOf2 = symbolProto3 ? symbolProto3.valueOf : void 0;
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag5:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;
    case arrayBufferTag4:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array_default(object), new Uint8Array_default(other))) {
        return false;
      }
      return true;
    case boolTag4:
    case dateTag4:
    case numberTag4:
      return eq_default(+object, +other);
    case errorTag4:
      return object.name == other.name && object.message == other.message;
    case regexpTag4:
    case stringTag4:
      return object == other + "";
    case mapTag6:
      var convert = mapToArray_default;
    case setTag6:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG2;
      convert || (convert = setToArray_default);
      if (object.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG2;
      stack.set(object, other);
      var result2 = equalArrays_default(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object);
      return result2;
    case symbolTag4:
      if (symbolValueOf2) {
        return symbolValueOf2.call(object) == symbolValueOf2.call(other);
      }
  }
  return false;
}
var equalByTag_default = equalByTag;

// node_modules/lodash-es/_equalObjects.js
var COMPARE_PARTIAL_FLAG3 = 1;
var objectProto18 = Object.prototype;
var hasOwnProperty15 = objectProto18.hasOwnProperty;
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG3, objProps = getAllKeys_default(object), objLength = objProps.length, othProps = getAllKeys_default(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index4 = objLength;
  while (index4--) {
    var key = objProps[index4];
    if (!(isPartial ? key in other : hasOwnProperty15.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result2 = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;
  while (++index4 < objLength) {
    key = objProps[index4];
    var objValue = object[key], othValue = other[key];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result2 = false;
      break;
    }
    skipCtor || (skipCtor = key == "constructor");
  }
  if (result2 && !skipCtor) {
    var objCtor = object.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result2 = false;
    }
  }
  stack["delete"](object);
  stack["delete"](other);
  return result2;
}
var equalObjects_default = equalObjects;

// node_modules/lodash-es/_baseIsEqualDeep.js
var COMPARE_PARTIAL_FLAG4 = 1;
var argsTag4 = "[object Arguments]";
var arrayTag3 = "[object Array]";
var objectTag5 = "[object Object]";
var objectProto19 = Object.prototype;
var hasOwnProperty16 = objectProto19.hasOwnProperty;
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray_default(object), othIsArr = isArray_default(other), objTag = objIsArr ? arrayTag3 : getTag_default(object), othTag = othIsArr ? arrayTag3 : getTag_default(other);
  objTag = objTag == argsTag4 ? objectTag5 : objTag;
  othTag = othTag == argsTag4 ? objectTag5 : othTag;
  var objIsObj = objTag == objectTag5, othIsObj = othTag == objectTag5, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer_default(object)) {
    if (!isBuffer_default(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack_default());
    return objIsArr || isTypedArray_default(object) ? equalArrays_default(object, other, bitmask, customizer, equalFunc, stack) : equalByTag_default(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG4)) {
    var objIsWrapped = objIsObj && hasOwnProperty16.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty16.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack_default());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack_default());
  return equalObjects_default(object, other, bitmask, customizer, equalFunc, stack);
}
var baseIsEqualDeep_default = baseIsEqualDeep;

// node_modules/lodash-es/_baseIsEqual.js
function baseIsEqual(value2, other, bitmask, customizer, stack) {
  if (value2 === other) {
    return true;
  }
  if (value2 == null || other == null || !isObjectLike_default(value2) && !isObjectLike_default(other)) {
    return value2 !== value2 && other !== other;
  }
  return baseIsEqualDeep_default(value2, other, bitmask, customizer, baseIsEqual, stack);
}
var baseIsEqual_default = baseIsEqual;

// node_modules/lodash-es/_baseIsMatch.js
var COMPARE_PARTIAL_FLAG5 = 1;
var COMPARE_UNORDERED_FLAG3 = 2;
function baseIsMatch(object, source, matchData, customizer) {
  var index4 = matchData.length, length = index4, noCustomizer = !customizer;
  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index4--) {
    var data = matchData[index4];
    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
      return false;
    }
  }
  while (++index4 < length) {
    data = matchData[index4];
    var key = data[0], objValue = object[key], srcValue = data[1];
    if (noCustomizer && data[2]) {
      if (objValue === void 0 && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack_default();
      if (customizer) {
        var result2 = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result2 === void 0 ? baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG5 | COMPARE_UNORDERED_FLAG3, customizer, stack) : result2)) {
        return false;
      }
    }
  }
  return true;
}
var baseIsMatch_default = baseIsMatch;

// node_modules/lodash-es/_isStrictComparable.js
function isStrictComparable(value2) {
  return value2 === value2 && !isObject_default(value2);
}
var isStrictComparable_default = isStrictComparable;

// node_modules/lodash-es/_getMatchData.js
function getMatchData(object) {
  var result2 = keys_default(object), length = result2.length;
  while (length--) {
    var key = result2[length], value2 = object[key];
    result2[length] = [key, value2, isStrictComparable_default(value2)];
  }
  return result2;
}
var getMatchData_default = getMatchData;

// node_modules/lodash-es/_matchesStrictComparable.js
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
  };
}
var matchesStrictComparable_default = matchesStrictComparable;

// node_modules/lodash-es/_baseMatches.js
function baseMatches(source) {
  var matchData = getMatchData_default(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable_default(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch_default(object, source, matchData);
  };
}
var baseMatches_default = baseMatches;

// node_modules/lodash-es/_baseHasIn.js
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}
var baseHasIn_default = baseHasIn;

// node_modules/lodash-es/_hasPath.js
function hasPath(object, path3, hasFunc) {
  path3 = castPath_default(path3, object);
  var index4 = -1, length = path3.length, result2 = false;
  while (++index4 < length) {
    var key = toKey_default(path3[index4]);
    if (!(result2 = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result2 || ++index4 != length) {
    return result2;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength_default(length) && isIndex_default(key, length) && (isArray_default(object) || isArguments_default(object));
}
var hasPath_default = hasPath;

// node_modules/lodash-es/hasIn.js
function hasIn(object, path3) {
  return object != null && hasPath_default(object, path3, baseHasIn_default);
}
var hasIn_default = hasIn;

// node_modules/lodash-es/_baseMatchesProperty.js
var COMPARE_PARTIAL_FLAG6 = 1;
var COMPARE_UNORDERED_FLAG4 = 2;
function baseMatchesProperty(path3, srcValue) {
  if (isKey_default(path3) && isStrictComparable_default(srcValue)) {
    return matchesStrictComparable_default(toKey_default(path3), srcValue);
  }
  return function(object) {
    var objValue = get_default(object, path3);
    return objValue === void 0 && objValue === srcValue ? hasIn_default(object, path3) : baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG6 | COMPARE_UNORDERED_FLAG4);
  };
}
var baseMatchesProperty_default = baseMatchesProperty;

// node_modules/lodash-es/_baseProperty.js
function baseProperty(key) {
  return function(object) {
    return object == null ? void 0 : object[key];
  };
}
var baseProperty_default = baseProperty;

// node_modules/lodash-es/_basePropertyDeep.js
function basePropertyDeep(path3) {
  return function(object) {
    return baseGet_default(object, path3);
  };
}
var basePropertyDeep_default = basePropertyDeep;

// node_modules/lodash-es/property.js
function property(path3) {
  return isKey_default(path3) ? baseProperty_default(toKey_default(path3)) : basePropertyDeep_default(path3);
}
var property_default = property;

// node_modules/lodash-es/_baseIteratee.js
function baseIteratee(value2) {
  if (typeof value2 == "function") {
    return value2;
  }
  if (value2 == null) {
    return identity_default;
  }
  if (typeof value2 == "object") {
    return isArray_default(value2) ? baseMatchesProperty_default(value2[0], value2[1]) : baseMatches_default(value2);
  }
  return property_default(value2);
}
var baseIteratee_default = baseIteratee;

// node_modules/lodash-es/cond.js
var FUNC_ERROR_TEXT5 = "Expected a function";
function cond(pairs3) {
  var length = pairs3 == null ? 0 : pairs3.length, toIteratee = baseIteratee_default;
  pairs3 = !length ? [] : arrayMap_default(pairs3, function(pair) {
    if (typeof pair[1] != "function") {
      throw new TypeError(FUNC_ERROR_TEXT5);
    }
    return [toIteratee(pair[0]), pair[1]];
  });
  return baseRest_default(function(args) {
    var index4 = -1;
    while (++index4 < length) {
      var pair = pairs3[index4];
      if (apply_default(pair[0], this, args)) {
        return apply_default(pair[1], this, args);
      }
    }
  });
}
var cond_default = cond;

// node_modules/lodash-es/_baseConformsTo.js
function baseConformsTo(object, source, props) {
  var length = props.length;
  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (length--) {
    var key = props[length], predicate = source[key], value2 = object[key];
    if (value2 === void 0 && !(key in object) || !predicate(value2)) {
      return false;
    }
  }
  return true;
}
var baseConformsTo_default = baseConformsTo;

// node_modules/lodash-es/_baseConforms.js
function baseConforms(source) {
  var props = keys_default(source);
  return function(object) {
    return baseConformsTo_default(object, source, props);
  };
}
var baseConforms_default = baseConforms;

// node_modules/lodash-es/conforms.js
var CLONE_DEEP_FLAG4 = 1;
function conforms(source) {
  return baseConforms_default(baseClone_default(source, CLONE_DEEP_FLAG4));
}
var conforms_default = conforms;

// node_modules/lodash-es/conformsTo.js
function conformsTo(object, source) {
  return source == null || baseConformsTo_default(object, source, keys_default(source));
}
var conformsTo_default = conformsTo;

// node_modules/lodash-es/_arrayAggregator.js
function arrayAggregator(array4, setter, iteratee2, accumulator) {
  var index4 = -1, length = array4 == null ? 0 : array4.length;
  while (++index4 < length) {
    var value2 = array4[index4];
    setter(accumulator, value2, iteratee2(value2), array4);
  }
  return accumulator;
}
var arrayAggregator_default = arrayAggregator;

// node_modules/lodash-es/_createBaseFor.js
function createBaseFor(fromRight) {
  return function(object, iteratee2, keysFunc) {
    var index4 = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
    while (length--) {
      var key = props[fromRight ? length : ++index4];
      if (iteratee2(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}
var createBaseFor_default = createBaseFor;

// node_modules/lodash-es/_baseFor.js
var baseFor = createBaseFor_default();
var baseFor_default = baseFor;

// node_modules/lodash-es/_baseForOwn.js
function baseForOwn(object, iteratee2) {
  return object && baseFor_default(object, iteratee2, keys_default);
}
var baseForOwn_default = baseForOwn;

// node_modules/lodash-es/_createBaseEach.js
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee2) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike_default(collection)) {
      return eachFunc(collection, iteratee2);
    }
    var length = collection.length, index4 = fromRight ? length : -1, iterable = Object(collection);
    while (fromRight ? index4-- : ++index4 < length) {
      if (iteratee2(iterable[index4], index4, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}
var createBaseEach_default = createBaseEach;

// node_modules/lodash-es/_baseEach.js
var baseEach = createBaseEach_default(baseForOwn_default);
var baseEach_default = baseEach;

// node_modules/lodash-es/_baseAggregator.js
function baseAggregator(collection, setter, iteratee2, accumulator) {
  baseEach_default(collection, function(value2, key, collection2) {
    setter(accumulator, value2, iteratee2(value2), collection2);
  });
  return accumulator;
}
var baseAggregator_default = baseAggregator;

// node_modules/lodash-es/_createAggregator.js
function createAggregator(setter, initializer) {
  return function(collection, iteratee2) {
    var func = isArray_default(collection) ? arrayAggregator_default : baseAggregator_default, accumulator = initializer ? initializer() : {};
    return func(collection, setter, baseIteratee_default(iteratee2, 2), accumulator);
  };
}
var createAggregator_default = createAggregator;

// node_modules/lodash-es/countBy.js
var objectProto20 = Object.prototype;
var hasOwnProperty17 = objectProto20.hasOwnProperty;
var countBy = createAggregator_default(function(result2, value2, key) {
  if (hasOwnProperty17.call(result2, key)) {
    ++result2[key];
  } else {
    baseAssignValue_default(result2, key, 1);
  }
});
var countBy_default = countBy;

// node_modules/lodash-es/create.js
function create(prototype, properties) {
  var result2 = baseCreate_default(prototype);
  return properties == null ? result2 : baseAssign_default(result2, properties);
}
var create_default = create;

// node_modules/lodash-es/curry.js
var WRAP_CURRY_FLAG6 = 8;
function curry(func, arity, guard) {
  arity = guard ? void 0 : arity;
  var result2 = createWrap_default(func, WRAP_CURRY_FLAG6, void 0, void 0, void 0, void 0, void 0, arity);
  result2.placeholder = curry.placeholder;
  return result2;
}
curry.placeholder = {};
var curry_default = curry;

// node_modules/lodash-es/curryRight.js
var WRAP_CURRY_RIGHT_FLAG4 = 16;
function curryRight(func, arity, guard) {
  arity = guard ? void 0 : arity;
  var result2 = createWrap_default(func, WRAP_CURRY_RIGHT_FLAG4, void 0, void 0, void 0, void 0, void 0, arity);
  result2.placeholder = curryRight.placeholder;
  return result2;
}
curryRight.placeholder = {};
var curryRight_default = curryRight;

// node_modules/lodash-es/now.js
var now = function() {
  return root_default.Date.now();
};
var now_default = now;

// node_modules/lodash-es/debounce.js
var FUNC_ERROR_TEXT6 = "Expected a function";
var nativeMax6 = Math.max;
var nativeMin4 = Math.min;
function debounce(func, wait, options2) {
  var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT6);
  }
  wait = toNumber_default(wait) || 0;
  if (isObject_default(options2)) {
    leading = !!options2.leading;
    maxing = "maxWait" in options2;
    maxWait = maxing ? nativeMax6(toNumber_default(options2.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options2 ? !!options2.trailing : trailing;
  }
  function invokeFunc(time2) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time2;
    result2 = func.apply(thisArg, args);
    return result2;
  }
  function leadingEdge(time2) {
    lastInvokeTime = time2;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time2) : result2;
  }
  function remainingWait(time2) {
    var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin4(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time2) {
    var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time2 = now_default();
    if (shouldInvoke(time2)) {
      return trailingEdge(time2);
    }
    timerId = setTimeout(timerExpired, remainingWait(time2));
  }
  function trailingEdge(time2) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time2);
    }
    lastArgs = lastThis = void 0;
    return result2;
  }
  function cancel() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result2 : trailingEdge(now_default());
  }
  function debounced() {
    var time2 = now_default(), isInvoking = shouldInvoke(time2);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time2;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result2;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}
var debounce_default = debounce;

// node_modules/lodash-es/defaultTo.js
function defaultTo(value2, defaultValue) {
  return value2 == null || value2 !== value2 ? defaultValue : value2;
}
var defaultTo_default = defaultTo;

// node_modules/lodash-es/defaults.js
var objectProto21 = Object.prototype;
var hasOwnProperty18 = objectProto21.hasOwnProperty;
var defaults = baseRest_default(function(object, sources) {
  object = Object(object);
  var index4 = -1;
  var length = sources.length;
  var guard = length > 2 ? sources[2] : void 0;
  if (guard && isIterateeCall_default(sources[0], sources[1], guard)) {
    length = 1;
  }
  while (++index4 < length) {
    var source = sources[index4];
    var props = keysIn_default(source);
    var propsIndex = -1;
    var propsLength = props.length;
    while (++propsIndex < propsLength) {
      var key = props[propsIndex];
      var value2 = object[key];
      if (value2 === void 0 || eq_default(value2, objectProto21[key]) && !hasOwnProperty18.call(object, key)) {
        object[key] = source[key];
      }
    }
  }
  return object;
});
var defaults_default = defaults;

// node_modules/lodash-es/_assignMergeValue.js
function assignMergeValue(object, key, value2) {
  if (value2 !== void 0 && !eq_default(object[key], value2) || value2 === void 0 && !(key in object)) {
    baseAssignValue_default(object, key, value2);
  }
}
var assignMergeValue_default = assignMergeValue;

// node_modules/lodash-es/isArrayLikeObject.js
function isArrayLikeObject(value2) {
  return isObjectLike_default(value2) && isArrayLike_default(value2);
}
var isArrayLikeObject_default = isArrayLikeObject;

// node_modules/lodash-es/_safeGet.js
function safeGet(object, key) {
  if (key === "constructor" && typeof object[key] === "function") {
    return;
  }
  if (key == "__proto__") {
    return;
  }
  return object[key];
}
var safeGet_default = safeGet;

// node_modules/lodash-es/toPlainObject.js
function toPlainObject(value2) {
  return copyObject_default(value2, keysIn_default(value2));
}
var toPlainObject_default = toPlainObject;

// node_modules/lodash-es/_baseMergeDeep.js
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet_default(object, key), srcValue = safeGet_default(source, key), stacked = stack.get(srcValue);
  if (stacked) {
    assignMergeValue_default(object, key, stacked);
    return;
  }
  var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : void 0;
  var isCommon = newValue === void 0;
  if (isCommon) {
    var isArr = isArray_default(srcValue), isBuff = !isArr && isBuffer_default(srcValue), isTyped = !isArr && !isBuff && isTypedArray_default(srcValue);
    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray_default(objValue)) {
        newValue = objValue;
      } else if (isArrayLikeObject_default(objValue)) {
        newValue = copyArray_default(objValue);
      } else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer_default(srcValue, true);
      } else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray_default(srcValue, true);
      } else {
        newValue = [];
      }
    } else if (isPlainObject_default(srcValue) || isArguments_default(srcValue)) {
      newValue = objValue;
      if (isArguments_default(objValue)) {
        newValue = toPlainObject_default(objValue);
      } else if (!isObject_default(objValue) || isFunction_default(objValue)) {
        newValue = initCloneObject_default(srcValue);
      }
    } else {
      isCommon = false;
    }
  }
  if (isCommon) {
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack["delete"](srcValue);
  }
  assignMergeValue_default(object, key, newValue);
}
var baseMergeDeep_default = baseMergeDeep;

// node_modules/lodash-es/_baseMerge.js
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor_default(source, function(srcValue, key) {
    stack || (stack = new Stack_default());
    if (isObject_default(srcValue)) {
      baseMergeDeep_default(object, source, key, srcIndex, baseMerge, customizer, stack);
    } else {
      var newValue = customizer ? customizer(safeGet_default(object, key), srcValue, key + "", object, source, stack) : void 0;
      if (newValue === void 0) {
        newValue = srcValue;
      }
      assignMergeValue_default(object, key, newValue);
    }
  }, keysIn_default);
}
var baseMerge_default = baseMerge;

// node_modules/lodash-es/_customDefaultsMerge.js
function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
  if (isObject_default(objValue) && isObject_default(srcValue)) {
    stack.set(srcValue, objValue);
    baseMerge_default(objValue, srcValue, void 0, customDefaultsMerge, stack);
    stack["delete"](srcValue);
  }
  return objValue;
}
var customDefaultsMerge_default = customDefaultsMerge;

// node_modules/lodash-es/mergeWith.js
var mergeWith = createAssigner_default(function(object, source, srcIndex, customizer) {
  baseMerge_default(object, source, srcIndex, customizer);
});
var mergeWith_default = mergeWith;

// node_modules/lodash-es/defaultsDeep.js
var defaultsDeep = baseRest_default(function(args) {
  args.push(void 0, customDefaultsMerge_default);
  return apply_default(mergeWith_default, void 0, args);
});
var defaultsDeep_default = defaultsDeep;

// node_modules/lodash-es/_baseDelay.js
var FUNC_ERROR_TEXT7 = "Expected a function";
function baseDelay(func, wait, args) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT7);
  }
  return setTimeout(function() {
    func.apply(void 0, args);
  }, wait);
}
var baseDelay_default = baseDelay;

// node_modules/lodash-es/defer.js
var defer = baseRest_default(function(func, args) {
  return baseDelay_default(func, 1, args);
});
var defer_default = defer;

// node_modules/lodash-es/delay.js
var delay = baseRest_default(function(func, wait, args) {
  return baseDelay_default(func, toNumber_default(wait) || 0, args);
});
var delay_default = delay;

// node_modules/lodash-es/_arrayIncludesWith.js
function arrayIncludesWith(array4, value2, comparator) {
  var index4 = -1, length = array4 == null ? 0 : array4.length;
  while (++index4 < length) {
    if (comparator(value2, array4[index4])) {
      return true;
    }
  }
  return false;
}
var arrayIncludesWith_default = arrayIncludesWith;

// node_modules/lodash-es/_baseDifference.js
var LARGE_ARRAY_SIZE2 = 200;
function baseDifference(array4, values2, iteratee2, comparator) {
  var index4 = -1, includes2 = arrayIncludes_default, isCommon = true, length = array4.length, result2 = [], valuesLength = values2.length;
  if (!length) {
    return result2;
  }
  if (iteratee2) {
    values2 = arrayMap_default(values2, baseUnary_default(iteratee2));
  }
  if (comparator) {
    includes2 = arrayIncludesWith_default;
    isCommon = false;
  } else if (values2.length >= LARGE_ARRAY_SIZE2) {
    includes2 = cacheHas_default;
    isCommon = false;
    values2 = new SetCache_default(values2);
  }
  outer:
    while (++index4 < length) {
      var value2 = array4[index4], computed = iteratee2 == null ? value2 : iteratee2(value2);
      value2 = comparator || value2 !== 0 ? value2 : 0;
      if (isCommon && computed === computed) {
        var valuesIndex = valuesLength;
        while (valuesIndex--) {
          if (values2[valuesIndex] === computed) {
            continue outer;
          }
        }
        result2.push(value2);
      } else if (!includes2(values2, computed, comparator)) {
        result2.push(value2);
      }
    }
  return result2;
}
var baseDifference_default = baseDifference;

// node_modules/lodash-es/difference.js
var difference = baseRest_default(function(array4, values2) {
  return isArrayLikeObject_default(array4) ? baseDifference_default(array4, baseFlatten_default(values2, 1, isArrayLikeObject_default, true)) : [];
});
var difference_default = difference;

// node_modules/lodash-es/last.js
function last(array4) {
  var length = array4 == null ? 0 : array4.length;
  return length ? array4[length - 1] : void 0;
}
var last_default = last;

// node_modules/lodash-es/differenceBy.js
var differenceBy = baseRest_default(function(array4, values2) {
  var iteratee2 = last_default(values2);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return isArrayLikeObject_default(array4) ? baseDifference_default(array4, baseFlatten_default(values2, 1, isArrayLikeObject_default, true), baseIteratee_default(iteratee2, 2)) : [];
});
var differenceBy_default = differenceBy;

// node_modules/lodash-es/differenceWith.js
var differenceWith = baseRest_default(function(array4, values2) {
  var comparator = last_default(values2);
  if (isArrayLikeObject_default(comparator)) {
    comparator = void 0;
  }
  return isArrayLikeObject_default(array4) ? baseDifference_default(array4, baseFlatten_default(values2, 1, isArrayLikeObject_default, true), void 0, comparator) : [];
});
var differenceWith_default = differenceWith;

// node_modules/lodash-es/divide.js
var divide = createMathOperation_default(function(dividend, divisor) {
  return dividend / divisor;
}, 1);
var divide_default = divide;

// node_modules/lodash-es/drop.js
function drop(array4, n, guard) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  return baseSlice_default(array4, n < 0 ? 0 : n, length);
}
var drop_default = drop;

// node_modules/lodash-es/dropRight.js
function dropRight(array4, n, guard) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  n = length - n;
  return baseSlice_default(array4, 0, n < 0 ? 0 : n);
}
var dropRight_default = dropRight;

// node_modules/lodash-es/_baseWhile.js
function baseWhile(array4, predicate, isDrop, fromRight) {
  var length = array4.length, index4 = fromRight ? length : -1;
  while ((fromRight ? index4-- : ++index4 < length) && predicate(array4[index4], index4, array4)) {
  }
  return isDrop ? baseSlice_default(array4, fromRight ? 0 : index4, fromRight ? index4 + 1 : length) : baseSlice_default(array4, fromRight ? index4 + 1 : 0, fromRight ? length : index4);
}
var baseWhile_default = baseWhile;

// node_modules/lodash-es/dropRightWhile.js
function dropRightWhile(array4, predicate) {
  return array4 && array4.length ? baseWhile_default(array4, baseIteratee_default(predicate, 3), true, true) : [];
}
var dropRightWhile_default = dropRightWhile;

// node_modules/lodash-es/dropWhile.js
function dropWhile(array4, predicate) {
  return array4 && array4.length ? baseWhile_default(array4, baseIteratee_default(predicate, 3), true) : [];
}
var dropWhile_default = dropWhile;

// node_modules/lodash-es/_castFunction.js
function castFunction(value2) {
  return typeof value2 == "function" ? value2 : identity_default;
}
var castFunction_default = castFunction;

// node_modules/lodash-es/forEach.js
function forEach(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayEach_default : baseEach_default;
  return func(collection, castFunction_default(iteratee2));
}
var forEach_default = forEach;

// node_modules/lodash-es/_arrayEachRight.js
function arrayEachRight(array4, iteratee2) {
  var length = array4 == null ? 0 : array4.length;
  while (length--) {
    if (iteratee2(array4[length], length, array4) === false) {
      break;
    }
  }
  return array4;
}
var arrayEachRight_default = arrayEachRight;

// node_modules/lodash-es/_baseForRight.js
var baseForRight = createBaseFor_default(true);
var baseForRight_default = baseForRight;

// node_modules/lodash-es/_baseForOwnRight.js
function baseForOwnRight(object, iteratee2) {
  return object && baseForRight_default(object, iteratee2, keys_default);
}
var baseForOwnRight_default = baseForOwnRight;

// node_modules/lodash-es/_baseEachRight.js
var baseEachRight = createBaseEach_default(baseForOwnRight_default, true);
var baseEachRight_default = baseEachRight;

// node_modules/lodash-es/forEachRight.js
function forEachRight(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayEachRight_default : baseEachRight_default;
  return func(collection, castFunction_default(iteratee2));
}
var forEachRight_default = forEachRight;

// node_modules/lodash-es/endsWith.js
function endsWith(string, target, position2) {
  string = toString_default(string);
  target = baseToString_default(target);
  var length = string.length;
  position2 = position2 === void 0 ? length : baseClamp_default(toInteger_default(position2), 0, length);
  var end = position2;
  position2 -= target.length;
  return position2 >= 0 && string.slice(position2, end) == target;
}
var endsWith_default = endsWith;

// node_modules/lodash-es/_baseToPairs.js
function baseToPairs(object, props) {
  return arrayMap_default(props, function(key) {
    return [key, object[key]];
  });
}
var baseToPairs_default = baseToPairs;

// node_modules/lodash-es/_setToPairs.js
function setToPairs(set7) {
  var index4 = -1, result2 = Array(set7.size);
  set7.forEach(function(value2) {
    result2[++index4] = [value2, value2];
  });
  return result2;
}
var setToPairs_default = setToPairs;

// node_modules/lodash-es/_createToPairs.js
var mapTag7 = "[object Map]";
var setTag7 = "[object Set]";
function createToPairs(keysFunc) {
  return function(object) {
    var tag = getTag_default(object);
    if (tag == mapTag7) {
      return mapToArray_default(object);
    }
    if (tag == setTag7) {
      return setToPairs_default(object);
    }
    return baseToPairs_default(object, keysFunc(object));
  };
}
var createToPairs_default = createToPairs;

// node_modules/lodash-es/toPairs.js
var toPairs = createToPairs_default(keys_default);
var toPairs_default = toPairs;

// node_modules/lodash-es/toPairsIn.js
var toPairsIn = createToPairs_default(keysIn_default);
var toPairsIn_default = toPairsIn;

// node_modules/lodash-es/_escapeHtmlChar.js
var htmlEscapes = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
var escapeHtmlChar = basePropertyOf_default(htmlEscapes);
var escapeHtmlChar_default = escapeHtmlChar;

// node_modules/lodash-es/escape.js
var reUnescapedHtml = /[&<>"']/g;
var reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
function escape(string) {
  string = toString_default(string);
  return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar_default) : string;
}
var escape_default = escape;

// node_modules/lodash-es/escapeRegExp.js
var reRegExpChar2 = /[\\^$.*+?()[\]{}|]/g;
var reHasRegExpChar = RegExp(reRegExpChar2.source);
function escapeRegExp(string) {
  string = toString_default(string);
  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar2, "\\$&") : string;
}
var escapeRegExp_default = escapeRegExp;

// node_modules/lodash-es/_arrayEvery.js
function arrayEvery(array4, predicate) {
  var index4 = -1, length = array4 == null ? 0 : array4.length;
  while (++index4 < length) {
    if (!predicate(array4[index4], index4, array4)) {
      return false;
    }
  }
  return true;
}
var arrayEvery_default = arrayEvery;

// node_modules/lodash-es/_baseEvery.js
function baseEvery(collection, predicate) {
  var result2 = true;
  baseEach_default(collection, function(value2, index4, collection2) {
    result2 = !!predicate(value2, index4, collection2);
    return result2;
  });
  return result2;
}
var baseEvery_default = baseEvery;

// node_modules/lodash-es/every.js
function every(collection, predicate, guard) {
  var func = isArray_default(collection) ? arrayEvery_default : baseEvery_default;
  if (guard && isIterateeCall_default(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, baseIteratee_default(predicate, 3));
}
var every_default = every;

// node_modules/lodash-es/toLength.js
var MAX_ARRAY_LENGTH2 = 4294967295;
function toLength(value2) {
  return value2 ? baseClamp_default(toInteger_default(value2), 0, MAX_ARRAY_LENGTH2) : 0;
}
var toLength_default = toLength;

// node_modules/lodash-es/_baseFill.js
function baseFill(array4, value2, start2, end) {
  var length = array4.length;
  start2 = toInteger_default(start2);
  if (start2 < 0) {
    start2 = -start2 > length ? 0 : length + start2;
  }
  end = end === void 0 || end > length ? length : toInteger_default(end);
  if (end < 0) {
    end += length;
  }
  end = start2 > end ? 0 : toLength_default(end);
  while (start2 < end) {
    array4[start2++] = value2;
  }
  return array4;
}
var baseFill_default = baseFill;

// node_modules/lodash-es/fill.js
function fill(array4, value2, start2, end) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return [];
  }
  if (start2 && typeof start2 != "number" && isIterateeCall_default(array4, value2, start2)) {
    start2 = 0;
    end = length;
  }
  return baseFill_default(array4, value2, start2, end);
}
var fill_default = fill;

// node_modules/lodash-es/_baseFilter.js
function baseFilter(collection, predicate) {
  var result2 = [];
  baseEach_default(collection, function(value2, index4, collection2) {
    if (predicate(value2, index4, collection2)) {
      result2.push(value2);
    }
  });
  return result2;
}
var baseFilter_default = baseFilter;

// node_modules/lodash-es/filter.js
function filter(collection, predicate) {
  var func = isArray_default(collection) ? arrayFilter_default : baseFilter_default;
  return func(collection, baseIteratee_default(predicate, 3));
}
var filter_default = filter;

// node_modules/lodash-es/_createFind.js
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike_default(collection)) {
      var iteratee2 = baseIteratee_default(predicate, 3);
      collection = keys_default(collection);
      predicate = function(key) {
        return iteratee2(iterable[key], key, iterable);
      };
    }
    var index4 = findIndexFunc(collection, predicate, fromIndex);
    return index4 > -1 ? iterable[iteratee2 ? collection[index4] : index4] : void 0;
  };
}
var createFind_default = createFind;

// node_modules/lodash-es/findIndex.js
var nativeMax7 = Math.max;
function findIndex(array4, predicate, fromIndex) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return -1;
  }
  var index4 = fromIndex == null ? 0 : toInteger_default(fromIndex);
  if (index4 < 0) {
    index4 = nativeMax7(length + index4, 0);
  }
  return baseFindIndex_default(array4, baseIteratee_default(predicate, 3), index4);
}
var findIndex_default = findIndex;

// node_modules/lodash-es/find.js
var find = createFind_default(findIndex_default);
var find_default = find;

// node_modules/lodash-es/_baseFindKey.js
function baseFindKey(collection, predicate, eachFunc) {
  var result2;
  eachFunc(collection, function(value2, key, collection2) {
    if (predicate(value2, key, collection2)) {
      result2 = key;
      return false;
    }
  });
  return result2;
}
var baseFindKey_default = baseFindKey;

// node_modules/lodash-es/findKey.js
function findKey(object, predicate) {
  return baseFindKey_default(object, baseIteratee_default(predicate, 3), baseForOwn_default);
}
var findKey_default = findKey;

// node_modules/lodash-es/findLastIndex.js
var nativeMax8 = Math.max;
var nativeMin5 = Math.min;
function findLastIndex(array4, predicate, fromIndex) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return -1;
  }
  var index4 = length - 1;
  if (fromIndex !== void 0) {
    index4 = toInteger_default(fromIndex);
    index4 = fromIndex < 0 ? nativeMax8(length + index4, 0) : nativeMin5(index4, length - 1);
  }
  return baseFindIndex_default(array4, baseIteratee_default(predicate, 3), index4, true);
}
var findLastIndex_default = findLastIndex;

// node_modules/lodash-es/findLast.js
var findLast = createFind_default(findLastIndex_default);
var findLast_default = findLast;

// node_modules/lodash-es/findLastKey.js
function findLastKey(object, predicate) {
  return baseFindKey_default(object, baseIteratee_default(predicate, 3), baseForOwnRight_default);
}
var findLastKey_default = findLastKey;

// node_modules/lodash-es/head.js
function head(array4) {
  return array4 && array4.length ? array4[0] : void 0;
}
var head_default = head;

// node_modules/lodash-es/_baseMap.js
function baseMap(collection, iteratee2) {
  var index4 = -1, result2 = isArrayLike_default(collection) ? Array(collection.length) : [];
  baseEach_default(collection, function(value2, key, collection2) {
    result2[++index4] = iteratee2(value2, key, collection2);
  });
  return result2;
}
var baseMap_default = baseMap;

// node_modules/lodash-es/map.js
function map(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayMap_default : baseMap_default;
  return func(collection, baseIteratee_default(iteratee2, 3));
}
var map_default = map;

// node_modules/lodash-es/flatMap.js
function flatMap(collection, iteratee2) {
  return baseFlatten_default(map_default(collection, iteratee2), 1);
}
var flatMap_default = flatMap;

// node_modules/lodash-es/flatMapDeep.js
var INFINITY4 = 1 / 0;
function flatMapDeep(collection, iteratee2) {
  return baseFlatten_default(map_default(collection, iteratee2), INFINITY4);
}
var flatMapDeep_default = flatMapDeep;

// node_modules/lodash-es/flatMapDepth.js
function flatMapDepth(collection, iteratee2, depth) {
  depth = depth === void 0 ? 1 : toInteger_default(depth);
  return baseFlatten_default(map_default(collection, iteratee2), depth);
}
var flatMapDepth_default = flatMapDepth;

// node_modules/lodash-es/flattenDeep.js
var INFINITY5 = 1 / 0;
function flattenDeep(array4) {
  var length = array4 == null ? 0 : array4.length;
  return length ? baseFlatten_default(array4, INFINITY5) : [];
}
var flattenDeep_default = flattenDeep;

// node_modules/lodash-es/flattenDepth.js
function flattenDepth(array4, depth) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return [];
  }
  depth = depth === void 0 ? 1 : toInteger_default(depth);
  return baseFlatten_default(array4, depth);
}
var flattenDepth_default = flattenDepth;

// node_modules/lodash-es/flip.js
var WRAP_FLIP_FLAG3 = 512;
function flip(func) {
  return createWrap_default(func, WRAP_FLIP_FLAG3);
}
var flip_default = flip;

// node_modules/lodash-es/floor.js
var floor = createRound_default("floor");
var floor_default = floor;

// node_modules/lodash-es/_createFlow.js
var FUNC_ERROR_TEXT8 = "Expected a function";
var WRAP_CURRY_FLAG7 = 8;
var WRAP_PARTIAL_FLAG6 = 32;
var WRAP_ARY_FLAG5 = 128;
var WRAP_REARG_FLAG3 = 256;
function createFlow(fromRight) {
  return flatRest_default(function(funcs) {
    var length = funcs.length, index4 = length, prereq = LodashWrapper_default.prototype.thru;
    if (fromRight) {
      funcs.reverse();
    }
    while (index4--) {
      var func = funcs[index4];
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT8);
      }
      if (prereq && !wrapper && getFuncName_default(func) == "wrapper") {
        var wrapper = new LodashWrapper_default([], true);
      }
    }
    index4 = wrapper ? index4 : length;
    while (++index4 < length) {
      func = funcs[index4];
      var funcName = getFuncName_default(func), data = funcName == "wrapper" ? getData_default(func) : void 0;
      if (data && isLaziable_default(data[0]) && data[1] == (WRAP_ARY_FLAG5 | WRAP_CURRY_FLAG7 | WRAP_PARTIAL_FLAG6 | WRAP_REARG_FLAG3) && !data[4].length && data[9] == 1) {
        wrapper = wrapper[getFuncName_default(data[0])].apply(wrapper, data[3]);
      } else {
        wrapper = func.length == 1 && isLaziable_default(func) ? wrapper[funcName]() : wrapper.thru(func);
      }
    }
    return function() {
      var args = arguments, value2 = args[0];
      if (wrapper && args.length == 1 && isArray_default(value2)) {
        return wrapper.plant(value2).value();
      }
      var index5 = 0, result2 = length ? funcs[index5].apply(this, args) : value2;
      while (++index5 < length) {
        result2 = funcs[index5].call(this, result2);
      }
      return result2;
    };
  });
}
var createFlow_default = createFlow;

// node_modules/lodash-es/flow.js
var flow = createFlow_default();
var flow_default = flow;

// node_modules/lodash-es/flowRight.js
var flowRight = createFlow_default(true);
var flowRight_default = flowRight;

// node_modules/lodash-es/forIn.js
function forIn(object, iteratee2) {
  return object == null ? object : baseFor_default(object, castFunction_default(iteratee2), keysIn_default);
}
var forIn_default = forIn;

// node_modules/lodash-es/forInRight.js
function forInRight(object, iteratee2) {
  return object == null ? object : baseForRight_default(object, castFunction_default(iteratee2), keysIn_default);
}
var forInRight_default = forInRight;

// node_modules/lodash-es/forOwn.js
function forOwn(object, iteratee2) {
  return object && baseForOwn_default(object, castFunction_default(iteratee2));
}
var forOwn_default = forOwn;

// node_modules/lodash-es/forOwnRight.js
function forOwnRight(object, iteratee2) {
  return object && baseForOwnRight_default(object, castFunction_default(iteratee2));
}
var forOwnRight_default = forOwnRight;

// node_modules/lodash-es/fromPairs.js
function fromPairs(pairs3) {
  var index4 = -1, length = pairs3 == null ? 0 : pairs3.length, result2 = {};
  while (++index4 < length) {
    var pair = pairs3[index4];
    result2[pair[0]] = pair[1];
  }
  return result2;
}
var fromPairs_default = fromPairs;

// node_modules/lodash-es/_baseFunctions.js
function baseFunctions(object, props) {
  return arrayFilter_default(props, function(key) {
    return isFunction_default(object[key]);
  });
}
var baseFunctions_default = baseFunctions;

// node_modules/lodash-es/functions.js
function functions(object) {
  return object == null ? [] : baseFunctions_default(object, keys_default(object));
}
var functions_default = functions;

// node_modules/lodash-es/functionsIn.js
function functionsIn(object) {
  return object == null ? [] : baseFunctions_default(object, keysIn_default(object));
}
var functionsIn_default = functionsIn;

// node_modules/lodash-es/groupBy.js
var objectProto22 = Object.prototype;
var hasOwnProperty19 = objectProto22.hasOwnProperty;
var groupBy = createAggregator_default(function(result2, value2, key) {
  if (hasOwnProperty19.call(result2, key)) {
    result2[key].push(value2);
  } else {
    baseAssignValue_default(result2, key, [value2]);
  }
});
var groupBy_default = groupBy;

// node_modules/lodash-es/_baseGt.js
function baseGt(value2, other) {
  return value2 > other;
}
var baseGt_default = baseGt;

// node_modules/lodash-es/_createRelationalOperation.js
function createRelationalOperation(operator) {
  return function(value2, other) {
    if (!(typeof value2 == "string" && typeof other == "string")) {
      value2 = toNumber_default(value2);
      other = toNumber_default(other);
    }
    return operator(value2, other);
  };
}
var createRelationalOperation_default = createRelationalOperation;

// node_modules/lodash-es/gt.js
var gt = createRelationalOperation_default(baseGt_default);
var gt_default = gt;

// node_modules/lodash-es/gte.js
var gte = createRelationalOperation_default(function(value2, other) {
  return value2 >= other;
});
var gte_default = gte;

// node_modules/lodash-es/_baseHas.js
var objectProto23 = Object.prototype;
var hasOwnProperty20 = objectProto23.hasOwnProperty;
function baseHas(object, key) {
  return object != null && hasOwnProperty20.call(object, key);
}
var baseHas_default = baseHas;

// node_modules/lodash-es/has.js
function has(object, path3) {
  return object != null && hasPath_default(object, path3, baseHas_default);
}
var has_default = has;

// node_modules/lodash-es/_baseInRange.js
var nativeMax9 = Math.max;
var nativeMin6 = Math.min;
function baseInRange(number5, start2, end) {
  return number5 >= nativeMin6(start2, end) && number5 < nativeMax9(start2, end);
}
var baseInRange_default = baseInRange;

// node_modules/lodash-es/inRange.js
function inRange(number5, start2, end) {
  start2 = toFinite_default(start2);
  if (end === void 0) {
    end = start2;
    start2 = 0;
  } else {
    end = toFinite_default(end);
  }
  number5 = toNumber_default(number5);
  return baseInRange_default(number5, start2, end);
}
var inRange_default = inRange;

// node_modules/lodash-es/isString.js
var stringTag5 = "[object String]";
function isString(value2) {
  return typeof value2 == "string" || !isArray_default(value2) && isObjectLike_default(value2) && baseGetTag_default(value2) == stringTag5;
}
var isString_default = isString;

// node_modules/lodash-es/_baseValues.js
function baseValues(object, props) {
  return arrayMap_default(props, function(key) {
    return object[key];
  });
}
var baseValues_default = baseValues;

// node_modules/lodash-es/values.js
function values(object) {
  return object == null ? [] : baseValues_default(object, keys_default(object));
}
var values_default = values;

// node_modules/lodash-es/includes.js
var nativeMax10 = Math.max;
function includes(collection, value2, fromIndex, guard) {
  collection = isArrayLike_default(collection) ? collection : values_default(collection);
  fromIndex = fromIndex && !guard ? toInteger_default(fromIndex) : 0;
  var length = collection.length;
  if (fromIndex < 0) {
    fromIndex = nativeMax10(length + fromIndex, 0);
  }
  return isString_default(collection) ? fromIndex <= length && collection.indexOf(value2, fromIndex) > -1 : !!length && baseIndexOf_default(collection, value2, fromIndex) > -1;
}
var includes_default = includes;

// node_modules/lodash-es/indexOf.js
var nativeMax11 = Math.max;
function indexOf(array4, value2, fromIndex) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return -1;
  }
  var index4 = fromIndex == null ? 0 : toInteger_default(fromIndex);
  if (index4 < 0) {
    index4 = nativeMax11(length + index4, 0);
  }
  return baseIndexOf_default(array4, value2, index4);
}
var indexOf_default = indexOf;

// node_modules/lodash-es/initial.js
function initial(array4) {
  var length = array4 == null ? 0 : array4.length;
  return length ? baseSlice_default(array4, 0, -1) : [];
}
var initial_default = initial;

// node_modules/lodash-es/_baseIntersection.js
var nativeMin7 = Math.min;
function baseIntersection(arrays, iteratee2, comparator) {
  var includes2 = comparator ? arrayIncludesWith_default : arrayIncludes_default, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array(othLength), maxLength = Infinity, result2 = [];
  while (othIndex--) {
    var array4 = arrays[othIndex];
    if (othIndex && iteratee2) {
      array4 = arrayMap_default(array4, baseUnary_default(iteratee2));
    }
    maxLength = nativeMin7(array4.length, maxLength);
    caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array4.length >= 120) ? new SetCache_default(othIndex && array4) : void 0;
  }
  array4 = arrays[0];
  var index4 = -1, seen = caches[0];
  outer:
    while (++index4 < length && result2.length < maxLength) {
      var value2 = array4[index4], computed = iteratee2 ? iteratee2(value2) : value2;
      value2 = comparator || value2 !== 0 ? value2 : 0;
      if (!(seen ? cacheHas_default(seen, computed) : includes2(result2, computed, comparator))) {
        othIndex = othLength;
        while (--othIndex) {
          var cache = caches[othIndex];
          if (!(cache ? cacheHas_default(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
            continue outer;
          }
        }
        if (seen) {
          seen.push(computed);
        }
        result2.push(value2);
      }
    }
  return result2;
}
var baseIntersection_default = baseIntersection;

// node_modules/lodash-es/_castArrayLikeObject.js
function castArrayLikeObject(value2) {
  return isArrayLikeObject_default(value2) ? value2 : [];
}
var castArrayLikeObject_default = castArrayLikeObject;

// node_modules/lodash-es/intersection.js
var intersection = baseRest_default(function(arrays) {
  var mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped) : [];
});
var intersection_default = intersection;

// node_modules/lodash-es/intersectionBy.js
var intersectionBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays), mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  if (iteratee2 === last_default(mapped)) {
    iteratee2 = void 0;
  } else {
    mapped.pop();
  }
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped, baseIteratee_default(iteratee2, 2)) : [];
});
var intersectionBy_default = intersectionBy;

// node_modules/lodash-es/intersectionWith.js
var intersectionWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays), mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  comparator = typeof comparator == "function" ? comparator : void 0;
  if (comparator) {
    mapped.pop();
  }
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped, void 0, comparator) : [];
});
var intersectionWith_default = intersectionWith;

// node_modules/lodash-es/_baseInverter.js
function baseInverter(object, setter, iteratee2, accumulator) {
  baseForOwn_default(object, function(value2, key, object2) {
    setter(accumulator, iteratee2(value2), key, object2);
  });
  return accumulator;
}
var baseInverter_default = baseInverter;

// node_modules/lodash-es/_createInverter.js
function createInverter(setter, toIteratee) {
  return function(object, iteratee2) {
    return baseInverter_default(object, setter, toIteratee(iteratee2), {});
  };
}
var createInverter_default = createInverter;

// node_modules/lodash-es/invert.js
var objectProto24 = Object.prototype;
var nativeObjectToString3 = objectProto24.toString;
var invert = createInverter_default(function(result2, value2, key) {
  if (value2 != null && typeof value2.toString != "function") {
    value2 = nativeObjectToString3.call(value2);
  }
  result2[value2] = key;
}, constant_default(identity_default));
var invert_default = invert;

// node_modules/lodash-es/invertBy.js
var objectProto25 = Object.prototype;
var hasOwnProperty21 = objectProto25.hasOwnProperty;
var nativeObjectToString4 = objectProto25.toString;
var invertBy = createInverter_default(function(result2, value2, key) {
  if (value2 != null && typeof value2.toString != "function") {
    value2 = nativeObjectToString4.call(value2);
  }
  if (hasOwnProperty21.call(result2, value2)) {
    result2[value2].push(key);
  } else {
    result2[value2] = [key];
  }
}, baseIteratee_default);
var invertBy_default = invertBy;

// node_modules/lodash-es/_parent.js
function parent(object, path3) {
  return path3.length < 2 ? object : baseGet_default(object, baseSlice_default(path3, 0, -1));
}
var parent_default = parent;

// node_modules/lodash-es/_baseInvoke.js
function baseInvoke(object, path3, args) {
  path3 = castPath_default(path3, object);
  object = parent_default(object, path3);
  var func = object == null ? object : object[toKey_default(last_default(path3))];
  return func == null ? void 0 : apply_default(func, object, args);
}
var baseInvoke_default = baseInvoke;

// node_modules/lodash-es/invoke.js
var invoke = baseRest_default(baseInvoke_default);
var invoke_default = invoke;

// node_modules/lodash-es/invokeMap.js
var invokeMap = baseRest_default(function(collection, path3, args) {
  var index4 = -1, isFunc = typeof path3 == "function", result2 = isArrayLike_default(collection) ? Array(collection.length) : [];
  baseEach_default(collection, function(value2) {
    result2[++index4] = isFunc ? apply_default(path3, value2, args) : baseInvoke_default(value2, path3, args);
  });
  return result2;
});
var invokeMap_default = invokeMap;

// node_modules/lodash-es/_baseIsArrayBuffer.js
var arrayBufferTag5 = "[object ArrayBuffer]";
function baseIsArrayBuffer(value2) {
  return isObjectLike_default(value2) && baseGetTag_default(value2) == arrayBufferTag5;
}
var baseIsArrayBuffer_default = baseIsArrayBuffer;

// node_modules/lodash-es/isArrayBuffer.js
var nodeIsArrayBuffer = nodeUtil_default && nodeUtil_default.isArrayBuffer;
var isArrayBuffer = nodeIsArrayBuffer ? baseUnary_default(nodeIsArrayBuffer) : baseIsArrayBuffer_default;
var isArrayBuffer_default = isArrayBuffer;

// node_modules/lodash-es/isBoolean.js
var boolTag5 = "[object Boolean]";
function isBoolean(value2) {
  return value2 === true || value2 === false || isObjectLike_default(value2) && baseGetTag_default(value2) == boolTag5;
}
var isBoolean_default = isBoolean;

// node_modules/lodash-es/_baseIsDate.js
var dateTag5 = "[object Date]";
function baseIsDate(value2) {
  return isObjectLike_default(value2) && baseGetTag_default(value2) == dateTag5;
}
var baseIsDate_default = baseIsDate;

// node_modules/lodash-es/isDate.js
var nodeIsDate = nodeUtil_default && nodeUtil_default.isDate;
var isDate = nodeIsDate ? baseUnary_default(nodeIsDate) : baseIsDate_default;
var isDate_default = isDate;

// node_modules/lodash-es/isElement.js
function isElement(value2) {
  return isObjectLike_default(value2) && value2.nodeType === 1 && !isPlainObject_default(value2);
}
var isElement_default = isElement;

// node_modules/lodash-es/isEmpty.js
var mapTag8 = "[object Map]";
var setTag8 = "[object Set]";
var objectProto26 = Object.prototype;
var hasOwnProperty22 = objectProto26.hasOwnProperty;
function isEmpty(value2) {
  if (value2 == null) {
    return true;
  }
  if (isArrayLike_default(value2) && (isArray_default(value2) || typeof value2 == "string" || typeof value2.splice == "function" || isBuffer_default(value2) || isTypedArray_default(value2) || isArguments_default(value2))) {
    return !value2.length;
  }
  var tag = getTag_default(value2);
  if (tag == mapTag8 || tag == setTag8) {
    return !value2.size;
  }
  if (isPrototype_default(value2)) {
    return !baseKeys_default(value2).length;
  }
  for (var key in value2) {
    if (hasOwnProperty22.call(value2, key)) {
      return false;
    }
  }
  return true;
}
var isEmpty_default = isEmpty;

// node_modules/lodash-es/isEqual.js
function isEqual(value2, other) {
  return baseIsEqual_default(value2, other);
}
var isEqual_default = isEqual;

// node_modules/lodash-es/isEqualWith.js
function isEqualWith(value2, other, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  var result2 = customizer ? customizer(value2, other) : void 0;
  return result2 === void 0 ? baseIsEqual_default(value2, other, void 0, customizer) : !!result2;
}
var isEqualWith_default = isEqualWith;

// node_modules/lodash-es/isFinite.js
var nativeIsFinite2 = root_default.isFinite;
function isFinite2(value2) {
  return typeof value2 == "number" && nativeIsFinite2(value2);
}
var isFinite_default = isFinite2;

// node_modules/lodash-es/isInteger.js
function isInteger(value2) {
  return typeof value2 == "number" && value2 == toInteger_default(value2);
}
var isInteger_default = isInteger;

// node_modules/lodash-es/isMatch.js
function isMatch(object, source) {
  return object === source || baseIsMatch_default(object, source, getMatchData_default(source));
}
var isMatch_default = isMatch;

// node_modules/lodash-es/isMatchWith.js
function isMatchWith(object, source, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseIsMatch_default(object, source, getMatchData_default(source), customizer);
}
var isMatchWith_default = isMatchWith;

// node_modules/lodash-es/isNumber.js
var numberTag5 = "[object Number]";
function isNumber(value2) {
  return typeof value2 == "number" || isObjectLike_default(value2) && baseGetTag_default(value2) == numberTag5;
}
var isNumber_default = isNumber;

// node_modules/lodash-es/isNaN.js
function isNaN2(value2) {
  return isNumber_default(value2) && value2 != +value2;
}
var isNaN_default = isNaN2;

// node_modules/lodash-es/_isMaskable.js
var isMaskable = coreJsData_default ? isFunction_default : stubFalse_default;
var isMaskable_default = isMaskable;

// node_modules/lodash-es/isNative.js
var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.";
function isNative(value2) {
  if (isMaskable_default(value2)) {
    throw new Error(CORE_ERROR_TEXT);
  }
  return baseIsNative_default(value2);
}
var isNative_default = isNative;

// node_modules/lodash-es/isNil.js
function isNil(value2) {
  return value2 == null;
}
var isNil_default = isNil;

// node_modules/lodash-es/isNull.js
function isNull(value2) {
  return value2 === null;
}
var isNull_default = isNull;

// node_modules/lodash-es/_baseIsRegExp.js
var regexpTag5 = "[object RegExp]";
function baseIsRegExp(value2) {
  return isObjectLike_default(value2) && baseGetTag_default(value2) == regexpTag5;
}
var baseIsRegExp_default = baseIsRegExp;

// node_modules/lodash-es/isRegExp.js
var nodeIsRegExp = nodeUtil_default && nodeUtil_default.isRegExp;
var isRegExp = nodeIsRegExp ? baseUnary_default(nodeIsRegExp) : baseIsRegExp_default;
var isRegExp_default = isRegExp;

// node_modules/lodash-es/isSafeInteger.js
var MAX_SAFE_INTEGER3 = 9007199254740991;
function isSafeInteger(value2) {
  return isInteger_default(value2) && value2 >= -MAX_SAFE_INTEGER3 && value2 <= MAX_SAFE_INTEGER3;
}
var isSafeInteger_default = isSafeInteger;

// node_modules/lodash-es/isUndefined.js
function isUndefined(value2) {
  return value2 === void 0;
}
var isUndefined_default = isUndefined;

// node_modules/lodash-es/isWeakMap.js
var weakMapTag4 = "[object WeakMap]";
function isWeakMap(value2) {
  return isObjectLike_default(value2) && getTag_default(value2) == weakMapTag4;
}
var isWeakMap_default = isWeakMap;

// node_modules/lodash-es/isWeakSet.js
var weakSetTag = "[object WeakSet]";
function isWeakSet(value2) {
  return isObjectLike_default(value2) && baseGetTag_default(value2) == weakSetTag;
}
var isWeakSet_default = isWeakSet;

// node_modules/lodash-es/iteratee.js
var CLONE_DEEP_FLAG5 = 1;
function iteratee(func) {
  return baseIteratee_default(typeof func == "function" ? func : baseClone_default(func, CLONE_DEEP_FLAG5));
}
var iteratee_default = iteratee;

// node_modules/lodash-es/join.js
var arrayProto2 = Array.prototype;
var nativeJoin = arrayProto2.join;
function join(array4, separator) {
  return array4 == null ? "" : nativeJoin.call(array4, separator);
}
var join_default = join;

// node_modules/lodash-es/kebabCase.js
var kebabCase = createCompounder_default(function(result2, word, index4) {
  return result2 + (index4 ? "-" : "") + word.toLowerCase();
});
var kebabCase_default = kebabCase;

// node_modules/lodash-es/keyBy.js
var keyBy = createAggregator_default(function(result2, value2, key) {
  baseAssignValue_default(result2, key, value2);
});
var keyBy_default = keyBy;

// node_modules/lodash-es/_strictLastIndexOf.js
function strictLastIndexOf(array4, value2, fromIndex) {
  var index4 = fromIndex + 1;
  while (index4--) {
    if (array4[index4] === value2) {
      return index4;
    }
  }
  return index4;
}
var strictLastIndexOf_default = strictLastIndexOf;

// node_modules/lodash-es/lastIndexOf.js
var nativeMax12 = Math.max;
var nativeMin8 = Math.min;
function lastIndexOf(array4, value2, fromIndex) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return -1;
  }
  var index4 = length;
  if (fromIndex !== void 0) {
    index4 = toInteger_default(fromIndex);
    index4 = index4 < 0 ? nativeMax12(length + index4, 0) : nativeMin8(index4, length - 1);
  }
  return value2 === value2 ? strictLastIndexOf_default(array4, value2, index4) : baseFindIndex_default(array4, baseIsNaN_default, index4, true);
}
var lastIndexOf_default = lastIndexOf;

// node_modules/lodash-es/lowerCase.js
var lowerCase = createCompounder_default(function(result2, word, index4) {
  return result2 + (index4 ? " " : "") + word.toLowerCase();
});
var lowerCase_default = lowerCase;

// node_modules/lodash-es/lowerFirst.js
var lowerFirst = createCaseFirst_default("toLowerCase");
var lowerFirst_default = lowerFirst;

// node_modules/lodash-es/_baseLt.js
function baseLt(value2, other) {
  return value2 < other;
}
var baseLt_default = baseLt;

// node_modules/lodash-es/lt.js
var lt = createRelationalOperation_default(baseLt_default);
var lt_default = lt;

// node_modules/lodash-es/lte.js
var lte = createRelationalOperation_default(function(value2, other) {
  return value2 <= other;
});
var lte_default = lte;

// node_modules/lodash-es/mapKeys.js
function mapKeys(object, iteratee2) {
  var result2 = {};
  iteratee2 = baseIteratee_default(iteratee2, 3);
  baseForOwn_default(object, function(value2, key, object2) {
    baseAssignValue_default(result2, iteratee2(value2, key, object2), value2);
  });
  return result2;
}
var mapKeys_default = mapKeys;

// node_modules/lodash-es/mapValues.js
function mapValues(object, iteratee2) {
  var result2 = {};
  iteratee2 = baseIteratee_default(iteratee2, 3);
  baseForOwn_default(object, function(value2, key, object2) {
    baseAssignValue_default(result2, key, iteratee2(value2, key, object2));
  });
  return result2;
}
var mapValues_default = mapValues;

// node_modules/lodash-es/matches.js
var CLONE_DEEP_FLAG6 = 1;
function matches(source) {
  return baseMatches_default(baseClone_default(source, CLONE_DEEP_FLAG6));
}
var matches_default = matches;

// node_modules/lodash-es/matchesProperty.js
var CLONE_DEEP_FLAG7 = 1;
function matchesProperty(path3, srcValue) {
  return baseMatchesProperty_default(path3, baseClone_default(srcValue, CLONE_DEEP_FLAG7));
}
var matchesProperty_default = matchesProperty;

// node_modules/lodash-es/_baseExtremum.js
function baseExtremum(array4, iteratee2, comparator) {
  var index4 = -1, length = array4.length;
  while (++index4 < length) {
    var value2 = array4[index4], current = iteratee2(value2);
    if (current != null && (computed === void 0 ? current === current && !isSymbol_default(current) : comparator(current, computed))) {
      var computed = current, result2 = value2;
    }
  }
  return result2;
}
var baseExtremum_default = baseExtremum;

// node_modules/lodash-es/max.js
function max(array4) {
  return array4 && array4.length ? baseExtremum_default(array4, identity_default, baseGt_default) : void 0;
}
var max_default = max;

// node_modules/lodash-es/maxBy.js
function maxBy(array4, iteratee2) {
  return array4 && array4.length ? baseExtremum_default(array4, baseIteratee_default(iteratee2, 2), baseGt_default) : void 0;
}
var maxBy_default = maxBy;

// node_modules/lodash-es/_baseSum.js
function baseSum(array4, iteratee2) {
  var result2, index4 = -1, length = array4.length;
  while (++index4 < length) {
    var current = iteratee2(array4[index4]);
    if (current !== void 0) {
      result2 = result2 === void 0 ? current : result2 + current;
    }
  }
  return result2;
}
var baseSum_default = baseSum;

// node_modules/lodash-es/_baseMean.js
var NAN3 = 0 / 0;
function baseMean(array4, iteratee2) {
  var length = array4 == null ? 0 : array4.length;
  return length ? baseSum_default(array4, iteratee2) / length : NAN3;
}
var baseMean_default = baseMean;

// node_modules/lodash-es/mean.js
function mean(array4) {
  return baseMean_default(array4, identity_default);
}
var mean_default = mean;

// node_modules/lodash-es/meanBy.js
function meanBy(array4, iteratee2) {
  return baseMean_default(array4, baseIteratee_default(iteratee2, 2));
}
var meanBy_default = meanBy;

// node_modules/lodash-es/merge.js
var merge = createAssigner_default(function(object, source, srcIndex) {
  baseMerge_default(object, source, srcIndex);
});
var merge_default = merge;

// node_modules/lodash-es/method.js
var method = baseRest_default(function(path3, args) {
  return function(object) {
    return baseInvoke_default(object, path3, args);
  };
});
var method_default = method;

// node_modules/lodash-es/methodOf.js
var methodOf = baseRest_default(function(object, args) {
  return function(path3) {
    return baseInvoke_default(object, path3, args);
  };
});
var methodOf_default = methodOf;

// node_modules/lodash-es/min.js
function min(array4) {
  return array4 && array4.length ? baseExtremum_default(array4, identity_default, baseLt_default) : void 0;
}
var min_default = min;

// node_modules/lodash-es/minBy.js
function minBy(array4, iteratee2) {
  return array4 && array4.length ? baseExtremum_default(array4, baseIteratee_default(iteratee2, 2), baseLt_default) : void 0;
}
var minBy_default = minBy;

// node_modules/lodash-es/mixin.js
function mixin(object, source, options2) {
  var props = keys_default(source), methodNames = baseFunctions_default(source, props);
  var chain2 = !(isObject_default(options2) && "chain" in options2) || !!options2.chain, isFunc = isFunction_default(object);
  arrayEach_default(methodNames, function(methodName) {
    var func = source[methodName];
    object[methodName] = func;
    if (isFunc) {
      object.prototype[methodName] = function() {
        var chainAll = this.__chain__;
        if (chain2 || chainAll) {
          var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray_default(this.__actions__);
          actions.push({ "func": func, "args": arguments, "thisArg": object });
          result2.__chain__ = chainAll;
          return result2;
        }
        return func.apply(object, arrayPush_default([this.value()], arguments));
      };
    }
  });
  return object;
}
var mixin_default = mixin;

// node_modules/lodash-es/multiply.js
var multiply = createMathOperation_default(function(multiplier, multiplicand) {
  return multiplier * multiplicand;
}, 1);
var multiply_default = multiply;

// node_modules/lodash-es/negate.js
var FUNC_ERROR_TEXT9 = "Expected a function";
function negate(predicate) {
  if (typeof predicate != "function") {
    throw new TypeError(FUNC_ERROR_TEXT9);
  }
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0:
        return !predicate.call(this);
      case 1:
        return !predicate.call(this, args[0]);
      case 2:
        return !predicate.call(this, args[0], args[1]);
      case 3:
        return !predicate.call(this, args[0], args[1], args[2]);
    }
    return !predicate.apply(this, args);
  };
}
var negate_default = negate;

// node_modules/lodash-es/_iteratorToArray.js
function iteratorToArray(iterator) {
  var data, result2 = [];
  while (!(data = iterator.next()).done) {
    result2.push(data.value);
  }
  return result2;
}
var iteratorToArray_default = iteratorToArray;

// node_modules/lodash-es/toArray.js
var mapTag9 = "[object Map]";
var setTag9 = "[object Set]";
var symIterator = Symbol_default ? Symbol_default.iterator : void 0;
function toArray(value2) {
  if (!value2) {
    return [];
  }
  if (isArrayLike_default(value2)) {
    return isString_default(value2) ? stringToArray_default(value2) : copyArray_default(value2);
  }
  if (symIterator && value2[symIterator]) {
    return iteratorToArray_default(value2[symIterator]());
  }
  var tag = getTag_default(value2), func = tag == mapTag9 ? mapToArray_default : tag == setTag9 ? setToArray_default : values_default;
  return func(value2);
}
var toArray_default = toArray;

// node_modules/lodash-es/next.js
function wrapperNext() {
  if (this.__values__ === void 0) {
    this.__values__ = toArray_default(this.value());
  }
  var done = this.__index__ >= this.__values__.length, value2 = done ? void 0 : this.__values__[this.__index__++];
  return { "done": done, "value": value2 };
}
var next_default = wrapperNext;

// node_modules/lodash-es/_baseNth.js
function baseNth(array4, n) {
  var length = array4.length;
  if (!length) {
    return;
  }
  n += n < 0 ? length : 0;
  return isIndex_default(n, length) ? array4[n] : void 0;
}
var baseNth_default = baseNth;

// node_modules/lodash-es/nth.js
function nth(array4, n) {
  return array4 && array4.length ? baseNth_default(array4, toInteger_default(n)) : void 0;
}
var nth_default = nth;

// node_modules/lodash-es/nthArg.js
function nthArg(n) {
  n = toInteger_default(n);
  return baseRest_default(function(args) {
    return baseNth_default(args, n);
  });
}
var nthArg_default = nthArg;

// node_modules/lodash-es/_baseUnset.js
function baseUnset(object, path3) {
  path3 = castPath_default(path3, object);
  object = parent_default(object, path3);
  return object == null || delete object[toKey_default(last_default(path3))];
}
var baseUnset_default = baseUnset;

// node_modules/lodash-es/_customOmitClone.js
function customOmitClone(value2) {
  return isPlainObject_default(value2) ? void 0 : value2;
}
var customOmitClone_default = customOmitClone;

// node_modules/lodash-es/omit.js
var CLONE_DEEP_FLAG8 = 1;
var CLONE_FLAT_FLAG2 = 2;
var CLONE_SYMBOLS_FLAG6 = 4;
var omit = flatRest_default(function(object, paths) {
  var result2 = {};
  if (object == null) {
    return result2;
  }
  var isDeep = false;
  paths = arrayMap_default(paths, function(path3) {
    path3 = castPath_default(path3, object);
    isDeep || (isDeep = path3.length > 1);
    return path3;
  });
  copyObject_default(object, getAllKeysIn_default(object), result2);
  if (isDeep) {
    result2 = baseClone_default(result2, CLONE_DEEP_FLAG8 | CLONE_FLAT_FLAG2 | CLONE_SYMBOLS_FLAG6, customOmitClone_default);
  }
  var length = paths.length;
  while (length--) {
    baseUnset_default(result2, paths[length]);
  }
  return result2;
});
var omit_default = omit;

// node_modules/lodash-es/_baseSet.js
function baseSet(object, path3, value2, customizer) {
  if (!isObject_default(object)) {
    return object;
  }
  path3 = castPath_default(path3, object);
  var index4 = -1, length = path3.length, lastIndex = length - 1, nested = object;
  while (nested != null && ++index4 < length) {
    var key = toKey_default(path3[index4]), newValue = value2;
    if (key === "__proto__" || key === "constructor" || key === "prototype") {
      return object;
    }
    if (index4 != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : void 0;
      if (newValue === void 0) {
        newValue = isObject_default(objValue) ? objValue : isIndex_default(path3[index4 + 1]) ? [] : {};
      }
    }
    assignValue_default(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}
var baseSet_default = baseSet;

// node_modules/lodash-es/_basePickBy.js
function basePickBy(object, paths, predicate) {
  var index4 = -1, length = paths.length, result2 = {};
  while (++index4 < length) {
    var path3 = paths[index4], value2 = baseGet_default(object, path3);
    if (predicate(value2, path3)) {
      baseSet_default(result2, castPath_default(path3, object), value2);
    }
  }
  return result2;
}
var basePickBy_default = basePickBy;

// node_modules/lodash-es/pickBy.js
function pickBy(object, predicate) {
  if (object == null) {
    return {};
  }
  var props = arrayMap_default(getAllKeysIn_default(object), function(prop) {
    return [prop];
  });
  predicate = baseIteratee_default(predicate);
  return basePickBy_default(object, props, function(value2, path3) {
    return predicate(value2, path3[0]);
  });
}
var pickBy_default = pickBy;

// node_modules/lodash-es/omitBy.js
function omitBy(object, predicate) {
  return pickBy_default(object, negate_default(baseIteratee_default(predicate)));
}
var omitBy_default = omitBy;

// node_modules/lodash-es/once.js
function once(func) {
  return before_default(2, func);
}
var once_default = once;

// node_modules/lodash-es/_baseSortBy.js
function baseSortBy(array4, comparer) {
  var length = array4.length;
  array4.sort(comparer);
  while (length--) {
    array4[length] = array4[length].value;
  }
  return array4;
}
var baseSortBy_default = baseSortBy;

// node_modules/lodash-es/_compareAscending.js
function compareAscending(value2, other) {
  if (value2 !== other) {
    var valIsDefined = value2 !== void 0, valIsNull = value2 === null, valIsReflexive = value2 === value2, valIsSymbol = isSymbol_default(value2);
    var othIsDefined = other !== void 0, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol_default(other);
    if (!othIsNull && !othIsSymbol && !valIsSymbol && value2 > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
      return 1;
    }
    if (!valIsNull && !valIsSymbol && !othIsSymbol && value2 < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}
var compareAscending_default = compareAscending;

// node_modules/lodash-es/_compareMultiple.js
function compareMultiple(object, other, orders) {
  var index4 = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
  while (++index4 < length) {
    var result2 = compareAscending_default(objCriteria[index4], othCriteria[index4]);
    if (result2) {
      if (index4 >= ordersLength) {
        return result2;
      }
      var order = orders[index4];
      return result2 * (order == "desc" ? -1 : 1);
    }
  }
  return object.index - other.index;
}
var compareMultiple_default = compareMultiple;

// node_modules/lodash-es/_baseOrderBy.js
function baseOrderBy(collection, iteratees, orders) {
  if (iteratees.length) {
    iteratees = arrayMap_default(iteratees, function(iteratee2) {
      if (isArray_default(iteratee2)) {
        return function(value2) {
          return baseGet_default(value2, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
        };
      }
      return iteratee2;
    });
  } else {
    iteratees = [identity_default];
  }
  var index4 = -1;
  iteratees = arrayMap_default(iteratees, baseUnary_default(baseIteratee_default));
  var result2 = baseMap_default(collection, function(value2, key, collection2) {
    var criteria = arrayMap_default(iteratees, function(iteratee2) {
      return iteratee2(value2);
    });
    return { "criteria": criteria, "index": ++index4, "value": value2 };
  });
  return baseSortBy_default(result2, function(object, other) {
    return compareMultiple_default(object, other, orders);
  });
}
var baseOrderBy_default = baseOrderBy;

// node_modules/lodash-es/orderBy.js
function orderBy(collection, iteratees, orders, guard) {
  if (collection == null) {
    return [];
  }
  if (!isArray_default(iteratees)) {
    iteratees = iteratees == null ? [] : [iteratees];
  }
  orders = guard ? void 0 : orders;
  if (!isArray_default(orders)) {
    orders = orders == null ? [] : [orders];
  }
  return baseOrderBy_default(collection, iteratees, orders);
}
var orderBy_default = orderBy;

// node_modules/lodash-es/_createOver.js
function createOver(arrayFunc) {
  return flatRest_default(function(iteratees) {
    iteratees = arrayMap_default(iteratees, baseUnary_default(baseIteratee_default));
    return baseRest_default(function(args) {
      var thisArg = this;
      return arrayFunc(iteratees, function(iteratee2) {
        return apply_default(iteratee2, thisArg, args);
      });
    });
  });
}
var createOver_default = createOver;

// node_modules/lodash-es/over.js
var over = createOver_default(arrayMap_default);
var over_default = over;

// node_modules/lodash-es/_castRest.js
var castRest = baseRest_default;
var castRest_default = castRest;

// node_modules/lodash-es/overArgs.js
var nativeMin9 = Math.min;
var overArgs = castRest_default(function(func, transforms) {
  transforms = transforms.length == 1 && isArray_default(transforms[0]) ? arrayMap_default(transforms[0], baseUnary_default(baseIteratee_default)) : arrayMap_default(baseFlatten_default(transforms, 1), baseUnary_default(baseIteratee_default));
  var funcsLength = transforms.length;
  return baseRest_default(function(args) {
    var index4 = -1, length = nativeMin9(args.length, funcsLength);
    while (++index4 < length) {
      args[index4] = transforms[index4].call(this, args[index4]);
    }
    return apply_default(func, this, args);
  });
});
var overArgs_default = overArgs;

// node_modules/lodash-es/overEvery.js
var overEvery = createOver_default(arrayEvery_default);
var overEvery_default = overEvery;

// node_modules/lodash-es/overSome.js
var overSome = createOver_default(arraySome_default);
var overSome_default = overSome;

// node_modules/lodash-es/_baseRepeat.js
var MAX_SAFE_INTEGER4 = 9007199254740991;
var nativeFloor = Math.floor;
function baseRepeat(string, n) {
  var result2 = "";
  if (!string || n < 1 || n > MAX_SAFE_INTEGER4) {
    return result2;
  }
  do {
    if (n % 2) {
      result2 += string;
    }
    n = nativeFloor(n / 2);
    if (n) {
      string += string;
    }
  } while (n);
  return result2;
}
var baseRepeat_default = baseRepeat;

// node_modules/lodash-es/_asciiSize.js
var asciiSize = baseProperty_default("length");
var asciiSize_default = asciiSize;

// node_modules/lodash-es/_unicodeSize.js
var rsAstralRange4 = "\\ud800-\\udfff";
var rsComboMarksRange5 = "\\u0300-\\u036f";
var reComboHalfMarksRange5 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange5 = "\\u20d0-\\u20ff";
var rsComboRange5 = rsComboMarksRange5 + reComboHalfMarksRange5 + rsComboSymbolsRange5;
var rsVarRange4 = "\\ufe0e\\ufe0f";
var rsAstral2 = "[" + rsAstralRange4 + "]";
var rsCombo4 = "[" + rsComboRange5 + "]";
var rsFitz3 = "\\ud83c[\\udffb-\\udfff]";
var rsModifier3 = "(?:" + rsCombo4 + "|" + rsFitz3 + ")";
var rsNonAstral3 = "[^" + rsAstralRange4 + "]";
var rsRegional3 = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair3 = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsZWJ4 = "\\u200d";
var reOptMod3 = rsModifier3 + "?";
var rsOptVar3 = "[" + rsVarRange4 + "]?";
var rsOptJoin3 = "(?:" + rsZWJ4 + "(?:" + [rsNonAstral3, rsRegional3, rsSurrPair3].join("|") + ")" + rsOptVar3 + reOptMod3 + ")*";
var rsSeq3 = rsOptVar3 + reOptMod3 + rsOptJoin3;
var rsSymbol2 = "(?:" + [rsNonAstral3 + rsCombo4 + "?", rsCombo4, rsRegional3, rsSurrPair3, rsAstral2].join("|") + ")";
var reUnicode2 = RegExp(rsFitz3 + "(?=" + rsFitz3 + ")|" + rsSymbol2 + rsSeq3, "g");
function unicodeSize(string) {
  var result2 = reUnicode2.lastIndex = 0;
  while (reUnicode2.test(string)) {
    ++result2;
  }
  return result2;
}
var unicodeSize_default = unicodeSize;

// node_modules/lodash-es/_stringSize.js
function stringSize(string) {
  return hasUnicode_default(string) ? unicodeSize_default(string) : asciiSize_default(string);
}
var stringSize_default = stringSize;

// node_modules/lodash-es/_createPadding.js
var nativeCeil2 = Math.ceil;
function createPadding(length, chars) {
  chars = chars === void 0 ? " " : baseToString_default(chars);
  var charsLength = chars.length;
  if (charsLength < 2) {
    return charsLength ? baseRepeat_default(chars, length) : chars;
  }
  var result2 = baseRepeat_default(chars, nativeCeil2(length / stringSize_default(chars)));
  return hasUnicode_default(chars) ? castSlice_default(stringToArray_default(result2), 0, length).join("") : result2.slice(0, length);
}
var createPadding_default = createPadding;

// node_modules/lodash-es/pad.js
var nativeCeil3 = Math.ceil;
var nativeFloor2 = Math.floor;
function pad(string, length, chars) {
  string = toString_default(string);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string) : 0;
  if (!length || strLength >= length) {
    return string;
  }
  var mid = (length - strLength) / 2;
  return createPadding_default(nativeFloor2(mid), chars) + string + createPadding_default(nativeCeil3(mid), chars);
}
var pad_default = pad;

// node_modules/lodash-es/padEnd.js
function padEnd(string, length, chars) {
  string = toString_default(string);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string) : 0;
  return length && strLength < length ? string + createPadding_default(length - strLength, chars) : string;
}
var padEnd_default = padEnd;

// node_modules/lodash-es/padStart.js
function padStart(string, length, chars) {
  string = toString_default(string);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string) : 0;
  return length && strLength < length ? createPadding_default(length - strLength, chars) + string : string;
}
var padStart_default = padStart;

// node_modules/lodash-es/parseInt.js
var reTrimStart2 = /^\s+/;
var nativeParseInt = root_default.parseInt;
function parseInt2(string, radix, guard) {
  if (guard || radix == null) {
    radix = 0;
  } else if (radix) {
    radix = +radix;
  }
  return nativeParseInt(toString_default(string).replace(reTrimStart2, ""), radix || 0);
}
var parseInt_default = parseInt2;

// node_modules/lodash-es/partial.js
var WRAP_PARTIAL_FLAG7 = 32;
var partial = baseRest_default(function(func, partials) {
  var holders = replaceHolders_default(partials, getHolder_default(partial));
  return createWrap_default(func, WRAP_PARTIAL_FLAG7, void 0, partials, holders);
});
partial.placeholder = {};
var partial_default = partial;

// node_modules/lodash-es/partialRight.js
var WRAP_PARTIAL_RIGHT_FLAG4 = 64;
var partialRight = baseRest_default(function(func, partials) {
  var holders = replaceHolders_default(partials, getHolder_default(partialRight));
  return createWrap_default(func, WRAP_PARTIAL_RIGHT_FLAG4, void 0, partials, holders);
});
partialRight.placeholder = {};
var partialRight_default = partialRight;

// node_modules/lodash-es/partition.js
var partition = createAggregator_default(function(result2, value2, key) {
  result2[key ? 0 : 1].push(value2);
}, function() {
  return [[], []];
});
var partition_default = partition;

// node_modules/lodash-es/_basePick.js
function basePick(object, paths) {
  return basePickBy_default(object, paths, function(value2, path3) {
    return hasIn_default(object, path3);
  });
}
var basePick_default = basePick;

// node_modules/lodash-es/pick.js
var pick = flatRest_default(function(object, paths) {
  return object == null ? {} : basePick_default(object, paths);
});
var pick_default = pick;

// node_modules/lodash-es/plant.js
function wrapperPlant(value2) {
  var result2, parent2 = this;
  while (parent2 instanceof baseLodash_default) {
    var clone2 = wrapperClone_default(parent2);
    clone2.__index__ = 0;
    clone2.__values__ = void 0;
    if (result2) {
      previous.__wrapped__ = clone2;
    } else {
      result2 = clone2;
    }
    var previous = clone2;
    parent2 = parent2.__wrapped__;
  }
  previous.__wrapped__ = value2;
  return result2;
}
var plant_default = wrapperPlant;

// node_modules/lodash-es/propertyOf.js
function propertyOf(object) {
  return function(path3) {
    return object == null ? void 0 : baseGet_default(object, path3);
  };
}
var propertyOf_default = propertyOf;

// node_modules/lodash-es/_baseIndexOfWith.js
function baseIndexOfWith(array4, value2, fromIndex, comparator) {
  var index4 = fromIndex - 1, length = array4.length;
  while (++index4 < length) {
    if (comparator(array4[index4], value2)) {
      return index4;
    }
  }
  return -1;
}
var baseIndexOfWith_default = baseIndexOfWith;

// node_modules/lodash-es/_basePullAll.js
var arrayProto3 = Array.prototype;
var splice2 = arrayProto3.splice;
function basePullAll(array4, values2, iteratee2, comparator) {
  var indexOf2 = comparator ? baseIndexOfWith_default : baseIndexOf_default, index4 = -1, length = values2.length, seen = array4;
  if (array4 === values2) {
    values2 = copyArray_default(values2);
  }
  if (iteratee2) {
    seen = arrayMap_default(array4, baseUnary_default(iteratee2));
  }
  while (++index4 < length) {
    var fromIndex = 0, value2 = values2[index4], computed = iteratee2 ? iteratee2(value2) : value2;
    while ((fromIndex = indexOf2(seen, computed, fromIndex, comparator)) > -1) {
      if (seen !== array4) {
        splice2.call(seen, fromIndex, 1);
      }
      splice2.call(array4, fromIndex, 1);
    }
  }
  return array4;
}
var basePullAll_default = basePullAll;

// node_modules/lodash-es/pullAll.js
function pullAll(array4, values2) {
  return array4 && array4.length && values2 && values2.length ? basePullAll_default(array4, values2) : array4;
}
var pullAll_default = pullAll;

// node_modules/lodash-es/pull.js
var pull = baseRest_default(pullAll_default);
var pull_default = pull;

// node_modules/lodash-es/pullAllBy.js
function pullAllBy(array4, values2, iteratee2) {
  return array4 && array4.length && values2 && values2.length ? basePullAll_default(array4, values2, baseIteratee_default(iteratee2, 2)) : array4;
}
var pullAllBy_default = pullAllBy;

// node_modules/lodash-es/pullAllWith.js
function pullAllWith(array4, values2, comparator) {
  return array4 && array4.length && values2 && values2.length ? basePullAll_default(array4, values2, void 0, comparator) : array4;
}
var pullAllWith_default = pullAllWith;

// node_modules/lodash-es/_basePullAt.js
var arrayProto4 = Array.prototype;
var splice3 = arrayProto4.splice;
function basePullAt(array4, indexes3) {
  var length = array4 ? indexes3.length : 0, lastIndex = length - 1;
  while (length--) {
    var index4 = indexes3[length];
    if (length == lastIndex || index4 !== previous) {
      var previous = index4;
      if (isIndex_default(index4)) {
        splice3.call(array4, index4, 1);
      } else {
        baseUnset_default(array4, index4);
      }
    }
  }
  return array4;
}
var basePullAt_default = basePullAt;

// node_modules/lodash-es/pullAt.js
var pullAt = flatRest_default(function(array4, indexes3) {
  var length = array4 == null ? 0 : array4.length, result2 = baseAt_default(array4, indexes3);
  basePullAt_default(array4, arrayMap_default(indexes3, function(index4) {
    return isIndex_default(index4, length) ? +index4 : index4;
  }).sort(compareAscending_default));
  return result2;
});
var pullAt_default = pullAt;

// node_modules/lodash-es/_baseRandom.js
var nativeFloor3 = Math.floor;
var nativeRandom = Math.random;
function baseRandom(lower2, upper) {
  return lower2 + nativeFloor3(nativeRandom() * (upper - lower2 + 1));
}
var baseRandom_default = baseRandom;

// node_modules/lodash-es/random.js
var freeParseFloat = parseFloat;
var nativeMin10 = Math.min;
var nativeRandom2 = Math.random;
function random(lower2, upper, floating) {
  if (floating && typeof floating != "boolean" && isIterateeCall_default(lower2, upper, floating)) {
    upper = floating = void 0;
  }
  if (floating === void 0) {
    if (typeof upper == "boolean") {
      floating = upper;
      upper = void 0;
    } else if (typeof lower2 == "boolean") {
      floating = lower2;
      lower2 = void 0;
    }
  }
  if (lower2 === void 0 && upper === void 0) {
    lower2 = 0;
    upper = 1;
  } else {
    lower2 = toFinite_default(lower2);
    if (upper === void 0) {
      upper = lower2;
      lower2 = 0;
    } else {
      upper = toFinite_default(upper);
    }
  }
  if (lower2 > upper) {
    var temp = lower2;
    lower2 = upper;
    upper = temp;
  }
  if (floating || lower2 % 1 || upper % 1) {
    var rand = nativeRandom2();
    return nativeMin10(lower2 + rand * (upper - lower2 + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
  }
  return baseRandom_default(lower2, upper);
}
var random_default = random;

// node_modules/lodash-es/_baseRange.js
var nativeCeil4 = Math.ceil;
var nativeMax13 = Math.max;
function baseRange(start2, end, step, fromRight) {
  var index4 = -1, length = nativeMax13(nativeCeil4((end - start2) / (step || 1)), 0), result2 = Array(length);
  while (length--) {
    result2[fromRight ? length : ++index4] = start2;
    start2 += step;
  }
  return result2;
}
var baseRange_default = baseRange;

// node_modules/lodash-es/_createRange.js
function createRange(fromRight) {
  return function(start2, end, step) {
    if (step && typeof step != "number" && isIterateeCall_default(start2, end, step)) {
      end = step = void 0;
    }
    start2 = toFinite_default(start2);
    if (end === void 0) {
      end = start2;
      start2 = 0;
    } else {
      end = toFinite_default(end);
    }
    step = step === void 0 ? start2 < end ? 1 : -1 : toFinite_default(step);
    return baseRange_default(start2, end, step, fromRight);
  };
}
var createRange_default = createRange;

// node_modules/lodash-es/range.js
var range = createRange_default();
var range_default = range;

// node_modules/lodash-es/rangeRight.js
var rangeRight = createRange_default(true);
var rangeRight_default = rangeRight;

// node_modules/lodash-es/rearg.js
var WRAP_REARG_FLAG4 = 256;
var rearg = flatRest_default(function(func, indexes3) {
  return createWrap_default(func, WRAP_REARG_FLAG4, void 0, void 0, void 0, indexes3);
});
var rearg_default = rearg;

// node_modules/lodash-es/_baseReduce.js
function baseReduce(collection, iteratee2, accumulator, initAccum, eachFunc) {
  eachFunc(collection, function(value2, index4, collection2) {
    accumulator = initAccum ? (initAccum = false, value2) : iteratee2(accumulator, value2, index4, collection2);
  });
  return accumulator;
}
var baseReduce_default = baseReduce;

// node_modules/lodash-es/reduce.js
function reduce(collection, iteratee2, accumulator) {
  var func = isArray_default(collection) ? arrayReduce_default : baseReduce_default, initAccum = arguments.length < 3;
  return func(collection, baseIteratee_default(iteratee2, 4), accumulator, initAccum, baseEach_default);
}
var reduce_default = reduce;

// node_modules/lodash-es/_arrayReduceRight.js
function arrayReduceRight(array4, iteratee2, accumulator, initAccum) {
  var length = array4 == null ? 0 : array4.length;
  if (initAccum && length) {
    accumulator = array4[--length];
  }
  while (length--) {
    accumulator = iteratee2(accumulator, array4[length], length, array4);
  }
  return accumulator;
}
var arrayReduceRight_default = arrayReduceRight;

// node_modules/lodash-es/reduceRight.js
function reduceRight(collection, iteratee2, accumulator) {
  var func = isArray_default(collection) ? arrayReduceRight_default : baseReduce_default, initAccum = arguments.length < 3;
  return func(collection, baseIteratee_default(iteratee2, 4), accumulator, initAccum, baseEachRight_default);
}
var reduceRight_default = reduceRight;

// node_modules/lodash-es/reject.js
function reject(collection, predicate) {
  var func = isArray_default(collection) ? arrayFilter_default : baseFilter_default;
  return func(collection, negate_default(baseIteratee_default(predicate, 3)));
}
var reject_default = reject;

// node_modules/lodash-es/remove.js
function remove(array4, predicate) {
  var result2 = [];
  if (!(array4 && array4.length)) {
    return result2;
  }
  var index4 = -1, indexes3 = [], length = array4.length;
  predicate = baseIteratee_default(predicate, 3);
  while (++index4 < length) {
    var value2 = array4[index4];
    if (predicate(value2, index4, array4)) {
      result2.push(value2);
      indexes3.push(index4);
    }
  }
  basePullAt_default(array4, indexes3);
  return result2;
}
var remove_default = remove;

// node_modules/lodash-es/repeat.js
function repeat(string, n, guard) {
  if (guard ? isIterateeCall_default(string, n, guard) : n === void 0) {
    n = 1;
  } else {
    n = toInteger_default(n);
  }
  return baseRepeat_default(toString_default(string), n);
}
var repeat_default = repeat;

// node_modules/lodash-es/replace.js
function replace() {
  var args = arguments, string = toString_default(args[0]);
  return args.length < 3 ? string : string.replace(args[1], args[2]);
}
var replace_default = replace;

// node_modules/lodash-es/rest.js
var FUNC_ERROR_TEXT10 = "Expected a function";
function rest(func, start2) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT10);
  }
  start2 = start2 === void 0 ? start2 : toInteger_default(start2);
  return baseRest_default(func, start2);
}
var rest_default = rest;

// node_modules/lodash-es/result.js
function result(object, path3, defaultValue) {
  path3 = castPath_default(path3, object);
  var index4 = -1, length = path3.length;
  if (!length) {
    length = 1;
    object = void 0;
  }
  while (++index4 < length) {
    var value2 = object == null ? void 0 : object[toKey_default(path3[index4])];
    if (value2 === void 0) {
      index4 = length;
      value2 = defaultValue;
    }
    object = isFunction_default(value2) ? value2.call(object) : value2;
  }
  return object;
}
var result_default = result;

// node_modules/lodash-es/reverse.js
var arrayProto5 = Array.prototype;
var nativeReverse = arrayProto5.reverse;
function reverse(array4) {
  return array4 == null ? array4 : nativeReverse.call(array4);
}
var reverse_default = reverse;

// node_modules/lodash-es/round.js
var round = createRound_default("round");
var round_default = round;

// node_modules/lodash-es/_arraySample.js
function arraySample(array4) {
  var length = array4.length;
  return length ? array4[baseRandom_default(0, length - 1)] : void 0;
}
var arraySample_default = arraySample;

// node_modules/lodash-es/_baseSample.js
function baseSample(collection) {
  return arraySample_default(values_default(collection));
}
var baseSample_default = baseSample;

// node_modules/lodash-es/sample.js
function sample(collection) {
  var func = isArray_default(collection) ? arraySample_default : baseSample_default;
  return func(collection);
}
var sample_default = sample;

// node_modules/lodash-es/_shuffleSelf.js
function shuffleSelf(array4, size2) {
  var index4 = -1, length = array4.length, lastIndex = length - 1;
  size2 = size2 === void 0 ? length : size2;
  while (++index4 < size2) {
    var rand = baseRandom_default(index4, lastIndex), value2 = array4[rand];
    array4[rand] = array4[index4];
    array4[index4] = value2;
  }
  array4.length = size2;
  return array4;
}
var shuffleSelf_default = shuffleSelf;

// node_modules/lodash-es/_arraySampleSize.js
function arraySampleSize(array4, n) {
  return shuffleSelf_default(copyArray_default(array4), baseClamp_default(n, 0, array4.length));
}
var arraySampleSize_default = arraySampleSize;

// node_modules/lodash-es/_baseSampleSize.js
function baseSampleSize(collection, n) {
  var array4 = values_default(collection);
  return shuffleSelf_default(array4, baseClamp_default(n, 0, array4.length));
}
var baseSampleSize_default = baseSampleSize;

// node_modules/lodash-es/sampleSize.js
function sampleSize(collection, n, guard) {
  if (guard ? isIterateeCall_default(collection, n, guard) : n === void 0) {
    n = 1;
  } else {
    n = toInteger_default(n);
  }
  var func = isArray_default(collection) ? arraySampleSize_default : baseSampleSize_default;
  return func(collection, n);
}
var sampleSize_default = sampleSize;

// node_modules/lodash-es/set.js
function set(object, path3, value2) {
  return object == null ? object : baseSet_default(object, path3, value2);
}
var set_default = set;

// node_modules/lodash-es/setWith.js
function setWith(object, path3, value2, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return object == null ? object : baseSet_default(object, path3, value2, customizer);
}
var setWith_default = setWith;

// node_modules/lodash-es/_arrayShuffle.js
function arrayShuffle(array4) {
  return shuffleSelf_default(copyArray_default(array4));
}
var arrayShuffle_default = arrayShuffle;

// node_modules/lodash-es/_baseShuffle.js
function baseShuffle(collection) {
  return shuffleSelf_default(values_default(collection));
}
var baseShuffle_default = baseShuffle;

// node_modules/lodash-es/shuffle.js
function shuffle(collection) {
  var func = isArray_default(collection) ? arrayShuffle_default : baseShuffle_default;
  return func(collection);
}
var shuffle_default = shuffle;

// node_modules/lodash-es/size.js
var mapTag10 = "[object Map]";
var setTag10 = "[object Set]";
function size(collection) {
  if (collection == null) {
    return 0;
  }
  if (isArrayLike_default(collection)) {
    return isString_default(collection) ? stringSize_default(collection) : collection.length;
  }
  var tag = getTag_default(collection);
  if (tag == mapTag10 || tag == setTag10) {
    return collection.size;
  }
  return baseKeys_default(collection).length;
}
var size_default = size;

// node_modules/lodash-es/slice.js
function slice(array4, start2, end) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return [];
  }
  if (end && typeof end != "number" && isIterateeCall_default(array4, start2, end)) {
    start2 = 0;
    end = length;
  } else {
    start2 = start2 == null ? 0 : toInteger_default(start2);
    end = end === void 0 ? length : toInteger_default(end);
  }
  return baseSlice_default(array4, start2, end);
}
var slice_default = slice;

// node_modules/lodash-es/snakeCase.js
var snakeCase = createCompounder_default(function(result2, word, index4) {
  return result2 + (index4 ? "_" : "") + word.toLowerCase();
});
var snakeCase_default = snakeCase;

// node_modules/lodash-es/_baseSome.js
function baseSome(collection, predicate) {
  var result2;
  baseEach_default(collection, function(value2, index4, collection2) {
    result2 = predicate(value2, index4, collection2);
    return !result2;
  });
  return !!result2;
}
var baseSome_default = baseSome;

// node_modules/lodash-es/some.js
function some(collection, predicate, guard) {
  var func = isArray_default(collection) ? arraySome_default : baseSome_default;
  if (guard && isIterateeCall_default(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, baseIteratee_default(predicate, 3));
}
var some_default = some;

// node_modules/lodash-es/sortBy.js
var sortBy = baseRest_default(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && isIterateeCall_default(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && isIterateeCall_default(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return baseOrderBy_default(collection, baseFlatten_default(iteratees, 1), []);
});
var sortBy_default = sortBy;

// node_modules/lodash-es/_baseSortedIndexBy.js
var MAX_ARRAY_LENGTH3 = 4294967295;
var MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH3 - 1;
var nativeFloor4 = Math.floor;
var nativeMin11 = Math.min;
function baseSortedIndexBy(array4, value2, iteratee2, retHighest) {
  var low = 0, high = array4 == null ? 0 : array4.length;
  if (high === 0) {
    return 0;
  }
  value2 = iteratee2(value2);
  var valIsNaN = value2 !== value2, valIsNull = value2 === null, valIsSymbol = isSymbol_default(value2), valIsUndefined = value2 === void 0;
  while (low < high) {
    var mid = nativeFloor4((low + high) / 2), computed = iteratee2(array4[mid]), othIsDefined = computed !== void 0, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol_default(computed);
    if (valIsNaN) {
      var setLow = retHighest || othIsReflexive;
    } else if (valIsUndefined) {
      setLow = othIsReflexive && (retHighest || othIsDefined);
    } else if (valIsNull) {
      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
    } else if (valIsSymbol) {
      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
    } else if (othIsNull || othIsSymbol) {
      setLow = false;
    } else {
      setLow = retHighest ? computed <= value2 : computed < value2;
    }
    if (setLow) {
      low = mid + 1;
    } else {
      high = mid;
    }
  }
  return nativeMin11(high, MAX_ARRAY_INDEX);
}
var baseSortedIndexBy_default = baseSortedIndexBy;

// node_modules/lodash-es/_baseSortedIndex.js
var MAX_ARRAY_LENGTH4 = 4294967295;
var HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH4 >>> 1;
function baseSortedIndex(array4, value2, retHighest) {
  var low = 0, high = array4 == null ? low : array4.length;
  if (typeof value2 == "number" && value2 === value2 && high <= HALF_MAX_ARRAY_LENGTH) {
    while (low < high) {
      var mid = low + high >>> 1, computed = array4[mid];
      if (computed !== null && !isSymbol_default(computed) && (retHighest ? computed <= value2 : computed < value2)) {
        low = mid + 1;
      } else {
        high = mid;
      }
    }
    return high;
  }
  return baseSortedIndexBy_default(array4, value2, identity_default, retHighest);
}
var baseSortedIndex_default = baseSortedIndex;

// node_modules/lodash-es/sortedIndex.js
function sortedIndex(array4, value2) {
  return baseSortedIndex_default(array4, value2);
}
var sortedIndex_default = sortedIndex;

// node_modules/lodash-es/sortedIndexBy.js
function sortedIndexBy(array4, value2, iteratee2) {
  return baseSortedIndexBy_default(array4, value2, baseIteratee_default(iteratee2, 2));
}
var sortedIndexBy_default = sortedIndexBy;

// node_modules/lodash-es/sortedIndexOf.js
function sortedIndexOf(array4, value2) {
  var length = array4 == null ? 0 : array4.length;
  if (length) {
    var index4 = baseSortedIndex_default(array4, value2);
    if (index4 < length && eq_default(array4[index4], value2)) {
      return index4;
    }
  }
  return -1;
}
var sortedIndexOf_default = sortedIndexOf;

// node_modules/lodash-es/sortedLastIndex.js
function sortedLastIndex(array4, value2) {
  return baseSortedIndex_default(array4, value2, true);
}
var sortedLastIndex_default = sortedLastIndex;

// node_modules/lodash-es/sortedLastIndexBy.js
function sortedLastIndexBy(array4, value2, iteratee2) {
  return baseSortedIndexBy_default(array4, value2, baseIteratee_default(iteratee2, 2), true);
}
var sortedLastIndexBy_default = sortedLastIndexBy;

// node_modules/lodash-es/sortedLastIndexOf.js
function sortedLastIndexOf(array4, value2) {
  var length = array4 == null ? 0 : array4.length;
  if (length) {
    var index4 = baseSortedIndex_default(array4, value2, true) - 1;
    if (eq_default(array4[index4], value2)) {
      return index4;
    }
  }
  return -1;
}
var sortedLastIndexOf_default = sortedLastIndexOf;

// node_modules/lodash-es/_baseSortedUniq.js
function baseSortedUniq(array4, iteratee2) {
  var index4 = -1, length = array4.length, resIndex = 0, result2 = [];
  while (++index4 < length) {
    var value2 = array4[index4], computed = iteratee2 ? iteratee2(value2) : value2;
    if (!index4 || !eq_default(computed, seen)) {
      var seen = computed;
      result2[resIndex++] = value2 === 0 ? 0 : value2;
    }
  }
  return result2;
}
var baseSortedUniq_default = baseSortedUniq;

// node_modules/lodash-es/sortedUniq.js
function sortedUniq(array4) {
  return array4 && array4.length ? baseSortedUniq_default(array4) : [];
}
var sortedUniq_default = sortedUniq;

// node_modules/lodash-es/sortedUniqBy.js
function sortedUniqBy(array4, iteratee2) {
  return array4 && array4.length ? baseSortedUniq_default(array4, baseIteratee_default(iteratee2, 2)) : [];
}
var sortedUniqBy_default = sortedUniqBy;

// node_modules/lodash-es/split.js
var MAX_ARRAY_LENGTH5 = 4294967295;
function split(string, separator, limit) {
  if (limit && typeof limit != "number" && isIterateeCall_default(string, separator, limit)) {
    separator = limit = void 0;
  }
  limit = limit === void 0 ? MAX_ARRAY_LENGTH5 : limit >>> 0;
  if (!limit) {
    return [];
  }
  string = toString_default(string);
  if (string && (typeof separator == "string" || separator != null && !isRegExp_default(separator))) {
    separator = baseToString_default(separator);
    if (!separator && hasUnicode_default(string)) {
      return castSlice_default(stringToArray_default(string), 0, limit);
    }
  }
  return string.split(separator, limit);
}
var split_default = split;

// node_modules/lodash-es/spread.js
var FUNC_ERROR_TEXT11 = "Expected a function";
var nativeMax14 = Math.max;
function spread(func, start2) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT11);
  }
  start2 = start2 == null ? 0 : nativeMax14(toInteger_default(start2), 0);
  return baseRest_default(function(args) {
    var array4 = args[start2], otherArgs = castSlice_default(args, 0, start2);
    if (array4) {
      arrayPush_default(otherArgs, array4);
    }
    return apply_default(func, this, otherArgs);
  });
}
var spread_default = spread;

// node_modules/lodash-es/startCase.js
var startCase = createCompounder_default(function(result2, word, index4) {
  return result2 + (index4 ? " " : "") + upperFirst_default(word);
});
var startCase_default = startCase;

// node_modules/lodash-es/startsWith.js
function startsWith(string, target, position2) {
  string = toString_default(string);
  position2 = position2 == null ? 0 : baseClamp_default(toInteger_default(position2), 0, string.length);
  target = baseToString_default(target);
  return string.slice(position2, position2 + target.length) == target;
}
var startsWith_default = startsWith;

// node_modules/lodash-es/stubObject.js
function stubObject() {
  return {};
}
var stubObject_default = stubObject;

// node_modules/lodash-es/stubString.js
function stubString() {
  return "";
}
var stubString_default = stubString;

// node_modules/lodash-es/stubTrue.js
function stubTrue() {
  return true;
}
var stubTrue_default = stubTrue;

// node_modules/lodash-es/subtract.js
var subtract = createMathOperation_default(function(minuend, subtrahend) {
  return minuend - subtrahend;
}, 0);
var subtract_default = subtract;

// node_modules/lodash-es/sum.js
function sum(array4) {
  return array4 && array4.length ? baseSum_default(array4, identity_default) : 0;
}
var sum_default = sum;

// node_modules/lodash-es/sumBy.js
function sumBy(array4, iteratee2) {
  return array4 && array4.length ? baseSum_default(array4, baseIteratee_default(iteratee2, 2)) : 0;
}
var sumBy_default = sumBy;

// node_modules/lodash-es/tail.js
function tail(array4) {
  var length = array4 == null ? 0 : array4.length;
  return length ? baseSlice_default(array4, 1, length) : [];
}
var tail_default = tail;

// node_modules/lodash-es/take.js
function take(array4, n, guard) {
  if (!(array4 && array4.length)) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  return baseSlice_default(array4, 0, n < 0 ? 0 : n);
}
var take_default = take;

// node_modules/lodash-es/takeRight.js
function takeRight(array4, n, guard) {
  var length = array4 == null ? 0 : array4.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  n = length - n;
  return baseSlice_default(array4, n < 0 ? 0 : n, length);
}
var takeRight_default = takeRight;

// node_modules/lodash-es/takeRightWhile.js
function takeRightWhile(array4, predicate) {
  return array4 && array4.length ? baseWhile_default(array4, baseIteratee_default(predicate, 3), false, true) : [];
}
var takeRightWhile_default = takeRightWhile;

// node_modules/lodash-es/takeWhile.js
function takeWhile(array4, predicate) {
  return array4 && array4.length ? baseWhile_default(array4, baseIteratee_default(predicate, 3)) : [];
}
var takeWhile_default = takeWhile;

// node_modules/lodash-es/tap.js
function tap(value2, interceptor) {
  interceptor(value2);
  return value2;
}
var tap_default = tap;

// node_modules/lodash-es/_customDefaultsAssignIn.js
var objectProto27 = Object.prototype;
var hasOwnProperty23 = objectProto27.hasOwnProperty;
function customDefaultsAssignIn(objValue, srcValue, key, object) {
  if (objValue === void 0 || eq_default(objValue, objectProto27[key]) && !hasOwnProperty23.call(object, key)) {
    return srcValue;
  }
  return objValue;
}
var customDefaultsAssignIn_default = customDefaultsAssignIn;

// node_modules/lodash-es/_escapeStringChar.js
var stringEscapes = {
  "\\": "\\",
  "'": "'",
  "\n": "n",
  "\r": "r",
  "\u2028": "u2028",
  "\u2029": "u2029"
};
function escapeStringChar(chr) {
  return "\\" + stringEscapes[chr];
}
var escapeStringChar_default = escapeStringChar;

// node_modules/lodash-es/_reInterpolate.js
var reInterpolate = /<%=([\s\S]+?)%>/g;
var reInterpolate_default = reInterpolate;

// node_modules/lodash-es/_reEscape.js
var reEscape = /<%-([\s\S]+?)%>/g;
var reEscape_default = reEscape;

// node_modules/lodash-es/_reEvaluate.js
var reEvaluate = /<%([\s\S]+?)%>/g;
var reEvaluate_default = reEvaluate;

// node_modules/lodash-es/templateSettings.js
var templateSettings = {
  "escape": reEscape_default,
  "evaluate": reEvaluate_default,
  "interpolate": reInterpolate_default,
  "variable": "",
  "imports": {
    "_": { "escape": escape_default }
  }
};
var templateSettings_default = templateSettings;

// node_modules/lodash-es/template.js
var INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
var reEmptyStringLeading = /\b__p \+= '';/g;
var reEmptyStringMiddle = /\b(__p \+=) '' \+/g;
var reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
var reNoMatch = /($^)/;
var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
var objectProto28 = Object.prototype;
var hasOwnProperty24 = objectProto28.hasOwnProperty;
function template(string, options2, guard) {
  var settings2 = templateSettings_default.imports._.templateSettings || templateSettings_default;
  if (guard && isIterateeCall_default(string, options2, guard)) {
    options2 = void 0;
  }
  string = toString_default(string);
  options2 = assignInWith_default({}, options2, settings2, customDefaultsAssignIn_default);
  var imports = assignInWith_default({}, options2.imports, settings2.imports, customDefaultsAssignIn_default), importsKeys = keys_default(imports), importsValues = baseValues_default(imports, importsKeys);
  var isEscaping, isEvaluating, index4 = 0, interpolate = options2.interpolate || reNoMatch, source = "__p += '";
  var reDelimiters = RegExp((options2.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate_default ? reEsTemplate : reNoMatch).source + "|" + (options2.evaluate || reNoMatch).source + "|$", "g");
  var sourceURL = hasOwnProperty24.call(options2, "sourceURL") ? "//# sourceURL=" + (options2.sourceURL + "").replace(/\s/g, " ") + "\n" : "";
  string.replace(reDelimiters, function(match2, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
    interpolateValue || (interpolateValue = esTemplateValue);
    source += string.slice(index4, offset).replace(reUnescapedString, escapeStringChar_default);
    if (escapeValue) {
      isEscaping = true;
      source += "' +\n__e(" + escapeValue + ") +\n'";
    }
    if (evaluateValue) {
      isEvaluating = true;
      source += "';\n" + evaluateValue + ";\n__p += '";
    }
    if (interpolateValue) {
      source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
    }
    index4 = offset + match2.length;
    return match2;
  });
  source += "';\n";
  var variable = hasOwnProperty24.call(options2, "variable") && options2.variable;
  if (!variable) {
    source = "with (obj) {\n" + source + "\n}\n";
  } else if (reForbiddenIdentifierChars.test(variable)) {
    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
  }
  source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
  source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
  var result2 = attempt_default(function() {
    return Function(importsKeys, sourceURL + "return " + source).apply(void 0, importsValues);
  });
  result2.source = source;
  if (isError_default(result2)) {
    throw result2;
  }
  return result2;
}
var template_default = template;

// node_modules/lodash-es/throttle.js
var FUNC_ERROR_TEXT12 = "Expected a function";
function throttle(func, wait, options2) {
  var leading = true, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT12);
  }
  if (isObject_default(options2)) {
    leading = "leading" in options2 ? !!options2.leading : leading;
    trailing = "trailing" in options2 ? !!options2.trailing : trailing;
  }
  return debounce_default(func, wait, {
    "leading": leading,
    "maxWait": wait,
    "trailing": trailing
  });
}
var throttle_default = throttle;

// node_modules/lodash-es/thru.js
function thru(value2, interceptor) {
  return interceptor(value2);
}
var thru_default = thru;

// node_modules/lodash-es/times.js
var MAX_SAFE_INTEGER5 = 9007199254740991;
var MAX_ARRAY_LENGTH6 = 4294967295;
var nativeMin12 = Math.min;
function times(n, iteratee2) {
  n = toInteger_default(n);
  if (n < 1 || n > MAX_SAFE_INTEGER5) {
    return [];
  }
  var index4 = MAX_ARRAY_LENGTH6, length = nativeMin12(n, MAX_ARRAY_LENGTH6);
  iteratee2 = castFunction_default(iteratee2);
  n -= MAX_ARRAY_LENGTH6;
  var result2 = baseTimes_default(length, iteratee2);
  while (++index4 < n) {
    iteratee2(index4);
  }
  return result2;
}
var times_default = times;

// node_modules/lodash-es/toIterator.js
function wrapperToIterator() {
  return this;
}
var toIterator_default = wrapperToIterator;

// node_modules/lodash-es/_baseWrapperValue.js
function baseWrapperValue(value2, actions) {
  var result2 = value2;
  if (result2 instanceof LazyWrapper_default) {
    result2 = result2.value();
  }
  return arrayReduce_default(actions, function(result3, action) {
    return action.func.apply(action.thisArg, arrayPush_default([result3], action.args));
  }, result2);
}
var baseWrapperValue_default = baseWrapperValue;

// node_modules/lodash-es/wrapperValue.js
function wrapperValue() {
  return baseWrapperValue_default(this.__wrapped__, this.__actions__);
}
var wrapperValue_default = wrapperValue;

// node_modules/lodash-es/toLower.js
function toLower(value2) {
  return toString_default(value2).toLowerCase();
}
var toLower_default = toLower;

// node_modules/lodash-es/toPath.js
function toPath(value2) {
  if (isArray_default(value2)) {
    return arrayMap_default(value2, toKey_default);
  }
  return isSymbol_default(value2) ? [value2] : copyArray_default(stringToPath_default(toString_default(value2)));
}
var toPath_default = toPath;

// node_modules/lodash-es/toSafeInteger.js
var MAX_SAFE_INTEGER6 = 9007199254740991;
function toSafeInteger(value2) {
  return value2 ? baseClamp_default(toInteger_default(value2), -MAX_SAFE_INTEGER6, MAX_SAFE_INTEGER6) : value2 === 0 ? value2 : 0;
}
var toSafeInteger_default = toSafeInteger;

// node_modules/lodash-es/toUpper.js
function toUpper(value2) {
  return toString_default(value2).toUpperCase();
}
var toUpper_default = toUpper;

// node_modules/lodash-es/transform.js
function transform(object, iteratee2, accumulator) {
  var isArr = isArray_default(object), isArrLike = isArr || isBuffer_default(object) || isTypedArray_default(object);
  iteratee2 = baseIteratee_default(iteratee2, 4);
  if (accumulator == null) {
    var Ctor = object && object.constructor;
    if (isArrLike) {
      accumulator = isArr ? new Ctor() : [];
    } else if (isObject_default(object)) {
      accumulator = isFunction_default(Ctor) ? baseCreate_default(getPrototype_default(object)) : {};
    } else {
      accumulator = {};
    }
  }
  (isArrLike ? arrayEach_default : baseForOwn_default)(object, function(value2, index4, object2) {
    return iteratee2(accumulator, value2, index4, object2);
  });
  return accumulator;
}
var transform_default = transform;

// node_modules/lodash-es/_charsEndIndex.js
function charsEndIndex(strSymbols, chrSymbols) {
  var index4 = strSymbols.length;
  while (index4-- && baseIndexOf_default(chrSymbols, strSymbols[index4], 0) > -1) {
  }
  return index4;
}
var charsEndIndex_default = charsEndIndex;

// node_modules/lodash-es/_charsStartIndex.js
function charsStartIndex(strSymbols, chrSymbols) {
  var index4 = -1, length = strSymbols.length;
  while (++index4 < length && baseIndexOf_default(chrSymbols, strSymbols[index4], 0) > -1) {
  }
  return index4;
}
var charsStartIndex_default = charsStartIndex;

// node_modules/lodash-es/trim.js
function trim(string, chars, guard) {
  string = toString_default(string);
  if (string && (guard || chars === void 0)) {
    return baseTrim_default(string);
  }
  if (!string || !(chars = baseToString_default(chars))) {
    return string;
  }
  var strSymbols = stringToArray_default(string), chrSymbols = stringToArray_default(chars), start2 = charsStartIndex_default(strSymbols, chrSymbols), end = charsEndIndex_default(strSymbols, chrSymbols) + 1;
  return castSlice_default(strSymbols, start2, end).join("");
}
var trim_default = trim;

// node_modules/lodash-es/trimEnd.js
function trimEnd(string, chars, guard) {
  string = toString_default(string);
  if (string && (guard || chars === void 0)) {
    return string.slice(0, trimmedEndIndex_default(string) + 1);
  }
  if (!string || !(chars = baseToString_default(chars))) {
    return string;
  }
  var strSymbols = stringToArray_default(string), end = charsEndIndex_default(strSymbols, stringToArray_default(chars)) + 1;
  return castSlice_default(strSymbols, 0, end).join("");
}
var trimEnd_default = trimEnd;

// node_modules/lodash-es/trimStart.js
var reTrimStart3 = /^\s+/;
function trimStart(string, chars, guard) {
  string = toString_default(string);
  if (string && (guard || chars === void 0)) {
    return string.replace(reTrimStart3, "");
  }
  if (!string || !(chars = baseToString_default(chars))) {
    return string;
  }
  var strSymbols = stringToArray_default(string), start2 = charsStartIndex_default(strSymbols, stringToArray_default(chars));
  return castSlice_default(strSymbols, start2).join("");
}
var trimStart_default = trimStart;

// node_modules/lodash-es/truncate.js
var DEFAULT_TRUNC_LENGTH = 30;
var DEFAULT_TRUNC_OMISSION = "...";
var reFlags2 = /\w*$/;
function truncate(string, options2) {
  var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
  if (isObject_default(options2)) {
    var separator = "separator" in options2 ? options2.separator : separator;
    length = "length" in options2 ? toInteger_default(options2.length) : length;
    omission = "omission" in options2 ? baseToString_default(options2.omission) : omission;
  }
  string = toString_default(string);
  var strLength = string.length;
  if (hasUnicode_default(string)) {
    var strSymbols = stringToArray_default(string);
    strLength = strSymbols.length;
  }
  if (length >= strLength) {
    return string;
  }
  var end = length - stringSize_default(omission);
  if (end < 1) {
    return omission;
  }
  var result2 = strSymbols ? castSlice_default(strSymbols, 0, end).join("") : string.slice(0, end);
  if (separator === void 0) {
    return result2 + omission;
  }
  if (strSymbols) {
    end += result2.length - end;
  }
  if (isRegExp_default(separator)) {
    if (string.slice(end).search(separator)) {
      var match2, substring = result2;
      if (!separator.global) {
        separator = RegExp(separator.source, toString_default(reFlags2.exec(separator)) + "g");
      }
      separator.lastIndex = 0;
      while (match2 = separator.exec(substring)) {
        var newEnd = match2.index;
      }
      result2 = result2.slice(0, newEnd === void 0 ? end : newEnd);
    }
  } else if (string.indexOf(baseToString_default(separator), end) != end) {
    var index4 = result2.lastIndexOf(separator);
    if (index4 > -1) {
      result2 = result2.slice(0, index4);
    }
  }
  return result2 + omission;
}
var truncate_default = truncate;

// node_modules/lodash-es/unary.js
function unary(func) {
  return ary_default(func, 1);
}
var unary_default = unary;

// node_modules/lodash-es/_unescapeHtmlChar.js
var htmlUnescapes = {
  "&amp;": "&",
  "&lt;": "<",
  "&gt;": ">",
  "&quot;": '"',
  "&#39;": "'"
};
var unescapeHtmlChar = basePropertyOf_default(htmlUnescapes);
var unescapeHtmlChar_default = unescapeHtmlChar;

// node_modules/lodash-es/unescape.js
var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g;
var reHasEscapedHtml = RegExp(reEscapedHtml.source);
function unescape(string) {
  string = toString_default(string);
  return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar_default) : string;
}
var unescape_default = unescape;

// node_modules/lodash-es/_createSet.js
var INFINITY6 = 1 / 0;
var createSet = !(Set_default && 1 / setToArray_default(new Set_default([, -0]))[1] == INFINITY6) ? noop_default : function(values2) {
  return new Set_default(values2);
};
var createSet_default = createSet;

// node_modules/lodash-es/_baseUniq.js
var LARGE_ARRAY_SIZE3 = 200;
function baseUniq(array4, iteratee2, comparator) {
  var index4 = -1, includes2 = arrayIncludes_default, length = array4.length, isCommon = true, result2 = [], seen = result2;
  if (comparator) {
    isCommon = false;
    includes2 = arrayIncludesWith_default;
  } else if (length >= LARGE_ARRAY_SIZE3) {
    var set7 = iteratee2 ? null : createSet_default(array4);
    if (set7) {
      return setToArray_default(set7);
    }
    isCommon = false;
    includes2 = cacheHas_default;
    seen = new SetCache_default();
  } else {
    seen = iteratee2 ? [] : result2;
  }
  outer:
    while (++index4 < length) {
      var value2 = array4[index4], computed = iteratee2 ? iteratee2(value2) : value2;
      value2 = comparator || value2 !== 0 ? value2 : 0;
      if (isCommon && computed === computed) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed) {
            continue outer;
          }
        }
        if (iteratee2) {
          seen.push(computed);
        }
        result2.push(value2);
      } else if (!includes2(seen, computed, comparator)) {
        if (seen !== result2) {
          seen.push(computed);
        }
        result2.push(value2);
      }
    }
  return result2;
}
var baseUniq_default = baseUniq;

// node_modules/lodash-es/union.js
var union = baseRest_default(function(arrays) {
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true));
});
var union_default = union;

// node_modules/lodash-es/unionBy.js
var unionBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true), baseIteratee_default(iteratee2, 2));
});
var unionBy_default = unionBy;

// node_modules/lodash-es/unionWith.js
var unionWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays);
  comparator = typeof comparator == "function" ? comparator : void 0;
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true), void 0, comparator);
});
var unionWith_default = unionWith;

// node_modules/lodash-es/uniq.js
function uniq(array4) {
  return array4 && array4.length ? baseUniq_default(array4) : [];
}
var uniq_default = uniq;

// node_modules/lodash-es/uniqBy.js
function uniqBy(array4, iteratee2) {
  return array4 && array4.length ? baseUniq_default(array4, baseIteratee_default(iteratee2, 2)) : [];
}
var uniqBy_default = uniqBy;

// node_modules/lodash-es/uniqWith.js
function uniqWith(array4, comparator) {
  comparator = typeof comparator == "function" ? comparator : void 0;
  return array4 && array4.length ? baseUniq_default(array4, void 0, comparator) : [];
}
var uniqWith_default = uniqWith;

// node_modules/lodash-es/uniqueId.js
var idCounter = 0;
function uniqueId(prefix2) {
  var id2 = ++idCounter;
  return toString_default(prefix2) + id2;
}
var uniqueId_default = uniqueId;

// node_modules/lodash-es/unset.js
function unset(object, path3) {
  return object == null ? true : baseUnset_default(object, path3);
}
var unset_default = unset;

// node_modules/lodash-es/unzip.js
var nativeMax15 = Math.max;
function unzip(array4) {
  if (!(array4 && array4.length)) {
    return [];
  }
  var length = 0;
  array4 = arrayFilter_default(array4, function(group3) {
    if (isArrayLikeObject_default(group3)) {
      length = nativeMax15(group3.length, length);
      return true;
    }
  });
  return baseTimes_default(length, function(index4) {
    return arrayMap_default(array4, baseProperty_default(index4));
  });
}
var unzip_default = unzip;

// node_modules/lodash-es/unzipWith.js
function unzipWith(array4, iteratee2) {
  if (!(array4 && array4.length)) {
    return [];
  }
  var result2 = unzip_default(array4);
  if (iteratee2 == null) {
    return result2;
  }
  return arrayMap_default(result2, function(group3) {
    return apply_default(iteratee2, void 0, group3);
  });
}
var unzipWith_default = unzipWith;

// node_modules/lodash-es/_baseUpdate.js
function baseUpdate(object, path3, updater, customizer) {
  return baseSet_default(object, path3, updater(baseGet_default(object, path3)), customizer);
}
var baseUpdate_default = baseUpdate;

// node_modules/lodash-es/update.js
function update(object, path3, updater) {
  return object == null ? object : baseUpdate_default(object, path3, castFunction_default(updater));
}
var update_default = update;

// node_modules/lodash-es/updateWith.js
function updateWith(object, path3, updater, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return object == null ? object : baseUpdate_default(object, path3, castFunction_default(updater), customizer);
}
var updateWith_default = updateWith;

// node_modules/lodash-es/upperCase.js
var upperCase = createCompounder_default(function(result2, word, index4) {
  return result2 + (index4 ? " " : "") + word.toUpperCase();
});
var upperCase_default = upperCase;

// node_modules/lodash-es/valuesIn.js
function valuesIn(object) {
  return object == null ? [] : baseValues_default(object, keysIn_default(object));
}
var valuesIn_default = valuesIn;

// node_modules/lodash-es/without.js
var without = baseRest_default(function(array4, values2) {
  return isArrayLikeObject_default(array4) ? baseDifference_default(array4, values2) : [];
});
var without_default = without;

// node_modules/lodash-es/wrap.js
function wrap(value2, wrapper) {
  return partial_default(castFunction_default(wrapper), value2);
}
var wrap_default = wrap;

// node_modules/lodash-es/wrapperAt.js
var wrapperAt = flatRest_default(function(paths) {
  var length = paths.length, start2 = length ? paths[0] : 0, value2 = this.__wrapped__, interceptor = function(object) {
    return baseAt_default(object, paths);
  };
  if (length > 1 || this.__actions__.length || !(value2 instanceof LazyWrapper_default) || !isIndex_default(start2)) {
    return this.thru(interceptor);
  }
  value2 = value2.slice(start2, +start2 + (length ? 1 : 0));
  value2.__actions__.push({
    "func": thru_default,
    "args": [interceptor],
    "thisArg": void 0
  });
  return new LodashWrapper_default(value2, this.__chain__).thru(function(array4) {
    if (length && !array4.length) {
      array4.push(void 0);
    }
    return array4;
  });
});
var wrapperAt_default = wrapperAt;

// node_modules/lodash-es/wrapperChain.js
function wrapperChain() {
  return chain_default(this);
}
var wrapperChain_default = wrapperChain;

// node_modules/lodash-es/wrapperReverse.js
function wrapperReverse() {
  var value2 = this.__wrapped__;
  if (value2 instanceof LazyWrapper_default) {
    var wrapped = value2;
    if (this.__actions__.length) {
      wrapped = new LazyWrapper_default(this);
    }
    wrapped = wrapped.reverse();
    wrapped.__actions__.push({
      "func": thru_default,
      "args": [reverse_default],
      "thisArg": void 0
    });
    return new LodashWrapper_default(wrapped, this.__chain__);
  }
  return this.thru(reverse_default);
}
var wrapperReverse_default = wrapperReverse;

// node_modules/lodash-es/_baseXor.js
function baseXor(arrays, iteratee2, comparator) {
  var length = arrays.length;
  if (length < 2) {
    return length ? baseUniq_default(arrays[0]) : [];
  }
  var index4 = -1, result2 = Array(length);
  while (++index4 < length) {
    var array4 = arrays[index4], othIndex = -1;
    while (++othIndex < length) {
      if (othIndex != index4) {
        result2[index4] = baseDifference_default(result2[index4] || array4, arrays[othIndex], iteratee2, comparator);
      }
    }
  }
  return baseUniq_default(baseFlatten_default(result2, 1), iteratee2, comparator);
}
var baseXor_default = baseXor;

// node_modules/lodash-es/xor.js
var xor = baseRest_default(function(arrays) {
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default));
});
var xor_default = xor;

// node_modules/lodash-es/xorBy.js
var xorBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default), baseIteratee_default(iteratee2, 2));
});
var xorBy_default = xorBy;

// node_modules/lodash-es/xorWith.js
var xorWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays);
  comparator = typeof comparator == "function" ? comparator : void 0;
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default), void 0, comparator);
});
var xorWith_default = xorWith;

// node_modules/lodash-es/zip.js
var zip = baseRest_default(unzip_default);
var zip_default = zip;

// node_modules/lodash-es/_baseZipObject.js
function baseZipObject(props, values2, assignFunc) {
  var index4 = -1, length = props.length, valsLength = values2.length, result2 = {};
  while (++index4 < length) {
    var value2 = index4 < valsLength ? values2[index4] : void 0;
    assignFunc(result2, props[index4], value2);
  }
  return result2;
}
var baseZipObject_default = baseZipObject;

// node_modules/lodash-es/zipObject.js
function zipObject(props, values2) {
  return baseZipObject_default(props || [], values2 || [], assignValue_default);
}
var zipObject_default = zipObject;

// node_modules/lodash-es/zipObjectDeep.js
function zipObjectDeep(props, values2) {
  return baseZipObject_default(props || [], values2 || [], baseSet_default);
}
var zipObjectDeep_default = zipObjectDeep;

// node_modules/lodash-es/zipWith.js
var zipWith = baseRest_default(function(arrays) {
  var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : void 0;
  iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : void 0;
  return unzipWith_default(arrays, iteratee2);
});
var zipWith_default = zipWith;

// node_modules/lodash-es/array.default.js
var array_default_default = {
  chunk: chunk_default,
  compact: compact_default,
  concat: concat_default,
  difference: difference_default,
  differenceBy: differenceBy_default,
  differenceWith: differenceWith_default,
  drop: drop_default,
  dropRight: dropRight_default,
  dropRightWhile: dropRightWhile_default,
  dropWhile: dropWhile_default,
  fill: fill_default,
  findIndex: findIndex_default,
  findLastIndex: findLastIndex_default,
  first: head_default,
  flatten: flatten_default,
  flattenDeep: flattenDeep_default,
  flattenDepth: flattenDepth_default,
  fromPairs: fromPairs_default,
  head: head_default,
  indexOf: indexOf_default,
  initial: initial_default,
  intersection: intersection_default,
  intersectionBy: intersectionBy_default,
  intersectionWith: intersectionWith_default,
  join: join_default,
  last: last_default,
  lastIndexOf: lastIndexOf_default,
  nth: nth_default,
  pull: pull_default,
  pullAll: pullAll_default,
  pullAllBy: pullAllBy_default,
  pullAllWith: pullAllWith_default,
  pullAt: pullAt_default,
  remove: remove_default,
  reverse: reverse_default,
  slice: slice_default,
  sortedIndex: sortedIndex_default,
  sortedIndexBy: sortedIndexBy_default,
  sortedIndexOf: sortedIndexOf_default,
  sortedLastIndex: sortedLastIndex_default,
  sortedLastIndexBy: sortedLastIndexBy_default,
  sortedLastIndexOf: sortedLastIndexOf_default,
  sortedUniq: sortedUniq_default,
  sortedUniqBy: sortedUniqBy_default,
  tail: tail_default,
  take: take_default,
  takeRight: takeRight_default,
  takeRightWhile: takeRightWhile_default,
  takeWhile: takeWhile_default,
  union: union_default,
  unionBy: unionBy_default,
  unionWith: unionWith_default,
  uniq: uniq_default,
  uniqBy: uniqBy_default,
  uniqWith: uniqWith_default,
  unzip: unzip_default,
  unzipWith: unzipWith_default,
  without: without_default,
  xor: xor_default,
  xorBy: xorBy_default,
  xorWith: xorWith_default,
  zip: zip_default,
  zipObject: zipObject_default,
  zipObjectDeep: zipObjectDeep_default,
  zipWith: zipWith_default
};

// node_modules/lodash-es/collection.default.js
var collection_default_default = {
  countBy: countBy_default,
  each: forEach_default,
  eachRight: forEachRight_default,
  every: every_default,
  filter: filter_default,
  find: find_default,
  findLast: findLast_default,
  flatMap: flatMap_default,
  flatMapDeep: flatMapDeep_default,
  flatMapDepth: flatMapDepth_default,
  forEach: forEach_default,
  forEachRight: forEachRight_default,
  groupBy: groupBy_default,
  includes: includes_default,
  invokeMap: invokeMap_default,
  keyBy: keyBy_default,
  map: map_default,
  orderBy: orderBy_default,
  partition: partition_default,
  reduce: reduce_default,
  reduceRight: reduceRight_default,
  reject: reject_default,
  sample: sample_default,
  sampleSize: sampleSize_default,
  shuffle: shuffle_default,
  size: size_default,
  some: some_default,
  sortBy: sortBy_default
};

// node_modules/lodash-es/date.default.js
var date_default_default = {
  now: now_default
};

// node_modules/lodash-es/function.default.js
var function_default_default = {
  after: after_default,
  ary: ary_default,
  before: before_default,
  bind: bind_default,
  bindKey: bindKey_default,
  curry: curry_default,
  curryRight: curryRight_default,
  debounce: debounce_default,
  defer: defer_default,
  delay: delay_default,
  flip: flip_default,
  memoize: memoize_default,
  negate: negate_default,
  once: once_default,
  overArgs: overArgs_default,
  partial: partial_default,
  partialRight: partialRight_default,
  rearg: rearg_default,
  rest: rest_default,
  spread: spread_default,
  throttle: throttle_default,
  unary: unary_default,
  wrap: wrap_default
};

// node_modules/lodash-es/lang.default.js
var lang_default_default = {
  castArray: castArray_default,
  clone: clone_default,
  cloneDeep: cloneDeep_default,
  cloneDeepWith: cloneDeepWith_default,
  cloneWith: cloneWith_default,
  conformsTo: conformsTo_default,
  eq: eq_default,
  gt: gt_default,
  gte: gte_default,
  isArguments: isArguments_default,
  isArray: isArray_default,
  isArrayBuffer: isArrayBuffer_default,
  isArrayLike: isArrayLike_default,
  isArrayLikeObject: isArrayLikeObject_default,
  isBoolean: isBoolean_default,
  isBuffer: isBuffer_default,
  isDate: isDate_default,
  isElement: isElement_default,
  isEmpty: isEmpty_default,
  isEqual: isEqual_default,
  isEqualWith: isEqualWith_default,
  isError: isError_default,
  isFinite: isFinite_default,
  isFunction: isFunction_default,
  isInteger: isInteger_default,
  isLength: isLength_default,
  isMap: isMap_default,
  isMatch: isMatch_default,
  isMatchWith: isMatchWith_default,
  isNaN: isNaN_default,
  isNative: isNative_default,
  isNil: isNil_default,
  isNull: isNull_default,
  isNumber: isNumber_default,
  isObject: isObject_default,
  isObjectLike: isObjectLike_default,
  isPlainObject: isPlainObject_default,
  isRegExp: isRegExp_default,
  isSafeInteger: isSafeInteger_default,
  isSet: isSet_default,
  isString: isString_default,
  isSymbol: isSymbol_default,
  isTypedArray: isTypedArray_default,
  isUndefined: isUndefined_default,
  isWeakMap: isWeakMap_default,
  isWeakSet: isWeakSet_default,
  lt: lt_default,
  lte: lte_default,
  toArray: toArray_default,
  toFinite: toFinite_default,
  toInteger: toInteger_default,
  toLength: toLength_default,
  toNumber: toNumber_default,
  toPlainObject: toPlainObject_default,
  toSafeInteger: toSafeInteger_default,
  toString: toString_default
};

// node_modules/lodash-es/math.default.js
var math_default_default = {
  add: add_default,
  ceil: ceil_default,
  divide: divide_default,
  floor: floor_default,
  max: max_default,
  maxBy: maxBy_default,
  mean: mean_default,
  meanBy: meanBy_default,
  min: min_default,
  minBy: minBy_default,
  multiply: multiply_default,
  round: round_default,
  subtract: subtract_default,
  sum: sum_default,
  sumBy: sumBy_default
};

// node_modules/lodash-es/number.default.js
var number_default_default = {
  clamp: clamp_default,
  inRange: inRange_default,
  random: random_default
};

// node_modules/lodash-es/object.default.js
var object_default_default = {
  assign: assign_default,
  assignIn: assignIn_default,
  assignInWith: assignInWith_default,
  assignWith: assignWith_default,
  at: at_default,
  create: create_default,
  defaults: defaults_default,
  defaultsDeep: defaultsDeep_default,
  entries: toPairs_default,
  entriesIn: toPairsIn_default,
  extend: assignIn_default,
  extendWith: assignInWith_default,
  findKey: findKey_default,
  findLastKey: findLastKey_default,
  forIn: forIn_default,
  forInRight: forInRight_default,
  forOwn: forOwn_default,
  forOwnRight: forOwnRight_default,
  functions: functions_default,
  functionsIn: functionsIn_default,
  get: get_default,
  has: has_default,
  hasIn: hasIn_default,
  invert: invert_default,
  invertBy: invertBy_default,
  invoke: invoke_default,
  keys: keys_default,
  keysIn: keysIn_default,
  mapKeys: mapKeys_default,
  mapValues: mapValues_default,
  merge: merge_default,
  mergeWith: mergeWith_default,
  omit: omit_default,
  omitBy: omitBy_default,
  pick: pick_default,
  pickBy: pickBy_default,
  result: result_default,
  set: set_default,
  setWith: setWith_default,
  toPairs: toPairs_default,
  toPairsIn: toPairsIn_default,
  transform: transform_default,
  unset: unset_default,
  update: update_default,
  updateWith: updateWith_default,
  values: values_default,
  valuesIn: valuesIn_default
};

// node_modules/lodash-es/seq.default.js
var seq_default_default = {
  at: wrapperAt_default,
  chain: chain_default,
  commit: commit_default,
  lodash: wrapperLodash_default,
  next: next_default,
  plant: plant_default,
  reverse: wrapperReverse_default,
  tap: tap_default,
  thru: thru_default,
  toIterator: toIterator_default,
  toJSON: wrapperValue_default,
  value: wrapperValue_default,
  valueOf: wrapperValue_default,
  wrapperChain: wrapperChain_default
};

// node_modules/lodash-es/string.default.js
var string_default_default = {
  camelCase: camelCase_default,
  capitalize: capitalize_default,
  deburr: deburr_default,
  endsWith: endsWith_default,
  escape: escape_default,
  escapeRegExp: escapeRegExp_default,
  kebabCase: kebabCase_default,
  lowerCase: lowerCase_default,
  lowerFirst: lowerFirst_default,
  pad: pad_default,
  padEnd: padEnd_default,
  padStart: padStart_default,
  parseInt: parseInt_default,
  repeat: repeat_default,
  replace: replace_default,
  snakeCase: snakeCase_default,
  split: split_default,
  startCase: startCase_default,
  startsWith: startsWith_default,
  template: template_default,
  templateSettings: templateSettings_default,
  toLower: toLower_default,
  toUpper: toUpper_default,
  trim: trim_default,
  trimEnd: trimEnd_default,
  trimStart: trimStart_default,
  truncate: truncate_default,
  unescape: unescape_default,
  upperCase: upperCase_default,
  upperFirst: upperFirst_default,
  words: words_default
};

// node_modules/lodash-es/util.default.js
var util_default_default = {
  attempt: attempt_default,
  bindAll: bindAll_default,
  cond: cond_default,
  conforms: conforms_default,
  constant: constant_default,
  defaultTo: defaultTo_default,
  flow: flow_default,
  flowRight: flowRight_default,
  identity: identity_default,
  iteratee: iteratee_default,
  matches: matches_default,
  matchesProperty: matchesProperty_default,
  method: method_default,
  methodOf: methodOf_default,
  mixin: mixin_default,
  noop: noop_default,
  nthArg: nthArg_default,
  over: over_default,
  overEvery: overEvery_default,
  overSome: overSome_default,
  property: property_default,
  propertyOf: propertyOf_default,
  range: range_default,
  rangeRight: rangeRight_default,
  stubArray: stubArray_default,
  stubFalse: stubFalse_default,
  stubObject: stubObject_default,
  stubString: stubString_default,
  stubTrue: stubTrue_default,
  times: times_default,
  toPath: toPath_default,
  uniqueId: uniqueId_default
};

// node_modules/lodash-es/_lazyClone.js
function lazyClone() {
  var result2 = new LazyWrapper_default(this.__wrapped__);
  result2.__actions__ = copyArray_default(this.__actions__);
  result2.__dir__ = this.__dir__;
  result2.__filtered__ = this.__filtered__;
  result2.__iteratees__ = copyArray_default(this.__iteratees__);
  result2.__takeCount__ = this.__takeCount__;
  result2.__views__ = copyArray_default(this.__views__);
  return result2;
}
var lazyClone_default = lazyClone;

// node_modules/lodash-es/_lazyReverse.js
function lazyReverse() {
  if (this.__filtered__) {
    var result2 = new LazyWrapper_default(this);
    result2.__dir__ = -1;
    result2.__filtered__ = true;
  } else {
    result2 = this.clone();
    result2.__dir__ *= -1;
  }
  return result2;
}
var lazyReverse_default = lazyReverse;

// node_modules/lodash-es/_getView.js
var nativeMax16 = Math.max;
var nativeMin13 = Math.min;
function getView(start2, end, transforms) {
  var index4 = -1, length = transforms.length;
  while (++index4 < length) {
    var data = transforms[index4], size2 = data.size;
    switch (data.type) {
      case "drop":
        start2 += size2;
        break;
      case "dropRight":
        end -= size2;
        break;
      case "take":
        end = nativeMin13(end, start2 + size2);
        break;
      case "takeRight":
        start2 = nativeMax16(start2, end - size2);
        break;
    }
  }
  return { "start": start2, "end": end };
}
var getView_default = getView;

// node_modules/lodash-es/_lazyValue.js
var LAZY_FILTER_FLAG = 1;
var LAZY_MAP_FLAG = 2;
var nativeMin14 = Math.min;
function lazyValue() {
  var array4 = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray_default(array4), isRight = dir < 0, arrLength = isArr ? array4.length : 0, view = getView_default(0, arrLength, this.__views__), start2 = view.start, end = view.end, length = end - start2, index4 = isRight ? end : start2 - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin14(length, this.__takeCount__);
  if (!isArr || !isRight && arrLength == length && takeCount == length) {
    return baseWrapperValue_default(array4, this.__actions__);
  }
  var result2 = [];
  outer:
    while (length-- && resIndex < takeCount) {
      index4 += dir;
      var iterIndex = -1, value2 = array4[index4];
      while (++iterIndex < iterLength) {
        var data = iteratees[iterIndex], iteratee2 = data.iteratee, type2 = data.type, computed = iteratee2(value2);
        if (type2 == LAZY_MAP_FLAG) {
          value2 = computed;
        } else if (!computed) {
          if (type2 == LAZY_FILTER_FLAG) {
            continue outer;
          } else {
            break outer;
          }
        }
      }
      result2[resIndex++] = value2;
    }
  return result2;
}
var lazyValue_default = lazyValue;

// node_modules/lodash-es/lodash.default.js
var VERSION = "4.17.21";
var WRAP_BIND_KEY_FLAG7 = 2;
var LAZY_FILTER_FLAG2 = 1;
var LAZY_WHILE_FLAG = 3;
var MAX_ARRAY_LENGTH7 = 4294967295;
var arrayProto6 = Array.prototype;
var objectProto29 = Object.prototype;
var hasOwnProperty25 = objectProto29.hasOwnProperty;
var symIterator2 = Symbol_default ? Symbol_default.iterator : void 0;
var nativeMax17 = Math.max;
var nativeMin15 = Math.min;
var mixin2 = function(func) {
  return function(object, source, options2) {
    if (options2 == null) {
      var isObj = isObject_default(source), props = isObj && keys_default(source), methodNames = props && props.length && baseFunctions_default(source, props);
      if (!(methodNames ? methodNames.length : isObj)) {
        options2 = source;
        source = object;
        object = this;
      }
    }
    return func(object, source, options2);
  };
}(mixin_default);
wrapperLodash_default.after = function_default_default.after;
wrapperLodash_default.ary = function_default_default.ary;
wrapperLodash_default.assign = object_default_default.assign;
wrapperLodash_default.assignIn = object_default_default.assignIn;
wrapperLodash_default.assignInWith = object_default_default.assignInWith;
wrapperLodash_default.assignWith = object_default_default.assignWith;
wrapperLodash_default.at = object_default_default.at;
wrapperLodash_default.before = function_default_default.before;
wrapperLodash_default.bind = function_default_default.bind;
wrapperLodash_default.bindAll = util_default_default.bindAll;
wrapperLodash_default.bindKey = function_default_default.bindKey;
wrapperLodash_default.castArray = lang_default_default.castArray;
wrapperLodash_default.chain = seq_default_default.chain;
wrapperLodash_default.chunk = array_default_default.chunk;
wrapperLodash_default.compact = array_default_default.compact;
wrapperLodash_default.concat = array_default_default.concat;
wrapperLodash_default.cond = util_default_default.cond;
wrapperLodash_default.conforms = util_default_default.conforms;
wrapperLodash_default.constant = util_default_default.constant;
wrapperLodash_default.countBy = collection_default_default.countBy;
wrapperLodash_default.create = object_default_default.create;
wrapperLodash_default.curry = function_default_default.curry;
wrapperLodash_default.curryRight = function_default_default.curryRight;
wrapperLodash_default.debounce = function_default_default.debounce;
wrapperLodash_default.defaults = object_default_default.defaults;
wrapperLodash_default.defaultsDeep = object_default_default.defaultsDeep;
wrapperLodash_default.defer = function_default_default.defer;
wrapperLodash_default.delay = function_default_default.delay;
wrapperLodash_default.difference = array_default_default.difference;
wrapperLodash_default.differenceBy = array_default_default.differenceBy;
wrapperLodash_default.differenceWith = array_default_default.differenceWith;
wrapperLodash_default.drop = array_default_default.drop;
wrapperLodash_default.dropRight = array_default_default.dropRight;
wrapperLodash_default.dropRightWhile = array_default_default.dropRightWhile;
wrapperLodash_default.dropWhile = array_default_default.dropWhile;
wrapperLodash_default.fill = array_default_default.fill;
wrapperLodash_default.filter = collection_default_default.filter;
wrapperLodash_default.flatMap = collection_default_default.flatMap;
wrapperLodash_default.flatMapDeep = collection_default_default.flatMapDeep;
wrapperLodash_default.flatMapDepth = collection_default_default.flatMapDepth;
wrapperLodash_default.flatten = array_default_default.flatten;
wrapperLodash_default.flattenDeep = array_default_default.flattenDeep;
wrapperLodash_default.flattenDepth = array_default_default.flattenDepth;
wrapperLodash_default.flip = function_default_default.flip;
wrapperLodash_default.flow = util_default_default.flow;
wrapperLodash_default.flowRight = util_default_default.flowRight;
wrapperLodash_default.fromPairs = array_default_default.fromPairs;
wrapperLodash_default.functions = object_default_default.functions;
wrapperLodash_default.functionsIn = object_default_default.functionsIn;
wrapperLodash_default.groupBy = collection_default_default.groupBy;
wrapperLodash_default.initial = array_default_default.initial;
wrapperLodash_default.intersection = array_default_default.intersection;
wrapperLodash_default.intersectionBy = array_default_default.intersectionBy;
wrapperLodash_default.intersectionWith = array_default_default.intersectionWith;
wrapperLodash_default.invert = object_default_default.invert;
wrapperLodash_default.invertBy = object_default_default.invertBy;
wrapperLodash_default.invokeMap = collection_default_default.invokeMap;
wrapperLodash_default.iteratee = util_default_default.iteratee;
wrapperLodash_default.keyBy = collection_default_default.keyBy;
wrapperLodash_default.keys = keys_default;
wrapperLodash_default.keysIn = object_default_default.keysIn;
wrapperLodash_default.map = collection_default_default.map;
wrapperLodash_default.mapKeys = object_default_default.mapKeys;
wrapperLodash_default.mapValues = object_default_default.mapValues;
wrapperLodash_default.matches = util_default_default.matches;
wrapperLodash_default.matchesProperty = util_default_default.matchesProperty;
wrapperLodash_default.memoize = function_default_default.memoize;
wrapperLodash_default.merge = object_default_default.merge;
wrapperLodash_default.mergeWith = object_default_default.mergeWith;
wrapperLodash_default.method = util_default_default.method;
wrapperLodash_default.methodOf = util_default_default.methodOf;
wrapperLodash_default.mixin = mixin2;
wrapperLodash_default.negate = negate_default;
wrapperLodash_default.nthArg = util_default_default.nthArg;
wrapperLodash_default.omit = object_default_default.omit;
wrapperLodash_default.omitBy = object_default_default.omitBy;
wrapperLodash_default.once = function_default_default.once;
wrapperLodash_default.orderBy = collection_default_default.orderBy;
wrapperLodash_default.over = util_default_default.over;
wrapperLodash_default.overArgs = function_default_default.overArgs;
wrapperLodash_default.overEvery = util_default_default.overEvery;
wrapperLodash_default.overSome = util_default_default.overSome;
wrapperLodash_default.partial = function_default_default.partial;
wrapperLodash_default.partialRight = function_default_default.partialRight;
wrapperLodash_default.partition = collection_default_default.partition;
wrapperLodash_default.pick = object_default_default.pick;
wrapperLodash_default.pickBy = object_default_default.pickBy;
wrapperLodash_default.property = util_default_default.property;
wrapperLodash_default.propertyOf = util_default_default.propertyOf;
wrapperLodash_default.pull = array_default_default.pull;
wrapperLodash_default.pullAll = array_default_default.pullAll;
wrapperLodash_default.pullAllBy = array_default_default.pullAllBy;
wrapperLodash_default.pullAllWith = array_default_default.pullAllWith;
wrapperLodash_default.pullAt = array_default_default.pullAt;
wrapperLodash_default.range = util_default_default.range;
wrapperLodash_default.rangeRight = util_default_default.rangeRight;
wrapperLodash_default.rearg = function_default_default.rearg;
wrapperLodash_default.reject = collection_default_default.reject;
wrapperLodash_default.remove = array_default_default.remove;
wrapperLodash_default.rest = function_default_default.rest;
wrapperLodash_default.reverse = array_default_default.reverse;
wrapperLodash_default.sampleSize = collection_default_default.sampleSize;
wrapperLodash_default.set = object_default_default.set;
wrapperLodash_default.setWith = object_default_default.setWith;
wrapperLodash_default.shuffle = collection_default_default.shuffle;
wrapperLodash_default.slice = array_default_default.slice;
wrapperLodash_default.sortBy = collection_default_default.sortBy;
wrapperLodash_default.sortedUniq = array_default_default.sortedUniq;
wrapperLodash_default.sortedUniqBy = array_default_default.sortedUniqBy;
wrapperLodash_default.split = string_default_default.split;
wrapperLodash_default.spread = function_default_default.spread;
wrapperLodash_default.tail = array_default_default.tail;
wrapperLodash_default.take = array_default_default.take;
wrapperLodash_default.takeRight = array_default_default.takeRight;
wrapperLodash_default.takeRightWhile = array_default_default.takeRightWhile;
wrapperLodash_default.takeWhile = array_default_default.takeWhile;
wrapperLodash_default.tap = seq_default_default.tap;
wrapperLodash_default.throttle = function_default_default.throttle;
wrapperLodash_default.thru = thru_default;
wrapperLodash_default.toArray = lang_default_default.toArray;
wrapperLodash_default.toPairs = object_default_default.toPairs;
wrapperLodash_default.toPairsIn = object_default_default.toPairsIn;
wrapperLodash_default.toPath = util_default_default.toPath;
wrapperLodash_default.toPlainObject = lang_default_default.toPlainObject;
wrapperLodash_default.transform = object_default_default.transform;
wrapperLodash_default.unary = function_default_default.unary;
wrapperLodash_default.union = array_default_default.union;
wrapperLodash_default.unionBy = array_default_default.unionBy;
wrapperLodash_default.unionWith = array_default_default.unionWith;
wrapperLodash_default.uniq = array_default_default.uniq;
wrapperLodash_default.uniqBy = array_default_default.uniqBy;
wrapperLodash_default.uniqWith = array_default_default.uniqWith;
wrapperLodash_default.unset = object_default_default.unset;
wrapperLodash_default.unzip = array_default_default.unzip;
wrapperLodash_default.unzipWith = array_default_default.unzipWith;
wrapperLodash_default.update = object_default_default.update;
wrapperLodash_default.updateWith = object_default_default.updateWith;
wrapperLodash_default.values = object_default_default.values;
wrapperLodash_default.valuesIn = object_default_default.valuesIn;
wrapperLodash_default.without = array_default_default.without;
wrapperLodash_default.words = string_default_default.words;
wrapperLodash_default.wrap = function_default_default.wrap;
wrapperLodash_default.xor = array_default_default.xor;
wrapperLodash_default.xorBy = array_default_default.xorBy;
wrapperLodash_default.xorWith = array_default_default.xorWith;
wrapperLodash_default.zip = array_default_default.zip;
wrapperLodash_default.zipObject = array_default_default.zipObject;
wrapperLodash_default.zipObjectDeep = array_default_default.zipObjectDeep;
wrapperLodash_default.zipWith = array_default_default.zipWith;
wrapperLodash_default.entries = object_default_default.toPairs;
wrapperLodash_default.entriesIn = object_default_default.toPairsIn;
wrapperLodash_default.extend = object_default_default.assignIn;
wrapperLodash_default.extendWith = object_default_default.assignInWith;
mixin2(wrapperLodash_default, wrapperLodash_default);
wrapperLodash_default.add = math_default_default.add;
wrapperLodash_default.attempt = util_default_default.attempt;
wrapperLodash_default.camelCase = string_default_default.camelCase;
wrapperLodash_default.capitalize = string_default_default.capitalize;
wrapperLodash_default.ceil = math_default_default.ceil;
wrapperLodash_default.clamp = number_default_default.clamp;
wrapperLodash_default.clone = lang_default_default.clone;
wrapperLodash_default.cloneDeep = lang_default_default.cloneDeep;
wrapperLodash_default.cloneDeepWith = lang_default_default.cloneDeepWith;
wrapperLodash_default.cloneWith = lang_default_default.cloneWith;
wrapperLodash_default.conformsTo = lang_default_default.conformsTo;
wrapperLodash_default.deburr = string_default_default.deburr;
wrapperLodash_default.defaultTo = util_default_default.defaultTo;
wrapperLodash_default.divide = math_default_default.divide;
wrapperLodash_default.endsWith = string_default_default.endsWith;
wrapperLodash_default.eq = lang_default_default.eq;
wrapperLodash_default.escape = string_default_default.escape;
wrapperLodash_default.escapeRegExp = string_default_default.escapeRegExp;
wrapperLodash_default.every = collection_default_default.every;
wrapperLodash_default.find = collection_default_default.find;
wrapperLodash_default.findIndex = array_default_default.findIndex;
wrapperLodash_default.findKey = object_default_default.findKey;
wrapperLodash_default.findLast = collection_default_default.findLast;
wrapperLodash_default.findLastIndex = array_default_default.findLastIndex;
wrapperLodash_default.findLastKey = object_default_default.findLastKey;
wrapperLodash_default.floor = math_default_default.floor;
wrapperLodash_default.forEach = collection_default_default.forEach;
wrapperLodash_default.forEachRight = collection_default_default.forEachRight;
wrapperLodash_default.forIn = object_default_default.forIn;
wrapperLodash_default.forInRight = object_default_default.forInRight;
wrapperLodash_default.forOwn = object_default_default.forOwn;
wrapperLodash_default.forOwnRight = object_default_default.forOwnRight;
wrapperLodash_default.get = object_default_default.get;
wrapperLodash_default.gt = lang_default_default.gt;
wrapperLodash_default.gte = lang_default_default.gte;
wrapperLodash_default.has = object_default_default.has;
wrapperLodash_default.hasIn = object_default_default.hasIn;
wrapperLodash_default.head = array_default_default.head;
wrapperLodash_default.identity = identity_default;
wrapperLodash_default.includes = collection_default_default.includes;
wrapperLodash_default.indexOf = array_default_default.indexOf;
wrapperLodash_default.inRange = number_default_default.inRange;
wrapperLodash_default.invoke = object_default_default.invoke;
wrapperLodash_default.isArguments = lang_default_default.isArguments;
wrapperLodash_default.isArray = isArray_default;
wrapperLodash_default.isArrayBuffer = lang_default_default.isArrayBuffer;
wrapperLodash_default.isArrayLike = lang_default_default.isArrayLike;
wrapperLodash_default.isArrayLikeObject = lang_default_default.isArrayLikeObject;
wrapperLodash_default.isBoolean = lang_default_default.isBoolean;
wrapperLodash_default.isBuffer = lang_default_default.isBuffer;
wrapperLodash_default.isDate = lang_default_default.isDate;
wrapperLodash_default.isElement = lang_default_default.isElement;
wrapperLodash_default.isEmpty = lang_default_default.isEmpty;
wrapperLodash_default.isEqual = lang_default_default.isEqual;
wrapperLodash_default.isEqualWith = lang_default_default.isEqualWith;
wrapperLodash_default.isError = lang_default_default.isError;
wrapperLodash_default.isFinite = lang_default_default.isFinite;
wrapperLodash_default.isFunction = lang_default_default.isFunction;
wrapperLodash_default.isInteger = lang_default_default.isInteger;
wrapperLodash_default.isLength = lang_default_default.isLength;
wrapperLodash_default.isMap = lang_default_default.isMap;
wrapperLodash_default.isMatch = lang_default_default.isMatch;
wrapperLodash_default.isMatchWith = lang_default_default.isMatchWith;
wrapperLodash_default.isNaN = lang_default_default.isNaN;
wrapperLodash_default.isNative = lang_default_default.isNative;
wrapperLodash_default.isNil = lang_default_default.isNil;
wrapperLodash_default.isNull = lang_default_default.isNull;
wrapperLodash_default.isNumber = lang_default_default.isNumber;
wrapperLodash_default.isObject = isObject_default;
wrapperLodash_default.isObjectLike = lang_default_default.isObjectLike;
wrapperLodash_default.isPlainObject = lang_default_default.isPlainObject;
wrapperLodash_default.isRegExp = lang_default_default.isRegExp;
wrapperLodash_default.isSafeInteger = lang_default_default.isSafeInteger;
wrapperLodash_default.isSet = lang_default_default.isSet;
wrapperLodash_default.isString = lang_default_default.isString;
wrapperLodash_default.isSymbol = lang_default_default.isSymbol;
wrapperLodash_default.isTypedArray = lang_default_default.isTypedArray;
wrapperLodash_default.isUndefined = lang_default_default.isUndefined;
wrapperLodash_default.isWeakMap = lang_default_default.isWeakMap;
wrapperLodash_default.isWeakSet = lang_default_default.isWeakSet;
wrapperLodash_default.join = array_default_default.join;
wrapperLodash_default.kebabCase = string_default_default.kebabCase;
wrapperLodash_default.last = last_default;
wrapperLodash_default.lastIndexOf = array_default_default.lastIndexOf;
wrapperLodash_default.lowerCase = string_default_default.lowerCase;
wrapperLodash_default.lowerFirst = string_default_default.lowerFirst;
wrapperLodash_default.lt = lang_default_default.lt;
wrapperLodash_default.lte = lang_default_default.lte;
wrapperLodash_default.max = math_default_default.max;
wrapperLodash_default.maxBy = math_default_default.maxBy;
wrapperLodash_default.mean = math_default_default.mean;
wrapperLodash_default.meanBy = math_default_default.meanBy;
wrapperLodash_default.min = math_default_default.min;
wrapperLodash_default.minBy = math_default_default.minBy;
wrapperLodash_default.stubArray = util_default_default.stubArray;
wrapperLodash_default.stubFalse = util_default_default.stubFalse;
wrapperLodash_default.stubObject = util_default_default.stubObject;
wrapperLodash_default.stubString = util_default_default.stubString;
wrapperLodash_default.stubTrue = util_default_default.stubTrue;
wrapperLodash_default.multiply = math_default_default.multiply;
wrapperLodash_default.nth = array_default_default.nth;
wrapperLodash_default.noop = util_default_default.noop;
wrapperLodash_default.now = date_default_default.now;
wrapperLodash_default.pad = string_default_default.pad;
wrapperLodash_default.padEnd = string_default_default.padEnd;
wrapperLodash_default.padStart = string_default_default.padStart;
wrapperLodash_default.parseInt = string_default_default.parseInt;
wrapperLodash_default.random = number_default_default.random;
wrapperLodash_default.reduce = collection_default_default.reduce;
wrapperLodash_default.reduceRight = collection_default_default.reduceRight;
wrapperLodash_default.repeat = string_default_default.repeat;
wrapperLodash_default.replace = string_default_default.replace;
wrapperLodash_default.result = object_default_default.result;
wrapperLodash_default.round = math_default_default.round;
wrapperLodash_default.sample = collection_default_default.sample;
wrapperLodash_default.size = collection_default_default.size;
wrapperLodash_default.snakeCase = string_default_default.snakeCase;
wrapperLodash_default.some = collection_default_default.some;
wrapperLodash_default.sortedIndex = array_default_default.sortedIndex;
wrapperLodash_default.sortedIndexBy = array_default_default.sortedIndexBy;
wrapperLodash_default.sortedIndexOf = array_default_default.sortedIndexOf;
wrapperLodash_default.sortedLastIndex = array_default_default.sortedLastIndex;
wrapperLodash_default.sortedLastIndexBy = array_default_default.sortedLastIndexBy;
wrapperLodash_default.sortedLastIndexOf = array_default_default.sortedLastIndexOf;
wrapperLodash_default.startCase = string_default_default.startCase;
wrapperLodash_default.startsWith = string_default_default.startsWith;
wrapperLodash_default.subtract = math_default_default.subtract;
wrapperLodash_default.sum = math_default_default.sum;
wrapperLodash_default.sumBy = math_default_default.sumBy;
wrapperLodash_default.template = string_default_default.template;
wrapperLodash_default.times = util_default_default.times;
wrapperLodash_default.toFinite = lang_default_default.toFinite;
wrapperLodash_default.toInteger = toInteger_default;
wrapperLodash_default.toLength = lang_default_default.toLength;
wrapperLodash_default.toLower = string_default_default.toLower;
wrapperLodash_default.toNumber = lang_default_default.toNumber;
wrapperLodash_default.toSafeInteger = lang_default_default.toSafeInteger;
wrapperLodash_default.toString = lang_default_default.toString;
wrapperLodash_default.toUpper = string_default_default.toUpper;
wrapperLodash_default.trim = string_default_default.trim;
wrapperLodash_default.trimEnd = string_default_default.trimEnd;
wrapperLodash_default.trimStart = string_default_default.trimStart;
wrapperLodash_default.truncate = string_default_default.truncate;
wrapperLodash_default.unescape = string_default_default.unescape;
wrapperLodash_default.uniqueId = util_default_default.uniqueId;
wrapperLodash_default.upperCase = string_default_default.upperCase;
wrapperLodash_default.upperFirst = string_default_default.upperFirst;
wrapperLodash_default.each = collection_default_default.forEach;
wrapperLodash_default.eachRight = collection_default_default.forEachRight;
wrapperLodash_default.first = array_default_default.head;
mixin2(wrapperLodash_default, function() {
  var source = {};
  baseForOwn_default(wrapperLodash_default, function(func, methodName) {
    if (!hasOwnProperty25.call(wrapperLodash_default.prototype, methodName)) {
      source[methodName] = func;
    }
  });
  return source;
}(), { "chain": false });
wrapperLodash_default.VERSION = VERSION;
(wrapperLodash_default.templateSettings = string_default_default.templateSettings).imports._ = wrapperLodash_default;
arrayEach_default(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
  wrapperLodash_default[methodName].placeholder = wrapperLodash_default;
});
arrayEach_default(["drop", "take"], function(methodName, index4) {
  LazyWrapper_default.prototype[methodName] = function(n) {
    n = n === void 0 ? 1 : nativeMax17(toInteger_default(n), 0);
    var result2 = this.__filtered__ && !index4 ? new LazyWrapper_default(this) : this.clone();
    if (result2.__filtered__) {
      result2.__takeCount__ = nativeMin15(n, result2.__takeCount__);
    } else {
      result2.__views__.push({
        "size": nativeMin15(n, MAX_ARRAY_LENGTH7),
        "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
      });
    }
    return result2;
  };
  LazyWrapper_default.prototype[methodName + "Right"] = function(n) {
    return this.reverse()[methodName](n).reverse();
  };
});
arrayEach_default(["filter", "map", "takeWhile"], function(methodName, index4) {
  var type2 = index4 + 1, isFilter = type2 == LAZY_FILTER_FLAG2 || type2 == LAZY_WHILE_FLAG;
  LazyWrapper_default.prototype[methodName] = function(iteratee2) {
    var result2 = this.clone();
    result2.__iteratees__.push({
      "iteratee": baseIteratee_default(iteratee2, 3),
      "type": type2
    });
    result2.__filtered__ = result2.__filtered__ || isFilter;
    return result2;
  };
});
arrayEach_default(["head", "last"], function(methodName, index4) {
  var takeName = "take" + (index4 ? "Right" : "");
  LazyWrapper_default.prototype[methodName] = function() {
    return this[takeName](1).value()[0];
  };
});
arrayEach_default(["initial", "tail"], function(methodName, index4) {
  var dropName = "drop" + (index4 ? "" : "Right");
  LazyWrapper_default.prototype[methodName] = function() {
    return this.__filtered__ ? new LazyWrapper_default(this) : this[dropName](1);
  };
});
LazyWrapper_default.prototype.compact = function() {
  return this.filter(identity_default);
};
LazyWrapper_default.prototype.find = function(predicate) {
  return this.filter(predicate).head();
};
LazyWrapper_default.prototype.findLast = function(predicate) {
  return this.reverse().find(predicate);
};
LazyWrapper_default.prototype.invokeMap = baseRest_default(function(path3, args) {
  if (typeof path3 == "function") {
    return new LazyWrapper_default(this);
  }
  return this.map(function(value2) {
    return baseInvoke_default(value2, path3, args);
  });
});
LazyWrapper_default.prototype.reject = function(predicate) {
  return this.filter(negate_default(baseIteratee_default(predicate)));
};
LazyWrapper_default.prototype.slice = function(start2, end) {
  start2 = toInteger_default(start2);
  var result2 = this;
  if (result2.__filtered__ && (start2 > 0 || end < 0)) {
    return new LazyWrapper_default(result2);
  }
  if (start2 < 0) {
    result2 = result2.takeRight(-start2);
  } else if (start2) {
    result2 = result2.drop(start2);
  }
  if (end !== void 0) {
    end = toInteger_default(end);
    result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start2);
  }
  return result2;
};
LazyWrapper_default.prototype.takeRightWhile = function(predicate) {
  return this.reverse().takeWhile(predicate).reverse();
};
LazyWrapper_default.prototype.toArray = function() {
  return this.take(MAX_ARRAY_LENGTH7);
};
baseForOwn_default(LazyWrapper_default.prototype, function(func, methodName) {
  var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = wrapperLodash_default[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
  if (!lodashFunc) {
    return;
  }
  wrapperLodash_default.prototype[methodName] = function() {
    var value2 = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value2 instanceof LazyWrapper_default, iteratee2 = args[0], useLazy = isLazy || isArray_default(value2);
    var interceptor = function(value3) {
      var result3 = lodashFunc.apply(wrapperLodash_default, arrayPush_default([value3], args));
      return isTaker && chainAll ? result3[0] : result3;
    };
    if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
      isLazy = useLazy = false;
    }
    var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
    if (!retUnwrapped && useLazy) {
      value2 = onlyLazy ? value2 : new LazyWrapper_default(this);
      var result2 = func.apply(value2, args);
      result2.__actions__.push({ "func": thru_default, "args": [interceptor], "thisArg": void 0 });
      return new LodashWrapper_default(result2, chainAll);
    }
    if (isUnwrapped && onlyLazy) {
      return func.apply(this, args);
    }
    result2 = this.thru(interceptor);
    return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
  };
});
arrayEach_default(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
  var func = arrayProto6[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
  wrapperLodash_default.prototype[methodName] = function() {
    var args = arguments;
    if (retUnwrapped && !this.__chain__) {
      var value2 = this.value();
      return func.apply(isArray_default(value2) ? value2 : [], args);
    }
    return this[chainName](function(value3) {
      return func.apply(isArray_default(value3) ? value3 : [], args);
    });
  };
});
baseForOwn_default(LazyWrapper_default.prototype, function(func, methodName) {
  var lodashFunc = wrapperLodash_default[methodName];
  if (lodashFunc) {
    var key = lodashFunc.name + "";
    if (!hasOwnProperty25.call(realNames_default, key)) {
      realNames_default[key] = [];
    }
    realNames_default[key].push({ "name": methodName, "func": lodashFunc });
  }
});
realNames_default[createHybrid_default(void 0, WRAP_BIND_KEY_FLAG7).name] = [{
  "name": "wrapper",
  "func": void 0
}];
LazyWrapper_default.prototype.clone = lazyClone_default;
LazyWrapper_default.prototype.reverse = lazyReverse_default;
LazyWrapper_default.prototype.value = lazyValue_default;
wrapperLodash_default.prototype.at = seq_default_default.at;
wrapperLodash_default.prototype.chain = seq_default_default.wrapperChain;
wrapperLodash_default.prototype.commit = seq_default_default.commit;
wrapperLodash_default.prototype.next = seq_default_default.next;
wrapperLodash_default.prototype.plant = seq_default_default.plant;
wrapperLodash_default.prototype.reverse = seq_default_default.reverse;
wrapperLodash_default.prototype.toJSON = wrapperLodash_default.prototype.valueOf = wrapperLodash_default.prototype.value = seq_default_default.value;
wrapperLodash_default.prototype.first = wrapperLodash_default.prototype.head;
if (symIterator2) {
  wrapperLodash_default.prototype[symIterator2] = seq_default_default.toIterator;
}

// node_modules/d3-selection/src/namespaces.js
var xhtml = "http://www.w3.org/1999/xhtml";
var namespaces_default = {
  svg: "http://www.w3.org/2000/svg",
  xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};

// node_modules/d3-selection/src/namespace.js
function namespace_default(name) {
  var prefix2 = name += "", i = prefix2.indexOf(":");
  if (i >= 0 && (prefix2 = name.slice(0, i)) !== "xmlns")
    name = name.slice(i + 1);
  return namespaces_default.hasOwnProperty(prefix2) ? { space: namespaces_default[prefix2], local: name } : name;
}

// node_modules/d3-selection/src/creator.js
function creatorInherit(name) {
  return function() {
    var document2 = this.ownerDocument, uri = this.namespaceURI;
    return uri === xhtml && document2.documentElement.namespaceURI === xhtml ? document2.createElement(name) : document2.createElementNS(uri, name);
  };
}
function creatorFixed(fullname) {
  return function() {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}
function creator_default(name) {
  var fullname = namespace_default(name);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
}

// node_modules/d3-selection/src/selector.js
function none() {
}
function selector_default(selector) {
  return selector == null ? none : function() {
    return this.querySelector(selector);
  };
}

// node_modules/d3-selection/src/selection/select.js
function select_default(select) {
  if (typeof select !== "function")
    select = selector_default(select);
  for (var groups3 = this._groups, m = groups3.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group3 = groups3[j], n = group3.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group3[i]) && (subnode = select.call(node, node.__data__, i, group3))) {
        if ("__data__" in node)
          subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }
  return new Selection(subgroups, this._parents);
}

// node_modules/d3-selection/src/array.js
function array(x3) {
  return x3 == null ? [] : Array.isArray(x3) ? x3 : Array.from(x3);
}

// node_modules/d3-selection/src/selectorAll.js
function empty() {
  return [];
}
function selectorAll_default(selector) {
  return selector == null ? empty : function() {
    return this.querySelectorAll(selector);
  };
}

// node_modules/d3-selection/src/selection/selectAll.js
function arrayAll(select) {
  return function() {
    return array(select.apply(this, arguments));
  };
}
function selectAll_default(select) {
  if (typeof select === "function")
    select = arrayAll(select);
  else
    select = selectorAll_default(select);
  for (var groups3 = this._groups, m = groups3.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group3 = groups3[j], n = group3.length, node, i = 0; i < n; ++i) {
      if (node = group3[i]) {
        subgroups.push(select.call(node, node.__data__, i, group3));
        parents.push(node);
      }
    }
  }
  return new Selection(subgroups, parents);
}

// node_modules/d3-selection/src/matcher.js
function matcher_default(selector) {
  return function() {
    return this.matches(selector);
  };
}
function childMatcher(selector) {
  return function(node) {
    return node.matches(selector);
  };
}

// node_modules/d3-selection/src/selection/selectChild.js
var find2 = Array.prototype.find;
function childFind(match2) {
  return function() {
    return find2.call(this.children, match2);
  };
}
function childFirst() {
  return this.firstElementChild;
}
function selectChild_default(match2) {
  return this.select(match2 == null ? childFirst : childFind(typeof match2 === "function" ? match2 : childMatcher(match2)));
}

// node_modules/d3-selection/src/selection/selectChildren.js
var filter2 = Array.prototype.filter;
function children() {
  return Array.from(this.children);
}
function childrenFilter(match2) {
  return function() {
    return filter2.call(this.children, match2);
  };
}
function selectChildren_default(match2) {
  return this.selectAll(match2 == null ? children : childrenFilter(typeof match2 === "function" ? match2 : childMatcher(match2)));
}

// node_modules/d3-selection/src/selection/filter.js
function filter_default2(match2) {
  if (typeof match2 !== "function")
    match2 = matcher_default(match2);
  for (var groups3 = this._groups, m = groups3.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group3 = groups3[j], n = group3.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group3[i]) && match2.call(node, node.__data__, i, group3)) {
        subgroup.push(node);
      }
    }
  }
  return new Selection(subgroups, this._parents);
}

// node_modules/d3-selection/src/selection/sparse.js
function sparse_default(update2) {
  return new Array(update2.length);
}

// node_modules/d3-selection/src/selection/enter.js
function enter_default() {
  return new Selection(this._enter || this._groups.map(sparse_default), this._parents);
}
function EnterNode(parent2, datum2) {
  this.ownerDocument = parent2.ownerDocument;
  this.namespaceURI = parent2.namespaceURI;
  this._next = null;
  this._parent = parent2;
  this.__data__ = datum2;
}
EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function(child) {
    return this._parent.insertBefore(child, this._next);
  },
  insertBefore: function(child, next) {
    return this._parent.insertBefore(child, next);
  },
  querySelector: function(selector) {
    return this._parent.querySelector(selector);
  },
  querySelectorAll: function(selector) {
    return this._parent.querySelectorAll(selector);
  }
};

// node_modules/d3-selection/src/constant.js
function constant_default2(x3) {
  return function() {
    return x3;
  };
}

// node_modules/d3-selection/src/selection/data.js
function bindIndex(parent2, group3, enter, update2, exit, data) {
  var i = 0, node, groupLength = group3.length, dataLength = data.length;
  for (; i < dataLength; ++i) {
    if (node = group3[i]) {
      node.__data__ = data[i];
      update2[i] = node;
    } else {
      enter[i] = new EnterNode(parent2, data[i]);
    }
  }
  for (; i < groupLength; ++i) {
    if (node = group3[i]) {
      exit[i] = node;
    }
  }
}
function bindKey2(parent2, group3, enter, update2, exit, data, key) {
  var i, node, nodeByKeyValue = new Map(), groupLength = group3.length, dataLength = data.length, keyValues = new Array(groupLength), keyValue;
  for (i = 0; i < groupLength; ++i) {
    if (node = group3[i]) {
      keyValues[i] = keyValue = key.call(node, node.__data__, i, group3) + "";
      if (nodeByKeyValue.has(keyValue)) {
        exit[i] = node;
      } else {
        nodeByKeyValue.set(keyValue, node);
      }
    }
  }
  for (i = 0; i < dataLength; ++i) {
    keyValue = key.call(parent2, data[i], i, data) + "";
    if (node = nodeByKeyValue.get(keyValue)) {
      update2[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue.delete(keyValue);
    } else {
      enter[i] = new EnterNode(parent2, data[i]);
    }
  }
  for (i = 0; i < groupLength; ++i) {
    if ((node = group3[i]) && nodeByKeyValue.get(keyValues[i]) === node) {
      exit[i] = node;
    }
  }
}
function datum(node) {
  return node.__data__;
}
function data_default(value2, key) {
  if (!arguments.length)
    return Array.from(this, datum);
  var bind2 = key ? bindKey2 : bindIndex, parents = this._parents, groups3 = this._groups;
  if (typeof value2 !== "function")
    value2 = constant_default2(value2);
  for (var m = groups3.length, update2 = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent2 = parents[j], group3 = groups3[j], groupLength = group3.length, data = arraylike(value2.call(parent2, parent2 && parent2.__data__, j, parents)), dataLength = data.length, enterGroup = enter[j] = new Array(dataLength), updateGroup = update2[j] = new Array(dataLength), exitGroup = exit[j] = new Array(groupLength);
    bind2(parent2, group3, enterGroup, updateGroup, exitGroup, data, key);
    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1)
          i1 = i0 + 1;
        while (!(next = updateGroup[i1]) && ++i1 < dataLength)
          ;
        previous._next = next || null;
      }
    }
  }
  update2 = new Selection(update2, parents);
  update2._enter = enter;
  update2._exit = exit;
  return update2;
}
function arraylike(data) {
  return typeof data === "object" && "length" in data ? data : Array.from(data);
}

// node_modules/d3-selection/src/selection/exit.js
function exit_default() {
  return new Selection(this._exit || this._groups.map(sparse_default), this._parents);
}

// node_modules/d3-selection/src/selection/join.js
function join_default2(onenter, onupdate, onexit) {
  var enter = this.enter(), update2 = this, exit = this.exit();
  if (typeof onenter === "function") {
    enter = onenter(enter);
    if (enter)
      enter = enter.selection();
  } else {
    enter = enter.append(onenter + "");
  }
  if (onupdate != null) {
    update2 = onupdate(update2);
    if (update2)
      update2 = update2.selection();
  }
  if (onexit == null)
    exit.remove();
  else
    onexit(exit);
  return enter && update2 ? enter.merge(update2).order() : update2;
}

// node_modules/d3-selection/src/selection/merge.js
function merge_default2(context) {
  var selection2 = context.selection ? context.selection() : context;
  for (var groups0 = this._groups, groups1 = selection2._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge4 = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge4[i] = node;
      }
    }
  }
  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }
  return new Selection(merges, this._parents);
}

// node_modules/d3-selection/src/selection/order.js
function order_default() {
  for (var groups3 = this._groups, j = -1, m = groups3.length; ++j < m; ) {
    for (var group3 = groups3[j], i = group3.length - 1, next = group3[i], node; --i >= 0; ) {
      if (node = group3[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4)
          next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }
  return this;
}

// node_modules/d3-selection/src/selection/sort.js
function sort_default(compare) {
  if (!compare)
    compare = ascending;
  function compareNode(a3, b) {
    return a3 && b ? compare(a3.__data__, b.__data__) : !a3 - !b;
  }
  for (var groups3 = this._groups, m = groups3.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group3 = groups3[j], n = group3.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group3[i]) {
        sortgroup[i] = node;
      }
    }
    sortgroup.sort(compareNode);
  }
  return new Selection(sortgroups, this._parents).order();
}
function ascending(a3, b) {
  return a3 < b ? -1 : a3 > b ? 1 : a3 >= b ? 0 : NaN;
}

// node_modules/d3-selection/src/selection/call.js
function call_default() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}

// node_modules/d3-selection/src/selection/nodes.js
function nodes_default() {
  return Array.from(this);
}

// node_modules/d3-selection/src/selection/node.js
function node_default() {
  for (var groups3 = this._groups, j = 0, m = groups3.length; j < m; ++j) {
    for (var group3 = groups3[j], i = 0, n = group3.length; i < n; ++i) {
      var node = group3[i];
      if (node)
        return node;
    }
  }
  return null;
}

// node_modules/d3-selection/src/selection/size.js
function size_default2() {
  let size2 = 0;
  for (const node of this)
    ++size2;
  return size2;
}

// node_modules/d3-selection/src/selection/empty.js
function empty_default() {
  return !this.node();
}

// node_modules/d3-selection/src/selection/each.js
function each_default(callback) {
  for (var groups3 = this._groups, j = 0, m = groups3.length; j < m; ++j) {
    for (var group3 = groups3[j], i = 0, n = group3.length, node; i < n; ++i) {
      if (node = group3[i])
        callback.call(node, node.__data__, i, group3);
    }
  }
  return this;
}

// node_modules/d3-selection/src/selection/attr.js
function attrRemove(name) {
  return function() {
    this.removeAttribute(name);
  };
}
function attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}
function attrConstant(name, value2) {
  return function() {
    this.setAttribute(name, value2);
  };
}
function attrConstantNS(fullname, value2) {
  return function() {
    this.setAttributeNS(fullname.space, fullname.local, value2);
  };
}
function attrFunction(name, value2) {
  return function() {
    var v = value2.apply(this, arguments);
    if (v == null)
      this.removeAttribute(name);
    else
      this.setAttribute(name, v);
  };
}
function attrFunctionNS(fullname, value2) {
  return function() {
    var v = value2.apply(this, arguments);
    if (v == null)
      this.removeAttributeNS(fullname.space, fullname.local);
    else
      this.setAttributeNS(fullname.space, fullname.local, v);
  };
}
function attr_default(name, value2) {
  var fullname = namespace_default(name);
  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }
  return this.each((value2 == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value2 === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value2));
}

// node_modules/d3-selection/src/window.js
function window_default(node) {
  return node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView;
}

// node_modules/d3-selection/src/selection/style.js
function styleRemove(name) {
  return function() {
    this.style.removeProperty(name);
  };
}
function styleConstant(name, value2, priority) {
  return function() {
    this.style.setProperty(name, value2, priority);
  };
}
function styleFunction(name, value2, priority) {
  return function() {
    var v = value2.apply(this, arguments);
    if (v == null)
      this.style.removeProperty(name);
    else
      this.style.setProperty(name, v, priority);
  };
}
function style_default(name, value2, priority) {
  return arguments.length > 1 ? this.each((value2 == null ? styleRemove : typeof value2 === "function" ? styleFunction : styleConstant)(name, value2, priority == null ? "" : priority)) : styleValue(this.node(), name);
}
function styleValue(node, name) {
  return node.style.getPropertyValue(name) || window_default(node).getComputedStyle(node, null).getPropertyValue(name);
}

// node_modules/d3-selection/src/selection/property.js
function propertyRemove(name) {
  return function() {
    delete this[name];
  };
}
function propertyConstant(name, value2) {
  return function() {
    this[name] = value2;
  };
}
function propertyFunction(name, value2) {
  return function() {
    var v = value2.apply(this, arguments);
    if (v == null)
      delete this[name];
    else
      this[name] = v;
  };
}
function property_default2(name, value2) {
  return arguments.length > 1 ? this.each((value2 == null ? propertyRemove : typeof value2 === "function" ? propertyFunction : propertyConstant)(name, value2)) : this.node()[name];
}

// node_modules/d3-selection/src/selection/classed.js
function classArray(string) {
  return string.trim().split(/^|\s+/);
}
function classList(node) {
  return node.classList || new ClassList(node);
}
function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}
ClassList.prototype = {
  add: function(name) {
    var i = this._names.indexOf(name);
    if (i < 0) {
      this._names.push(name);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function(name) {
    var i = this._names.indexOf(name);
    if (i >= 0) {
      this._names.splice(i, 1);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function(name) {
    return this._names.indexOf(name) >= 0;
  }
};
function classedAdd(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n)
    list.add(names[i]);
}
function classedRemove(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n)
    list.remove(names[i]);
}
function classedTrue(names) {
  return function() {
    classedAdd(this, names);
  };
}
function classedFalse(names) {
  return function() {
    classedRemove(this, names);
  };
}
function classedFunction(names, value2) {
  return function() {
    (value2.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}
function classed_default(name, value2) {
  var names = classArray(name + "");
  if (arguments.length < 2) {
    var list = classList(this.node()), i = -1, n = names.length;
    while (++i < n)
      if (!list.contains(names[i]))
        return false;
    return true;
  }
  return this.each((typeof value2 === "function" ? classedFunction : value2 ? classedTrue : classedFalse)(names, value2));
}

// node_modules/d3-selection/src/selection/text.js
function textRemove() {
  this.textContent = "";
}
function textConstant(value2) {
  return function() {
    this.textContent = value2;
  };
}
function textFunction(value2) {
  return function() {
    var v = value2.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}
function text_default(value2) {
  return arguments.length ? this.each(value2 == null ? textRemove : (typeof value2 === "function" ? textFunction : textConstant)(value2)) : this.node().textContent;
}

// node_modules/d3-selection/src/selection/html.js
function htmlRemove() {
  this.innerHTML = "";
}
function htmlConstant(value2) {
  return function() {
    this.innerHTML = value2;
  };
}
function htmlFunction(value2) {
  return function() {
    var v = value2.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}
function html_default(value2) {
  return arguments.length ? this.each(value2 == null ? htmlRemove : (typeof value2 === "function" ? htmlFunction : htmlConstant)(value2)) : this.node().innerHTML;
}

// node_modules/d3-selection/src/selection/raise.js
function raise() {
  if (this.nextSibling)
    this.parentNode.appendChild(this);
}
function raise_default() {
  return this.each(raise);
}

// node_modules/d3-selection/src/selection/lower.js
function lower() {
  if (this.previousSibling)
    this.parentNode.insertBefore(this, this.parentNode.firstChild);
}
function lower_default() {
  return this.each(lower);
}

// node_modules/d3-selection/src/selection/append.js
function append_default(name) {
  var create3 = typeof name === "function" ? name : creator_default(name);
  return this.select(function() {
    return this.appendChild(create3.apply(this, arguments));
  });
}

// node_modules/d3-selection/src/selection/insert.js
function constantNull() {
  return null;
}
function insert_default(name, before2) {
  var create3 = typeof name === "function" ? name : creator_default(name), select = before2 == null ? constantNull : typeof before2 === "function" ? before2 : selector_default(before2);
  return this.select(function() {
    return this.insertBefore(create3.apply(this, arguments), select.apply(this, arguments) || null);
  });
}

// node_modules/d3-selection/src/selection/remove.js
function remove2() {
  var parent2 = this.parentNode;
  if (parent2)
    parent2.removeChild(this);
}
function remove_default2() {
  return this.each(remove2);
}

// node_modules/d3-selection/src/selection/clone.js
function selection_cloneShallow() {
  var clone2 = this.cloneNode(false), parent2 = this.parentNode;
  return parent2 ? parent2.insertBefore(clone2, this.nextSibling) : clone2;
}
function selection_cloneDeep() {
  var clone2 = this.cloneNode(true), parent2 = this.parentNode;
  return parent2 ? parent2.insertBefore(clone2, this.nextSibling) : clone2;
}
function clone_default2(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}

// node_modules/d3-selection/src/selection/datum.js
function datum_default(value2) {
  return arguments.length ? this.property("__data__", value2) : this.node().__data__;
}

// node_modules/d3-selection/src/selection/on.js
function contextListener(listener) {
  return function(event) {
    listener.call(this, event, this.__data__);
  };
}
function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0)
      name = t.slice(i + 1), t = t.slice(0, i);
    return { type: t, name };
  });
}
function onRemove(typename) {
  return function() {
    var on2 = this.__on;
    if (!on2)
      return;
    for (var j = 0, i = -1, m = on2.length, o; j < m; ++j) {
      if (o = on2[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
      } else {
        on2[++i] = o;
      }
    }
    if (++i)
      on2.length = i;
    else
      delete this.__on;
  };
}
function onAdd(typename, value2, options2) {
  return function() {
    var on2 = this.__on, o, listener = contextListener(value2);
    if (on2)
      for (var j = 0, m = on2.length; j < m; ++j) {
        if ((o = on2[j]).type === typename.type && o.name === typename.name) {
          this.removeEventListener(o.type, o.listener, o.options);
          this.addEventListener(o.type, o.listener = listener, o.options = options2);
          o.value = value2;
          return;
        }
      }
    this.addEventListener(typename.type, listener, options2);
    o = { type: typename.type, name: typename.name, value: value2, listener, options: options2 };
    if (!on2)
      this.__on = [o];
    else
      on2.push(o);
  };
}
function on_default(typename, value2, options2) {
  var typenames = parseTypenames(typename + ""), i, n = typenames.length, t;
  if (arguments.length < 2) {
    var on2 = this.node().__on;
    if (on2)
      for (var j = 0, m = on2.length, o; j < m; ++j) {
        for (i = 0, o = on2[j]; i < n; ++i) {
          if ((t = typenames[i]).type === o.type && t.name === o.name) {
            return o.value;
          }
        }
      }
    return;
  }
  on2 = value2 ? onAdd : onRemove;
  for (i = 0; i < n; ++i)
    this.each(on2(typenames[i], value2, options2));
  return this;
}

// node_modules/d3-selection/src/selection/dispatch.js
function dispatchEvent(node, type2, params) {
  var window2 = window_default(node), event = window2.CustomEvent;
  if (typeof event === "function") {
    event = new event(type2, params);
  } else {
    event = window2.document.createEvent("Event");
    if (params)
      event.initEvent(type2, params.bubbles, params.cancelable), event.detail = params.detail;
    else
      event.initEvent(type2, false, false);
  }
  node.dispatchEvent(event);
}
function dispatchConstant(type2, params) {
  return function() {
    return dispatchEvent(this, type2, params);
  };
}
function dispatchFunction(type2, params) {
  return function() {
    return dispatchEvent(this, type2, params.apply(this, arguments));
  };
}
function dispatch_default(type2, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type2, params));
}

// node_modules/d3-selection/src/selection/iterator.js
function* iterator_default() {
  for (var groups3 = this._groups, j = 0, m = groups3.length; j < m; ++j) {
    for (var group3 = groups3[j], i = 0, n = group3.length, node; i < n; ++i) {
      if (node = group3[i])
        yield node;
    }
  }
}

// node_modules/d3-selection/src/selection/index.js
var root2 = [null];
function Selection(groups3, parents) {
  this._groups = groups3;
  this._parents = parents;
}
function selection() {
  return new Selection([[document.documentElement]], root2);
}
function selection_selection() {
  return this;
}
Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: select_default,
  selectAll: selectAll_default,
  selectChild: selectChild_default,
  selectChildren: selectChildren_default,
  filter: filter_default2,
  data: data_default,
  enter: enter_default,
  exit: exit_default,
  join: join_default2,
  merge: merge_default2,
  selection: selection_selection,
  order: order_default,
  sort: sort_default,
  call: call_default,
  nodes: nodes_default,
  node: node_default,
  size: size_default2,
  empty: empty_default,
  each: each_default,
  attr: attr_default,
  style: style_default,
  property: property_default2,
  classed: classed_default,
  text: text_default,
  html: html_default,
  raise: raise_default,
  lower: lower_default,
  append: append_default,
  insert: insert_default,
  remove: remove_default2,
  clone: clone_default2,
  datum: datum_default,
  on: on_default,
  dispatch: dispatch_default,
  [Symbol.iterator]: iterator_default
};
var selection_default = selection;

// node_modules/d3-selection/src/select.js
function select_default2(selector) {
  return typeof selector === "string" ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], root2);
}

// node_modules/d3-selection/src/local.js
var nextId = 0;
function local() {
  return new Local();
}
function Local() {
  this._ = "@" + (++nextId).toString(36);
}
Local.prototype = local.prototype = {
  constructor: Local,
  get: function(node) {
    var id2 = this._;
    while (!(id2 in node))
      if (!(node = node.parentNode))
        return;
    return node[id2];
  },
  set: function(node, value2) {
    return node[this._] = value2;
  },
  remove: function(node) {
    return this._ in node && delete node[this._];
  },
  toString: function() {
    return this._;
  }
};

// node_modules/d3-selection/src/sourceEvent.js
function sourceEvent_default(event) {
  let sourceEvent;
  while (sourceEvent = event.sourceEvent)
    event = sourceEvent;
  return event;
}

// node_modules/d3-selection/src/pointer.js
function pointer_default(event, node) {
  event = sourceEvent_default(event);
  if (node === void 0)
    node = event.currentTarget;
  if (node) {
    var svg = node.ownerSVGElement || node;
    if (svg.createSVGPoint) {
      var point10 = svg.createSVGPoint();
      point10.x = event.clientX, point10.y = event.clientY;
      point10 = point10.matrixTransform(node.getScreenCTM().inverse());
      return [point10.x, point10.y];
    }
    if (node.getBoundingClientRect) {
      var rect = node.getBoundingClientRect();
      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
    }
  }
  return [event.pageX, event.pageY];
}

// node_modules/@carbon/charts/tools.js
var Tools;
(function(Tools2) {
  Tools2.debounce = debounce_default;
  Tools2.clone = cloneDeep_default;
  Tools2.merge = merge_default;
  Tools2.unionBy = unionBy_default;
  Tools2.removeArrayDuplicates = uniq_default;
  Tools2.clamp = clamp_default;
  Tools2.flatten = flatten_default;
  Tools2.groupBy = groupBy_default;
  Tools2.camelCase = camelCase_default;
  Tools2.isEmpty = isEmpty_default;
  Tools2.isEqual = isEqual_default;
  Tools2.flatMapDeep = flatMapDeep_default;
  Tools2.kebabCase = kebabCase_default;
  Tools2.fromPairs = fromPairs_default;
  Tools2.some = some_default;
  function debounceWithD3MousePosition(fn, delay2, holder) {
    var timer2 = null;
    return function() {
      var context = this;
      var args = arguments;
      context.mousePosition = pointer_default(args[0], holder);
      clearTimeout(timer2);
      timer2 = setTimeout(function() {
        fn.apply(context, args);
      }, delay2);
    };
  }
  Tools2.debounceWithD3MousePosition = debounceWithD3MousePosition;
  function mergeDefaultChartOptions(defaultOptions, providedOptions) {
    var _a4, _b;
    var clonedDefaultOptions = Tools2.clone(defaultOptions);
    var providedAxesNames = Object.keys(providedOptions.axes || {});
    if ((_b = (_a4 = providedOptions) === null || _a4 === void 0 ? void 0 : _a4.toolbar) === null || _b === void 0 ? void 0 : _b.controls) {
      delete clonedDefaultOptions.toolbar.controls;
    }
    if (providedAxesNames.length === 0) {
      delete clonedDefaultOptions.axes;
    }
    for (var axisName in clonedDefaultOptions.axes) {
      if (providedAxesNames.includes(axisName)) {
        var providedAxisOptions = providedOptions.axes[axisName];
        if (providedAxisOptions["primary"] || providedAxisOptions["secondary"]) {
          console.warn("`primary` & `secondary` are no longer needed for axis configurations. Read more here https://carbon-design-system.github.io/carbon-charts/?path=/story/docs-tutorials--tabular-data-format");
        }
        var identifier = providedAxisOptions["mapsTo"];
        if (identifier === void 0 || identifier === null) {
          var scaleType = providedAxisOptions["scaleType"];
          if (scaleType === void 0 || scaleType === null) {
            providedAxisOptions["mapsTo"] = "value";
          } else if (scaleType === ScaleTypes.TIME) {
            providedAxisOptions["mapsTo"] = "date";
          } else if (scaleType === ScaleTypes.LABELS) {
            providedAxisOptions["mapsTo"] = "key";
          }
        }
      } else {
        delete clonedDefaultOptions.axes[axisName];
      }
    }
    updateLegendAdditionalItems(clonedDefaultOptions, providedOptions);
    return Tools2.merge(clonedDefaultOptions, providedOptions);
  }
  Tools2.mergeDefaultChartOptions = mergeDefaultChartOptions;
  function getDimensions(el) {
    return {
      width: parseFloat(el.style.width.replace("px", "") || el.offsetWidth),
      height: parseFloat(el.style.height.replace("px", "") || el.offsetHeight)
    };
  }
  Tools2.getDimensions = getDimensions;
  function getTranslationValues(elementRef) {
    if (!elementRef) {
      return;
    }
    var translateRegex = /translate\([0-9]+\.?[0-9]*,[0-9]+\.?[0-9]*\)/;
    var transformStr = elementRef.getAttribute("transform").match(translateRegex);
    if (!transformStr) {
      return null;
    }
    if (transformStr[0]) {
      var transforms = transformStr[0].replace(/translate\(/, "").replace(/\)/, "").split(",");
      return {
        tx: transforms[0],
        ty: transforms[1]
      };
    }
    return null;
  }
  Tools2.getTranslationValues = getTranslationValues;
  function getTranformOffsets(string) {
    var regExp = /\(([^)]+)\)/;
    var match2 = regExp.exec(string)[1];
    var xyString = match2.split(",");
    return {
      x: parseFloat(xyString[0]),
      y: parseFloat(xyString[1])
    };
  }
  Tools2.getTranformOffsets = getTranformOffsets;
  function formatWidthHeightValues(value2) {
    var stringValue = value2.toString();
    if (stringValue.match(/[a-z]/i)) {
      return stringValue;
    }
    return stringValue + "px";
  }
  Tools2.formatWidthHeightValues = formatWidthHeightValues;
  function capitalizeFirstLetter(string) {
    return string[0].toUpperCase() + string.slice(1);
  }
  Tools2.capitalizeFirstLetter = capitalizeFirstLetter;
  function convertValueToPercentage(item, fullData, key) {
    if (key === void 0) {
      key = "value";
    }
    var percentage = item / fullData.reduce(function(accum, val) {
      return accum + val[key];
    }, 0) * 100;
    return percentage % 1 !== 0 ? parseFloat(percentage.toFixed(1)) : percentage;
  }
  Tools2.convertValueToPercentage = convertValueToPercentage;
  function truncateLabel(fullText, truncationType, numCharacter) {
    if (numCharacter > fullText.length) {
      return fullText;
    }
    if (truncationType === TruncationTypes.MID_LINE) {
      return fullText.substr(0, numCharacter / 2) + "..." + fullText.substr(-numCharacter / 2);
    } else if (truncationType === TruncationTypes.FRONT_LINE) {
      return "..." + fullText.substr(-numCharacter);
    } else if (truncationType === TruncationTypes.END_LINE) {
      return fullText.substr(0, numCharacter) + "...";
    }
  }
  Tools2.truncateLabel = truncateLabel;
  function updateLegendAdditionalItems(defaultOptions, providedOptions) {
    var defaultAdditionalItems = Tools2.getProperty(defaultOptions, "legend", "additionalItems");
    var userProvidedAdditionalItems = Tools2.getProperty(providedOptions, "legend", "additionalItems");
    if (defaultAdditionalItems && userProvidedAdditionalItems) {
      var providedTypes_1 = userProvidedAdditionalItems.map(function(item) {
        return item.type;
      });
      var defaultTypes_1 = defaultAdditionalItems.map(function(item) {
        return item.type;
      });
      var updatedDefaultItems = defaultLegendAdditionalItems.filter(function(item) {
        return defaultTypes_1.includes(item.type) && !providedTypes_1.includes(item.type);
      });
      defaultOptions.legend.additionalItems = updatedDefaultItems;
      providedOptions.legend.additionalItems = Tools2.unionBy(updatedDefaultItems, userProvidedAdditionalItems, "name");
    }
  }
  Tools2.updateLegendAdditionalItems = updateLegendAdditionalItems;
  function arrayDifferences(oldArray, newArray) {
    var difference4 = {
      missing: [],
      added: []
    };
    oldArray.forEach(function(element) {
      if (newArray.indexOf(element) === -1) {
        difference4.missing.push(element);
      }
    });
    newArray.forEach(function(element) {
      if (oldArray.indexOf(element) === -1) {
        difference4.added.push(element);
      }
    });
    return difference4;
  }
  Tools2.arrayDifferences = arrayDifferences;
  function getDuplicateValues(arr) {
    var values2 = [];
    var duplicateValues = [];
    arr.forEach(function(value2) {
      if (values2.indexOf(value2) !== -1 && duplicateValues.indexOf(value2) === -1) {
        duplicateValues.push(value2);
      }
      values2.push(value2);
    });
    return duplicateValues;
  }
  Tools2.getDuplicateValues = getDuplicateValues;
  function moveToFront(element) {
    return element.each(function() {
      this.parentNode.appendChild(this);
    });
  }
  Tools2.moveToFront = moveToFront;
  Tools2.getProperty = function(object) {
    var propPath = [];
    for (var _i = 1; _i < arguments.length; _i++) {
      propPath[_i - 1] = arguments[_i];
    }
    var position2 = object;
    if (position2) {
      for (var _a4 = 0, propPath_1 = propPath; _a4 < propPath_1.length; _a4++) {
        var prop = propPath_1[_a4];
        if (position2[prop] !== null && position2[prop] !== void 0) {
          position2 = position2[prop];
        } else {
          return null;
        }
      }
      return position2;
    }
    return null;
  };
  Tools2.flipSVGCoordinatesBasedOnOrientation = function(verticalCoordinates, orientation) {
    if (orientation === CartesianOrientations.HORIZONTAL) {
      return {
        y0: verticalCoordinates.x0,
        y1: verticalCoordinates.x1,
        x0: verticalCoordinates.y0,
        x1: verticalCoordinates.y1
      };
    }
    return verticalCoordinates;
  };
  Tools2.generateSVGPathString = function(verticalCoordinates, orientation) {
    var _a4 = Tools2.flipSVGCoordinatesBasedOnOrientation(verticalCoordinates, orientation), x0 = _a4.x0, x1 = _a4.x1, y0 = _a4.y0, y1 = _a4.y1;
    return "M" + x0 + "," + y0 + "L" + x0 + "," + y1 + "L" + x1 + "," + y1 + "L" + x1 + "," + y0 + "L" + x0 + "," + y0;
  };
  function flipDomainAndRangeBasedOnOrientation(domain, range3, orientation) {
    return orientation === CartesianOrientations.VERTICAL ? [domain, range3] : [range3, domain];
  }
  Tools2.flipDomainAndRangeBasedOnOrientation = flipDomainAndRangeBasedOnOrientation;
  Tools2.compareNumeric = function(a3, b) {
    return Number(a3) === Number(b);
  };
})(Tools || (Tools = {}));

// node_modules/@carbon/charts/configuration.js
var import_en_US = __toModule(require_en_US());
var __spreadArrays = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var standardTruncationOptions = {
  type: TruncationTypes.END_LINE,
  threshold: 16,
  numCharacter: 14
};
var legend2 = {
  enabled: true,
  position: LegendPositions.BOTTOM,
  clickable: true,
  truncation: standardTruncationOptions,
  alignment: Alignments.LEFT,
  order: null,
  additionalItems: []
};
var grid = {
  x: {
    enabled: true,
    numberOfTicks: 15,
    alignWithAxisTicks: false
  },
  y: {
    enabled: true,
    numberOfTicks: 5,
    alignWithAxisTicks: false
  }
};
var ruler = {
  enabled: true
};
var baseTooltip = {
  enabled: true,
  showTotal: true,
  truncation: standardTruncationOptions,
  groupLabel: "Group"
};
var axes = {
  top: {
    visible: true,
    includeZero: true,
    truncation: standardTruncationOptions
  },
  bottom: {
    visible: true,
    includeZero: true,
    truncation: standardTruncationOptions
  },
  left: {
    visible: true,
    includeZero: true,
    truncation: standardTruncationOptions
  },
  right: {
    visible: true,
    includeZero: true,
    truncation: standardTruncationOptions
  }
};
var timeScale = {
  addSpaceOnEdges: 1,
  showDayName: false,
  localeObject: import_en_US.default,
  timeIntervalFormats: {
    "15seconds": { primary: "MMM d, pp", secondary: "pp" },
    minute: { primary: "MMM d, p", secondary: "p" },
    "30minutes": { primary: "MMM d, p", secondary: "p" },
    hourly: { primary: "MMM d, hh a", secondary: "hh a" },
    daily: { primary: "MMM d", secondary: "d" },
    weekly: { primary: "eee, MMM d", secondary: "eee" },
    monthly: { primary: "MMM yyyy", secondary: "MMM" },
    quarterly: { primary: "QQQ ''yy", secondary: "QQQ" },
    yearly: { primary: "yyyy", secondary: "yyyy" }
  }
};
var isFullScreenEnabled = typeof document !== "undefined" && (document["fullscreenEnabled"] || document["webkitFullscreenEnabled"] || document["mozFullScreenEnabled"] || document["msFullscreenEnabled"]);
var chart = {
  width: null,
  height: null,
  resizable: true,
  tooltip: baseTooltip,
  legend: legend2,
  style: {
    prefix: "cc"
  },
  data: {
    groupMapsTo: "group",
    loading: false,
    selectedGroups: []
  },
  color: {
    scale: null,
    pairing: {
      numberOfVariants: null,
      option: 1
    },
    gradient: {
      enabled: false
    }
  },
  toolbar: {
    enabled: true,
    numberOfIcons: 3,
    controls: __spreadArrays([
      {
        type: ToolbarControlTypes.SHOW_AS_DATATABLE
      }
    ], isFullScreenEnabled ? [
      {
        type: ToolbarControlTypes.MAKE_FULLSCREEN
      }
    ] : [], [
      {
        type: ToolbarControlTypes.EXPORT_CSV
      },
      {
        type: ToolbarControlTypes.EXPORT_PNG
      },
      {
        type: ToolbarControlTypes.EXPORT_JPG
      }
    ])
  }
};
var axisChart = Tools.merge({}, chart, {
  axes,
  timeScale,
  grid,
  ruler,
  zoomBar: {
    zoomRatio: 0.4,
    minZoomRatio: 0.01,
    top: {
      enabled: false,
      type: ZoomBarTypes.GRAPH_VIEW
    }
  }
});
var baseBarChart = Tools.merge({}, axisChart, {
  bars: {
    maxWidth: 16,
    spacingFactor: 0.25
  },
  timeScale: Tools.merge(timeScale, {
    addSpaceOnEdges: 1
  })
});
var simpleBarChart = Tools.merge({}, baseBarChart, {});
var groupedBarChart = Tools.merge({}, baseBarChart, {});
var stackedBarChart = Tools.merge({}, baseBarChart, {
  bars: Tools.merge({}, baseBarChart.bars, {
    dividerSize: 1.5
  })
});
var boxplotChart = Tools.merge({}, baseBarChart, {});
var scatterChart = Tools.merge({}, axisChart, {
  points: {
    radius: 4,
    fillOpacity: 0.3,
    filled: true,
    enabled: true
  }
});
var lollipopChart = scatterChart;
var lineChart = Tools.merge({}, scatterChart, {
  points: {
    radius: 3,
    filled: false,
    enabled: true
  }
});
var areaChart = Tools.merge({}, lineChart, {
  timeScale: Tools.merge(timeScale, {
    addSpaceOnEdges: 0
  })
});
var stackedAreaChart = areaChart;
var bubbleChart = Tools.merge({}, axisChart, {
  bubble: {
    radiusMapsTo: "radius",
    radiusLabel: "Radius",
    radiusRange: function(chartSize, data) {
      var smallerChartDimension = Math.min(chartSize.width, chartSize.height);
      return [
        smallerChartDimension * 3 / 400,
        smallerChartDimension * 25 / 400
      ];
    },
    fillOpacity: 0.2,
    enabled: true
  },
  points: {
    filled: true
  },
  legend: {
    additionalItems: [
      {
        type: LegendItemType.RADIUS,
        name: "Radius"
      }
    ]
  }
});
var bulletChart = Tools.merge({}, axisChart, {
  bullet: {
    performanceAreaTitles: ["Poor", "Satisfactory", "Great"]
  },
  grid: {
    x: {
      enabled: false
    },
    y: {
      enabled: false
    }
  },
  legend: {
    additionalItems: [
      {
        type: LegendItemType.AREA,
        name: "Poor area"
      },
      {
        type: LegendItemType.AREA,
        name: "Satisfactory area"
      },
      {
        type: LegendItemType.AREA,
        name: "Great area"
      },
      {
        type: LegendItemType.QUARTILE,
        name: "Quartiles"
      }
    ]
  }
});
var histogramChart = Tools.merge({}, baseBarChart, {
  bars: {
    dividerSize: 1.5
  },
  timeScale: Tools.merge(timeScale, {
    addSpaceOnEdges: 0
  })
});
var wordCloudChart = Tools.merge({}, chart, {
  tooltip: Tools.merge({}, baseTooltip, {
    wordLabel: "Word",
    valueLabel: "Value"
  }),
  wordCloud: {
    fontSizeMapsTo: "value",
    fontSizeRange: function(chartSize, data) {
      var smallerChartDimension = Math.min(chartSize.width, chartSize.height);
      return [
        smallerChartDimension * 20 / 400,
        smallerChartDimension * 75 / 400
      ];
    },
    wordMapsTo: "word"
  }
});
var pieChart = Tools.merge({}, chart, {
  pie: {
    labels: {
      formatter: null,
      enabled: true
    },
    alignment: Alignments.LEFT,
    sortFunction: null,
    valueMapsTo: "value"
  }
});
var gaugeChart = Tools.merge({}, chart, {
  legend: {
    enabled: false
  },
  gauge: {
    type: GaugeTypes.SEMI,
    arcWidth: 16,
    deltaArrow: {
      size: function(radius) {
        return radius / 8;
      },
      enabled: true
    },
    showPercentageSymbol: true,
    status: null,
    numberSpacing: 10,
    deltaFontSize: function(radius) {
      return radius / 8;
    },
    valueFontSize: function(radius) {
      return radius / 2.5;
    },
    numberFormatter: function(number5) {
      return number5.toFixed(2) % 1 !== 0 ? number5.toFixed(2).toLocaleString() : number5.toFixed().toLocaleString();
    },
    alignment: Alignments.LEFT
  }
});
var donutChart = Tools.merge({}, pieChart, {
  donut: {
    center: {
      numberFontSize: function(radius) {
        return Math.min(radius / 100 * 24, 24) + "px";
      },
      titleFontSize: function(radius) {
        return Math.min(radius / 100 * 15, 15) + "px";
      },
      titleYPosition: function(radius) {
        return Math.min(radius / 80 * 20, 20);
      },
      numberFormatter: function(number5) {
        return Math.floor(number5).toLocaleString();
      }
    },
    alignment: Alignments.LEFT
  }
});
var meterChart = Tools.merge({}, chart, {
  legend: {
    enabled: false,
    clickable: false
  },
  meter: {
    showLabels: true,
    proportional: null,
    statusBar: {
      percentageIndicator: {
        enabled: true
      }
    }
  }
});
var proportionalMeterChart = Tools.merge({}, meterChart, {
  legend: {
    enabled: true
  }
});
var radarChart = Tools.merge({}, chart, {
  radar: {
    axes: {
      angle: "key",
      value: "value"
    },
    alignment: Alignments.LEFT
  },
  tooltip: {
    gridline: {
      enabled: true
    },
    valueFormatter: function(value2) {
      return value2 !== null && value2 !== void 0 ? value2 : "N/A";
    }
  }
});
var comboChart = Tools.merge({}, baseBarChart, {
  comboChartTypes: []
});
var treeChart = Tools.merge({
  tree: {
    type: TreeTypes.TREE
  }
}, chart, {});
var treemapChart = Tools.merge({}, chart, {
  data: Tools.merge(chart.data, {
    groupMapsTo: "name"
  })
});
var circlePackChart = Tools.merge({}, chart, circlePack, {
  data: Tools.merge(chart.data, {
    groupMapsTo: "name"
  })
});
var alluvialChart = Tools.merge({}, chart, {
  alluvial: {
    data: Tools.merge(chart.data, {
      groupMapsTo: "source"
    }),
    nodePadding: 24,
    monochrome: false,
    nodes: []
  }
});
var heatmapChart = Tools.merge({}, chart, {
  axes,
  heatmap: {
    divider: {
      state: DividerStatus.AUTO
    },
    colorLegend: {
      type: "linear"
    }
  }
});
var options = {
  chart,
  axisChart,
  simpleBarChart,
  groupedBarChart,
  stackedBarChart,
  boxplotChart,
  bubbleChart,
  bulletChart,
  histogramChart,
  lineChart,
  areaChart,
  stackedAreaChart,
  scatterChart,
  lollipopChart,
  pieChart,
  donutChart,
  meterChart,
  proportionalMeterChart,
  radarChart,
  gaugeChart,
  comboChart,
  treeChart,
  treemapChart,
  circlePackChart,
  wordCloudChart,
  alluvialChart,
  heatmapChart
};

// node_modules/d3-array/src/ascending.js
function ascending2(a3, b) {
  return a3 == null || b == null ? NaN : a3 < b ? -1 : a3 > b ? 1 : a3 >= b ? 0 : NaN;
}

// node_modules/d3-array/src/bisector.js
function bisector(f) {
  let delta = f;
  let compare1 = f;
  let compare2 = f;
  if (f.length !== 2) {
    delta = (d, x3) => f(d) - x3;
    compare1 = ascending2;
    compare2 = (d, x3) => ascending2(f(d), x3);
  }
  function left3(a3, x3, lo = 0, hi = a3.length) {
    if (lo < hi) {
      if (compare1(x3, x3) !== 0)
        return hi;
      do {
        const mid = lo + hi >>> 1;
        if (compare2(a3[mid], x3) < 0)
          lo = mid + 1;
        else
          hi = mid;
      } while (lo < hi);
    }
    return lo;
  }
  function right3(a3, x3, lo = 0, hi = a3.length) {
    if (lo < hi) {
      if (compare1(x3, x3) !== 0)
        return hi;
      do {
        const mid = lo + hi >>> 1;
        if (compare2(a3[mid], x3) <= 0)
          lo = mid + 1;
        else
          hi = mid;
      } while (lo < hi);
    }
    return lo;
  }
  function center3(a3, x3, lo = 0, hi = a3.length) {
    const i = left3(a3, x3, lo, hi - 1);
    return i > lo && delta(a3[i - 1], x3) > -delta(a3[i], x3) ? i - 1 : i;
  }
  return { left: left3, center: center3, right: right3 };
}

// node_modules/d3-array/src/number.js
function number(x3) {
  return x3 === null ? NaN : +x3;
}
function* numbers(values2, valueof) {
  if (valueof === void 0) {
    for (let value2 of values2) {
      if (value2 != null && (value2 = +value2) >= value2) {
        yield value2;
      }
    }
  } else {
    let index4 = -1;
    for (let value2 of values2) {
      if ((value2 = valueof(value2, ++index4, values2)) != null && (value2 = +value2) >= value2) {
        yield value2;
      }
    }
  }
}

// node_modules/d3-array/src/bisect.js
var ascendingBisect = bisector(ascending2);
var bisectRight = ascendingBisect.right;
var bisectLeft = ascendingBisect.left;
var bisectCenter = bisector(number).center;
var bisect_default = bisectRight;

// node_modules/d3-array/src/count.js
function count(values2, valueof) {
  let count4 = 0;
  if (valueof === void 0) {
    for (let value2 of values2) {
      if (value2 != null && (value2 = +value2) >= value2) {
        ++count4;
      }
    }
  } else {
    let index4 = -1;
    for (let value2 of values2) {
      if ((value2 = valueof(value2, ++index4, values2)) != null && (value2 = +value2) >= value2) {
        ++count4;
      }
    }
  }
  return count4;
}

// node_modules/d3-array/src/extent.js
function extent(values2, valueof) {
  let min8;
  let max8;
  if (valueof === void 0) {
    for (const value2 of values2) {
      if (value2 != null) {
        if (min8 === void 0) {
          if (value2 >= value2)
            min8 = max8 = value2;
        } else {
          if (min8 > value2)
            min8 = value2;
          if (max8 < value2)
            max8 = value2;
        }
      }
    }
  } else {
    let index4 = -1;
    for (let value2 of values2) {
      if ((value2 = valueof(value2, ++index4, values2)) != null) {
        if (min8 === void 0) {
          if (value2 >= value2)
            min8 = max8 = value2;
        } else {
          if (min8 > value2)
            min8 = value2;
          if (max8 < value2)
            max8 = value2;
        }
      }
    }
  }
  return [min8, max8];
}

// node_modules/internmap/src/index.js
var InternMap = class extends Map {
  constructor(entries, key = keyof) {
    super();
    Object.defineProperties(this, { _intern: { value: new Map() }, _key: { value: key } });
    if (entries != null)
      for (const [key2, value2] of entries)
        this.set(key2, value2);
  }
  get(key) {
    return super.get(intern_get(this, key));
  }
  has(key) {
    return super.has(intern_get(this, key));
  }
  set(key, value2) {
    return super.set(intern_set(this, key), value2);
  }
  delete(key) {
    return super.delete(intern_delete(this, key));
  }
};
function intern_get({ _intern, _key }, value2) {
  const key = _key(value2);
  return _intern.has(key) ? _intern.get(key) : value2;
}
function intern_set({ _intern, _key }, value2) {
  const key = _key(value2);
  if (_intern.has(key))
    return _intern.get(key);
  _intern.set(key, value2);
  return value2;
}
function intern_delete({ _intern, _key }, value2) {
  const key = _key(value2);
  if (_intern.has(key)) {
    value2 = _intern.get(key);
    _intern.delete(key);
  }
  return value2;
}
function keyof(value2) {
  return value2 !== null && typeof value2 === "object" ? value2.valueOf() : value2;
}

// node_modules/d3-array/src/identity.js
function identity2(x3) {
  return x3;
}

// node_modules/d3-array/src/sort.js
function compareDefined(compare = ascending2) {
  if (compare === ascending2)
    return ascendingDefined;
  if (typeof compare !== "function")
    throw new TypeError("compare is not a function");
  return (a3, b) => {
    const x3 = compare(a3, b);
    if (x3 || x3 === 0)
      return x3;
    return (compare(b, b) === 0) - (compare(a3, a3) === 0);
  };
}
function ascendingDefined(a3, b) {
  return (a3 == null || !(a3 >= a3)) - (b == null || !(b >= b)) || (a3 < b ? -1 : a3 > b ? 1 : 0);
}

// node_modules/d3-array/src/array.js
var array2 = Array.prototype;
var slice2 = array2.slice;
var map2 = array2.map;

// node_modules/d3-array/src/constant.js
function constant2(x3) {
  return () => x3;
}

// node_modules/d3-array/src/ticks.js
var e10 = Math.sqrt(50);
var e5 = Math.sqrt(10);
var e2 = Math.sqrt(2);
function ticks(start2, stop, count4) {
  var reverse4, i = -1, n, ticks2, step;
  stop = +stop, start2 = +start2, count4 = +count4;
  if (start2 === stop && count4 > 0)
    return [start2];
  if (reverse4 = stop < start2)
    n = start2, start2 = stop, stop = n;
  if ((step = tickIncrement(start2, stop, count4)) === 0 || !isFinite(step))
    return [];
  if (step > 0) {
    let r0 = Math.round(start2 / step), r1 = Math.round(stop / step);
    if (r0 * step < start2)
      ++r0;
    if (r1 * step > stop)
      --r1;
    ticks2 = new Array(n = r1 - r0 + 1);
    while (++i < n)
      ticks2[i] = (r0 + i) * step;
  } else {
    step = -step;
    let r0 = Math.round(start2 * step), r1 = Math.round(stop * step);
    if (r0 / step < start2)
      ++r0;
    if (r1 / step > stop)
      --r1;
    ticks2 = new Array(n = r1 - r0 + 1);
    while (++i < n)
      ticks2[i] = (r0 + i) / step;
  }
  if (reverse4)
    ticks2.reverse();
  return ticks2;
}
function tickIncrement(start2, stop, count4) {
  var step = (stop - start2) / Math.max(0, count4), power = Math.floor(Math.log(step) / Math.LN10), error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}
function tickStep(start2, stop, count4) {
  var step0 = Math.abs(stop - start2) / Math.max(0, count4), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error = step0 / step1;
  if (error >= e10)
    step1 *= 10;
  else if (error >= e5)
    step1 *= 5;
  else if (error >= e2)
    step1 *= 2;
  return stop < start2 ? -step1 : step1;
}

// node_modules/d3-array/src/nice.js
function nice(start2, stop, count4) {
  let prestep;
  while (true) {
    const step = tickIncrement(start2, stop, count4);
    if (step === prestep || step === 0 || !isFinite(step)) {
      return [start2, stop];
    } else if (step > 0) {
      start2 = Math.floor(start2 / step) * step;
      stop = Math.ceil(stop / step) * step;
    } else if (step < 0) {
      start2 = Math.ceil(start2 * step) / step;
      stop = Math.floor(stop * step) / step;
    }
    prestep = step;
  }
}

// node_modules/d3-array/src/threshold/sturges.js
function thresholdSturges(values2) {
  return Math.ceil(Math.log(count(values2)) / Math.LN2) + 1;
}

// node_modules/d3-array/src/bin.js
function bin() {
  var value2 = identity2, domain = extent, threshold2 = thresholdSturges;
  function histogram2(data) {
    if (!Array.isArray(data))
      data = Array.from(data);
    var i, n = data.length, x3, values2 = new Array(n);
    for (i = 0; i < n; ++i) {
      values2[i] = value2(data[i], i, data);
    }
    var xz = domain(values2), x0 = xz[0], x1 = xz[1], tz = threshold2(values2, x0, x1);
    if (!Array.isArray(tz)) {
      const max8 = x1, tn = +tz;
      if (domain === extent)
        [x0, x1] = nice(x0, x1, tn);
      tz = ticks(x0, x1, tn);
      if (tz[tz.length - 1] >= x1) {
        if (max8 >= x1 && domain === extent) {
          const step = tickIncrement(x0, x1, tn);
          if (isFinite(step)) {
            if (step > 0) {
              x1 = (Math.floor(x1 / step) + 1) * step;
            } else if (step < 0) {
              x1 = (Math.ceil(x1 * -step) + 1) / -step;
            }
          }
        } else {
          tz.pop();
        }
      }
    }
    var m = tz.length;
    while (tz[0] <= x0)
      tz.shift(), --m;
    while (tz[m - 1] > x1)
      tz.pop(), --m;
    var bins = new Array(m + 1), bin2;
    for (i = 0; i <= m; ++i) {
      bin2 = bins[i] = [];
      bin2.x0 = i > 0 ? tz[i - 1] : x0;
      bin2.x1 = i < m ? tz[i] : x1;
    }
    for (i = 0; i < n; ++i) {
      x3 = values2[i];
      if (x3 != null && x0 <= x3 && x3 <= x1) {
        bins[bisect_default(tz, x3, 0, m)].push(data[i]);
      }
    }
    return bins;
  }
  histogram2.value = function(_) {
    return arguments.length ? (value2 = typeof _ === "function" ? _ : constant2(_), histogram2) : value2;
  };
  histogram2.domain = function(_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : constant2([_[0], _[1]]), histogram2) : domain;
  };
  histogram2.thresholds = function(_) {
    return arguments.length ? (threshold2 = typeof _ === "function" ? _ : Array.isArray(_) ? constant2(slice2.call(_)) : constant2(_), histogram2) : threshold2;
  };
  return histogram2;
}

// node_modules/d3-array/src/max.js
function max2(values2, valueof) {
  let max8;
  if (valueof === void 0) {
    for (const value2 of values2) {
      if (value2 != null && (max8 < value2 || max8 === void 0 && value2 >= value2)) {
        max8 = value2;
      }
    }
  } else {
    let index4 = -1;
    for (let value2 of values2) {
      if ((value2 = valueof(value2, ++index4, values2)) != null && (max8 < value2 || max8 === void 0 && value2 >= value2)) {
        max8 = value2;
      }
    }
  }
  return max8;
}

// node_modules/d3-array/src/min.js
function min2(values2, valueof) {
  let min8;
  if (valueof === void 0) {
    for (const value2 of values2) {
      if (value2 != null && (min8 > value2 || min8 === void 0 && value2 >= value2)) {
        min8 = value2;
      }
    }
  } else {
    let index4 = -1;
    for (let value2 of values2) {
      if ((value2 = valueof(value2, ++index4, values2)) != null && (min8 > value2 || min8 === void 0 && value2 >= value2)) {
        min8 = value2;
      }
    }
  }
  return min8;
}

// node_modules/d3-array/src/quickselect.js
function quickselect(array4, k3, left3 = 0, right3 = array4.length - 1, compare) {
  compare = compare === void 0 ? ascendingDefined : compareDefined(compare);
  while (right3 > left3) {
    if (right3 - left3 > 600) {
      const n = right3 - left3 + 1;
      const m = k3 - left3 + 1;
      const z = Math.log(n);
      const s3 = 0.5 * Math.exp(2 * z / 3);
      const sd = 0.5 * Math.sqrt(z * s3 * (n - s3) / n) * (m - n / 2 < 0 ? -1 : 1);
      const newLeft = Math.max(left3, Math.floor(k3 - m * s3 / n + sd));
      const newRight = Math.min(right3, Math.floor(k3 + (n - m) * s3 / n + sd));
      quickselect(array4, k3, newLeft, newRight, compare);
    }
    const t = array4[k3];
    let i = left3;
    let j = right3;
    swap(array4, left3, k3);
    if (compare(array4[right3], t) > 0)
      swap(array4, left3, right3);
    while (i < j) {
      swap(array4, i, j), ++i, --j;
      while (compare(array4[i], t) < 0)
        ++i;
      while (compare(array4[j], t) > 0)
        --j;
    }
    if (compare(array4[left3], t) === 0)
      swap(array4, left3, j);
    else
      ++j, swap(array4, j, right3);
    if (j <= k3)
      left3 = j + 1;
    if (k3 <= j)
      right3 = j - 1;
  }
  return array4;
}
function swap(array4, i, j) {
  const t = array4[i];
  array4[i] = array4[j];
  array4[j] = t;
}

// node_modules/d3-array/src/quantile.js
function quantile(values2, p, valueof) {
  values2 = Float64Array.from(numbers(values2, valueof));
  if (!(n = values2.length))
    return;
  if ((p = +p) <= 0 || n < 2)
    return min2(values2);
  if (p >= 1)
    return max2(values2);
  var n, i = (n - 1) * p, i0 = Math.floor(i), value0 = max2(quickselect(values2, i0).subarray(0, i0 + 1)), value1 = min2(values2.subarray(i0 + 1));
  return value0 + (value1 - value0) * (i - i0);
}

// node_modules/d3-array/src/range.js
function range2(start2, stop, step) {
  start2 = +start2, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start2, start2 = 0, 1) : n < 3 ? 1 : +step;
  var i = -1, n = Math.max(0, Math.ceil((stop - start2) / step)) | 0, range3 = new Array(n);
  while (++i < n) {
    range3[i] = start2 + i * step;
  }
  return range3;
}

// node_modules/d3-array/src/shuffle.js
var shuffle_default2 = shuffler(Math.random);
function shuffler(random2) {
  return function shuffle3(array4, i0 = 0, i1 = array4.length) {
    let m = i1 - (i0 = +i0);
    while (m) {
      const i = random2() * m-- | 0, t = array4[m + i0];
      array4[m + i0] = array4[i + i0];
      array4[i + i0] = t;
    }
    return array4;
  };
}

// node_modules/d3-scale/src/init.js
function initRange(domain, range3) {
  switch (arguments.length) {
    case 0:
      break;
    case 1:
      this.range(domain);
      break;
    default:
      this.range(range3).domain(domain);
      break;
  }
  return this;
}

// node_modules/d3-scale/src/ordinal.js
var implicit = Symbol("implicit");
function ordinal() {
  var index4 = new InternMap(), domain = [], range3 = [], unknown = implicit;
  function scale(d) {
    let i = index4.get(d);
    if (i === void 0) {
      if (unknown !== implicit)
        return unknown;
      index4.set(d, i = domain.push(d) - 1);
    }
    return range3[i % range3.length];
  }
  scale.domain = function(_) {
    if (!arguments.length)
      return domain.slice();
    domain = [], index4 = new InternMap();
    for (const value2 of _) {
      if (index4.has(value2))
        continue;
      index4.set(value2, domain.push(value2) - 1);
    }
    return scale;
  };
  scale.range = function(_) {
    return arguments.length ? (range3 = Array.from(_), scale) : range3.slice();
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  scale.copy = function() {
    return ordinal(domain, range3).unknown(unknown);
  };
  initRange.apply(scale, arguments);
  return scale;
}

// node_modules/d3-scale/src/band.js
function band() {
  var scale = ordinal().unknown(void 0), domain = scale.domain, ordinalRange = scale.range, r0 = 0, r1 = 1, step, bandwidth, round2 = false, paddingInner = 0, paddingOuter = 0, align = 0.5;
  delete scale.unknown;
  function rescale() {
    var n = domain().length, reverse4 = r1 < r0, start2 = reverse4 ? r1 : r0, stop = reverse4 ? r0 : r1;
    step = (stop - start2) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round2)
      step = Math.floor(step);
    start2 += (stop - start2 - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round2)
      start2 = Math.round(start2), bandwidth = Math.round(bandwidth);
    var values2 = range2(n).map(function(i) {
      return start2 + step * i;
    });
    return ordinalRange(reverse4 ? values2.reverse() : values2);
  }
  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };
  scale.range = function(_) {
    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
  };
  scale.rangeRound = function(_) {
    return [r0, r1] = _, r0 = +r0, r1 = +r1, round2 = true, rescale();
  };
  scale.bandwidth = function() {
    return bandwidth;
  };
  scale.step = function() {
    return step;
  };
  scale.round = function(_) {
    return arguments.length ? (round2 = !!_, rescale()) : round2;
  };
  scale.padding = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };
  scale.paddingInner = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };
  scale.paddingOuter = function(_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };
  scale.align = function(_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };
  scale.copy = function() {
    return band(domain(), [r0, r1]).round(round2).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };
  return initRange.apply(rescale(), arguments);
}

// node_modules/d3-color/src/define.js
function define_default(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}
function extend(parent2, definition) {
  var prototype = Object.create(parent2.prototype);
  for (var key in definition)
    prototype[key] = definition[key];
  return prototype;
}

// node_modules/d3-color/src/color.js
function Color() {
}
var darker = 0.7;
var brighter = 1 / darker;
var reI = "\\s*([+-]?\\d+)\\s*";
var reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*";
var reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
var reHex = /^#([0-9a-f]{3,8})$/;
var reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$");
var reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$");
var reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$");
var reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$");
var reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$");
var reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
define_default(Color, color2, {
  copy: function(channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function() {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});
function color_formatHex() {
  return this.rgb().formatHex();
}
function color_formatHsl() {
  return hslConvert(this).formatHsl();
}
function color_formatRgb() {
  return this.rgb().formatRgb();
}
function color2(format3) {
  var m, l;
  format3 = (format3 + "").trim().toLowerCase();
  return (m = reHex.exec(format3)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) : l === 3 ? new Rgb(m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, (m & 15) << 4 | m & 15, 1) : l === 8 ? rgba(m >> 24 & 255, m >> 16 & 255, m >> 8 & 255, (m & 255) / 255) : l === 4 ? rgba(m >> 12 & 15 | m >> 8 & 240, m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, ((m & 15) << 4 | m & 15) / 255) : null) : (m = reRgbInteger.exec(format3)) ? new Rgb(m[1], m[2], m[3], 1) : (m = reRgbPercent.exec(format3)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) : (m = reRgbaInteger.exec(format3)) ? rgba(m[1], m[2], m[3], m[4]) : (m = reRgbaPercent.exec(format3)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) : (m = reHslPercent.exec(format3)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) : (m = reHslaPercent.exec(format3)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) : named.hasOwnProperty(format3) ? rgbn(named[format3]) : format3 === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}
function rgbn(n) {
  return new Rgb(n >> 16 & 255, n >> 8 & 255, n & 255, 1);
}
function rgba(r, g, b, a3) {
  if (a3 <= 0)
    r = g = b = NaN;
  return new Rgb(r, g, b, a3);
}
function rgbConvert(o) {
  if (!(o instanceof Color))
    o = color2(o);
  if (!o)
    return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}
function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}
function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}
define_default(Rgb, rgb, extend(Color, {
  brighter: function(k3) {
    k3 = k3 == null ? brighter : Math.pow(brighter, k3);
    return new Rgb(this.r * k3, this.g * k3, this.b * k3, this.opacity);
  },
  darker: function(k3) {
    k3 = k3 == null ? darker : Math.pow(darker, k3);
    return new Rgb(this.r * k3, this.g * k3, this.b * k3, this.opacity);
  },
  rgb: function() {
    return this;
  },
  displayable: function() {
    return -0.5 <= this.r && this.r < 255.5 && (-0.5 <= this.g && this.g < 255.5) && (-0.5 <= this.b && this.b < 255.5) && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex,
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));
function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}
function rgb_formatRgb() {
  var a3 = this.opacity;
  a3 = isNaN(a3) ? 1 : Math.max(0, Math.min(1, a3));
  return (a3 === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a3 === 1 ? ")" : ", " + a3 + ")");
}
function hex(value2) {
  value2 = Math.max(0, Math.min(255, Math.round(value2) || 0));
  return (value2 < 16 ? "0" : "") + value2.toString(16);
}
function hsla(h, s3, l, a3) {
  if (a3 <= 0)
    h = s3 = l = NaN;
  else if (l <= 0 || l >= 1)
    h = s3 = NaN;
  else if (s3 <= 0)
    h = NaN;
  return new Hsl(h, s3, l, a3);
}
function hslConvert(o) {
  if (o instanceof Hsl)
    return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color))
    o = color2(o);
  if (!o)
    return new Hsl();
  if (o instanceof Hsl)
    return o;
  o = o.rgb();
  var r = o.r / 255, g = o.g / 255, b = o.b / 255, min8 = Math.min(r, g, b), max8 = Math.max(r, g, b), h = NaN, s3 = max8 - min8, l = (max8 + min8) / 2;
  if (s3) {
    if (r === max8)
      h = (g - b) / s3 + (g < b) * 6;
    else if (g === max8)
      h = (b - r) / s3 + 2;
    else
      h = (r - g) / s3 + 4;
    s3 /= l < 0.5 ? max8 + min8 : 2 - max8 - min8;
    h *= 60;
  } else {
    s3 = l > 0 && l < 1 ? 0 : h;
  }
  return new Hsl(h, s3, l, o.opacity);
}
function hsl(h, s3, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s3, l, opacity == null ? 1 : opacity);
}
function Hsl(h, s3, l, opacity) {
  this.h = +h;
  this.s = +s3;
  this.l = +l;
  this.opacity = +opacity;
}
define_default(Hsl, hsl, extend(Color, {
  brighter: function(k3) {
    k3 = k3 == null ? brighter : Math.pow(brighter, k3);
    return new Hsl(this.h, this.s, this.l * k3, this.opacity);
  },
  darker: function(k3) {
    k3 = k3 == null ? darker : Math.pow(darker, k3);
    return new Hsl(this.h, this.s, this.l * k3, this.opacity);
  },
  rgb: function() {
    var h = this.h % 360 + (this.h < 0) * 360, s3 = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s3, m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
  },
  displayable: function() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl: function() {
    var a3 = this.opacity;
    a3 = isNaN(a3) ? 1 : Math.max(0, Math.min(1, a3));
    return (a3 === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a3 === 1 ? ")" : ", " + a3 + ")");
  }
}));
function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}

// node_modules/d3-color/src/math.js
var radians = Math.PI / 180;
var degrees = 180 / Math.PI;

// node_modules/d3-color/src/lab.js
var K = 18;
var Xn = 0.96422;
var Yn = 1;
var Zn = 0.82521;
var t0 = 4 / 29;
var t1 = 6 / 29;
var t2 = 3 * t1 * t1;
var t3 = t1 * t1 * t1;
function labConvert(o) {
  if (o instanceof Lab)
    return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl)
    return hcl2lab(o);
  if (!(o instanceof Rgb))
    o = rgbConvert(o);
  var r = rgb2lrgb(o.r), g = rgb2lrgb(o.g), b = rgb2lrgb(o.b), y3 = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x3, z;
  if (r === g && g === b)
    x3 = z = y3;
  else {
    x3 = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y3 - 16, 500 * (x3 - y3), 200 * (y3 - z), o.opacity);
}
function lab(l, a3, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a3, b, opacity == null ? 1 : opacity);
}
function Lab(l, a3, b, opacity) {
  this.l = +l;
  this.a = +a3;
  this.b = +b;
  this.opacity = +opacity;
}
define_default(Lab, lab, extend(Color, {
  brighter: function(k3) {
    return new Lab(this.l + K * (k3 == null ? 1 : k3), this.a, this.b, this.opacity);
  },
  darker: function(k3) {
    return new Lab(this.l - K * (k3 == null ? 1 : k3), this.a, this.b, this.opacity);
  },
  rgb: function() {
    var y3 = (this.l + 16) / 116, x3 = isNaN(this.a) ? y3 : y3 + this.a / 500, z = isNaN(this.b) ? y3 : y3 - this.b / 200;
    x3 = Xn * lab2xyz(x3);
    y3 = Yn * lab2xyz(y3);
    z = Zn * lab2xyz(z);
    return new Rgb(lrgb2rgb(3.1338561 * x3 - 1.6168667 * y3 - 0.4906146 * z), lrgb2rgb(-0.9787684 * x3 + 1.9161415 * y3 + 0.033454 * z), lrgb2rgb(0.0719453 * x3 - 0.2289914 * y3 + 1.4052427 * z), this.opacity);
  }
}));
function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}
function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}
function lrgb2rgb(x3) {
  return 255 * (x3 <= 31308e-7 ? 12.92 * x3 : 1.055 * Math.pow(x3, 1 / 2.4) - 0.055);
}
function rgb2lrgb(x3) {
  return (x3 /= 255) <= 0.04045 ? x3 / 12.92 : Math.pow((x3 + 0.055) / 1.055, 2.4);
}
function hclConvert(o) {
  if (o instanceof Hcl)
    return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab))
    o = labConvert(o);
  if (o.a === 0 && o.b === 0)
    return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
  var h = Math.atan2(o.b, o.a) * degrees;
  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}
function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}
function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}
function hcl2lab(o) {
  if (isNaN(o.h))
    return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * radians;
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}
define_default(Hcl, hcl, extend(Color, {
  brighter: function(k3) {
    return new Hcl(this.h, this.c, this.l + K * (k3 == null ? 1 : k3), this.opacity);
  },
  darker: function(k3) {
    return new Hcl(this.h, this.c, this.l - K * (k3 == null ? 1 : k3), this.opacity);
  },
  rgb: function() {
    return hcl2lab(this).rgb();
  }
}));

// node_modules/d3-color/src/cubehelix.js
var A = -0.14861;
var B = 1.78277;
var C = -0.29227;
var D = -0.90649;
var E = 1.97294;
var ED = E * D;
var EB = E * B;
var BC_DA = B * C - D * A;
function cubehelixConvert(o) {
  if (o instanceof Cubehelix)
    return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Rgb))
    o = rgbConvert(o);
  var r = o.r / 255, g = o.g / 255, b = o.b / 255, l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB), bl = b - l, k3 = (E * (g - l) - C * bl) / D, s3 = Math.sqrt(k3 * k3 + bl * bl) / (E * l * (1 - l)), h = s3 ? Math.atan2(k3, bl) * degrees - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s3, l, o.opacity);
}
function cubehelix(h, s3, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s3, l, opacity == null ? 1 : opacity);
}
function Cubehelix(h, s3, l, opacity) {
  this.h = +h;
  this.s = +s3;
  this.l = +l;
  this.opacity = +opacity;
}
define_default(Cubehelix, cubehelix, extend(Color, {
  brighter: function(k3) {
    k3 = k3 == null ? brighter : Math.pow(brighter, k3);
    return new Cubehelix(this.h, this.s, this.l * k3, this.opacity);
  },
  darker: function(k3) {
    k3 = k3 == null ? darker : Math.pow(darker, k3);
    return new Cubehelix(this.h, this.s, this.l * k3, this.opacity);
  },
  rgb: function() {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians, l = +this.l, a3 = isNaN(this.s) ? 0 : this.s * l * (1 - l), cosh2 = Math.cos(h), sinh2 = Math.sin(h);
    return new Rgb(255 * (l + a3 * (A * cosh2 + B * sinh2)), 255 * (l + a3 * (C * cosh2 + D * sinh2)), 255 * (l + a3 * (E * cosh2)), this.opacity);
  }
}));

// node_modules/d3-interpolate/src/basis.js
function basis(t13, v0, v1, v2, v3) {
  var t22 = t13 * t13, t32 = t22 * t13;
  return ((1 - 3 * t13 + 3 * t22 - t32) * v0 + (4 - 6 * t22 + 3 * t32) * v1 + (1 + 3 * t13 + 3 * t22 - 3 * t32) * v2 + t32 * v3) / 6;
}
function basis_default(values2) {
  var n = values2.length - 1;
  return function(t) {
    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n), v1 = values2[i], v2 = values2[i + 1], v0 = i > 0 ? values2[i - 1] : 2 * v1 - v2, v3 = i < n - 1 ? values2[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}

// node_modules/d3-interpolate/src/basisClosed.js
function basisClosed_default(values2) {
  var n = values2.length;
  return function(t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n), v0 = values2[(i + n - 1) % n], v1 = values2[i % n], v2 = values2[(i + 1) % n], v3 = values2[(i + 2) % n];
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}

// node_modules/d3-interpolate/src/constant.js
var constant_default3 = (x3) => () => x3;

// node_modules/d3-interpolate/src/color.js
function linear2(a3, d) {
  return function(t) {
    return a3 + t * d;
  };
}
function exponential(a3, b, y3) {
  return a3 = Math.pow(a3, y3), b = Math.pow(b, y3) - a3, y3 = 1 / y3, function(t) {
    return Math.pow(a3 + t * b, y3);
  };
}
function hue(a3, b) {
  var d = b - a3;
  return d ? linear2(a3, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant_default3(isNaN(a3) ? b : a3);
}
function gamma(y3) {
  return (y3 = +y3) === 1 ? nogamma : function(a3, b) {
    return b - a3 ? exponential(a3, b, y3) : constant_default3(isNaN(a3) ? b : a3);
  };
}
function nogamma(a3, b) {
  var d = b - a3;
  return d ? linear2(a3, d) : constant_default3(isNaN(a3) ? b : a3);
}

// node_modules/d3-interpolate/src/rgb.js
var rgb_default = function rgbGamma(y3) {
  var color3 = gamma(y3);
  function rgb2(start2, end) {
    var r = color3((start2 = rgb(start2)).r, (end = rgb(end)).r), g = color3(start2.g, end.g), b = color3(start2.b, end.b), opacity = nogamma(start2.opacity, end.opacity);
    return function(t) {
      start2.r = r(t);
      start2.g = g(t);
      start2.b = b(t);
      start2.opacity = opacity(t);
      return start2 + "";
    };
  }
  rgb2.gamma = rgbGamma;
  return rgb2;
}(1);
function rgbSpline(spline) {
  return function(colors2) {
    var n = colors2.length, r = new Array(n), g = new Array(n), b = new Array(n), i, color3;
    for (i = 0; i < n; ++i) {
      color3 = rgb(colors2[i]);
      r[i] = color3.r || 0;
      g[i] = color3.g || 0;
      b[i] = color3.b || 0;
    }
    r = spline(r);
    g = spline(g);
    b = spline(b);
    color3.opacity = 1;
    return function(t) {
      color3.r = r(t);
      color3.g = g(t);
      color3.b = b(t);
      return color3 + "";
    };
  };
}
var rgbBasis = rgbSpline(basis_default);
var rgbBasisClosed = rgbSpline(basisClosed_default);

// node_modules/d3-interpolate/src/numberArray.js
function numberArray_default(a3, b) {
  if (!b)
    b = [];
  var n = a3 ? Math.min(b.length, a3.length) : 0, c = b.slice(), i;
  return function(t) {
    for (i = 0; i < n; ++i)
      c[i] = a3[i] * (1 - t) + b[i] * t;
    return c;
  };
}
function isNumberArray(x3) {
  return ArrayBuffer.isView(x3) && !(x3 instanceof DataView);
}

// node_modules/d3-interpolate/src/array.js
function genericArray(a3, b) {
  var nb = b ? b.length : 0, na = a3 ? Math.min(nb, a3.length) : 0, x3 = new Array(na), c = new Array(nb), i;
  for (i = 0; i < na; ++i)
    x3[i] = value_default(a3[i], b[i]);
  for (; i < nb; ++i)
    c[i] = b[i];
  return function(t) {
    for (i = 0; i < na; ++i)
      c[i] = x3[i](t);
    return c;
  };
}

// node_modules/d3-interpolate/src/date.js
function date_default(a3, b) {
  var d = new Date();
  return a3 = +a3, b = +b, function(t) {
    return d.setTime(a3 * (1 - t) + b * t), d;
  };
}

// node_modules/d3-interpolate/src/number.js
function number_default(a3, b) {
  return a3 = +a3, b = +b, function(t) {
    return a3 * (1 - t) + b * t;
  };
}

// node_modules/d3-interpolate/src/object.js
function object_default(a3, b) {
  var i = {}, c = {}, k3;
  if (a3 === null || typeof a3 !== "object")
    a3 = {};
  if (b === null || typeof b !== "object")
    b = {};
  for (k3 in b) {
    if (k3 in a3) {
      i[k3] = value_default(a3[k3], b[k3]);
    } else {
      c[k3] = b[k3];
    }
  }
  return function(t) {
    for (k3 in i)
      c[k3] = i[k3](t);
    return c;
  };
}

// node_modules/d3-interpolate/src/string.js
var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
var reB = new RegExp(reA.source, "g");
function zero(b) {
  return function() {
    return b;
  };
}
function one(b) {
  return function(t) {
    return b(t) + "";
  };
}
function string_default(a3, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i = -1, s3 = [], q = [];
  a3 = a3 + "", b = b + "";
  while ((am = reA.exec(a3)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      bs = b.slice(bi, bs);
      if (s3[i])
        s3[i] += bs;
      else
        s3[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) {
      if (s3[i])
        s3[i] += bm;
      else
        s3[++i] = bm;
    } else {
      s3[++i] = null;
      q.push({ i, x: number_default(am, bm) });
    }
    bi = reB.lastIndex;
  }
  if (bi < b.length) {
    bs = b.slice(bi);
    if (s3[i])
      s3[i] += bs;
    else
      s3[++i] = bs;
  }
  return s3.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function(t) {
    for (var i2 = 0, o; i2 < b; ++i2)
      s3[(o = q[i2]).i] = o.x(t);
    return s3.join("");
  });
}

// node_modules/d3-interpolate/src/value.js
function value_default(a3, b) {
  var t = typeof b, c;
  return b == null || t === "boolean" ? constant_default3(b) : (t === "number" ? number_default : t === "string" ? (c = color2(b)) ? (b = c, rgb_default) : string_default : b instanceof color2 ? rgb_default : b instanceof Date ? date_default : isNumberArray(b) ? numberArray_default : Array.isArray(b) ? genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object_default : number_default)(a3, b);
}

// node_modules/d3-interpolate/src/round.js
function round_default2(a3, b) {
  return a3 = +a3, b = +b, function(t) {
    return Math.round(a3 * (1 - t) + b * t);
  };
}

// node_modules/d3-interpolate/src/transform/decompose.js
var degrees2 = 180 / Math.PI;
var identity3 = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
function decompose_default(a3, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a3 * a3 + b * b))
    a3 /= scaleX, b /= scaleX;
  if (skewX = a3 * c + b * d)
    c -= a3 * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d))
    c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a3 * d < b * c)
    a3 = -a3, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a3) * degrees2,
    skewX: Math.atan(skewX) * degrees2,
    scaleX,
    scaleY
  };
}

// node_modules/d3-interpolate/src/transform/parse.js
var svgNode;
function parseCss(value2) {
  const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value2 + "");
  return m.isIdentity ? identity3 : decompose_default(m.a, m.b, m.c, m.d, m.e, m.f);
}
function parseSvg(value2) {
  if (value2 == null)
    return identity3;
  if (!svgNode)
    svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value2);
  if (!(value2 = svgNode.transform.baseVal.consolidate()))
    return identity3;
  value2 = value2.matrix;
  return decompose_default(value2.a, value2.b, value2.c, value2.d, value2.e, value2.f);
}

// node_modules/d3-interpolate/src/transform/index.js
function interpolateTransform(parse2, pxComma, pxParen, degParen) {
  function pop(s3) {
    return s3.length ? s3.pop() + " " : "";
  }
  function translate(xa, ya, xb, yb, s3, q) {
    if (xa !== xb || ya !== yb) {
      var i = s3.push("translate(", null, pxComma, null, pxParen);
      q.push({ i: i - 4, x: number_default(xa, xb) }, { i: i - 2, x: number_default(ya, yb) });
    } else if (xb || yb) {
      s3.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }
  function rotate(a3, b, s3, q) {
    if (a3 !== b) {
      if (a3 - b > 180)
        b += 360;
      else if (b - a3 > 180)
        a3 += 360;
      q.push({ i: s3.push(pop(s3) + "rotate(", null, degParen) - 2, x: number_default(a3, b) });
    } else if (b) {
      s3.push(pop(s3) + "rotate(" + b + degParen);
    }
  }
  function skewX(a3, b, s3, q) {
    if (a3 !== b) {
      q.push({ i: s3.push(pop(s3) + "skewX(", null, degParen) - 2, x: number_default(a3, b) });
    } else if (b) {
      s3.push(pop(s3) + "skewX(" + b + degParen);
    }
  }
  function scale(xa, ya, xb, yb, s3, q) {
    if (xa !== xb || ya !== yb) {
      var i = s3.push(pop(s3) + "scale(", null, ",", null, ")");
      q.push({ i: i - 4, x: number_default(xa, xb) }, { i: i - 2, x: number_default(ya, yb) });
    } else if (xb !== 1 || yb !== 1) {
      s3.push(pop(s3) + "scale(" + xb + "," + yb + ")");
    }
  }
  return function(a3, b) {
    var s3 = [], q = [];
    a3 = parse2(a3), b = parse2(b);
    translate(a3.translateX, a3.translateY, b.translateX, b.translateY, s3, q);
    rotate(a3.rotate, b.rotate, s3, q);
    skewX(a3.skewX, b.skewX, s3, q);
    scale(a3.scaleX, a3.scaleY, b.scaleX, b.scaleY, s3, q);
    a3 = b = null;
    return function(t) {
      var i = -1, n = q.length, o;
      while (++i < n)
        s3[(o = q[i]).i] = o.x(t);
      return s3.join("");
    };
  };
}
var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");

// node_modules/d3-interpolate/src/zoom.js
var epsilon2 = 1e-12;
function cosh(x3) {
  return ((x3 = Math.exp(x3)) + 1 / x3) / 2;
}
function sinh(x3) {
  return ((x3 = Math.exp(x3)) - 1 / x3) / 2;
}
function tanh(x3) {
  return ((x3 = Math.exp(2 * x3)) - 1) / (x3 + 1);
}
var zoom_default = function zoomRho(rho, rho2, rho4) {
  function zoom(p0, p1) {
    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
    if (d2 < epsilon2) {
      S = Math.log(w1 / w0) / rho;
      i = function(t) {
        return [
          ux0 + t * dx,
          uy0 + t * dy,
          w0 * Math.exp(rho * t * S)
        ];
      };
    } else {
      var d1 = Math.sqrt(d2), b02 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1), b12 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1), r0 = Math.log(Math.sqrt(b02 * b02 + 1) - b02), r1 = Math.log(Math.sqrt(b12 * b12 + 1) - b12);
      S = (r1 - r0) / rho;
      i = function(t) {
        var s3 = t * S, coshr0 = cosh(r0), u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s3 + r0) - sinh(r0));
        return [
          ux0 + u * dx,
          uy0 + u * dy,
          w0 * coshr0 / cosh(rho * s3 + r0)
        ];
      };
    }
    i.duration = S * 1e3 * rho / Math.SQRT2;
    return i;
  }
  zoom.rho = function(_) {
    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;
    return zoomRho(_1, _2, _4);
  };
  return zoom;
}(Math.SQRT2, 2, 4);

// node_modules/d3-interpolate/src/hsl.js
function hsl2(hue2) {
  return function(start2, end) {
    var h = hue2((start2 = hsl(start2)).h, (end = hsl(end)).h), s3 = nogamma(start2.s, end.s), l = nogamma(start2.l, end.l), opacity = nogamma(start2.opacity, end.opacity);
    return function(t) {
      start2.h = h(t);
      start2.s = s3(t);
      start2.l = l(t);
      start2.opacity = opacity(t);
      return start2 + "";
    };
  };
}
var hsl_default = hsl2(hue);
var hslLong = hsl2(nogamma);

// node_modules/d3-interpolate/src/hcl.js
function hcl2(hue2) {
  return function(start2, end) {
    var h = hue2((start2 = hcl(start2)).h, (end = hcl(end)).h), c = nogamma(start2.c, end.c), l = nogamma(start2.l, end.l), opacity = nogamma(start2.opacity, end.opacity);
    return function(t) {
      start2.h = h(t);
      start2.c = c(t);
      start2.l = l(t);
      start2.opacity = opacity(t);
      return start2 + "";
    };
  };
}
var hcl_default = hcl2(hue);
var hclLong = hcl2(nogamma);

// node_modules/d3-interpolate/src/cubehelix.js
function cubehelix2(hue2) {
  return function cubehelixGamma(y3) {
    y3 = +y3;
    function cubehelix3(start2, end) {
      var h = hue2((start2 = cubehelix(start2)).h, (end = cubehelix(end)).h), s3 = nogamma(start2.s, end.s), l = nogamma(start2.l, end.l), opacity = nogamma(start2.opacity, end.opacity);
      return function(t) {
        start2.h = h(t);
        start2.s = s3(t);
        start2.l = l(Math.pow(t, y3));
        start2.opacity = opacity(t);
        return start2 + "";
      };
    }
    cubehelix3.gamma = cubehelixGamma;
    return cubehelix3;
  }(1);
}
var cubehelix_default = cubehelix2(hue);
var cubehelixLong = cubehelix2(nogamma);

// node_modules/d3-interpolate/src/quantize.js
function quantize_default(interpolator, n) {
  var samples = new Array(n);
  for (var i = 0; i < n; ++i)
    samples[i] = interpolator(i / (n - 1));
  return samples;
}

// node_modules/d3-scale/src/constant.js
function constants(x3) {
  return function() {
    return x3;
  };
}

// node_modules/d3-scale/src/number.js
function number2(x3) {
  return +x3;
}

// node_modules/d3-scale/src/continuous.js
var unit = [0, 1];
function identity4(x3) {
  return x3;
}
function normalize(a3, b) {
  return (b -= a3 = +a3) ? function(x3) {
    return (x3 - a3) / b;
  } : constants(isNaN(b) ? NaN : 0.5);
}
function clamper(a3, b) {
  var t;
  if (a3 > b)
    t = a3, a3 = b, b = t;
  return function(x3) {
    return Math.max(a3, Math.min(b, x3));
  };
}
function bimap(domain, range3, interpolate) {
  var d0 = domain[0], d1 = domain[1], r0 = range3[0], r1 = range3[1];
  if (d1 < d0)
    d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
  else
    d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function(x3) {
    return r0(d0(x3));
  };
}
function polymap(domain, range3, interpolate) {
  var j = Math.min(domain.length, range3.length) - 1, d = new Array(j), r = new Array(j), i = -1;
  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range3 = range3.slice().reverse();
  }
  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range3[i], range3[i + 1]);
  }
  return function(x3) {
    var i2 = bisect_default(domain, x3, 1, j) - 1;
    return r[i2](d[i2](x3));
  };
}
function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}
function transformer() {
  var domain = unit, range3 = unit, interpolate = value_default, transform2, untransform, unknown, clamp2 = identity4, piecewise2, output, input;
  function rescale() {
    var n = Math.min(domain.length, range3.length);
    if (clamp2 !== identity4)
      clamp2 = clamper(domain[0], domain[n - 1]);
    piecewise2 = n > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }
  function scale(x3) {
    return x3 == null || isNaN(x3 = +x3) ? unknown : (output || (output = piecewise2(domain.map(transform2), range3, interpolate)))(transform2(clamp2(x3)));
  }
  scale.invert = function(y3) {
    return clamp2(untransform((input || (input = piecewise2(range3, domain.map(transform2), number_default)))(y3)));
  };
  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_, number2), rescale()) : domain.slice();
  };
  scale.range = function(_) {
    return arguments.length ? (range3 = Array.from(_), rescale()) : range3.slice();
  };
  scale.rangeRound = function(_) {
    return range3 = Array.from(_), interpolate = round_default2, rescale();
  };
  scale.clamp = function(_) {
    return arguments.length ? (clamp2 = _ ? true : identity4, rescale()) : clamp2 !== identity4;
  };
  scale.interpolate = function(_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  return function(t, u) {
    transform2 = t, untransform = u;
    return rescale();
  };
}
function continuous() {
  return transformer()(identity4, identity4);
}

// node_modules/d3-format/src/formatDecimal.js
function formatDecimal_default(x3) {
  return Math.abs(x3 = Math.round(x3)) >= 1e21 ? x3.toLocaleString("en").replace(/,/g, "") : x3.toString(10);
}
function formatDecimalParts(x3, p) {
  if ((i = (x3 = p ? x3.toExponential(p - 1) : x3.toExponential()).indexOf("e")) < 0)
    return null;
  var i, coefficient = x3.slice(0, i);
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x3.slice(i + 1)
  ];
}

// node_modules/d3-format/src/exponent.js
function exponent_default(x3) {
  return x3 = formatDecimalParts(Math.abs(x3)), x3 ? x3[1] : NaN;
}

// node_modules/d3-format/src/formatGroup.js
function formatGroup_default(grouping, thousands) {
  return function(value2, width) {
    var i = value2.length, t = [], j = 0, g = grouping[0], length = 0;
    while (i > 0 && g > 0) {
      if (length + g + 1 > width)
        g = Math.max(1, width - length);
      t.push(value2.substring(i -= g, i + g));
      if ((length += g + 1) > width)
        break;
      g = grouping[j = (j + 1) % grouping.length];
    }
    return t.reverse().join(thousands);
  };
}

// node_modules/d3-format/src/formatNumerals.js
function formatNumerals_default(numerals) {
  return function(value2) {
    return value2.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}

// node_modules/d3-format/src/formatSpecifier.js
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier(specifier) {
  if (!(match2 = re.exec(specifier)))
    throw new Error("invalid format: " + specifier);
  var match2;
  return new FormatSpecifier({
    fill: match2[1],
    align: match2[2],
    sign: match2[3],
    symbol: match2[4],
    zero: match2[5],
    width: match2[6],
    comma: match2[7],
    precision: match2[8] && match2[8].slice(1),
    trim: match2[9],
    type: match2[10]
  });
}
formatSpecifier.prototype = FormatSpecifier.prototype;
function FormatSpecifier(specifier) {
  this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
  this.align = specifier.align === void 0 ? ">" : specifier.align + "";
  this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === void 0 ? void 0 : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === void 0 ? "" : specifier.type + "";
}
FormatSpecifier.prototype.toString = function() {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};

// node_modules/d3-format/src/formatTrim.js
function formatTrim_default(s3) {
  out:
    for (var n = s3.length, i = 1, i0 = -1, i1; i < n; ++i) {
      switch (s3[i]) {
        case ".":
          i0 = i1 = i;
          break;
        case "0":
          if (i0 === 0)
            i0 = i;
          i1 = i;
          break;
        default:
          if (!+s3[i])
            break out;
          if (i0 > 0)
            i0 = 0;
          break;
      }
    }
  return i0 > 0 ? s3.slice(0, i0) + s3.slice(i1 + 1) : s3;
}

// node_modules/d3-format/src/formatPrefixAuto.js
var prefixExponent;
function formatPrefixAuto_default(x3, p) {
  var d = formatDecimalParts(x3, p);
  if (!d)
    return x3 + "";
  var coefficient = d[0], exponent2 = d[1], i = exponent2 - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent2 / 3))) * 3) + 1, n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimalParts(x3, Math.max(0, p + i - 1))[0];
}

// node_modules/d3-format/src/formatRounded.js
function formatRounded_default(x3, p) {
  var d = formatDecimalParts(x3, p);
  if (!d)
    return x3 + "";
  var coefficient = d[0], exponent2 = d[1];
  return exponent2 < 0 ? "0." + new Array(-exponent2).join("0") + coefficient : coefficient.length > exponent2 + 1 ? coefficient.slice(0, exponent2 + 1) + "." + coefficient.slice(exponent2 + 1) : coefficient + new Array(exponent2 - coefficient.length + 2).join("0");
}

// node_modules/d3-format/src/formatTypes.js
var formatTypes_default = {
  "%": (x3, p) => (x3 * 100).toFixed(p),
  "b": (x3) => Math.round(x3).toString(2),
  "c": (x3) => x3 + "",
  "d": formatDecimal_default,
  "e": (x3, p) => x3.toExponential(p),
  "f": (x3, p) => x3.toFixed(p),
  "g": (x3, p) => x3.toPrecision(p),
  "o": (x3) => Math.round(x3).toString(8),
  "p": (x3, p) => formatRounded_default(x3 * 100, p),
  "r": formatRounded_default,
  "s": formatPrefixAuto_default,
  "X": (x3) => Math.round(x3).toString(16).toUpperCase(),
  "x": (x3) => Math.round(x3).toString(16)
};

// node_modules/d3-format/src/identity.js
function identity_default2(x3) {
  return x3;
}

// node_modules/d3-format/src/locale.js
var map4 = Array.prototype.map;
var prefixes = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
function locale_default(locale4) {
  var group3 = locale4.grouping === void 0 || locale4.thousands === void 0 ? identity_default2 : formatGroup_default(map4.call(locale4.grouping, Number), locale4.thousands + ""), currencyPrefix = locale4.currency === void 0 ? "" : locale4.currency[0] + "", currencySuffix = locale4.currency === void 0 ? "" : locale4.currency[1] + "", decimal = locale4.decimal === void 0 ? "." : locale4.decimal + "", numerals = locale4.numerals === void 0 ? identity_default2 : formatNumerals_default(map4.call(locale4.numerals, String)), percent = locale4.percent === void 0 ? "%" : locale4.percent + "", minus = locale4.minus === void 0 ? "\u2212" : locale4.minus + "", nan = locale4.nan === void 0 ? "NaN" : locale4.nan + "";
  function newFormat(specifier) {
    specifier = formatSpecifier(specifier);
    var fill2 = specifier.fill, align = specifier.align, sign3 = specifier.sign, symbol = specifier.symbol, zero2 = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim2 = specifier.trim, type2 = specifier.type;
    if (type2 === "n")
      comma = true, type2 = "g";
    else if (!formatTypes_default[type2])
      precision === void 0 && (precision = 12), trim2 = true, type2 = "g";
    if (zero2 || fill2 === "0" && align === "=")
      zero2 = true, fill2 = "0", align = "=";
    var prefix2 = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type2) ? "0" + type2.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type2) ? percent : "";
    var formatType = formatTypes_default[type2], maybeSuffix = /[defgprs%]/.test(type2);
    precision = precision === void 0 ? 6 : /[gprs]/.test(type2) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
    function format3(value2) {
      var valuePrefix = prefix2, valueSuffix = suffix, i, n, c;
      if (type2 === "c") {
        valueSuffix = formatType(value2) + valueSuffix;
        value2 = "";
      } else {
        value2 = +value2;
        var valueNegative = value2 < 0 || 1 / value2 < 0;
        value2 = isNaN(value2) ? nan : formatType(Math.abs(value2), precision);
        if (trim2)
          value2 = formatTrim_default(value2);
        if (valueNegative && +value2 === 0 && sign3 !== "+")
          valueNegative = false;
        valuePrefix = (valueNegative ? sign3 === "(" ? sign3 : minus : sign3 === "-" || sign3 === "(" ? "" : sign3) + valuePrefix;
        valueSuffix = (type2 === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign3 === "(" ? ")" : "");
        if (maybeSuffix) {
          i = -1, n = value2.length;
          while (++i < n) {
            if (c = value2.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value2.slice(i + 1) : value2.slice(i)) + valueSuffix;
              value2 = value2.slice(0, i);
              break;
            }
          }
        }
      }
      if (comma && !zero2)
        value2 = group3(value2, Infinity);
      var length = valuePrefix.length + value2.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill2) : "";
      if (comma && zero2)
        value2 = group3(padding + value2, padding.length ? width - valueSuffix.length : Infinity), padding = "";
      switch (align) {
        case "<":
          value2 = valuePrefix + value2 + valueSuffix + padding;
          break;
        case "=":
          value2 = valuePrefix + padding + value2 + valueSuffix;
          break;
        case "^":
          value2 = padding.slice(0, length = padding.length >> 1) + valuePrefix + value2 + valueSuffix + padding.slice(length);
          break;
        default:
          value2 = padding + valuePrefix + value2 + valueSuffix;
          break;
      }
      return numerals(value2);
    }
    format3.toString = function() {
      return specifier + "";
    };
    return format3;
  }
  function formatPrefix2(specifier, value2) {
    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)), e = Math.max(-8, Math.min(8, Math.floor(exponent_default(value2) / 3))) * 3, k3 = Math.pow(10, -e), prefix2 = prefixes[8 + e / 3];
    return function(value3) {
      return f(k3 * value3) + prefix2;
    };
  }
  return {
    format: newFormat,
    formatPrefix: formatPrefix2
  };
}

// node_modules/d3-format/src/defaultLocale.js
var locale;
var format;
var formatPrefix;
defaultLocale({
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});
function defaultLocale(definition) {
  locale = locale_default(definition);
  format = locale.format;
  formatPrefix = locale.formatPrefix;
  return locale;
}

// node_modules/d3-format/src/precisionFixed.js
function precisionFixed_default(step) {
  return Math.max(0, -exponent_default(Math.abs(step)));
}

// node_modules/d3-format/src/precisionPrefix.js
function precisionPrefix_default(step, value2) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent_default(value2) / 3))) * 3 - exponent_default(Math.abs(step)));
}

// node_modules/d3-format/src/precisionRound.js
function precisionRound_default(step, max8) {
  step = Math.abs(step), max8 = Math.abs(max8) - step;
  return Math.max(0, exponent_default(max8) - exponent_default(step)) + 1;
}

// node_modules/d3-scale/src/tickFormat.js
function tickFormat(start2, stop, count4, specifier) {
  var step = tickStep(start2, stop, count4), precision;
  specifier = formatSpecifier(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value2 = Math.max(Math.abs(start2), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = precisionPrefix_default(step, value2)))
        specifier.precision = precision;
      return formatPrefix(specifier, value2);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = precisionRound_default(step, Math.max(Math.abs(start2), Math.abs(stop)))))
        specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = precisionFixed_default(step)))
        specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return format(specifier);
}

// node_modules/d3-scale/src/linear.js
function linearish(scale) {
  var domain = scale.domain;
  scale.ticks = function(count4) {
    var d = domain();
    return ticks(d[0], d[d.length - 1], count4 == null ? 10 : count4);
  };
  scale.tickFormat = function(count4, specifier) {
    var d = domain();
    return tickFormat(d[0], d[d.length - 1], count4 == null ? 10 : count4, specifier);
  };
  scale.nice = function(count4) {
    if (count4 == null)
      count4 = 10;
    var d = domain();
    var i0 = 0;
    var i1 = d.length - 1;
    var start2 = d[i0];
    var stop = d[i1];
    var prestep;
    var step;
    var maxIter = 10;
    if (stop < start2) {
      step = start2, start2 = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    while (maxIter-- > 0) {
      step = tickIncrement(start2, stop, count4);
      if (step === prestep) {
        d[i0] = start2;
        d[i1] = stop;
        return domain(d);
      } else if (step > 0) {
        start2 = Math.floor(start2 / step) * step;
        stop = Math.ceil(stop / step) * step;
      } else if (step < 0) {
        start2 = Math.ceil(start2 * step) / step;
        stop = Math.floor(stop * step) / step;
      } else {
        break;
      }
      prestep = step;
    }
    return scale;
  };
  return scale;
}
function linear3() {
  var scale = continuous();
  scale.copy = function() {
    return copy(scale, linear3());
  };
  initRange.apply(scale, arguments);
  return linearish(scale);
}

// node_modules/d3-scale/src/nice.js
function nice2(domain, interval2) {
  domain = domain.slice();
  var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], t;
  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }
  domain[i0] = interval2.floor(x0);
  domain[i1] = interval2.ceil(x1);
  return domain;
}

// node_modules/d3-scale/src/log.js
function transformLog(x3) {
  return Math.log(x3);
}
function transformExp(x3) {
  return Math.exp(x3);
}
function transformLogn(x3) {
  return -Math.log(-x3);
}
function transformExpn(x3) {
  return -Math.exp(-x3);
}
function pow10(x3) {
  return isFinite(x3) ? +("1e" + x3) : x3 < 0 ? 0 : x3;
}
function powp(base) {
  return base === 10 ? pow10 : base === Math.E ? Math.exp : (x3) => Math.pow(base, x3);
}
function logp(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), (x3) => Math.log(x3) / base);
}
function reflect(f) {
  return (x3, k3) => -f(-x3, k3);
}
function loggish(transform2) {
  const scale = transform2(transformLog, transformExp);
  const domain = scale.domain;
  let base = 10;
  let logs;
  let pows;
  function rescale() {
    logs = logp(base), pows = powp(base);
    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform2(transformLogn, transformExpn);
    } else {
      transform2(transformLog, transformExp);
    }
    return scale;
  }
  scale.base = function(_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };
  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };
  scale.ticks = (count4) => {
    const d = domain();
    let u = d[0];
    let v = d[d.length - 1];
    const r = v < u;
    if (r)
      [u, v] = [v, u];
    let i = logs(u);
    let j = logs(v);
    let k3;
    let t;
    const n = count4 == null ? 10 : +count4;
    let z = [];
    if (!(base % 1) && j - i < n) {
      i = Math.floor(i), j = Math.ceil(j);
      if (u > 0)
        for (; i <= j; ++i) {
          for (k3 = 1; k3 < base; ++k3) {
            t = i < 0 ? k3 / pows(-i) : k3 * pows(i);
            if (t < u)
              continue;
            if (t > v)
              break;
            z.push(t);
          }
        }
      else
        for (; i <= j; ++i) {
          for (k3 = base - 1; k3 >= 1; --k3) {
            t = i > 0 ? k3 / pows(-i) : k3 * pows(i);
            if (t < u)
              continue;
            if (t > v)
              break;
            z.push(t);
          }
        }
      if (z.length * 2 < n)
        z = ticks(u, v, n);
    } else {
      z = ticks(i, j, Math.min(j - i, n)).map(pows);
    }
    return r ? z.reverse() : z;
  };
  scale.tickFormat = (count4, specifier) => {
    if (count4 == null)
      count4 = 10;
    if (specifier == null)
      specifier = base === 10 ? "s" : ",";
    if (typeof specifier !== "function") {
      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null)
        specifier.trim = true;
      specifier = format(specifier);
    }
    if (count4 === Infinity)
      return specifier;
    const k3 = Math.max(1, base * count4 / scale.ticks().length);
    return (d) => {
      let i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5)
        i *= base;
      return i <= k3 ? specifier(d) : "";
    };
  };
  scale.nice = () => {
    return domain(nice2(domain(), {
      floor: (x3) => pows(Math.floor(logs(x3))),
      ceil: (x3) => pows(Math.ceil(logs(x3)))
    }));
  };
  return scale;
}
function log() {
  const scale = loggish(transformer()).domain([1, 10]);
  scale.copy = () => copy(scale, log()).base(scale.base());
  initRange.apply(scale, arguments);
  return scale;
}

// node_modules/d3-scale/src/quantize.js
function quantize() {
  var x0 = 0, x1 = 1, n = 1, domain = [0.5], range3 = [0, 1], unknown;
  function scale(x3) {
    return x3 != null && x3 <= x3 ? range3[bisect_default(domain, x3, 0, n)] : unknown;
  }
  function rescale() {
    var i = -1;
    domain = new Array(n);
    while (++i < n)
      domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
    return scale;
  }
  scale.domain = function(_) {
    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];
  };
  scale.range = function(_) {
    return arguments.length ? (n = (range3 = Array.from(_)).length - 1, rescale()) : range3.slice();
  };
  scale.invertExtent = function(y3) {
    var i = range3.indexOf(y3);
    return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };
  scale.thresholds = function() {
    return domain.slice();
  };
  scale.copy = function() {
    return quantize().domain([x0, x1]).range(range3).unknown(unknown);
  };
  return initRange.apply(linearish(scale), arguments);
}

// node_modules/d3-time/src/interval.js
var t02 = new Date();
var t12 = new Date();
function newInterval(floori, offseti, count4, field) {
  function interval2(date2) {
    return floori(date2 = arguments.length === 0 ? new Date() : new Date(+date2)), date2;
  }
  interval2.floor = function(date2) {
    return floori(date2 = new Date(+date2)), date2;
  };
  interval2.ceil = function(date2) {
    return floori(date2 = new Date(date2 - 1)), offseti(date2, 1), floori(date2), date2;
  };
  interval2.round = function(date2) {
    var d0 = interval2(date2), d1 = interval2.ceil(date2);
    return date2 - d0 < d1 - date2 ? d0 : d1;
  };
  interval2.offset = function(date2, step) {
    return offseti(date2 = new Date(+date2), step == null ? 1 : Math.floor(step)), date2;
  };
  interval2.range = function(start2, stop, step) {
    var range3 = [], previous;
    start2 = interval2.ceil(start2);
    step = step == null ? 1 : Math.floor(step);
    if (!(start2 < stop) || !(step > 0))
      return range3;
    do
      range3.push(previous = new Date(+start2)), offseti(start2, step), floori(start2);
    while (previous < start2 && start2 < stop);
    return range3;
  };
  interval2.filter = function(test) {
    return newInterval(function(date2) {
      if (date2 >= date2)
        while (floori(date2), !test(date2))
          date2.setTime(date2 - 1);
    }, function(date2, step) {
      if (date2 >= date2) {
        if (step < 0)
          while (++step <= 0) {
            while (offseti(date2, -1), !test(date2)) {
            }
          }
        else
          while (--step >= 0) {
            while (offseti(date2, 1), !test(date2)) {
            }
          }
      }
    });
  };
  if (count4) {
    interval2.count = function(start2, end) {
      t02.setTime(+start2), t12.setTime(+end);
      floori(t02), floori(t12);
      return Math.floor(count4(t02, t12));
    };
    interval2.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval2 : interval2.filter(field ? function(d) {
        return field(d) % step === 0;
      } : function(d) {
        return interval2.count(0, d) % step === 0;
      });
    };
  }
  return interval2;
}

// node_modules/d3-time/src/millisecond.js
var millisecond = newInterval(function() {
}, function(date2, step) {
  date2.setTime(+date2 + step);
}, function(start2, end) {
  return end - start2;
});
millisecond.every = function(k3) {
  k3 = Math.floor(k3);
  if (!isFinite(k3) || !(k3 > 0))
    return null;
  if (!(k3 > 1))
    return millisecond;
  return newInterval(function(date2) {
    date2.setTime(Math.floor(date2 / k3) * k3);
  }, function(date2, step) {
    date2.setTime(+date2 + step * k3);
  }, function(start2, end) {
    return (end - start2) / k3;
  });
};
var millisecond_default = millisecond;
var milliseconds = millisecond.range;

// node_modules/d3-time/src/duration.js
var durationSecond = 1e3;
var durationMinute = durationSecond * 60;
var durationHour = durationMinute * 60;
var durationDay = durationHour * 24;
var durationWeek = durationDay * 7;
var durationMonth = durationDay * 30;
var durationYear = durationDay * 365;

// node_modules/d3-time/src/second.js
var second = newInterval(function(date2) {
  date2.setTime(date2 - date2.getMilliseconds());
}, function(date2, step) {
  date2.setTime(+date2 + step * durationSecond);
}, function(start2, end) {
  return (end - start2) / durationSecond;
}, function(date2) {
  return date2.getUTCSeconds();
});
var second_default = second;
var seconds = second.range;

// node_modules/d3-time/src/minute.js
var minute = newInterval(function(date2) {
  date2.setTime(date2 - date2.getMilliseconds() - date2.getSeconds() * durationSecond);
}, function(date2, step) {
  date2.setTime(+date2 + step * durationMinute);
}, function(start2, end) {
  return (end - start2) / durationMinute;
}, function(date2) {
  return date2.getMinutes();
});
var minute_default = minute;
var minutes = minute.range;

// node_modules/d3-time/src/hour.js
var hour = newInterval(function(date2) {
  date2.setTime(date2 - date2.getMilliseconds() - date2.getSeconds() * durationSecond - date2.getMinutes() * durationMinute);
}, function(date2, step) {
  date2.setTime(+date2 + step * durationHour);
}, function(start2, end) {
  return (end - start2) / durationHour;
}, function(date2) {
  return date2.getHours();
});
var hour_default = hour;
var hours = hour.range;

// node_modules/d3-time/src/day.js
var day = newInterval((date2) => date2.setHours(0, 0, 0, 0), (date2, step) => date2.setDate(date2.getDate() + step), (start2, end) => (end - start2 - (end.getTimezoneOffset() - start2.getTimezoneOffset()) * durationMinute) / durationDay, (date2) => date2.getDate() - 1);
var day_default = day;
var days = day.range;

// node_modules/d3-time/src/week.js
function weekday(i) {
  return newInterval(function(date2) {
    date2.setDate(date2.getDate() - (date2.getDay() + 7 - i) % 7);
    date2.setHours(0, 0, 0, 0);
  }, function(date2, step) {
    date2.setDate(date2.getDate() + step * 7);
  }, function(start2, end) {
    return (end - start2 - (end.getTimezoneOffset() - start2.getTimezoneOffset()) * durationMinute) / durationWeek;
  });
}
var sunday = weekday(0);
var monday = weekday(1);
var tuesday = weekday(2);
var wednesday = weekday(3);
var thursday = weekday(4);
var friday = weekday(5);
var saturday = weekday(6);
var sundays = sunday.range;
var mondays = monday.range;
var tuesdays = tuesday.range;
var wednesdays = wednesday.range;
var thursdays = thursday.range;
var fridays = friday.range;
var saturdays = saturday.range;

// node_modules/d3-time/src/month.js
var month = newInterval(function(date2) {
  date2.setDate(1);
  date2.setHours(0, 0, 0, 0);
}, function(date2, step) {
  date2.setMonth(date2.getMonth() + step);
}, function(start2, end) {
  return end.getMonth() - start2.getMonth() + (end.getFullYear() - start2.getFullYear()) * 12;
}, function(date2) {
  return date2.getMonth();
});
var month_default = month;
var months = month.range;

// node_modules/d3-time/src/year.js
var year = newInterval(function(date2) {
  date2.setMonth(0, 1);
  date2.setHours(0, 0, 0, 0);
}, function(date2, step) {
  date2.setFullYear(date2.getFullYear() + step);
}, function(start2, end) {
  return end.getFullYear() - start2.getFullYear();
}, function(date2) {
  return date2.getFullYear();
});
year.every = function(k3) {
  return !isFinite(k3 = Math.floor(k3)) || !(k3 > 0) ? null : newInterval(function(date2) {
    date2.setFullYear(Math.floor(date2.getFullYear() / k3) * k3);
    date2.setMonth(0, 1);
    date2.setHours(0, 0, 0, 0);
  }, function(date2, step) {
    date2.setFullYear(date2.getFullYear() + step * k3);
  });
};
var year_default = year;
var years = year.range;

// node_modules/d3-time/src/utcMinute.js
var utcMinute = newInterval(function(date2) {
  date2.setUTCSeconds(0, 0);
}, function(date2, step) {
  date2.setTime(+date2 + step * durationMinute);
}, function(start2, end) {
  return (end - start2) / durationMinute;
}, function(date2) {
  return date2.getUTCMinutes();
});
var utcMinute_default = utcMinute;
var utcMinutes = utcMinute.range;

// node_modules/d3-time/src/utcHour.js
var utcHour = newInterval(function(date2) {
  date2.setUTCMinutes(0, 0, 0);
}, function(date2, step) {
  date2.setTime(+date2 + step * durationHour);
}, function(start2, end) {
  return (end - start2) / durationHour;
}, function(date2) {
  return date2.getUTCHours();
});
var utcHour_default = utcHour;
var utcHours = utcHour.range;

// node_modules/d3-time/src/utcDay.js
var utcDay = newInterval(function(date2) {
  date2.setUTCHours(0, 0, 0, 0);
}, function(date2, step) {
  date2.setUTCDate(date2.getUTCDate() + step);
}, function(start2, end) {
  return (end - start2) / durationDay;
}, function(date2) {
  return date2.getUTCDate() - 1;
});
var utcDay_default = utcDay;
var utcDays = utcDay.range;

// node_modules/d3-time/src/utcWeek.js
function utcWeekday(i) {
  return newInterval(function(date2) {
    date2.setUTCDate(date2.getUTCDate() - (date2.getUTCDay() + 7 - i) % 7);
    date2.setUTCHours(0, 0, 0, 0);
  }, function(date2, step) {
    date2.setUTCDate(date2.getUTCDate() + step * 7);
  }, function(start2, end) {
    return (end - start2) / durationWeek;
  });
}
var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);
var utcSundays = utcSunday.range;
var utcMondays = utcMonday.range;
var utcTuesdays = utcTuesday.range;
var utcWednesdays = utcWednesday.range;
var utcThursdays = utcThursday.range;
var utcFridays = utcFriday.range;
var utcSaturdays = utcSaturday.range;

// node_modules/d3-time/src/utcMonth.js
var utcMonth = newInterval(function(date2) {
  date2.setUTCDate(1);
  date2.setUTCHours(0, 0, 0, 0);
}, function(date2, step) {
  date2.setUTCMonth(date2.getUTCMonth() + step);
}, function(start2, end) {
  return end.getUTCMonth() - start2.getUTCMonth() + (end.getUTCFullYear() - start2.getUTCFullYear()) * 12;
}, function(date2) {
  return date2.getUTCMonth();
});
var utcMonth_default = utcMonth;
var utcMonths = utcMonth.range;

// node_modules/d3-time/src/utcYear.js
var utcYear = newInterval(function(date2) {
  date2.setUTCMonth(0, 1);
  date2.setUTCHours(0, 0, 0, 0);
}, function(date2, step) {
  date2.setUTCFullYear(date2.getUTCFullYear() + step);
}, function(start2, end) {
  return end.getUTCFullYear() - start2.getUTCFullYear();
}, function(date2) {
  return date2.getUTCFullYear();
});
utcYear.every = function(k3) {
  return !isFinite(k3 = Math.floor(k3)) || !(k3 > 0) ? null : newInterval(function(date2) {
    date2.setUTCFullYear(Math.floor(date2.getUTCFullYear() / k3) * k3);
    date2.setUTCMonth(0, 1);
    date2.setUTCHours(0, 0, 0, 0);
  }, function(date2, step) {
    date2.setUTCFullYear(date2.getUTCFullYear() + step * k3);
  });
};
var utcYear_default = utcYear;
var utcYears = utcYear.range;

// node_modules/d3-time/src/ticks.js
function ticker(year2, month2, week, day2, hour2, minute2) {
  const tickIntervals = [
    [second_default, 1, durationSecond],
    [second_default, 5, 5 * durationSecond],
    [second_default, 15, 15 * durationSecond],
    [second_default, 30, 30 * durationSecond],
    [minute2, 1, durationMinute],
    [minute2, 5, 5 * durationMinute],
    [minute2, 15, 15 * durationMinute],
    [minute2, 30, 30 * durationMinute],
    [hour2, 1, durationHour],
    [hour2, 3, 3 * durationHour],
    [hour2, 6, 6 * durationHour],
    [hour2, 12, 12 * durationHour],
    [day2, 1, durationDay],
    [day2, 2, 2 * durationDay],
    [week, 1, durationWeek],
    [month2, 1, durationMonth],
    [month2, 3, 3 * durationMonth],
    [year2, 1, durationYear]
  ];
  function ticks2(start2, stop, count4) {
    const reverse4 = stop < start2;
    if (reverse4)
      [start2, stop] = [stop, start2];
    const interval2 = count4 && typeof count4.range === "function" ? count4 : tickInterval(start2, stop, count4);
    const ticks3 = interval2 ? interval2.range(start2, +stop + 1) : [];
    return reverse4 ? ticks3.reverse() : ticks3;
  }
  function tickInterval(start2, stop, count4) {
    const target = Math.abs(stop - start2) / count4;
    const i = bisector(([, , step2]) => step2).right(tickIntervals, target);
    if (i === tickIntervals.length)
      return year2.every(tickStep(start2 / durationYear, stop / durationYear, count4));
    if (i === 0)
      return millisecond_default.every(Math.max(tickStep(start2, stop, count4), 1));
    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
    return t.every(step);
  }
  return [ticks2, tickInterval];
}
var [utcTicks, utcTickInterval] = ticker(utcYear_default, utcMonth_default, utcSunday, utcDay_default, utcHour_default, utcMinute_default);
var [timeTicks, timeTickInterval] = ticker(year_default, month_default, sunday, day_default, hour_default, minute_default);

// node_modules/d3-time-format/src/locale.js
function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date2 = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date2.setFullYear(d.y);
    return date2;
  }
  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}
function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date2 = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date2.setUTCFullYear(d.y);
    return date2;
  }
  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}
function newDate(y3, m, d) {
  return { y: y3, m, d, H: 0, M: 0, S: 0, L: 0 };
}
function formatLocale(locale4) {
  var locale_dateTime = locale4.dateTime, locale_date = locale4.date, locale_time = locale4.time, locale_periods = locale4.periods, locale_weekdays = locale4.days, locale_shortWeekdays = locale4.shortDays, locale_months = locale4.months, locale_shortMonths = locale4.shortMonths;
  var periodRe = formatRe(locale_periods), periodLookup = formatLookup(locale_periods), weekdayRe = formatRe(locale_weekdays), weekdayLookup = formatLookup(locale_weekdays), shortWeekdayRe = formatRe(locale_shortWeekdays), shortWeekdayLookup = formatLookup(locale_shortWeekdays), monthRe = formatRe(locale_months), monthLookup = formatLookup(locale_months), shortMonthRe = formatRe(locale_shortMonths), shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "g": formatYearISO,
    "G": formatFullYearISO,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "g": formatUTCYearISO,
    "G": formatUTCFullYearISO,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "g": parseYear,
    "G": parseFullYear,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  };
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);
  function newFormat(specifier, formats2) {
    return function(date2) {
      var string = [], i = -1, j = 0, n = specifier.length, c, pad3, format3;
      if (!(date2 instanceof Date))
        date2 = new Date(+date2);
      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad3 = pads[c = specifier.charAt(++i)]) != null)
            c = specifier.charAt(++i);
          else
            pad3 = c === "e" ? " " : "0";
          if (format3 = formats2[c])
            c = format3(date2, pad3);
          string.push(c);
          j = i + 1;
        }
      }
      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }
  function newParse(specifier, Z) {
    return function(string) {
      var d = newDate(1900, void 0, 1), i = parseSpecifier(d, specifier, string += "", 0), week, day2;
      if (i != string.length)
        return null;
      if ("Q" in d)
        return new Date(d.Q);
      if ("s" in d)
        return new Date(d.s * 1e3 + ("L" in d ? d.L : 0));
      if (Z && !("Z" in d))
        d.Z = 0;
      if ("p" in d)
        d.H = d.H % 12 + d.p * 12;
      if (d.m === void 0)
        d.m = "q" in d ? d.q : 0;
      if ("V" in d) {
        if (d.V < 1 || d.V > 53)
          return null;
        if (!("w" in d))
          d.w = 1;
        if ("Z" in d) {
          week = utcDate(newDate(d.y, 0, 1)), day2 = week.getUTCDay();
          week = day2 > 4 || day2 === 0 ? utcMonday.ceil(week) : utcMonday(week);
          week = utcDay_default.offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = localDate(newDate(d.y, 0, 1)), day2 = week.getDay();
          week = day2 > 4 || day2 === 0 ? monday.ceil(week) : monday(week);
          week = day_default.offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d))
          d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day2 = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day2 + 5) % 7 : d.w + d.U * 7 - (day2 + 6) % 7;
      }
      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      }
      return localDate(d);
    };
  }
  function parseSpecifier(d, specifier, string, j) {
    var i = 0, n = specifier.length, m = string.length, c, parse2;
    while (i < n) {
      if (j >= m)
        return -1;
      c = specifier.charCodeAt(i++);
      if (c === 37) {
        c = specifier.charAt(i++);
        parse2 = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse2 || (j = parse2(d, string, j)) < 0)
          return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }
    return j;
  }
  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }
  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }
  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }
  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }
  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }
  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }
  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }
  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }
  function formatQuarter(d) {
    return 1 + ~~(d.getMonth() / 3);
  }
  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }
  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }
  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }
  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }
  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }
  function formatUTCQuarter(d) {
    return 1 + ~~(d.getUTCMonth() / 3);
  }
  return {
    format: function(specifier) {
      var f = newFormat(specifier += "", formats);
      f.toString = function() {
        return specifier;
      };
      return f;
    },
    parse: function(specifier) {
      var p = newParse(specifier += "", false);
      p.toString = function() {
        return specifier;
      };
      return p;
    },
    utcFormat: function(specifier) {
      var f = newFormat(specifier += "", utcFormats);
      f.toString = function() {
        return specifier;
      };
      return f;
    },
    utcParse: function(specifier) {
      var p = newParse(specifier += "", true);
      p.toString = function() {
        return specifier;
      };
      return p;
    }
  };
}
var pads = { "-": "", "_": " ", "0": "0" };
var numberRe = /^\s*\d+/;
var percentRe = /^%/;
var requoteRe = /[\\^$*+?|[\]().{}]/g;
function pad2(value2, fill2, width) {
  var sign3 = value2 < 0 ? "-" : "", string = (sign3 ? -value2 : value2) + "", length = string.length;
  return sign3 + (length < width ? new Array(width - length + 1).join(fill2) + string : string);
}
function requote(s3) {
  return s3.replace(requoteRe, "\\$&");
}
function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}
function formatLookup(names) {
  return new Map(names.map((name, i) => [name.toLowerCase(), i]));
}
function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}
function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}
function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}
function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2e3), i + n[0].length) : -1;
}
function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}
function parseQuarter(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}
function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}
function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}
function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}
function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}
function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}
function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}
function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}
function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1e3), i + n[0].length) : -1;
}
function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}
function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}
function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.s = +n[0], i + n[0].length) : -1;
}
function formatDayOfMonth(d, p) {
  return pad2(d.getDate(), p, 2);
}
function formatHour24(d, p) {
  return pad2(d.getHours(), p, 2);
}
function formatHour12(d, p) {
  return pad2(d.getHours() % 12 || 12, p, 2);
}
function formatDayOfYear(d, p) {
  return pad2(1 + day_default.count(year_default(d), d), p, 3);
}
function formatMilliseconds(d, p) {
  return pad2(d.getMilliseconds(), p, 3);
}
function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}
function formatMonthNumber(d, p) {
  return pad2(d.getMonth() + 1, p, 2);
}
function formatMinutes(d, p) {
  return pad2(d.getMinutes(), p, 2);
}
function formatSeconds(d, p) {
  return pad2(d.getSeconds(), p, 2);
}
function formatWeekdayNumberMonday(d) {
  var day2 = d.getDay();
  return day2 === 0 ? 7 : day2;
}
function formatWeekNumberSunday(d, p) {
  return pad2(sunday.count(year_default(d) - 1, d), p, 2);
}
function dISO(d) {
  var day2 = d.getDay();
  return day2 >= 4 || day2 === 0 ? thursday(d) : thursday.ceil(d);
}
function formatWeekNumberISO(d, p) {
  d = dISO(d);
  return pad2(thursday.count(year_default(d), d) + (year_default(d).getDay() === 4), p, 2);
}
function formatWeekdayNumberSunday(d) {
  return d.getDay();
}
function formatWeekNumberMonday(d, p) {
  return pad2(monday.count(year_default(d) - 1, d), p, 2);
}
function formatYear(d, p) {
  return pad2(d.getFullYear() % 100, p, 2);
}
function formatYearISO(d, p) {
  d = dISO(d);
  return pad2(d.getFullYear() % 100, p, 2);
}
function formatFullYear(d, p) {
  return pad2(d.getFullYear() % 1e4, p, 4);
}
function formatFullYearISO(d, p) {
  var day2 = d.getDay();
  d = day2 >= 4 || day2 === 0 ? thursday(d) : thursday.ceil(d);
  return pad2(d.getFullYear() % 1e4, p, 4);
}
function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+")) + pad2(z / 60 | 0, "0", 2) + pad2(z % 60, "0", 2);
}
function formatUTCDayOfMonth(d, p) {
  return pad2(d.getUTCDate(), p, 2);
}
function formatUTCHour24(d, p) {
  return pad2(d.getUTCHours(), p, 2);
}
function formatUTCHour12(d, p) {
  return pad2(d.getUTCHours() % 12 || 12, p, 2);
}
function formatUTCDayOfYear(d, p) {
  return pad2(1 + utcDay_default.count(utcYear_default(d), d), p, 3);
}
function formatUTCMilliseconds(d, p) {
  return pad2(d.getUTCMilliseconds(), p, 3);
}
function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}
function formatUTCMonthNumber(d, p) {
  return pad2(d.getUTCMonth() + 1, p, 2);
}
function formatUTCMinutes(d, p) {
  return pad2(d.getUTCMinutes(), p, 2);
}
function formatUTCSeconds(d, p) {
  return pad2(d.getUTCSeconds(), p, 2);
}
function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}
function formatUTCWeekNumberSunday(d, p) {
  return pad2(utcSunday.count(utcYear_default(d) - 1, d), p, 2);
}
function UTCdISO(d) {
  var day2 = d.getUTCDay();
  return day2 >= 4 || day2 === 0 ? utcThursday(d) : utcThursday.ceil(d);
}
function formatUTCWeekNumberISO(d, p) {
  d = UTCdISO(d);
  return pad2(utcThursday.count(utcYear_default(d), d) + (utcYear_default(d).getUTCDay() === 4), p, 2);
}
function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}
function formatUTCWeekNumberMonday(d, p) {
  return pad2(utcMonday.count(utcYear_default(d) - 1, d), p, 2);
}
function formatUTCYear(d, p) {
  return pad2(d.getUTCFullYear() % 100, p, 2);
}
function formatUTCYearISO(d, p) {
  d = UTCdISO(d);
  return pad2(d.getUTCFullYear() % 100, p, 2);
}
function formatUTCFullYear(d, p) {
  return pad2(d.getUTCFullYear() % 1e4, p, 4);
}
function formatUTCFullYearISO(d, p) {
  var day2 = d.getUTCDay();
  d = day2 >= 4 || day2 === 0 ? utcThursday(d) : utcThursday.ceil(d);
  return pad2(d.getUTCFullYear() % 1e4, p, 4);
}
function formatUTCZone() {
  return "+0000";
}
function formatLiteralPercent() {
  return "%";
}
function formatUnixTimestamp(d) {
  return +d;
}
function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1e3);
}

// node_modules/d3-time-format/src/defaultLocale.js
var locale2;
var timeFormat;
var timeParse;
var utcFormat;
var utcParse;
defaultLocale2({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});
function defaultLocale2(definition) {
  locale2 = formatLocale(definition);
  timeFormat = locale2.format;
  timeParse = locale2.parse;
  utcFormat = locale2.utcFormat;
  utcParse = locale2.utcParse;
  return locale2;
}

// node_modules/d3-time-format/src/isoFormat.js
var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
function formatIsoNative(date2) {
  return date2.toISOString();
}
var formatIso = Date.prototype.toISOString ? formatIsoNative : utcFormat(isoSpecifier);

// node_modules/d3-time-format/src/isoParse.js
function parseIsoNative(string) {
  var date2 = new Date(string);
  return isNaN(date2) ? null : date2;
}
var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : utcParse(isoSpecifier);

// node_modules/d3-scale/src/time.js
function date(t) {
  return new Date(t);
}
function number3(t) {
  return t instanceof Date ? +t : +new Date(+t);
}
function calendar(ticks2, tickInterval, year2, month2, week, day2, hour2, minute2, second2, format3) {
  var scale = continuous(), invert2 = scale.invert, domain = scale.domain;
  var formatMillisecond = format3(".%L"), formatSecond = format3(":%S"), formatMinute = format3("%I:%M"), formatHour = format3("%I %p"), formatDay = format3("%a %d"), formatWeek = format3("%b %d"), formatMonth = format3("%B"), formatYear2 = format3("%Y");
  function tickFormat2(date2) {
    return (second2(date2) < date2 ? formatMillisecond : minute2(date2) < date2 ? formatSecond : hour2(date2) < date2 ? formatMinute : day2(date2) < date2 ? formatHour : month2(date2) < date2 ? week(date2) < date2 ? formatDay : formatWeek : year2(date2) < date2 ? formatMonth : formatYear2)(date2);
  }
  scale.invert = function(y3) {
    return new Date(invert2(y3));
  };
  scale.domain = function(_) {
    return arguments.length ? domain(Array.from(_, number3)) : domain().map(date);
  };
  scale.ticks = function(interval2) {
    var d = domain();
    return ticks2(d[0], d[d.length - 1], interval2 == null ? 10 : interval2);
  };
  scale.tickFormat = function(count4, specifier) {
    return specifier == null ? tickFormat2 : format3(specifier);
  };
  scale.nice = function(interval2) {
    var d = domain();
    if (!interval2 || typeof interval2.range !== "function")
      interval2 = tickInterval(d[0], d[d.length - 1], interval2 == null ? 10 : interval2);
    return interval2 ? domain(nice2(d, interval2)) : scale;
  };
  scale.copy = function() {
    return copy(scale, calendar(ticks2, tickInterval, year2, month2, week, day2, hour2, minute2, second2, format3));
  };
  return scale;
}
function time() {
  return initRange.apply(calendar(timeTicks, timeTickInterval, year_default, month_default, sunday, day_default, hour_default, minute_default, second_default, timeFormat).domain([new Date(2e3, 0, 1), new Date(2e3, 0, 2)]), arguments);
}

// node_modules/d3-path/src/path.js
var pi2 = Math.PI;
var tau2 = 2 * pi2;
var epsilon = 1e-6;
var tauEpsilon = tau2 - epsilon;
function Path() {
  this._x0 = this._y0 = this._x1 = this._y1 = null;
  this._ = "";
}
function path() {
  return new Path();
}
Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function(x3, y3) {
    this._ += "M" + (this._x0 = this._x1 = +x3) + "," + (this._y0 = this._y1 = +y3);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x3, y3) {
    this._ += "L" + (this._x1 = +x3) + "," + (this._y1 = +y3);
  },
  quadraticCurveTo: function(x1, y1, x3, y3) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x3) + "," + (this._y1 = +y3);
  },
  bezierCurveTo: function(x1, y1, x22, y22, x3, y3) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x22 + "," + +y22 + "," + (this._x1 = +x3) + "," + (this._y1 = +y3);
  },
  arcTo: function(x1, y1, x22, y22, r) {
    x1 = +x1, y1 = +y1, x22 = +x22, y22 = +y22, r = +r;
    var x0 = this._x1, y0 = this._y1, x21 = x22 - x1, y21 = y22 - y1, x01 = x0 - x1, y01 = y0 - y1, l01_2 = x01 * x01 + y01 * y01;
    if (r < 0)
      throw new Error("negative radius: " + r);
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } else if (!(l01_2 > epsilon))
      ;
    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
    } else {
      var x20 = x22 - x0, y20 = y22 - y0, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21;
      if (Math.abs(t01 - 1) > epsilon) {
        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
      }
      this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
    }
  },
  arc: function(x3, y3, r, a0, a1, ccw) {
    x3 = +x3, y3 = +y3, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0), dy = r * Math.sin(a0), x0 = x3 + dx, y0 = y3 + dy, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;
    if (r < 0)
      throw new Error("negative radius: " + r);
    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
      this._ += "L" + x0 + "," + y0;
    }
    if (!r)
      return;
    if (da < 0)
      da = da % tau2 + tau2;
    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x3 - dx) + "," + (y3 - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } else if (da > epsilon) {
      this._ += "A" + r + "," + r + ",0," + +(da >= pi2) + "," + cw + "," + (this._x1 = x3 + r * Math.cos(a1)) + "," + (this._y1 = y3 + r * Math.sin(a1));
    }
  },
  rect: function(x3, y3, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x3) + "," + (this._y0 = this._y1 = +y3) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function() {
    return this._;
  }
};
var path_default = path;

// node_modules/d3-shape/src/constant.js
function constant_default4(x3) {
  return function constant4() {
    return x3;
  };
}

// node_modules/d3-shape/src/math.js
var abs = Math.abs;
var atan2 = Math.atan2;
var cos = Math.cos;
var max3 = Math.max;
var min3 = Math.min;
var sin = Math.sin;
var sqrt2 = Math.sqrt;
var epsilon3 = 1e-12;
var pi3 = Math.PI;
var halfPi2 = pi3 / 2;
var tau3 = 2 * pi3;
function acos(x3) {
  return x3 > 1 ? 0 : x3 < -1 ? pi3 : Math.acos(x3);
}
function asin(x3) {
  return x3 >= 1 ? halfPi2 : x3 <= -1 ? -halfPi2 : Math.asin(x3);
}

// node_modules/d3-shape/src/arc.js
function arcInnerRadius(d) {
  return d.innerRadius;
}
function arcOuterRadius(d) {
  return d.outerRadius;
}
function arcStartAngle(d) {
  return d.startAngle;
}
function arcEndAngle(d) {
  return d.endAngle;
}
function arcPadAngle(d) {
  return d && d.padAngle;
}
function intersect(x0, y0, x1, y1, x22, y22, x3, y3) {
  var x10 = x1 - x0, y10 = y1 - y0, x32 = x3 - x22, y32 = y3 - y22, t = y32 * x10 - x32 * y10;
  if (t * t < epsilon3)
    return;
  t = (x32 * (y0 - y22) - y32 * (x0 - x22)) / t;
  return [x0 + t * x10, y0 + t * y10];
}
function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1, y01 = y0 - y1, lo = (cw ? rc : -rc) / sqrt2(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x11 = x0 + ox, y11 = y0 + oy, x10 = x1 + ox, y10 = y1 + oy, x00 = (x11 + x10) / 2, y00 = (y11 + y10) / 2, dx = x10 - x11, dy = y10 - y11, d2 = dx * dx + dy * dy, r = r1 - rc, D2 = x11 * y10 - x10 * y11, d = (dy < 0 ? -1 : 1) * sqrt2(max3(0, r * r * d2 - D2 * D2)), cx0 = (D2 * dy - dx * d) / d2, cy0 = (-D2 * dx - dy * d) / d2, cx1 = (D2 * dy + dx * d) / d2, cy1 = (-D2 * dx + dy * d) / d2, dx0 = cx0 - x00, dy0 = cy0 - y00, dx1 = cx1 - x00, dy1 = cy1 - y00;
  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1)
    cx0 = cx1, cy0 = cy1;
  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}
function arc_default() {
  var innerRadius = arcInnerRadius, outerRadius = arcOuterRadius, cornerRadius = constant_default4(0), padRadius = null, startAngle = arcStartAngle, endAngle = arcEndAngle, padAngle = arcPadAngle, context = null;
  function arc() {
    var buffer, r, r0 = +innerRadius.apply(this, arguments), r1 = +outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) - halfPi2, a1 = endAngle.apply(this, arguments) - halfPi2, da = abs(a1 - a0), cw = a1 > a0;
    if (!context)
      context = buffer = path_default();
    if (r1 < r0)
      r = r1, r1 = r0, r0 = r;
    if (!(r1 > epsilon3))
      context.moveTo(0, 0);
    else if (da > tau3 - epsilon3) {
      context.moveTo(r1 * cos(a0), r1 * sin(a0));
      context.arc(0, 0, r1, a0, a1, !cw);
      if (r0 > epsilon3) {
        context.moveTo(r0 * cos(a1), r0 * sin(a1));
        context.arc(0, 0, r0, a1, a0, cw);
      }
    } else {
      var a01 = a0, a11 = a1, a00 = a0, a10 = a1, da0 = da, da1 = da, ap = padAngle.apply(this, arguments) / 2, rp = ap > epsilon3 && (padRadius ? +padRadius.apply(this, arguments) : sqrt2(r0 * r0 + r1 * r1)), rc = min3(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)), rc0 = rc, rc1 = rc, t03, t13;
      if (rp > epsilon3) {
        var p0 = asin(rp / r0 * sin(ap)), p1 = asin(rp / r1 * sin(ap));
        if ((da0 -= p0 * 2) > epsilon3)
          p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;
        else
          da0 = 0, a00 = a10 = (a0 + a1) / 2;
        if ((da1 -= p1 * 2) > epsilon3)
          p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;
        else
          da1 = 0, a01 = a11 = (a0 + a1) / 2;
      }
      var x01 = r1 * cos(a01), y01 = r1 * sin(a01), x10 = r0 * cos(a10), y10 = r0 * sin(a10);
      if (rc > epsilon3) {
        var x11 = r1 * cos(a11), y11 = r1 * sin(a11), x00 = r0 * cos(a00), y00 = r0 * sin(a00), oc;
        if (da < pi3 && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
          var ax = x01 - oc[0], ay = y01 - oc[1], bx = x11 - oc[0], by = y11 - oc[1], kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt2(ax * ax + ay * ay) * sqrt2(bx * bx + by * by))) / 2), lc = sqrt2(oc[0] * oc[0] + oc[1] * oc[1]);
          rc0 = min3(rc, (r0 - lc) / (kc - 1));
          rc1 = min3(rc, (r1 - lc) / (kc + 1));
        }
      }
      if (!(da1 > epsilon3))
        context.moveTo(x01, y01);
      else if (rc1 > epsilon3) {
        t03 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
        t13 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
        context.moveTo(t03.cx + t03.x01, t03.cy + t03.y01);
        if (rc1 < rc)
          context.arc(t03.cx, t03.cy, rc1, atan2(t03.y01, t03.x01), atan2(t13.y01, t13.x01), !cw);
        else {
          context.arc(t03.cx, t03.cy, rc1, atan2(t03.y01, t03.x01), atan2(t03.y11, t03.x11), !cw);
          context.arc(0, 0, r1, atan2(t03.cy + t03.y11, t03.cx + t03.x11), atan2(t13.cy + t13.y11, t13.cx + t13.x11), !cw);
          context.arc(t13.cx, t13.cy, rc1, atan2(t13.y11, t13.x11), atan2(t13.y01, t13.x01), !cw);
        }
      } else
        context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
      if (!(r0 > epsilon3) || !(da0 > epsilon3))
        context.lineTo(x10, y10);
      else if (rc0 > epsilon3) {
        t03 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
        t13 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
        context.lineTo(t03.cx + t03.x01, t03.cy + t03.y01);
        if (rc0 < rc)
          context.arc(t03.cx, t03.cy, rc0, atan2(t03.y01, t03.x01), atan2(t13.y01, t13.x01), !cw);
        else {
          context.arc(t03.cx, t03.cy, rc0, atan2(t03.y01, t03.x01), atan2(t03.y11, t03.x11), !cw);
          context.arc(0, 0, r0, atan2(t03.cy + t03.y11, t03.cx + t03.x11), atan2(t13.cy + t13.y11, t13.cx + t13.x11), cw);
          context.arc(t13.cx, t13.cy, rc0, atan2(t13.y11, t13.x11), atan2(t13.y01, t13.x01), !cw);
        }
      } else
        context.arc(0, 0, r0, a10, a00, cw);
    }
    context.closePath();
    if (buffer)
      return context = null, buffer + "" || null;
  }
  arc.centroid = function() {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a3 = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi3 / 2;
    return [cos(a3) * r, sin(a3) * r];
  };
  arc.innerRadius = function(_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant_default4(+_), arc) : innerRadius;
  };
  arc.outerRadius = function(_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant_default4(+_), arc) : outerRadius;
  };
  arc.cornerRadius = function(_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant_default4(+_), arc) : cornerRadius;
  };
  arc.padRadius = function(_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant_default4(+_), arc) : padRadius;
  };
  arc.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant_default4(+_), arc) : startAngle;
  };
  arc.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant_default4(+_), arc) : endAngle;
  };
  arc.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant_default4(+_), arc) : padAngle;
  };
  arc.context = function(_) {
    return arguments.length ? (context = _ == null ? null : _, arc) : context;
  };
  return arc;
}

// node_modules/d3-shape/src/array.js
var slice3 = Array.prototype.slice;
function array_default2(x3) {
  return typeof x3 === "object" && "length" in x3 ? x3 : Array.from(x3);
}

// node_modules/d3-shape/src/curve/linear.js
function Linear(context) {
  this._context = context;
}
Linear.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x3, y3) : this._context.moveTo(x3, y3);
        break;
      case 1:
        this._point = 2;
      default:
        this._context.lineTo(x3, y3);
        break;
    }
  }
};
function linear_default(context) {
  return new Linear(context);
}

// node_modules/d3-shape/src/point.js
function x(p) {
  return p[0];
}
function y(p) {
  return p[1];
}

// node_modules/d3-shape/src/line.js
function line_default(x3, y3) {
  var defined = constant_default4(true), context = null, curve = linear_default, output = null;
  x3 = typeof x3 === "function" ? x3 : x3 === void 0 ? x : constant_default4(x3);
  y3 = typeof y3 === "function" ? y3 : y3 === void 0 ? y : constant_default4(y3);
  function line(data) {
    var i, n = (data = array_default2(data)).length, d, defined0 = false, buffer;
    if (context == null)
      output = curve(buffer = path_default());
    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0)
          output.lineStart();
        else
          output.lineEnd();
      }
      if (defined0)
        output.point(+x3(d, i, data), +y3(d, i, data));
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  line.x = function(_) {
    return arguments.length ? (x3 = typeof _ === "function" ? _ : constant_default4(+_), line) : x3;
  };
  line.y = function(_) {
    return arguments.length ? (y3 = typeof _ === "function" ? _ : constant_default4(+_), line) : y3;
  };
  line.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : constant_default4(!!_), line) : defined;
  };
  line.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };
  line.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };
  return line;
}

// node_modules/d3-shape/src/area.js
function area_default(x0, y0, y1) {
  var x1 = null, defined = constant_default4(true), context = null, curve = linear_default, output = null;
  x0 = typeof x0 === "function" ? x0 : x0 === void 0 ? x : constant_default4(+x0);
  y0 = typeof y0 === "function" ? y0 : y0 === void 0 ? constant_default4(0) : constant_default4(+y0);
  y1 = typeof y1 === "function" ? y1 : y1 === void 0 ? y : constant_default4(+y1);
  function area2(data) {
    var i, j, k3, n = (data = array_default2(data)).length, d, defined0 = false, buffer, x0z = new Array(n), y0z = new Array(n);
    if (context == null)
      output = curve(buffer = path_default());
    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();
          for (k3 = i - 1; k3 >= j; --k3) {
            output.point(x0z[k3], y0z[k3]);
          }
          output.lineEnd();
          output.areaEnd();
        }
      }
      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  function arealine() {
    return line_default().defined(defined).curve(curve).context(context);
  }
  area2.x = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant_default4(+_), x1 = null, area2) : x0;
  };
  area2.x0 = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant_default4(+_), area2) : x0;
  };
  area2.x1 = function(_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant_default4(+_), area2) : x1;
  };
  area2.y = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant_default4(+_), y1 = null, area2) : y0;
  };
  area2.y0 = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant_default4(+_), area2) : y0;
  };
  area2.y1 = function(_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant_default4(+_), area2) : y1;
  };
  area2.lineX0 = area2.lineY0 = function() {
    return arealine().x(x0).y(y0);
  };
  area2.lineY1 = function() {
    return arealine().x(x0).y(y1);
  };
  area2.lineX1 = function() {
    return arealine().x(x1).y(y0);
  };
  area2.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : constant_default4(!!_), area2) : defined;
  };
  area2.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area2) : curve;
  };
  area2.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area2) : context;
  };
  return area2;
}

// node_modules/d3-shape/src/descending.js
function descending_default(a3, b) {
  return b < a3 ? -1 : b > a3 ? 1 : b >= a3 ? 0 : NaN;
}

// node_modules/d3-shape/src/identity.js
function identity_default3(d) {
  return d;
}

// node_modules/d3-shape/src/pie.js
function pie_default() {
  var value2 = identity_default3, sortValues = descending_default, sort3 = null, startAngle = constant_default4(0), endAngle = constant_default4(tau3), padAngle = constant_default4(0);
  function pie2(data) {
    var i, n = (data = array_default2(data)).length, j, k3, sum6 = 0, index4 = new Array(n), arcs = new Array(n), a0 = +startAngle.apply(this, arguments), da = Math.min(tau3, Math.max(-tau3, endAngle.apply(this, arguments) - a0)), a1, p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)), pa = p * (da < 0 ? -1 : 1), v;
    for (i = 0; i < n; ++i) {
      if ((v = arcs[index4[i] = i] = +value2(data[i], i, data)) > 0) {
        sum6 += v;
      }
    }
    if (sortValues != null)
      index4.sort(function(i2, j2) {
        return sortValues(arcs[i2], arcs[j2]);
      });
    else if (sort3 != null)
      index4.sort(function(i2, j2) {
        return sort3(data[i2], data[j2]);
      });
    for (i = 0, k3 = sum6 ? (da - n * pa) / sum6 : 0; i < n; ++i, a0 = a1) {
      j = index4[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k3 : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }
    return arcs;
  }
  pie2.value = function(_) {
    return arguments.length ? (value2 = typeof _ === "function" ? _ : constant_default4(+_), pie2) : value2;
  };
  pie2.sortValues = function(_) {
    return arguments.length ? (sortValues = _, sort3 = null, pie2) : sortValues;
  };
  pie2.sort = function(_) {
    return arguments.length ? (sort3 = _, sortValues = null, pie2) : sort3;
  };
  pie2.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant_default4(+_), pie2) : startAngle;
  };
  pie2.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant_default4(+_), pie2) : endAngle;
  };
  pie2.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant_default4(+_), pie2) : padAngle;
  };
  return pie2;
}

// node_modules/d3-shape/src/curve/radial.js
var curveRadialLinear = curveRadial(linear_default);
function Radial(curve) {
  this._curve = curve;
}
Radial.prototype = {
  areaStart: function() {
    this._curve.areaStart();
  },
  areaEnd: function() {
    this._curve.areaEnd();
  },
  lineStart: function() {
    this._curve.lineStart();
  },
  lineEnd: function() {
    this._curve.lineEnd();
  },
  point: function(a3, r) {
    this._curve.point(r * Math.sin(a3), r * -Math.cos(a3));
  }
};
function curveRadial(curve) {
  function radial2(context) {
    return new Radial(curve(context));
  }
  radial2._curve = curve;
  return radial2;
}

// node_modules/d3-shape/src/lineRadial.js
function lineRadial(l) {
  var c = l.curve;
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  l.curve = function(_) {
    return arguments.length ? c(curveRadial(_)) : c()._curve;
  };
  return l;
}
function lineRadial_default() {
  return lineRadial(line_default().curve(curveRadialLinear));
}

// node_modules/d3-shape/src/curve/bump.js
var Bump = class {
  constructor(context, x3) {
    this._context = context;
    this._x = x3;
  }
  areaStart() {
    this._line = 0;
  }
  areaEnd() {
    this._line = NaN;
  }
  lineStart() {
    this._point = 0;
  }
  lineEnd() {
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  }
  point(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0: {
        this._point = 1;
        if (this._line)
          this._context.lineTo(x3, y3);
        else
          this._context.moveTo(x3, y3);
        break;
      }
      case 1:
        this._point = 2;
      default: {
        if (this._x)
          this._context.bezierCurveTo(this._x0 = (this._x0 + x3) / 2, this._y0, this._x0, y3, x3, y3);
        else
          this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y3) / 2, x3, this._y0, x3, y3);
        break;
      }
    }
    this._x0 = x3, this._y0 = y3;
  }
};
function bumpX(context) {
  return new Bump(context, true);
}

// node_modules/d3-shape/src/link.js
function linkSource(d) {
  return d.source;
}
function linkTarget(d) {
  return d.target;
}
function link(curve) {
  let source = linkSource;
  let target = linkTarget;
  let x3 = x;
  let y3 = y;
  let context = null;
  let output = null;
  function link3() {
    let buffer;
    const argv = slice3.call(arguments);
    const s3 = source.apply(this, argv);
    const t = target.apply(this, argv);
    if (context == null)
      output = curve(buffer = path_default());
    output.lineStart();
    argv[0] = s3, output.point(+x3.apply(this, argv), +y3.apply(this, argv));
    argv[0] = t, output.point(+x3.apply(this, argv), +y3.apply(this, argv));
    output.lineEnd();
    if (buffer)
      return output = null, buffer + "" || null;
  }
  link3.source = function(_) {
    return arguments.length ? (source = _, link3) : source;
  };
  link3.target = function(_) {
    return arguments.length ? (target = _, link3) : target;
  };
  link3.x = function(_) {
    return arguments.length ? (x3 = typeof _ === "function" ? _ : constant_default4(+_), link3) : x3;
  };
  link3.y = function(_) {
    return arguments.length ? (y3 = typeof _ === "function" ? _ : constant_default4(+_), link3) : y3;
  };
  link3.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link3) : context;
  };
  return link3;
}
function linkHorizontal() {
  return link(bumpX);
}

// node_modules/d3-shape/src/symbol/asterisk.js
var sqrt3 = sqrt2(3);

// node_modules/d3-shape/src/symbol/diamond.js
var tan30 = sqrt2(1 / 3);
var tan30_2 = tan30 * 2;

// node_modules/d3-shape/src/symbol/star.js
var kr = sin(pi3 / 10) / sin(7 * pi3 / 10);
var kx = sin(tau3 / 10) * kr;
var ky = -cos(tau3 / 10) * kr;

// node_modules/d3-shape/src/symbol/triangle.js
var sqrt32 = sqrt2(3);

// node_modules/d3-shape/src/symbol/triangle2.js
var sqrt33 = sqrt2(3);

// node_modules/d3-shape/src/symbol/wye.js
var s = sqrt2(3) / 2;
var k = 1 / sqrt2(12);
var a = (k / 2 + 1) * 3;

// node_modules/d3-shape/src/noop.js
function noop_default2() {
}

// node_modules/d3-shape/src/curve/basis.js
function point2(that, x3, y3) {
  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x3) / 6, (that._y0 + 4 * that._y1 + y3) / 6);
}
function Basis(context) {
  this._context = context;
}
Basis.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3:
        point2(this, this._x1, this._y1);
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x3, y3) : this._context.moveTo(x3, y3);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
      default:
        point2(this, x3, y3);
        break;
    }
    this._x0 = this._x1, this._x1 = x3;
    this._y0 = this._y1, this._y1 = y3;
  }
};
function basis_default2(context) {
  return new Basis(context);
}

// node_modules/d3-shape/src/curve/basisClosed.js
function BasisClosed(context) {
  this._context = context;
}
BasisClosed.prototype = {
  areaStart: noop_default2,
  areaEnd: noop_default2,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x3, this._y2 = y3;
        break;
      case 1:
        this._point = 2;
        this._x3 = x3, this._y3 = y3;
        break;
      case 2:
        this._point = 3;
        this._x4 = x3, this._y4 = y3;
        this._context.moveTo((this._x0 + 4 * this._x1 + x3) / 6, (this._y0 + 4 * this._y1 + y3) / 6);
        break;
      default:
        point2(this, x3, y3);
        break;
    }
    this._x0 = this._x1, this._x1 = x3;
    this._y0 = this._y1, this._y1 = y3;
  }
};
function basisClosed_default2(context) {
  return new BasisClosed(context);
}

// node_modules/d3-shape/src/curve/basisOpen.js
function BasisOpen(context) {
  this._context = context;
}
BasisOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x3) / 6, y0 = (this._y0 + 4 * this._y1 + y3) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;
      case 3:
        this._point = 4;
      default:
        point2(this, x3, y3);
        break;
    }
    this._x0 = this._x1, this._x1 = x3;
    this._y0 = this._y1, this._y1 = y3;
  }
};
function basisOpen_default(context) {
  return new BasisOpen(context);
}

// node_modules/d3-shape/src/curve/bundle.js
function Bundle(context, beta) {
  this._basis = new Basis(context);
  this._beta = beta;
}
Bundle.prototype = {
  lineStart: function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  },
  lineEnd: function() {
    var x3 = this._x, y3 = this._y, j = x3.length - 1;
    if (j > 0) {
      var x0 = x3[0], y0 = y3[0], dx = x3[j] - x0, dy = y3[j] - y0, i = -1, t;
      while (++i <= j) {
        t = i / j;
        this._basis.point(this._beta * x3[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y3[i] + (1 - this._beta) * (y0 + t * dy));
      }
    }
    this._x = this._y = null;
    this._basis.lineEnd();
  },
  point: function(x3, y3) {
    this._x.push(+x3);
    this._y.push(+y3);
  }
};
var bundle_default = function custom10(beta) {
  function bundle(context) {
    return beta === 1 ? new Basis(context) : new Bundle(context, beta);
  }
  bundle.beta = function(beta2) {
    return custom10(+beta2);
  };
  return bundle;
}(0.85);

// node_modules/d3-shape/src/curve/cardinal.js
function point3(that, x3, y3) {
  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x3), that._y2 + that._k * (that._y1 - y3), that._x2, that._y2);
}
function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
Cardinal.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        point3(this, this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x3, y3) : this._context.moveTo(x3, y3);
        break;
      case 1:
        this._point = 2;
        this._x1 = x3, this._y1 = y3;
        break;
      case 2:
        this._point = 3;
      default:
        point3(this, x3, y3);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x3;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y3;
  }
};
var cardinal_default = function custom11(tension) {
  function cardinal(context) {
    return new Cardinal(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom11(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-shape/src/curve/cardinalClosed.js
function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalClosed.prototype = {
  areaStart: noop_default2,
  areaEnd: noop_default2,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x3, this._y3 = y3;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x3, this._y4 = y3);
        break;
      case 2:
        this._point = 3;
        this._x5 = x3, this._y5 = y3;
        break;
      default:
        point3(this, x3, y3);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x3;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y3;
  }
};
var cardinalClosed_default = function custom12(tension) {
  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom12(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-shape/src/curve/cardinalOpen.js
function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point3(this, x3, y3);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x3;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y3;
  }
};
var cardinalOpen_default = function custom13(tension) {
  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom13(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-shape/src/curve/catmullRom.js
function point4(that, x3, y3) {
  var x1 = that._x1, y1 = that._y1, x22 = that._x2, y22 = that._y2;
  if (that._l01_a > epsilon3) {
    var a3 = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a, n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a3 - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a3 - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }
  if (that._l23_a > epsilon3) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a, m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x22 = (x22 * b + that._x1 * that._l23_2a - x3 * that._l12_2a) / m;
    y22 = (y22 * b + that._y1 * that._l23_2a - y3 * that._l12_2a) / m;
  }
  that._context.bezierCurveTo(x1, y1, x22, y22, that._x2, that._y2);
}
function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}
CatmullRom.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        this.point(this._x2, this._y2);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    if (this._point) {
      var x23 = this._x2 - x3, y23 = this._y2 - y3;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x3, y3) : this._context.moveTo(x3, y3);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
      default:
        point4(this, x3, y3);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x3;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y3;
  }
};
var catmullRom_default = function custom14(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
  }
  catmullRom.alpha = function(alpha2) {
    return custom14(+alpha2);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-shape/src/curve/catmullRomClosed.js
function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}
CatmullRomClosed.prototype = {
  areaStart: noop_default2,
  areaEnd: noop_default2,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    if (this._point) {
      var x23 = this._x2 - x3, y23 = this._y2 - y3;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x3, this._y3 = y3;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x3, this._y4 = y3);
        break;
      case 2:
        this._point = 3;
        this._x5 = x3, this._y5 = y3;
        break;
      default:
        point4(this, x3, y3);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x3;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y3;
  }
};
var catmullRomClosed_default = function custom15(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
  }
  catmullRom.alpha = function(alpha2) {
    return custom15(+alpha2);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-shape/src/curve/catmullRomOpen.js
function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}
CatmullRomOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    if (this._point) {
      var x23 = this._x2 - x3, y23 = this._y2 - y3;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point4(this, x3, y3);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x3;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y3;
  }
};
var catmullRomOpen_default = function custom16(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
  }
  catmullRom.alpha = function(alpha2) {
    return custom16(+alpha2);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-shape/src/curve/linearClosed.js
function LinearClosed(context) {
  this._context = context;
}
LinearClosed.prototype = {
  areaStart: noop_default2,
  areaEnd: noop_default2,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point)
      this._context.closePath();
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    if (this._point)
      this._context.lineTo(x3, y3);
    else
      this._point = 1, this._context.moveTo(x3, y3);
  }
};
function linearClosed_default(context) {
  return new LinearClosed(context);
}

// node_modules/d3-shape/src/curve/monotone.js
function sign(x3) {
  return x3 < 0 ? -1 : 1;
}
function slope3(that, x22, y22) {
  var h0 = that._x1 - that._x0, h1 = x22 - that._x1, s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0), s1 = (y22 - that._y1) / (h1 || h0 < 0 && -0), p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
}
function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
}
function point5(that, t03, t13) {
  var x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 3;
  that._context.bezierCurveTo(x0 + dx, y0 + dx * t03, x1 - dx, y1 - dx * t13, x1, y1);
}
function MonotoneX(context) {
  this._context = context;
}
MonotoneX.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
      case 3:
        point5(this, this._t0, slope2(this, this._t0));
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    var t13 = NaN;
    x3 = +x3, y3 = +y3;
    if (x3 === this._x1 && y3 === this._y1)
      return;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x3, y3) : this._context.moveTo(x3, y3);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        point5(this, slope2(this, t13 = slope3(this, x3, y3)), t13);
        break;
      default:
        point5(this, this._t0, t13 = slope3(this, x3, y3));
        break;
    }
    this._x0 = this._x1, this._x1 = x3;
    this._y0 = this._y1, this._y1 = y3;
    this._t0 = t13;
  }
};
function MonotoneY(context) {
  this._context = new ReflectContext(context);
}
(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x3, y3) {
  MonotoneX.prototype.point.call(this, y3, x3);
};
function ReflectContext(context) {
  this._context = context;
}
ReflectContext.prototype = {
  moveTo: function(x3, y3) {
    this._context.moveTo(y3, x3);
  },
  closePath: function() {
    this._context.closePath();
  },
  lineTo: function(x3, y3) {
    this._context.lineTo(y3, x3);
  },
  bezierCurveTo: function(x1, y1, x22, y22, x3, y3) {
    this._context.bezierCurveTo(y1, x1, y22, x22, y3, x3);
  }
};
function monotoneX(context) {
  return new MonotoneX(context);
}
function monotoneY(context) {
  return new MonotoneY(context);
}

// node_modules/d3-shape/src/curve/natural.js
function Natural(context) {
  this._context = context;
}
Natural.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x3 = this._x, y3 = this._y, n = x3.length;
    if (n) {
      this._line ? this._context.lineTo(x3[0], y3[0]) : this._context.moveTo(x3[0], y3[0]);
      if (n === 2) {
        this._context.lineTo(x3[1], y3[1]);
      } else {
        var px = controlPoints(x3), py = controlPoints(y3);
        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x3[i1], y3[i1]);
        }
      }
    }
    if (this._line || this._line !== 0 && n === 1)
      this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x3, y3) {
    this._x.push(+x3);
    this._y.push(+y3);
  }
};
function controlPoints(x3) {
  var i, n = x3.length - 1, m, a3 = new Array(n), b = new Array(n), r = new Array(n);
  a3[0] = 0, b[0] = 2, r[0] = x3[0] + 2 * x3[1];
  for (i = 1; i < n - 1; ++i)
    a3[i] = 1, b[i] = 4, r[i] = 4 * x3[i] + 2 * x3[i + 1];
  a3[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x3[n - 1] + x3[n];
  for (i = 1; i < n; ++i)
    m = a3[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
  a3[n - 1] = r[n - 1] / b[n - 1];
  for (i = n - 2; i >= 0; --i)
    a3[i] = (r[i] - a3[i + 1]) / b[i];
  b[n - 1] = (x3[n] + a3[n - 1]) / 2;
  for (i = 0; i < n - 1; ++i)
    b[i] = 2 * x3[i + 1] - a3[i + 1];
  return [a3, b];
}
function natural_default(context) {
  return new Natural(context);
}

// node_modules/d3-shape/src/curve/step.js
function Step(context, t) {
  this._context = context;
  this._t = t;
}
Step.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2)
      this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    if (this._line >= 0)
      this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x3, y3) : this._context.moveTo(x3, y3);
        break;
      case 1:
        this._point = 2;
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y3);
          this._context.lineTo(x3, y3);
        } else {
          var x1 = this._x * (1 - this._t) + x3 * this._t;
          this._context.lineTo(x1, this._y);
          this._context.lineTo(x1, y3);
        }
        break;
      }
    }
    this._x = x3, this._y = y3;
  }
};
function step_default(context) {
  return new Step(context, 0.5);
}
function stepBefore(context) {
  return new Step(context, 0);
}
function stepAfter(context) {
  return new Step(context, 1);
}

// node_modules/d3-shape/src/offset/none.js
function none_default(series, order) {
  if (!((n = series.length) > 1))
    return;
  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];
    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
}

// node_modules/d3-shape/src/order/none.js
function none_default2(series) {
  var n = series.length, o = new Array(n);
  while (--n >= 0)
    o[n] = n;
  return o;
}

// node_modules/d3-shape/src/stack.js
function stackValue(d, key) {
  return d[key];
}
function stackSeries(key) {
  const series = [];
  series.key = key;
  return series;
}
function stack_default() {
  var keys2 = constant_default4([]), order = none_default2, offset = none_default, value2 = stackValue;
  function stack(data) {
    var sz = Array.from(keys2.apply(this, arguments), stackSeries), i, n = sz.length, j = -1, oz;
    for (const d of data) {
      for (i = 0, ++j; i < n; ++i) {
        (sz[i][j] = [0, +value2(d, sz[i].key, j, data)]).data = d;
      }
    }
    for (i = 0, oz = array_default2(order(sz)); i < n; ++i) {
      sz[oz[i]].index = i;
    }
    offset(sz, oz);
    return sz;
  }
  stack.keys = function(_) {
    return arguments.length ? (keys2 = typeof _ === "function" ? _ : constant_default4(Array.from(_)), stack) : keys2;
  };
  stack.value = function(_) {
    return arguments.length ? (value2 = typeof _ === "function" ? _ : constant_default4(+_), stack) : value2;
  };
  stack.order = function(_) {
    return arguments.length ? (order = _ == null ? none_default2 : typeof _ === "function" ? _ : constant_default4(Array.from(_)), stack) : order;
  };
  stack.offset = function(_) {
    return arguments.length ? (offset = _ == null ? none_default : _, stack) : offset;
  };
  return stack;
}

// node_modules/d3-shape/src/offset/diverging.js
function diverging_default(series, order) {
  if (!((n = series.length) > 0))
    return;
  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = 0, d[1] = dy;
      }
    }
  }
}

// node_modules/@carbon/charts/model/model.js
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s3, i = 1, n = arguments.length; i < n; i++) {
      s3 = arguments[i];
      for (var p in s3)
        if (Object.prototype.hasOwnProperty.call(s3, p))
          t[p] = s3[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var ChartModel = function() {
  function ChartModel2(services) {
    this.state = {
      options: {}
    };
    this.colorScale = {};
    this.colorClassNames = {};
    this.services = services;
  }
  ChartModel2.prototype.getAllDataFromDomain = function(groups3) {
    if (!this.getData()) {
      return null;
    }
    var options2 = this.getOptions();
    var allData = this.getData();
    var dataGroups = this.getDataGroups();
    var groupMapsTo = Tools.getProperty(options2, "data").groupMapsTo;
    var axesOptions = Tools.getProperty(options2, "axes");
    if (groups3) {
      allData = allData.filter(function(item) {
        return groups3.includes(item[groupMapsTo]);
      });
    }
    if (axesOptions) {
      Object.keys(axesOptions).forEach(function(axis3) {
        var mapsTo = axesOptions[axis3].mapsTo;
        var scaleType = axesOptions[axis3].scaleType;
        if (scaleType === ScaleTypes.LINEAR || scaleType === ScaleTypes.LOG) {
          allData = allData.map(function(datum2) {
            var _a5;
            return __assign(__assign({}, datum2), (_a5 = {}, _a5[mapsTo] = datum2[mapsTo] === null ? datum2[mapsTo] : Number(datum2[mapsTo]), _a5));
          });
        }
        if (mapsTo && axesOptions[axis3].domain) {
          if (scaleType === ScaleTypes.LABELS) {
            allData = allData.filter(function(datum2) {
              return axesOptions[axis3].domain.includes(datum2[mapsTo]);
            });
          } else {
            var _a4 = axesOptions[axis3].domain, start_1 = _a4[0], end_1 = _a4[1];
            allData = allData.filter(function(datum2) {
              return !(mapsTo in datum2) || datum2[mapsTo] >= start_1 && datum2[mapsTo] <= end_1;
            });
          }
        }
      });
    }
    return allData.filter(function(datum2) {
      return dataGroups.find(function(group3) {
        return group3.name === datum2[groupMapsTo];
      });
    });
  };
  ChartModel2.prototype.getDisplayData = function(groups3) {
    if (!this.get("data")) {
      return null;
    }
    var ACTIVE = legend.items.status.ACTIVE;
    var dataGroups = this.getDataGroups(groups3);
    var groupMapsTo = this.getOptions().data.groupMapsTo;
    var allDataFromDomain = this.getAllDataFromDomain(groups3);
    return allDataFromDomain.filter(function(datum2) {
      return dataGroups.find(function(dataGroup) {
        return dataGroup.name === datum2[groupMapsTo] && dataGroup.status === ACTIVE;
      });
    });
  };
  ChartModel2.prototype.getData = function() {
    return this.get("data");
  };
  ChartModel2.prototype.isDataEmpty = function() {
    return !this.getData().length;
  };
  ChartModel2.prototype.setData = function(newData) {
    var sanitizedData = this.sanitize(Tools.clone(newData));
    var dataGroups = this.generateDataGroups(sanitizedData);
    this.set({
      data: sanitizedData,
      dataGroups
    });
    return sanitizedData;
  };
  ChartModel2.prototype.getDataGroups = function(groups3) {
    var isDataLoading = Tools.getProperty(this.getOptions(), "data", "loading");
    if (isDataLoading) {
      return [];
    }
    if (groups3) {
      return this.get("dataGroups").filter(function(dataGroup) {
        return groups3.includes(dataGroup.name);
      });
    }
    return this.get("dataGroups");
  };
  ChartModel2.prototype.getActiveDataGroups = function(groups3) {
    var ACTIVE = legend.items.status.ACTIVE;
    return this.getDataGroups(groups3).filter(function(dataGroup) {
      return dataGroup.status === ACTIVE;
    });
  };
  ChartModel2.prototype.getDataGroupNames = function(groups3) {
    var dataGroups = this.getDataGroups(groups3);
    return dataGroups.map(function(dataGroup) {
      return dataGroup.name;
    });
  };
  ChartModel2.prototype.getActiveDataGroupNames = function(groups3) {
    var activeDataGroups = this.getActiveDataGroups(groups3);
    return activeDataGroups.map(function(dataGroup) {
      return dataGroup.name;
    });
  };
  ChartModel2.prototype.aggregateBinDataByGroup = function(bin2) {
    return Tools.groupBy(bin2, "group");
  };
  ChartModel2.prototype.getBinConfigurations = function() {
    var _this = this;
    var data = this.getDisplayData();
    var options2 = this.getOptions();
    var mainXPos = this.services.cartesianScales.getMainXAxisPosition();
    var domainIdentifier = this.services.cartesianScales.getDomainIdentifier();
    var axisOptions = options2.axes[mainXPos];
    var groupMapsTo = options2.data.groupMapsTo;
    var _a4 = axisOptions.bins, axisBins = _a4 === void 0 ? histogram.defaultBins : _a4;
    var areBinsDefined = Array.isArray(axisBins);
    var bins = bin().value(function(d) {
      return d[domainIdentifier];
    }).thresholds(axisBins)(data);
    if (!areBinsDefined) {
      var binsWidth = bins[0].x1 - bins[0].x0;
      bins[bins.length - 1].x1 = +bins[bins.length - 1].x0 + binsWidth;
    } else {
      bins[bins.length - 1].x1 = axisBins[axisBins.length - 1];
    }
    var binsDomain = areBinsDefined ? [axisBins[0], axisBins[axisBins.length - 1]] : [bins[0].x0, bins[bins.length - 1].x1];
    var groupsKeys = Array.from(new Set(data.map(function(d) {
      return d[groupMapsTo];
    })));
    var histogramData = [];
    bins.forEach(function(bin2) {
      var key = bin2.x0 + "-" + bin2.x1;
      var aggregateDataByGroup = _this.aggregateBinDataByGroup(bin2);
      groupsKeys.forEach(function(group3) {
        histogramData.push({
          group: group3,
          key,
          value: aggregateDataByGroup[group3] || 0,
          bin: bin2.x0
        });
      });
    });
    return {
      bins,
      binsDomain
    };
  };
  ChartModel2.prototype.getBinnedStackedData = function() {
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var dataGroupNames = this.getActiveDataGroupNames();
    var bins = this.getBinConfigurations().bins;
    var dataValuesGroupedByKeys = this.getDataValuesGroupedByKeys({
      bins
    });
    return stack_default().keys(dataGroupNames)(dataValuesGroupedByKeys).map(function(series, i) {
      return Object.keys(series).filter(function(key) {
        return !isNaN(key);
      }).map(function(key) {
        var element = series[key];
        element[groupMapsTo] = dataGroupNames[i];
        return element;
      });
    });
  };
  ChartModel2.prototype.getGroupedData = function(groups3) {
    var displayData = this.getDisplayData(groups3);
    var groupedData = {};
    var groupMapsTo = this.getOptions().data.groupMapsTo;
    displayData.map(function(datum2) {
      var group3 = datum2[groupMapsTo];
      if (groupedData[group3] !== null && groupedData[group3] !== void 0) {
        groupedData[group3].push(datum2);
      } else {
        groupedData[group3] = [datum2];
      }
    });
    return Object.keys(groupedData).map(function(groupName) {
      return {
        name: groupName,
        data: groupedData[groupName]
      };
    });
  };
  ChartModel2.prototype.getStackKeys = function(_a4) {
    var _this = this;
    var _b = _a4 === void 0 ? { bins: null, groups: null } : _a4, _c = _b.bins, bins = _c === void 0 ? null : _c, _d = _b.groups, groups3 = _d === void 0 ? null : _d;
    var options2 = this.getOptions();
    var displayData = this.getDisplayData(groups3);
    var stackKeys;
    if (bins) {
      stackKeys = bins.map(function(bin2) {
        return bin2.x0 + "-" + bin2.x1;
      });
    } else {
      stackKeys = Tools.removeArrayDuplicates(displayData.map(function(datum2) {
        var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum2);
        return datum2[domainIdentifier] && typeof datum2[domainIdentifier].toString === "function" ? datum2[domainIdentifier].toString() : datum2[domainIdentifier];
      }));
    }
    var axisPosition = this.services.cartesianScales.domainAxisPosition;
    var scaleType = options2.axes[axisPosition].scaleType;
    if (scaleType === ScaleTypes.TIME) {
      stackKeys.sort(function(a3, b) {
        var dateA = new Date(a3);
        var dateB = new Date(b);
        return dateA - dateB;
      });
    } else if (scaleType === ScaleTypes.LOG || scaleType === ScaleTypes.LINEAR) {
      stackKeys.sort(function(a3, b) {
        return a3 - b;
      });
    }
    return stackKeys;
  };
  ChartModel2.prototype.getDataValuesGroupedByKeys = function(_a4) {
    var _this = this;
    var _b = _a4.bins, bins = _b === void 0 ? null : _b, _c = _a4.groups, groups3 = _c === void 0 ? null : _c;
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var displayData = this.getDisplayData(groups3);
    var dataGroupNames = this.getDataGroupNames();
    var stackKeys = this.getStackKeys({ bins, groups: groups3 });
    if (bins) {
      return stackKeys.map(function(key) {
        var _a5 = key.split("-"), binStart = _a5[0], binEnd = _a5[1];
        var correspondingValues = { x0: binStart, x1: binEnd };
        var correspondingBin = bins.find(function(bin2) {
          return bin2.x0.toString() === binStart.toString();
        });
        dataGroupNames.forEach(function(dataGroupName) {
          correspondingValues[dataGroupName] = correspondingBin.filter(function(binItem) {
            return binItem[groupMapsTo] === dataGroupName;
          }).length;
        });
        return correspondingValues;
      });
    }
    return stackKeys.map(function(key) {
      var correspondingValues = { sharedStackKey: key };
      dataGroupNames.forEach(function(dataGroupName) {
        var correspondingDatum = displayData.find(function(datum2) {
          var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum2);
          return datum2[groupMapsTo] === dataGroupName && datum2.hasOwnProperty(domainIdentifier) && datum2[domainIdentifier].toString() === key;
        });
        var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(correspondingValues);
        correspondingValues[dataGroupName] = correspondingDatum ? correspondingDatum[rangeIdentifier] : null;
      });
      return correspondingValues;
    });
  };
  ChartModel2.prototype.getStackedData = function(_a4) {
    var _b = _a4.percentage, percentage = _b === void 0 ? false : _b, _c = _a4.groups, groups3 = _c === void 0 ? null : _c, _d = _a4.divergent, divergent = _d === void 0 ? false : _d;
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var dataGroupNames = this.getActiveDataGroupNames(groups3);
    var dataValuesGroupedByKeys = this.getDataValuesGroupedByKeys({
      groups: groups3
    });
    if (percentage) {
      var maxByKey_1 = Tools.fromPairs(dataValuesGroupedByKeys.map(function(d) {
        return [d.sharedStackKey, 0];
      }));
      dataValuesGroupedByKeys.forEach(function(d) {
        dataGroupNames.forEach(function(name) {
          maxByKey_1[d.sharedStackKey] += d[name];
        });
      });
      dataValuesGroupedByKeys.forEach(function(d) {
        dataGroupNames.forEach(function(name) {
          if (maxByKey_1[d.sharedStackKey]) {
            d[name] = d[name] / maxByKey_1[d.sharedStackKey] * 100;
          } else {
            d[name] = 0;
          }
        });
      });
    }
    var stackToUse = divergent ? stack_default().offset(diverging_default) : stack_default();
    return stackToUse.keys(dataGroupNames)(dataValuesGroupedByKeys).map(function(series, i) {
      return Object.keys(series).filter(function(key) {
        return !isNaN(key);
      }).map(function(key) {
        var element = series[key];
        element[groupMapsTo] = dataGroupNames[i];
        return element;
      });
    });
  };
  ChartModel2.prototype.getOptions = function() {
    return this.state.options;
  };
  ChartModel2.prototype.set = function(newState, configs) {
    this.state = Object.assign({}, this.state, newState);
    var newConfig = Object.assign({ skipUpdate: false, animate: true }, configs);
    if (!newConfig.skipUpdate) {
      this.update(newConfig.animate);
    }
  };
  ChartModel2.prototype.get = function(property2) {
    if (property2) {
      return this.state[property2];
    } else {
      return this.state;
    }
  };
  ChartModel2.prototype.setOptions = function(newOptions) {
    var options2 = this.getOptions();
    Tools.updateLegendAdditionalItems(options2, newOptions);
    this.set({
      options: Tools.merge(options2, newOptions)
    });
  };
  ChartModel2.prototype.update = function(animate) {
    if (animate === void 0) {
      animate = true;
    }
    if (!this.getDisplayData()) {
      return;
    }
    this.updateAllDataGroups();
    this.setCustomColorScale();
    this.setColorClassNames();
    this.services.events.dispatchEvent(Events.Model.UPDATE, { animate });
  };
  ChartModel2.prototype.toggleDataLabel = function(changedLabel) {
    var _a4 = legend.items.status, ACTIVE = _a4.ACTIVE, DISABLED = _a4.DISABLED;
    var dataGroups = this.getDataGroups();
    var hasDeactivatedItems = dataGroups.some(function(group3) {
      return group3.status === DISABLED;
    });
    var activeItems = dataGroups.filter(function(group3) {
      return group3.status === ACTIVE;
    });
    if (hasDeactivatedItems) {
      if (activeItems.length === 1 && activeItems[0].name === changedLabel) {
        dataGroups.forEach(function(group3, i) {
          dataGroups[i].status = ACTIVE;
        });
      } else {
        var indexToChange = dataGroups.findIndex(function(group3) {
          return group3.name === changedLabel;
        });
        dataGroups[indexToChange].status = dataGroups[indexToChange].status === DISABLED ? ACTIVE : DISABLED;
      }
    } else {
      dataGroups.forEach(function(group3, i) {
        dataGroups[i].status = group3.name === changedLabel ? ACTIVE : DISABLED;
      });
    }
    var updatedActiveItems = dataGroups.filter(function(group3) {
      return group3.status === ACTIVE;
    });
    var options2 = this.getOptions();
    var hasUpdatedDeactivatedItems = dataGroups.some(function(group3) {
      return group3.status === DISABLED;
    });
    if (hasUpdatedDeactivatedItems) {
      options2.data.selectedGroups = updatedActiveItems.map(function(activeItem) {
        return activeItem.name;
      });
    } else {
      options2.data.selectedGroups = [];
    }
    this.services.events.dispatchEvent(Events.Legend.ITEMS_UPDATE, {
      dataGroups
    });
    this.set({
      dataGroups
    });
  };
  ChartModel2.prototype.getIsFilled = function(group3, key, data, defaultFilled) {
    var options2 = this.getOptions();
    if (options2.getIsFilled) {
      return options2.getIsFilled(group3, key, data, defaultFilled);
    } else {
      return defaultFilled;
    }
  };
  ChartModel2.prototype.getFillColor = function(group3, key, data) {
    var options2 = this.getOptions();
    var defaultFillColor = Tools.getProperty(this.colorScale, group3);
    if (options2.getFillColor) {
      return options2.getFillColor(group3, key, data, defaultFillColor);
    } else {
      return defaultFillColor;
    }
  };
  ChartModel2.prototype.getStrokeColor = function(group3, key, data) {
    var options2 = this.getOptions();
    var defaultStrokeColor = Tools.getProperty(this.colorScale, group3);
    if (options2.getStrokeColor) {
      return options2.getStrokeColor(group3, key, data, defaultStrokeColor);
    } else {
      return defaultStrokeColor;
    }
  };
  ChartModel2.prototype.isUserProvidedColorScaleValid = function() {
    var userProvidedScale = Tools.getProperty(this.getOptions(), "color", "scale");
    var dataGroups = this.getDataGroups();
    if (userProvidedScale == null || Object.keys(userProvidedScale).length == 0) {
      return false;
    }
    return dataGroups.some(function(dataGroup) {
      return Object.keys(userProvidedScale).includes(dataGroup.name);
    });
  };
  ChartModel2.prototype.getColorClassName = function(configs) {
    var colorPairingTag = this.colorClassNames(configs.dataGroupName);
    var className = configs.originalClassName;
    configs.classNameTypes.forEach(function(type2) {
      return className = configs.originalClassName ? className + " " + type2 + "-" + colorPairingTag : type2 + "-" + colorPairingTag;
    });
    return className;
  };
  ChartModel2.prototype.getStatus = function() {
    return null;
  };
  ChartModel2.prototype.getAllDataGroupsNames = function() {
    return this.allDataGroups;
  };
  ChartModel2.prototype.transformToTabularData = function(data) {
    console.warn("We've updated the charting data format to be tabular by default. The current format you're using is deprecated and will be removed in v1.0, read more here https://carbon-design-system.github.io/carbon-charts/?path=/story/docs-tutorials--tabular-data-format");
    var tabularData = [];
    var datasets = data.datasets, labels = data.labels;
    datasets.forEach(function(dataset) {
      dataset.data.forEach(function(datum2, i) {
        var group3;
        var datasetLabel = Tools.getProperty(dataset, "label");
        if (datasetLabel === null) {
          var correspondingLabel = Tools.getProperty(labels, i);
          if (correspondingLabel) {
            group3 = correspondingLabel;
          } else {
            group3 = "Ungrouped";
          }
        } else {
          group3 = datasetLabel;
        }
        var updatedDatum = {
          group: group3,
          key: labels[i]
        };
        if (isNaN(datum2)) {
          updatedDatum["value"] = datum2.value;
          updatedDatum["date"] = datum2.date;
        } else {
          updatedDatum["value"] = datum2;
        }
        tabularData.push(updatedDatum);
      });
    });
    return tabularData;
  };
  ChartModel2.prototype.getTabularDataArray = function() {
    return [];
  };
  ChartModel2.prototype.exportToCSV = function() {
    var data = this.getTabularDataArray().map(function(row) {
      return row.map(function(column) {
        return '"' + column + '"';
      });
    });
    var csvString = "", csvData = "";
    data.forEach(function(d, i) {
      csvData = d.join(",");
      csvString += i < data.length ? csvData + "\n" : csvData;
    });
    this.services.files.downloadCSV(csvString, "myChart.csv");
  };
  ChartModel2.prototype.getTabularData = function(data) {
    if (!Array.isArray(data)) {
      return this.transformToTabularData(data);
    }
    return data;
  };
  ChartModel2.prototype.sanitize = function(data) {
    data = this.getTabularData(data);
    return data;
  };
  ChartModel2.prototype.updateAllDataGroups = function() {
    var _this = this;
    if (!this.allDataGroups) {
      this.allDataGroups = this.getDataGroupNames();
    } else {
      this.getDataGroupNames().forEach(function(dataGroupName) {
        if (_this.allDataGroups.indexOf(dataGroupName) === -1) {
          _this.allDataGroups.push(dataGroupName);
        }
      });
    }
  };
  ChartModel2.prototype.generateDataGroups = function(data) {
    var groupMapsTo = this.getOptions().data.groupMapsTo;
    var _a4 = legend.items.status, ACTIVE = _a4.ACTIVE, DISABLED = _a4.DISABLED;
    var options2 = this.getOptions();
    var uniqueDataGroups = Tools.removeArrayDuplicates(data.map(function(datum2) {
      return datum2[groupMapsTo];
    }));
    if (options2.data.selectedGroups.length) {
      var hasAllSelectedGroups = options2.data.selectedGroups.every(function(groupName) {
        return uniqueDataGroups.includes(groupName);
      });
      if (!hasAllSelectedGroups) {
        options2.data.selectedGroups = [];
      }
    }
    var getStatus = function(groupName) {
      return !options2.data.selectedGroups.length || options2.data.selectedGroups.includes(groupName) ? ACTIVE : DISABLED;
    };
    return uniqueDataGroups.map(function(groupName) {
      return {
        name: groupName,
        status: getStatus(groupName)
      };
    });
  };
  ChartModel2.prototype.setCustomColorScale = function() {
    var _this = this;
    if (!this.isUserProvidedColorScaleValid()) {
      return;
    }
    var options2 = this.getOptions();
    var userProvidedScale = Tools.getProperty(options2, "color", "scale");
    Object.keys(userProvidedScale).forEach(function(dataGroup) {
      if (!_this.allDataGroups.includes(dataGroup)) {
        console.warn('"' + dataGroup + '" does not exist in data groups.');
      }
    });
    var providedDataGroups = this.allDataGroups.filter(function(dataGroup) {
      return userProvidedScale[dataGroup];
    });
    providedDataGroups.forEach(function(dataGroup) {
      return _this.colorScale[dataGroup] = userProvidedScale[dataGroup];
    });
  };
  ChartModel2.prototype.setColorClassNames = function() {
    var colorPairingOptions = Tools.getProperty(this.getOptions(), "color", "pairing");
    var numberOfVariants = Tools.getProperty(colorPairingOptions, "numberOfVariants");
    if (!numberOfVariants || numberOfVariants < this.allDataGroups.length) {
      numberOfVariants = this.allDataGroups.length;
    }
    var pairingOption = Tools.getProperty(colorPairingOptions, "option");
    var colorPairingCounts = color.pairingOptions;
    var numberOfColors = numberOfVariants > 5 ? 14 : numberOfVariants;
    pairingOption = pairingOption <= colorPairingCounts[numberOfColors + "-color"] ? pairingOption : 1;
    var colorPairing = this.allDataGroups.map(function(dataGroup, index4) {
      return numberOfColors + "-" + pairingOption + "-" + (index4 % 14 + 1);
    });
    this.colorClassNames = ordinal().range(colorPairing).domain(this.allDataGroups);
  };
  return ChartModel2;
}();

// node_modules/@carbon/charts/services/service.js
var Service = function() {
  function Service2(model, services) {
    this.model = model;
    this.services = services;
    this.init();
  }
  Service2.prototype.init = function() {
  };
  Service2.prototype.update = function() {
  };
  Service2.prototype.setModel = function(newObj) {
    this.model = newObj;
  };
  Service2.prototype.setServices = function(newObj) {
    this.services = newObj;
  };
  return Service2;
}();

// node_modules/carbon-components/es/globals/js/settings.js
var settings = {
  prefix: "bx",
  selectorTabbable: "\n    a[href], area[href], input:not([disabled]):not([tabindex='-1']),\n    button:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),\n    textarea:not([disabled]):not([tabindex='-1']),\n    iframe, object, embed, *[tabindex]:not([tabindex='-1']), *[contenteditable=true]\n  ",
  selectorFocusable: "\n    a[href], area[href], input:not([disabled]),\n    button:not([disabled]),select:not([disabled]),\n    textarea:not([disabled]),\n    iframe, object, embed, *[tabindex], *[contenteditable=true]\n  "
};
var settings_1 = settings;
var settings_default = settings_1;

// node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
var MapShim = function() {
  if (typeof Map !== "undefined") {
    return Map;
  }
  function getIndex(arr, key) {
    var result2 = -1;
    arr.some(function(entry, index4) {
      if (entry[0] === key) {
        result2 = index4;
        return true;
      }
      return false;
    });
    return result2;
  }
  return function() {
    function anonymous() {
      this.__entries__ = [];
    }
    var prototypeAccessors = { size: { configurable: true } };
    prototypeAccessors.size.get = function() {
      return this.__entries__.length;
    };
    anonymous.prototype.get = function(key) {
      var index4 = getIndex(this.__entries__, key);
      var entry = this.__entries__[index4];
      return entry && entry[1];
    };
    anonymous.prototype.set = function(key, value2) {
      var index4 = getIndex(this.__entries__, key);
      if (~index4) {
        this.__entries__[index4][1] = value2;
      } else {
        this.__entries__.push([key, value2]);
      }
    };
    anonymous.prototype.delete = function(key) {
      var entries = this.__entries__;
      var index4 = getIndex(entries, key);
      if (~index4) {
        entries.splice(index4, 1);
      }
    };
    anonymous.prototype.has = function(key) {
      return !!~getIndex(this.__entries__, key);
    };
    anonymous.prototype.clear = function() {
      this.__entries__.splice(0);
    };
    anonymous.prototype.forEach = function(callback, ctx) {
      var this$1 = this;
      if (ctx === void 0)
        ctx = null;
      for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {
        var entry = list[i];
        callback.call(ctx, entry[1], entry[0]);
      }
    };
    Object.defineProperties(anonymous.prototype, prototypeAccessors);
    return anonymous;
  }();
}();
var isBrowser = typeof window !== "undefined" && typeof document !== "undefined" && window.document === document;
var global$1 = function() {
  if (typeof global !== "undefined" && global.Math === Math) {
    return global;
  }
  if (typeof self !== "undefined" && self.Math === Math) {
    return self;
  }
  if (typeof window !== "undefined" && window.Math === Math) {
    return window;
  }
  return Function("return this")();
}();
var requestAnimationFrame$1 = function() {
  if (typeof requestAnimationFrame === "function") {
    return requestAnimationFrame.bind(global$1);
  }
  return function(callback) {
    return setTimeout(function() {
      return callback(Date.now());
    }, 1e3 / 60);
  };
}();
var trailingTimeout = 2;
var throttle2 = function(callback, delay2) {
  var leadingCall = false, trailingCall = false, lastCallTime = 0;
  function resolvePending() {
    if (leadingCall) {
      leadingCall = false;
      callback();
    }
    if (trailingCall) {
      proxy();
    }
  }
  function timeoutCallback() {
    requestAnimationFrame$1(resolvePending);
  }
  function proxy() {
    var timeStamp = Date.now();
    if (leadingCall) {
      if (timeStamp - lastCallTime < trailingTimeout) {
        return;
      }
      trailingCall = true;
    } else {
      leadingCall = true;
      trailingCall = false;
      setTimeout(timeoutCallback, delay2);
    }
    lastCallTime = timeStamp;
  }
  return proxy;
};
var REFRESH_DELAY = 20;
var transitionKeys = ["top", "right", "bottom", "left", "width", "height", "size", "weight"];
var mutationObserverSupported = typeof MutationObserver !== "undefined";
var ResizeObserverController = function() {
  this.connected_ = false;
  this.mutationEventsAdded_ = false;
  this.mutationsObserver_ = null;
  this.observers_ = [];
  this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
  this.refresh = throttle2(this.refresh.bind(this), REFRESH_DELAY);
};
ResizeObserverController.prototype.addObserver = function(observer) {
  if (!~this.observers_.indexOf(observer)) {
    this.observers_.push(observer);
  }
  if (!this.connected_) {
    this.connect_();
  }
};
ResizeObserverController.prototype.removeObserver = function(observer) {
  var observers2 = this.observers_;
  var index4 = observers2.indexOf(observer);
  if (~index4) {
    observers2.splice(index4, 1);
  }
  if (!observers2.length && this.connected_) {
    this.disconnect_();
  }
};
ResizeObserverController.prototype.refresh = function() {
  var changesDetected = this.updateObservers_();
  if (changesDetected) {
    this.refresh();
  }
};
ResizeObserverController.prototype.updateObservers_ = function() {
  var activeObservers = this.observers_.filter(function(observer) {
    return observer.gatherActive(), observer.hasActive();
  });
  activeObservers.forEach(function(observer) {
    return observer.broadcastActive();
  });
  return activeObservers.length > 0;
};
ResizeObserverController.prototype.connect_ = function() {
  if (!isBrowser || this.connected_) {
    return;
  }
  document.addEventListener("transitionend", this.onTransitionEnd_);
  window.addEventListener("resize", this.refresh);
  if (mutationObserverSupported) {
    this.mutationsObserver_ = new MutationObserver(this.refresh);
    this.mutationsObserver_.observe(document, {
      attributes: true,
      childList: true,
      characterData: true,
      subtree: true
    });
  } else {
    document.addEventListener("DOMSubtreeModified", this.refresh);
    this.mutationEventsAdded_ = true;
  }
  this.connected_ = true;
};
ResizeObserverController.prototype.disconnect_ = function() {
  if (!isBrowser || !this.connected_) {
    return;
  }
  document.removeEventListener("transitionend", this.onTransitionEnd_);
  window.removeEventListener("resize", this.refresh);
  if (this.mutationsObserver_) {
    this.mutationsObserver_.disconnect();
  }
  if (this.mutationEventsAdded_) {
    document.removeEventListener("DOMSubtreeModified", this.refresh);
  }
  this.mutationsObserver_ = null;
  this.mutationEventsAdded_ = false;
  this.connected_ = false;
};
ResizeObserverController.prototype.onTransitionEnd_ = function(ref) {
  var propertyName = ref.propertyName;
  if (propertyName === void 0)
    propertyName = "";
  var isReflowProperty = transitionKeys.some(function(key) {
    return !!~propertyName.indexOf(key);
  });
  if (isReflowProperty) {
    this.refresh();
  }
};
ResizeObserverController.getInstance = function() {
  if (!this.instance_) {
    this.instance_ = new ResizeObserverController();
  }
  return this.instance_;
};
ResizeObserverController.instance_ = null;
var defineConfigurable = function(target, props) {
  for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {
    var key = list[i];
    Object.defineProperty(target, key, {
      value: props[key],
      enumerable: false,
      writable: false,
      configurable: true
    });
  }
  return target;
};
var getWindowOf = function(target) {
  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
  return ownerGlobal || global$1;
};
var emptyRect = createRectInit(0, 0, 0, 0);
function toFloat(value2) {
  return parseFloat(value2) || 0;
}
function getBordersSize(styles) {
  var positions = [], len = arguments.length - 1;
  while (len-- > 0)
    positions[len] = arguments[len + 1];
  return positions.reduce(function(size2, position2) {
    var value2 = styles["border-" + position2 + "-width"];
    return size2 + toFloat(value2);
  }, 0);
}
function getPaddings(styles) {
  var positions = ["top", "right", "bottom", "left"];
  var paddings = {};
  for (var i = 0, list = positions; i < list.length; i += 1) {
    var position2 = list[i];
    var value2 = styles["padding-" + position2];
    paddings[position2] = toFloat(value2);
  }
  return paddings;
}
function getSVGContentRect(target) {
  var bbox = target.getBBox();
  return createRectInit(0, 0, bbox.width, bbox.height);
}
function getHTMLElementContentRect(target) {
  var clientWidth = target.clientWidth;
  var clientHeight = target.clientHeight;
  if (!clientWidth && !clientHeight) {
    return emptyRect;
  }
  var styles = getWindowOf(target).getComputedStyle(target);
  var paddings = getPaddings(styles);
  var horizPad = paddings.left + paddings.right;
  var vertPad = paddings.top + paddings.bottom;
  var width = toFloat(styles.width), height = toFloat(styles.height);
  if (styles.boxSizing === "border-box") {
    if (Math.round(width + horizPad) !== clientWidth) {
      width -= getBordersSize(styles, "left", "right") + horizPad;
    }
    if (Math.round(height + vertPad) !== clientHeight) {
      height -= getBordersSize(styles, "top", "bottom") + vertPad;
    }
  }
  if (!isDocumentElement(target)) {
    var vertScrollbar = Math.round(width + horizPad) - clientWidth;
    var horizScrollbar = Math.round(height + vertPad) - clientHeight;
    if (Math.abs(vertScrollbar) !== 1) {
      width -= vertScrollbar;
    }
    if (Math.abs(horizScrollbar) !== 1) {
      height -= horizScrollbar;
    }
  }
  return createRectInit(paddings.left, paddings.top, width, height);
}
var isSVGGraphicsElement = function() {
  if (typeof SVGGraphicsElement !== "undefined") {
    return function(target) {
      return target instanceof getWindowOf(target).SVGGraphicsElement;
    };
  }
  return function(target) {
    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === "function";
  };
}();
function isDocumentElement(target) {
  return target === getWindowOf(target).document.documentElement;
}
function getContentRect(target) {
  if (!isBrowser) {
    return emptyRect;
  }
  if (isSVGGraphicsElement(target)) {
    return getSVGContentRect(target);
  }
  return getHTMLElementContentRect(target);
}
function createReadOnlyRect(ref) {
  var x3 = ref.x;
  var y3 = ref.y;
  var width = ref.width;
  var height = ref.height;
  var Constr = typeof DOMRectReadOnly !== "undefined" ? DOMRectReadOnly : Object;
  var rect = Object.create(Constr.prototype);
  defineConfigurable(rect, {
    x: x3,
    y: y3,
    width,
    height,
    top: y3,
    right: x3 + width,
    bottom: height + y3,
    left: x3
  });
  return rect;
}
function createRectInit(x3, y3, width, height) {
  return { x: x3, y: y3, width, height };
}
var ResizeObservation = function(target) {
  this.broadcastWidth = 0;
  this.broadcastHeight = 0;
  this.contentRect_ = createRectInit(0, 0, 0, 0);
  this.target = target;
};
ResizeObservation.prototype.isActive = function() {
  var rect = getContentRect(this.target);
  this.contentRect_ = rect;
  return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
};
ResizeObservation.prototype.broadcastRect = function() {
  var rect = this.contentRect_;
  this.broadcastWidth = rect.width;
  this.broadcastHeight = rect.height;
  return rect;
};
var ResizeObserverEntry = function(target, rectInit) {
  var contentRect = createReadOnlyRect(rectInit);
  defineConfigurable(this, { target, contentRect });
};
var ResizeObserverSPI = function(callback, controller, callbackCtx) {
  this.activeObservations_ = [];
  this.observations_ = new MapShim();
  if (typeof callback !== "function") {
    throw new TypeError("The callback provided as parameter 1 is not a function.");
  }
  this.callback_ = callback;
  this.controller_ = controller;
  this.callbackCtx_ = callbackCtx;
};
ResizeObserverSPI.prototype.observe = function(target) {
  if (!arguments.length) {
    throw new TypeError("1 argument required, but only 0 present.");
  }
  if (typeof Element === "undefined" || !(Element instanceof Object)) {
    return;
  }
  if (!(target instanceof getWindowOf(target).Element)) {
    throw new TypeError('parameter 1 is not of type "Element".');
  }
  var observations = this.observations_;
  if (observations.has(target)) {
    return;
  }
  observations.set(target, new ResizeObservation(target));
  this.controller_.addObserver(this);
  this.controller_.refresh();
};
ResizeObserverSPI.prototype.unobserve = function(target) {
  if (!arguments.length) {
    throw new TypeError("1 argument required, but only 0 present.");
  }
  if (typeof Element === "undefined" || !(Element instanceof Object)) {
    return;
  }
  if (!(target instanceof getWindowOf(target).Element)) {
    throw new TypeError('parameter 1 is not of type "Element".');
  }
  var observations = this.observations_;
  if (!observations.has(target)) {
    return;
  }
  observations.delete(target);
  if (!observations.size) {
    this.controller_.removeObserver(this);
  }
};
ResizeObserverSPI.prototype.disconnect = function() {
  this.clearActive();
  this.observations_.clear();
  this.controller_.removeObserver(this);
};
ResizeObserverSPI.prototype.gatherActive = function() {
  var this$1 = this;
  this.clearActive();
  this.observations_.forEach(function(observation) {
    if (observation.isActive()) {
      this$1.activeObservations_.push(observation);
    }
  });
};
ResizeObserverSPI.prototype.broadcastActive = function() {
  if (!this.hasActive()) {
    return;
  }
  var ctx = this.callbackCtx_;
  var entries = this.activeObservations_.map(function(observation) {
    return new ResizeObserverEntry(observation.target, observation.broadcastRect());
  });
  this.callback_.call(ctx, entries, ctx);
  this.clearActive();
};
ResizeObserverSPI.prototype.clearActive = function() {
  this.activeObservations_.splice(0);
};
ResizeObserverSPI.prototype.hasActive = function() {
  return this.activeObservations_.length > 0;
};
var observers = typeof WeakMap !== "undefined" ? new WeakMap() : new MapShim();
var ResizeObserver = function(callback) {
  if (!(this instanceof ResizeObserver)) {
    throw new TypeError("Cannot call a class as a function.");
  }
  if (!arguments.length) {
    throw new TypeError("1 argument required, but only 0 present.");
  }
  var controller = ResizeObserverController.getInstance();
  var observer = new ResizeObserverSPI(callback, controller, this);
  observers.set(this, observer);
};
["observe", "unobserve", "disconnect"].forEach(function(method2) {
  ResizeObserver.prototype[method2] = function() {
    return (ref = observers.get(this))[method2].apply(ref, arguments);
    var ref;
  };
});
var index2 = function() {
  if (typeof global$1.ResizeObserver !== "undefined") {
    return global$1.ResizeObserver;
  }
  return ResizeObserver;
}();
var ResizeObserver_es_default = index2;

// node_modules/@carbon/charts/services/essentials/dom-utils.js
var import_dom_to_image = __toModule(require_dom_to_image());
var __extends = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var CSS_VERIFIER_ELEMENT_CLASSNAME = "DONT_STYLE_ME_css_styles_verifier";
var DOMUtils = function(_super) {
  __extends(DOMUtils2, _super);
  function DOMUtils2(model, services) {
    var _this = _super.call(this, model, services) || this;
    _this.chartID = Math.floor((1 + Math.random()) * 281474976710656).toString(16);
    return _this;
  }
  DOMUtils2.getHTMLElementSize = function(element) {
    return {
      width: element.clientWidth,
      height: element.clientHeight
    };
  };
  DOMUtils2.getSVGElementSize = function(svgSelector, options2) {
    if (options2 === void 0) {
      options2 = {
        useAttrs: false,
        useClientDimensions: false,
        useBBox: false,
        useBoundingRect: false
      };
    }
    if (!svgSelector.attr) {
      svgSelector = select_default2(svgSelector);
    }
    var finalDimensions = {
      width: 0,
      height: 0
    };
    var validateAndSetDimensions = function(dimensions) {
      if (dimensions) {
        Object.keys(finalDimensions).forEach(function(dimensionKey) {
          if (dimensions[dimensionKey]) {
            var dimension = dimensions[dimensionKey];
            var dimensionNumber = parseFloat(dimension);
            if (dimension && dimensionNumber > finalDimensions[dimensionKey] && ("" + dimension).indexOf("%") === -1) {
              finalDimensions[dimensionKey] = dimensionNumber;
            }
          }
        });
      }
    };
    var attrDimensions = {
      width: svgSelector.attr("width"),
      height: svgSelector.attr("height")
    };
    var bbox, bboxDimensions, boundingRect, boundingRectDimensions;
    try {
      bbox = svgSelector.node().getBBox();
      bboxDimensions = {
        width: bbox.width,
        height: bbox.height
      };
    } catch (e) {
    }
    try {
      boundingRect = svgSelector.node().getBoundingClientRect();
      boundingRectDimensions = {
        width: boundingRect.width,
        height: boundingRect.height
      };
    } catch (e) {
    }
    var clientDimensions = {
      width: svgSelector.node().clientWidth,
      height: svgSelector.node().clientHeight
    };
    if (options2) {
      if (options2.useAttrs) {
        validateAndSetDimensions(attrDimensions);
        if (finalDimensions.width > 0 && finalDimensions.height > 0) {
          return finalDimensions;
        }
      }
      if (options2.useClientDimensions) {
        validateAndSetDimensions(clientDimensions);
        if (finalDimensions.width > 0 && finalDimensions.height > 0) {
          return clientDimensions;
        }
      }
      if (options2.useBBox) {
        validateAndSetDimensions(bboxDimensions);
        if (finalDimensions.width > 0 && finalDimensions.height > 0) {
          return bboxDimensions;
        }
      }
      if (options2.useBoundingRect) {
        validateAndSetDimensions(boundingRectDimensions);
        if (finalDimensions.width > 0 && finalDimensions.height > 0) {
          return boundingRectDimensions;
        }
      }
    }
    try {
      var nativeDimensions = {
        width: Tools.getProperty(svgSelector.node(), "width", "baseVal", "value"),
        height: Tools.getProperty(svgSelector.node(), "height", "baseVal", "value")
      };
      validateAndSetDimensions(nativeDimensions);
    } catch (e) {
      validateAndSetDimensions(clientDimensions);
      validateAndSetDimensions(bboxDimensions);
      validateAndSetDimensions(attrDimensions);
    }
    return finalDimensions;
  };
  DOMUtils2.appendOrSelect = function(parent2, query) {
    var selection2 = parent2.select("" + query);
    if (selection2.empty()) {
      var querySections = query.split("#");
      var elementToAppend = void 0;
      var id2 = void 0;
      if (querySections.length === 2) {
        elementToAppend = querySections[0];
        querySections = querySections[1].split(".");
        id2 = querySections[0];
      } else {
        querySections = query.split(".");
        elementToAppend = querySections[0];
      }
      return parent2.append(elementToAppend).attr("id", id2).attr("class", querySections.slice(1).join(" "));
    }
    return selection2;
  };
  DOMUtils2.prototype.init = function() {
    this.styleHolderElement();
    this.addMainContainer();
    this.verifyCSSStylesBeingApplied();
    if (this.model.getOptions().resizable) {
      this.addResizeListener();
    }
    this.addHolderListeners();
    this.handleFullscreenChange();
  };
  DOMUtils2.prototype.getChartID = function() {
    return this.chartID;
  };
  DOMUtils2.prototype.generateElementIDString = function(originalID) {
    return "chart-" + this.chartID + "-" + originalID;
  };
  DOMUtils2.prototype.addMainContainer = function() {
    var options2 = this.model.getOptions();
    var chartsprefix = Tools.getProperty(options2, "style", "prefix");
    var mainContainer = select_default2(this.getHolder()).append("div").classed(settings_default.prefix + "--" + chartsprefix + "--chart-wrapper", true).style("height", "100%").style("width", "100%");
    mainContainer.append("g").attr("class", CSS_VERIFIER_ELEMENT_CLASSNAME);
    this.mainContainer = mainContainer.node();
  };
  DOMUtils2.prototype.update = function() {
    this.styleHolderElement();
  };
  DOMUtils2.prototype.styleHolderElement = function() {
    var holderElement = this.getHolder();
    select_default2(this.getHolder()).classed(settings_default.prefix + "--chart-holder", true);
    var _a4 = this.model.getOptions(), width = _a4.width, height = _a4.height;
    if (width !== this.width) {
      holderElement.style.width = width;
      this.width = width;
    }
    if (height !== this.height) {
      holderElement.style.height = height;
      this.height = height;
    }
  };
  DOMUtils2.prototype.getHolder = function() {
    return this.model.get("holder");
  };
  DOMUtils2.prototype.exportToJPG = function() {
    var self2 = this;
    var holder = this.getHolder();
    var holderSelection = select_default2(holder);
    holderSelection.classed("filled", true);
    import_dom_to_image.default.toJpeg(this.getMainContainer(), {
      bgcolor: typeof window !== "undefined" ? window.getComputedStyle(holder).getPropertyValue("background-color") : void 0,
      quality: 1,
      filter: function(node) {
        if (node.classList && node.classList.contains("bx--cc--toolbar")) {
          return false;
        }
        return true;
      }
    }).then(function(dataUrl) {
      self2.services.files.downloadImage(dataUrl, "myChart.jpg");
      holderSelection.classed("filled", false);
    });
  };
  DOMUtils2.prototype.exportToPNG = function() {
    var self2 = this;
    var holder = this.getHolder();
    var holderSelection = select_default2(holder);
    holderSelection.classed("filled", true);
    import_dom_to_image.default.toPng(this.getMainContainer(), {
      bgcolor: typeof window !== "undefined" ? window.getComputedStyle(holder).getPropertyValue("background-color") : void 0,
      quality: 1,
      filter: function(node) {
        if (node.classList && node.classList.contains("bx--cc--toolbar")) {
          return false;
        }
        return true;
      }
    }).then(function(dataUrl) {
      self2.services.files.downloadImage(dataUrl, "myChart.png");
      holderSelection.classed("filled", false);
    }).catch(function(error) {
      console.error("oops, something went wrong!", error);
    });
  };
  DOMUtils2.prototype.toggleFullscreen = function() {
    var holder = this.getHolder();
    var holderSelection = select_default2(holder);
    var isFullScreen = holderSelection.classed("fullscreen");
    if (isFullScreen && (document.fullscreenElement || document["webkitFullscreenElement"] || document["mozFullScreenElement"] || document["msFullscreenElement"])) {
      if (document.exitFullscreen) {
        document.exitFullscreen();
      } else if (document["webkitExitFullscreen"]) {
        document["webkitExitFullscreen"]();
      } else if (document["mozCancelFullScreen"]) {
        document["mozCancelFullScreen"]();
      } else if (document["msExitFullscreen"]) {
        document["msExitFullscreen"]();
      }
    } else {
      if (holder.requestFullscreen) {
        holder.requestFullscreen();
      } else if (holder.webkitRequestFullscreen) {
        holder.webkitRequestFullscreen();
      } else if (holder.mozRequestFullScreen) {
        holder.mozRequestFullScreen();
      } else if (holder.msRequestFullscreen) {
        holder.msRequestFullscreen();
      }
    }
  };
  DOMUtils2.prototype.handleFullscreenChange = function() {
    var _this = this;
    document.addEventListener("fullscreenchange", function() {
      var holderSelection = select_default2(_this.getHolder());
      var isFullScreen = holderSelection.classed("fullscreen");
      holderSelection.classed("fullscreen", !isFullScreen);
    });
  };
  DOMUtils2.prototype.verifyCSSStylesBeingApplied = function() {
    var _this = this;
    setTimeout(function() {
      var cssVerifierElement = select_default2(_this.mainContainer).select("g." + CSS_VERIFIER_ELEMENT_CLASSNAME).node();
      var computedStyles = getComputedStyle(cssVerifierElement);
      if (computedStyles.getPropertyValue("overflow") !== "hidden" || computedStyles.getPropertyValue("opacity") !== "0") {
        console.error("Missing CSS styles for Carbon Charts. Please read the Carbon Charts getting started guide.");
      }
    });
  };
  DOMUtils2.prototype.setSVGMaxHeight = function() {
    if (!this.model.getOptions().height) {
      var chartHeight = DOMUtils2.getSVGElementSize(select_default2(this.mainContainer), { useBBox: true }).height;
      var chartSVGSelector = select_default2(this.mainContainer).attr("class");
      var children2 = select_default2(this.mainContainer).selectAll("." + chartSVGSelector + " > svg");
      var childrenHeight_1 = 0;
      children2.nodes().forEach(function(childSVG) {
        childrenHeight_1 += Number(DOMUtils2.getSVGElementSize(select_default2(childSVG), {
          useBBox: true
        }).height);
      });
      childrenHeight_1 <= chartHeight ? select_default2(this.mainContainer).attr("height", childrenHeight_1) : select_default2(this.mainContainer).attr("height", "100%");
    }
  };
  DOMUtils2.prototype.getMainContainer = function() {
    return this.mainContainer;
  };
  DOMUtils2.prototype.addHolderListeners = function() {
    var _this = this;
    var holder = this.getHolder();
    if (!holder) {
      return;
    }
    select_default2(holder).on("mouseover", function() {
      _this.services.events.dispatchEvent(Events.Chart.MOUSEOVER);
    }).on("mouseout", function() {
      _this.services.events.dispatchEvent(Events.Chart.MOUSEOUT);
    });
  };
  DOMUtils2.prototype.addResizeListener = function() {
    var _this = this;
    var holder = this.getHolder();
    if (!holder) {
      return;
    }
    var containerWidth = holder.clientWidth;
    var containerHeight = holder.clientHeight;
    var resizeCallback = Tools.debounce(function(entries, observer) {
      if (!holder) {
        return;
      }
      if (Math.abs(containerWidth - holder.clientWidth) > 1 || Math.abs(containerHeight - holder.clientHeight) > 1) {
        containerWidth = holder.clientWidth;
        containerHeight = holder.clientHeight;
        _this.services.events.dispatchEvent(Events.Chart.RESIZE);
      }
    }, 12.5);
    var resizeObserver = new ResizeObserver_es_default(resizeCallback);
    resizeObserver.observe(holder);
  };
  return DOMUtils2;
}(Service);

// node_modules/@carbon/charts/services/essentials/events.js
var __extends2 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Events2 = function(_super) {
  __extends2(Events3, _super);
  function Events3() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Events3.prototype.init = function() {
    this.documentFragment = document.createDocumentFragment();
  };
  Events3.prototype.addEventListener = function(type2, listener) {
    this.documentFragment.addEventListener(type2, listener);
  };
  Events3.prototype.removeEventListener = function(type2, listener) {
    this.documentFragment.removeEventListener(type2, listener);
  };
  Events3.prototype.dispatchEvent = function(eventType, eventDetail) {
    var newEvent;
    if (eventDetail) {
      newEvent = new CustomEvent(eventType, {
        detail: eventDetail
      });
    } else {
      newEvent = document.createEvent("Event");
      newEvent.initEvent(eventType, false, true);
    }
    this.documentFragment.dispatchEvent(newEvent);
  };
  return Events3;
}(Service);

// node_modules/@carbon/charts/services/essentials/files.js
var __extends3 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Files = function(_super) {
  __extends3(Files2, _super);
  function Files2(model, services) {
    return _super.call(this, model, services) || this;
  }
  Files2.prototype.downloadCSV = function(content, filename) {
    var anchor = document.createElement("a");
    var mimeType = "text/csv;encoding:utf-8";
    if (navigator["msSaveBlob"]) {
      navigator["msSaveBlob"](new Blob([content], {
        type: mimeType
      }), filename);
    } else if (URL && "download" in anchor) {
      var href = URL.createObjectURL(new Blob([content], {
        type: mimeType
      }));
      anchor.href = href;
      anchor.setAttribute("download", filename);
      document.body.appendChild(anchor);
      anchor.click();
      document.body.removeChild(anchor);
      URL.revokeObjectURL(href);
    } else {
      location.href = "data:application/octet-stream," + encodeURIComponent(content);
    }
  };
  Files2.prototype.downloadImage = function(uri, name) {
    var link3 = document.createElement("a");
    link3.download = name;
    link3.href = uri;
    document.body.appendChild(link3);
    link3.click();
    document.body.removeChild(link3);
  };
  return Files2;
}(Service);

// node_modules/@carbon/charts/services/essentials/transitions.js
var __extends4 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Transitions = function(_super) {
  __extends4(Transitions2, _super);
  function Transitions2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.pendingTransitions = {};
    return _this;
  }
  Transitions2.prototype.init = function() {
    var _this = this;
    this.services.events.addEventListener(Events.Model.UPDATE, function() {
      _this.pendingTransitions = {};
    });
  };
  Transitions2.prototype.setupTransition = function(_a4) {
    var _this = this;
    var t = _a4.transition, name = _a4.name, animate = _a4.animate;
    this.pendingTransitions[t._id] = t;
    t.on("end interrupt cancel", function() {
      delete _this.pendingTransitions[t._id];
    });
    if (this.model.getOptions().animations === false || animate === false) {
      return t.duration(0);
    }
    return t.duration(Tools.getProperty(transitions, name, "duration") || transitions.default.duration);
  };
  Transitions2.prototype.getPendingTransitions = function() {
    return this.pendingTransitions;
  };
  return Transitions2;
}(Service);

// node_modules/@carbon/charts/services/essentials/gradient-utils.js
var __extends5 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var GradientUtils = function(_super) {
  __extends5(GradientUtils2, _super);
  function GradientUtils2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  GradientUtils2.appendOrUpdateLinearGradient = function(configs) {
    var lg = configs.svg.select("defs linearGradient#" + configs.id);
    if (lg.empty()) {
      lg = configs.svg.append("defs").append("linearGradient").attr("id", configs.id).attr("x1", configs.x1).attr("x2", configs.x2).attr("y1", configs.y1).attr("y2", configs.y2);
    }
    lg.selectAll("stop").remove();
    lg.selectAll("stop").data(configs.stops).enter().append("stop").attr("offset", function(d) {
      return d.offset;
    }).style("stop-color", function(d) {
      return d.color;
    }).style("stop-opacity", function(d) {
      return d.opacity;
    });
  };
  GradientUtils2.getOffsetRatio = function(domain) {
    var offsetRatio = (Math.abs(domain[1]) * 100 / Math.abs(domain[0] - domain[1])).toFixed(2) + "%";
    return offsetRatio;
  };
  GradientUtils2.getStops = function(domain, color3) {
    var need3Stops = domain[0] < 0 && domain[1] > 0;
    var stops = [
      {
        offset: "0%",
        color: color3,
        opacity: "0.6"
      },
      {
        offset: "80%",
        color: color3,
        opacity: "0"
      }
    ];
    if (need3Stops) {
      stops = [
        {
          offset: "0%",
          color: color3,
          opacity: "0.6"
        },
        {
          offset: GradientUtils2.getOffsetRatio(domain),
          color: color3,
          opacity: "0"
        },
        {
          offset: "100%",
          color: color3,
          opacity: "0.6"
        }
      ];
    }
    return stops;
  };
  return GradientUtils2;
}(Service);

// node_modules/date-fns/esm/toDate/index.js
function toDate(argument) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  }
  var argStr = Object.prototype.toString.call(argument);
  if (argument instanceof Date || typeof argument === "object" && argStr === "[object Date]") {
    return new Date(argument.getTime());
  } else if (typeof argument === "number" || argStr === "[object Number]") {
    return new Date(argument);
  } else {
    if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule");
      console.warn(new Error().stack);
    }
    return new Date(NaN);
  }
}

// node_modules/date-fns/esm/_lib/toInteger/index.js
function toInteger2(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number5 = Number(dirtyNumber);
  if (isNaN(number5)) {
    return number5;
  }
  return number5 < 0 ? Math.ceil(number5) : Math.floor(number5);
}

// node_modules/date-fns/esm/addDays/index.js
function addDays(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var date2 = toDate(dirtyDate);
  var amount = toInteger2(dirtyAmount);
  date2.setDate(date2.getDate() + amount);
  return date2;
}

// node_modules/date-fns/esm/addMilliseconds/index.js
function addMilliseconds(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var timestamp = toDate(dirtyDate).getTime();
  var amount = toInteger2(dirtyAmount);
  return new Date(timestamp + amount);
}

// node_modules/date-fns/esm/addHours/index.js
var MILLISECONDS_IN_HOUR = 36e5;
function addHours(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var amount = toInteger2(dirtyAmount);
  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);
}

// node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
var MILLISECONDS_IN_MINUTE = 6e4;
function getTimezoneOffsetInMilliseconds(dirtyDate) {
  var date2 = new Date(dirtyDate.getTime());
  var baseTimezoneOffset = Math.ceil(date2.getTimezoneOffset());
  date2.setSeconds(0, 0);
  var millisecondsPartOfTimezoneOffset = date2.getTime() % MILLISECONDS_IN_MINUTE;
  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;
}

// node_modules/date-fns/esm/startOfDay/index.js
function startOfDay(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  }
  var date2 = toDate(dirtyDate);
  date2.setHours(0, 0, 0, 0);
  return date2;
}

// node_modules/date-fns/esm/differenceInCalendarDays/index.js
var MILLISECONDS_IN_DAY = 864e5;
function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var startOfDayLeft = startOfDay(dirtyDateLeft);
  var startOfDayRight = startOfDay(dirtyDateRight);
  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);
  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight);
  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
}

// node_modules/date-fns/esm/addMinutes/index.js
var MILLISECONDS_IN_MINUTE2 = 6e4;
function addMinutes(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var amount = toInteger2(dirtyAmount);
  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE2);
}

// node_modules/date-fns/esm/getDaysInMonth/index.js
function getDaysInMonth(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  }
  var date2 = toDate(dirtyDate);
  var year2 = date2.getFullYear();
  var monthIndex = date2.getMonth();
  var lastDayOfMonth2 = new Date(0);
  lastDayOfMonth2.setFullYear(year2, monthIndex + 1, 0);
  lastDayOfMonth2.setHours(0, 0, 0, 0);
  return lastDayOfMonth2.getDate();
}

// node_modules/date-fns/esm/addMonths/index.js
function addMonths(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var date2 = toDate(dirtyDate);
  var amount = toInteger2(dirtyAmount);
  var desiredMonth = date2.getMonth() + amount;
  var dateWithDesiredMonth = new Date(0);
  dateWithDesiredMonth.setFullYear(date2.getFullYear(), desiredMonth, 1);
  dateWithDesiredMonth.setHours(0, 0, 0, 0);
  var daysInMonth = getDaysInMonth(dateWithDesiredMonth);
  date2.setMonth(desiredMonth, Math.min(daysInMonth, date2.getDate()));
  return date2;
}

// node_modules/date-fns/esm/addSeconds/index.js
function addSeconds(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var amount = toInteger2(dirtyAmount);
  return addMilliseconds(dirtyDate, amount * 1e3);
}

// node_modules/date-fns/esm/addYears/index.js
function addYears(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var amount = toInteger2(dirtyAmount);
  return addMonths(dirtyDate, amount * 12);
}

// node_modules/date-fns/esm/compareAsc/index.js
function compareAsc(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var diff = dateLeft.getTime() - dateRight.getTime();
  if (diff < 0) {
    return -1;
  } else if (diff > 0) {
    return 1;
  } else {
    return diff;
  }
}

// node_modules/date-fns/esm/isValid/index.js
function isValid(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  }
  var date2 = toDate(dirtyDate);
  return !isNaN(date2);
}

// node_modules/date-fns/esm/differenceInCalendarMonths/index.js
function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
  return yearDiff * 12 + monthDiff;
}

// node_modules/date-fns/esm/differenceInCalendarYears/index.js
function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() - dateRight.getFullYear();
}

// node_modules/date-fns/esm/differenceInDays/index.js
function differenceInDays(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var sign3 = compareAsc(dateLeft, dateRight);
  var difference4 = Math.abs(differenceInCalendarDays(dateLeft, dateRight));
  dateLeft.setDate(dateLeft.getDate() - sign3 * difference4);
  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign3;
  var result2 = sign3 * (difference4 - isLastDayNotFull);
  return result2 === 0 ? 0 : result2;
}

// node_modules/date-fns/esm/differenceInMilliseconds/index.js
function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getTime() - dateRight.getTime();
}

// node_modules/date-fns/esm/differenceInHours/index.js
var MILLISECONDS_IN_HOUR2 = 36e5;
function differenceInHours(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR2;
  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}

// node_modules/date-fns/esm/differenceInMinutes/index.js
var MILLISECONDS_IN_MINUTE3 = 6e4;
function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE3;
  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}

// node_modules/date-fns/esm/differenceInMonths/index.js
function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var sign3 = compareAsc(dateLeft, dateRight);
  var difference4 = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));
  dateLeft.setMonth(dateLeft.getMonth() - sign3 * difference4);
  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign3;
  var result2 = sign3 * (difference4 - isLastMonthNotFull);
  return result2 === 0 ? 0 : result2;
}

// node_modules/date-fns/esm/differenceInSeconds/index.js
function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1e3;
  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}

// node_modules/date-fns/esm/differenceInYears/index.js
function differenceInYears(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var sign3 = compareAsc(dateLeft, dateRight);
  var difference4 = Math.abs(differenceInCalendarYears(dateLeft, dateRight));
  dateLeft.setFullYear(dateLeft.getFullYear() - sign3 * difference4);
  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign3;
  var result2 = sign3 * (difference4 - isLastYearNotFull);
  return result2 === 0 ? 0 : result2;
}

// node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "less than a second",
    other: "less than {{count}} seconds"
  },
  xSeconds: {
    one: "1 second",
    other: "{{count}} seconds"
  },
  halfAMinute: "half a minute",
  lessThanXMinutes: {
    one: "less than a minute",
    other: "less than {{count}} minutes"
  },
  xMinutes: {
    one: "1 minute",
    other: "{{count}} minutes"
  },
  aboutXHours: {
    one: "about 1 hour",
    other: "about {{count}} hours"
  },
  xHours: {
    one: "1 hour",
    other: "{{count}} hours"
  },
  xDays: {
    one: "1 day",
    other: "{{count}} days"
  },
  aboutXMonths: {
    one: "about 1 month",
    other: "about {{count}} months"
  },
  xMonths: {
    one: "1 month",
    other: "{{count}} months"
  },
  aboutXYears: {
    one: "about 1 year",
    other: "about {{count}} years"
  },
  xYears: {
    one: "1 year",
    other: "{{count}} years"
  },
  overXYears: {
    one: "over 1 year",
    other: "over {{count}} years"
  },
  almostXYears: {
    one: "almost 1 year",
    other: "almost {{count}} years"
  }
};
function formatDistance(token, count4, options2) {
  options2 = options2 || {};
  var result2;
  if (typeof formatDistanceLocale[token] === "string") {
    result2 = formatDistanceLocale[token];
  } else if (count4 === 1) {
    result2 = formatDistanceLocale[token].one;
  } else {
    result2 = formatDistanceLocale[token].other.replace("{{count}}", count4);
  }
  if (options2.addSuffix) {
    if (options2.comparison > 0) {
      return "in " + result2;
    } else {
      return result2 + " ago";
    }
  }
  return result2;
}

// node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
function buildFormatLongFn(args) {
  return function(dirtyOptions) {
    var options2 = dirtyOptions || {};
    var width = options2.width ? String(options2.width) : args.defaultWidth;
    var format3 = args.formats[width] || args.formats[args.defaultWidth];
    return format3;
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js
var dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy"
};
var timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a"
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}"
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: "full"
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: "full"
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: "full"
  })
};
var formatLong_default = formatLong;

// node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: "P"
};
function formatRelative(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
}

// node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
function buildLocalizeFn(args) {
  return function(dirtyIndex, dirtyOptions) {
    var options2 = dirtyOptions || {};
    var context = options2.context ? String(options2.context) : "standalone";
    var valuesArray;
    if (context === "formatting" && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options2.width ? String(options2.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options2.width ? String(options2.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index4 = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index4];
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js
var eraValues = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"]
};
var quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
};
var monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
  wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
};
var dayValues = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
};
var dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  }
};
function ordinalNumber(dirtyNumber, _dirtyOptions) {
  var number5 = Number(dirtyNumber);
  var rem100 = number5 % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number5 + "st";
      case 2:
        return number5 + "nd";
      case 3:
        return number5 + "rd";
    }
  }
  return number5 + "th";
}
var localize = {
  ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: function(quarter) {
      return Number(quarter) - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: "wide"
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide"
  })
};
var localize_default = localize;

// node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
function buildMatchPatternFn(args) {
  return function(dirtyString, dirtyOptions) {
    var string = String(dirtyString);
    var options2 = dirtyOptions || {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult) {
      return null;
    }
    var value2 = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value2 = options2.valueCallback ? options2.valueCallback(value2) : value2;
    return {
      value: value2,
      rest: string.slice(matchedString.length)
    };
  };
}

// node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
function buildMatchFn(args) {
  return function(dirtyString, dirtyOptions) {
    var string = String(dirtyString);
    var options2 = dirtyOptions || {};
    var width = options2.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var value2;
    if (Object.prototype.toString.call(parsePatterns) === "[object Array]") {
      value2 = findIndex2(parsePatterns, function(pattern) {
        return pattern.test(string);
      });
    } else {
      value2 = findKey2(parsePatterns, function(pattern) {
        return pattern.test(string);
      });
    }
    value2 = args.valueCallback ? args.valueCallback(value2) : value2;
    value2 = options2.valueCallback ? options2.valueCallback(value2) : value2;
    return {
      value: value2,
      rest: string.slice(matchedString.length)
    };
  };
}
function findKey2(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
}
function findIndex2(array4, predicate) {
  for (var key = 0; key < array4.length; key++) {
    if (predicate(array4[key])) {
      return key;
    }
  }
}

// node_modules/date-fns/esm/locale/en-US/_lib/match/index.js
var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function(value2) {
      return parseInt(value2, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function(index4) {
      return index4 + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};
var match_default = match;

// node_modules/date-fns/esm/locale/en-US/index.js
var locale3 = {
  code: "en-US",
  formatDistance,
  formatLong: formatLong_default,
  formatRelative,
  localize: localize_default,
  match: match_default,
  options: {
    weekStartsOn: 0,
    firstWeekContainsDate: 1
  }
};
var en_US_default = locale3;

// node_modules/date-fns/esm/subMilliseconds/index.js
function subMilliseconds(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var amount = toInteger2(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount);
}

// node_modules/date-fns/esm/_lib/addLeadingZeros/index.js
function addLeadingZeros(number5, targetLength) {
  var sign3 = number5 < 0 ? "-" : "";
  var output = Math.abs(number5).toString();
  while (output.length < targetLength) {
    output = "0" + output;
  }
  return sign3 + output;
}

// node_modules/date-fns/esm/_lib/format/lightFormatters/index.js
var formatters = {
  y: function(date2, token) {
    var signedYear = date2.getUTCFullYear();
    var year2 = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === "yy" ? year2 % 100 : year2, token.length);
  },
  M: function(date2, token) {
    var month2 = date2.getUTCMonth();
    return token === "M" ? String(month2 + 1) : addLeadingZeros(month2 + 1, 2);
  },
  d: function(date2, token) {
    return addLeadingZeros(date2.getUTCDate(), token.length);
  },
  a: function(date2, token) {
    var dayPeriodEnumValue = date2.getUTCHours() / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
      case "aaa":
        return dayPeriodEnumValue.toUpperCase();
      case "aaaaa":
        return dayPeriodEnumValue[0];
      case "aaaa":
      default:
        return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
    }
  },
  h: function(date2, token) {
    return addLeadingZeros(date2.getUTCHours() % 12 || 12, token.length);
  },
  H: function(date2, token) {
    return addLeadingZeros(date2.getUTCHours(), token.length);
  },
  m: function(date2, token) {
    return addLeadingZeros(date2.getUTCMinutes(), token.length);
  },
  s: function(date2, token) {
    return addLeadingZeros(date2.getUTCSeconds(), token.length);
  },
  S: function(date2, token) {
    var numberOfDigits = token.length;
    var milliseconds2 = date2.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds2 * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, token.length);
  }
};
var lightFormatters_default = formatters;

// node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js
var MILLISECONDS_IN_DAY2 = 864e5;
function getUTCDayOfYear(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  }
  var date2 = toDate(dirtyDate);
  var timestamp = date2.getTime();
  date2.setUTCMonth(0, 1);
  date2.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date2.getTime();
  var difference4 = timestamp - startOfYearTimestamp;
  return Math.floor(difference4 / MILLISECONDS_IN_DAY2) + 1;
}

// node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js
function startOfUTCISOWeek(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  }
  var weekStartsOn = 1;
  var date2 = toDate(dirtyDate);
  var day2 = date2.getUTCDay();
  var diff = (day2 < weekStartsOn ? 7 : 0) + day2 - weekStartsOn;
  date2.setUTCDate(date2.getUTCDate() - diff);
  date2.setUTCHours(0, 0, 0, 0);
  return date2;
}

// node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js
function getUTCISOWeekYear(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  }
  var date2 = toDate(dirtyDate);
  var year2 = date2.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year2 + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year2, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
  if (date2.getTime() >= startOfNextYear.getTime()) {
    return year2 + 1;
  } else if (date2.getTime() >= startOfThisYear.getTime()) {
    return year2;
  } else {
    return year2 - 1;
  }
}

// node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js
function startOfUTCISOWeekYear(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  }
  var year2 = getUTCISOWeekYear(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setUTCFullYear(year2, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date2 = startOfUTCISOWeek(fourthOfJanuary);
  return date2;
}

// node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js
var MILLISECONDS_IN_WEEK = 6048e5;
function getUTCISOWeek(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  }
  var date2 = toDate(dirtyDate);
  var diff = startOfUTCISOWeek(date2).getTime() - startOfUTCISOWeekYear(date2).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

// node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js
function startOfUTCWeek(dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  }
  var options2 = dirtyOptions || {};
  var locale4 = options2.locale;
  var localeWeekStartsOn = locale4 && locale4.options && locale4.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger2(localeWeekStartsOn);
  var weekStartsOn = options2.weekStartsOn == null ? defaultWeekStartsOn : toInteger2(options2.weekStartsOn);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date2 = toDate(dirtyDate);
  var day2 = date2.getUTCDay();
  var diff = (day2 < weekStartsOn ? 7 : 0) + day2 - weekStartsOn;
  date2.setUTCDate(date2.getUTCDate() - diff);
  date2.setUTCHours(0, 0, 0, 0);
  return date2;
}

// node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js
function getUTCWeekYear(dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  }
  var date2 = toDate(dirtyDate, dirtyOptions);
  var year2 = date2.getUTCFullYear();
  var options2 = dirtyOptions || {};
  var locale4 = options2.locale;
  var localeFirstWeekContainsDate = locale4 && locale4.options && locale4.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger2(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options2.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger2(options2.firstWeekContainsDate);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year2 + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year2, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);
  if (date2.getTime() >= startOfNextYear.getTime()) {
    return year2 + 1;
  } else if (date2.getTime() >= startOfThisYear.getTime()) {
    return year2;
  } else {
    return year2 - 1;
  }
}

// node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js
function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  }
  var options2 = dirtyOptions || {};
  var locale4 = options2.locale;
  var localeFirstWeekContainsDate = locale4 && locale4.options && locale4.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger2(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options2.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger2(options2.firstWeekContainsDate);
  var year2 = getUTCWeekYear(dirtyDate, dirtyOptions);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year2, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date2 = startOfUTCWeek(firstWeek, dirtyOptions);
  return date2;
}

// node_modules/date-fns/esm/_lib/getUTCWeek/index.js
var MILLISECONDS_IN_WEEK2 = 6048e5;
function getUTCWeek(dirtyDate, options2) {
  if (arguments.length < 1) {
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  }
  var date2 = toDate(dirtyDate);
  var diff = startOfUTCWeek(date2, options2).getTime() - startOfUTCWeekYear(date2, options2).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK2) + 1;
}

// node_modules/date-fns/esm/_lib/format/formatters/index.js
var dayPeriodEnum = {
  am: "am",
  pm: "pm",
  midnight: "midnight",
  noon: "noon",
  morning: "morning",
  afternoon: "afternoon",
  evening: "evening",
  night: "night"
};
var formatters2 = {
  G: function(date2, token, localize2) {
    var era = date2.getUTCFullYear() > 0 ? 1 : 0;
    switch (token) {
      case "G":
      case "GG":
      case "GGG":
        return localize2.era(era, {
          width: "abbreviated"
        });
      case "GGGGG":
        return localize2.era(era, {
          width: "narrow"
        });
      case "GGGG":
      default:
        return localize2.era(era, {
          width: "wide"
        });
    }
  },
  y: function(date2, token, localize2) {
    if (token === "yo") {
      var signedYear = date2.getUTCFullYear();
      var year2 = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize2.ordinalNumber(year2, {
        unit: "year"
      });
    }
    return lightFormatters_default.y(date2, token);
  },
  Y: function(date2, token, localize2, options2) {
    var signedWeekYear = getUTCWeekYear(date2, options2);
    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
    if (token === "YY") {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    }
    if (token === "Yo") {
      return localize2.ordinalNumber(weekYear, {
        unit: "year"
      });
    }
    return addLeadingZeros(weekYear, token.length);
  },
  R: function(date2, token) {
    var isoWeekYear = getUTCISOWeekYear(date2);
    return addLeadingZeros(isoWeekYear, token.length);
  },
  u: function(date2, token) {
    var year2 = date2.getUTCFullYear();
    return addLeadingZeros(year2, token.length);
  },
  Q: function(date2, token, localize2) {
    var quarter = Math.ceil((date2.getUTCMonth() + 1) / 3);
    switch (token) {
      case "Q":
        return String(quarter);
      case "QQ":
        return addLeadingZeros(quarter, 2);
      case "Qo":
        return localize2.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "QQQ":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "formatting"
        });
      case "QQQQQ":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "formatting"
        });
      case "QQQQ":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  q: function(date2, token, localize2) {
    var quarter = Math.ceil((date2.getUTCMonth() + 1) / 3);
    switch (token) {
      case "q":
        return String(quarter);
      case "qq":
        return addLeadingZeros(quarter, 2);
      case "qo":
        return localize2.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "qqq":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "standalone"
        });
      case "qqqqq":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "standalone"
        });
      case "qqqq":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  M: function(date2, token, localize2) {
    var month2 = date2.getUTCMonth();
    switch (token) {
      case "M":
      case "MM":
        return lightFormatters_default.M(date2, token);
      case "Mo":
        return localize2.ordinalNumber(month2 + 1, {
          unit: "month"
        });
      case "MMM":
        return localize2.month(month2, {
          width: "abbreviated",
          context: "formatting"
        });
      case "MMMMM":
        return localize2.month(month2, {
          width: "narrow",
          context: "formatting"
        });
      case "MMMM":
      default:
        return localize2.month(month2, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  L: function(date2, token, localize2) {
    var month2 = date2.getUTCMonth();
    switch (token) {
      case "L":
        return String(month2 + 1);
      case "LL":
        return addLeadingZeros(month2 + 1, 2);
      case "Lo":
        return localize2.ordinalNumber(month2 + 1, {
          unit: "month"
        });
      case "LLL":
        return localize2.month(month2, {
          width: "abbreviated",
          context: "standalone"
        });
      case "LLLLL":
        return localize2.month(month2, {
          width: "narrow",
          context: "standalone"
        });
      case "LLLL":
      default:
        return localize2.month(month2, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  w: function(date2, token, localize2, options2) {
    var week = getUTCWeek(date2, options2);
    if (token === "wo") {
      return localize2.ordinalNumber(week, {
        unit: "week"
      });
    }
    return addLeadingZeros(week, token.length);
  },
  I: function(date2, token, localize2) {
    var isoWeek = getUTCISOWeek(date2);
    if (token === "Io") {
      return localize2.ordinalNumber(isoWeek, {
        unit: "week"
      });
    }
    return addLeadingZeros(isoWeek, token.length);
  },
  d: function(date2, token, localize2) {
    if (token === "do") {
      return localize2.ordinalNumber(date2.getUTCDate(), {
        unit: "date"
      });
    }
    return lightFormatters_default.d(date2, token);
  },
  D: function(date2, token, localize2) {
    var dayOfYear = getUTCDayOfYear(date2);
    if (token === "Do") {
      return localize2.ordinalNumber(dayOfYear, {
        unit: "dayOfYear"
      });
    }
    return addLeadingZeros(dayOfYear, token.length);
  },
  E: function(date2, token, localize2) {
    var dayOfWeek = date2.getUTCDay();
    switch (token) {
      case "E":
      case "EE":
      case "EEE":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "EEEEE":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "EEEEEE":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "EEEE":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  e: function(date2, token, localize2, options2) {
    var dayOfWeek = date2.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options2.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "e":
        return String(localDayOfWeek);
      case "ee":
        return addLeadingZeros(localDayOfWeek, 2);
      case "eo":
        return localize2.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "eee":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "eeeee":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "eeeeee":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "eeee":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  c: function(date2, token, localize2, options2) {
    var dayOfWeek = date2.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options2.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "c":
        return String(localDayOfWeek);
      case "cc":
        return addLeadingZeros(localDayOfWeek, token.length);
      case "co":
        return localize2.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "ccc":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "standalone"
        });
      case "ccccc":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "standalone"
        });
      case "cccccc":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "standalone"
        });
      case "cccc":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  i: function(date2, token, localize2) {
    var dayOfWeek = date2.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      case "i":
        return String(isoDayOfWeek);
      case "ii":
        return addLeadingZeros(isoDayOfWeek, token.length);
      case "io":
        return localize2.ordinalNumber(isoDayOfWeek, {
          unit: "day"
        });
      case "iii":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "iiiii":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "iiiiii":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "iiii":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  a: function(date2, token, localize2) {
    var hours2 = date2.getUTCHours();
    var dayPeriodEnumValue = hours2 / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
      case "aaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "aaaaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "aaaa":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  b: function(date2, token, localize2) {
    var hours2 = date2.getUTCHours();
    var dayPeriodEnumValue;
    if (hours2 === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours2 === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours2 / 12 >= 1 ? "pm" : "am";
    }
    switch (token) {
      case "b":
      case "bb":
      case "bbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "bbbbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "bbbb":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  B: function(date2, token, localize2) {
    var hours2 = date2.getUTCHours();
    var dayPeriodEnumValue;
    if (hours2 >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours2 >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours2 >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }
    switch (token) {
      case "B":
      case "BB":
      case "BBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "BBBBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "BBBB":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  h: function(date2, token, localize2) {
    if (token === "ho") {
      var hours2 = date2.getUTCHours() % 12;
      if (hours2 === 0)
        hours2 = 12;
      return localize2.ordinalNumber(hours2, {
        unit: "hour"
      });
    }
    return lightFormatters_default.h(date2, token);
  },
  H: function(date2, token, localize2) {
    if (token === "Ho") {
      return localize2.ordinalNumber(date2.getUTCHours(), {
        unit: "hour"
      });
    }
    return lightFormatters_default.H(date2, token);
  },
  K: function(date2, token, localize2) {
    var hours2 = date2.getUTCHours() % 12;
    if (token === "Ko") {
      return localize2.ordinalNumber(hours2, {
        unit: "hour"
      });
    }
    return addLeadingZeros(hours2, token.length);
  },
  k: function(date2, token, localize2) {
    var hours2 = date2.getUTCHours();
    if (hours2 === 0)
      hours2 = 24;
    if (token === "ko") {
      return localize2.ordinalNumber(hours2, {
        unit: "hour"
      });
    }
    return addLeadingZeros(hours2, token.length);
  },
  m: function(date2, token, localize2) {
    if (token === "mo") {
      return localize2.ordinalNumber(date2.getUTCMinutes(), {
        unit: "minute"
      });
    }
    return lightFormatters_default.m(date2, token);
  },
  s: function(date2, token, localize2) {
    if (token === "so") {
      return localize2.ordinalNumber(date2.getUTCSeconds(), {
        unit: "second"
      });
    }
    return lightFormatters_default.s(date2, token);
  },
  S: function(date2, token) {
    return lightFormatters_default.S(date2, token);
  },
  X: function(date2, token, _localize, options2) {
    var originalDate = options2._originalDate || date2;
    var timezoneOffset = originalDate.getTimezoneOffset();
    if (timezoneOffset === 0) {
      return "Z";
    }
    switch (token) {
      case "X":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "XXXX":
      case "XX":
        return formatTimezone(timezoneOffset);
      case "XXXXX":
      case "XXX":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  x: function(date2, token, _localize, options2) {
    var originalDate = options2._originalDate || date2;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "x":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "xxxx":
      case "xx":
        return formatTimezone(timezoneOffset);
      case "xxxxx":
      case "xxx":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  O: function(date2, token, _localize, options2) {
    var originalDate = options2._originalDate || date2;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "O":
      case "OO":
      case "OOO":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "OOOO":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  z: function(date2, token, _localize, options2) {
    var originalDate = options2._originalDate || date2;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "z":
      case "zz":
      case "zzz":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "zzzz":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  t: function(date2, token, _localize, options2) {
    var originalDate = options2._originalDate || date2;
    var timestamp = Math.floor(originalDate.getTime() / 1e3);
    return addLeadingZeros(timestamp, token.length);
  },
  T: function(date2, token, _localize, options2) {
    var originalDate = options2._originalDate || date2;
    var timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length);
  }
};
function formatTimezoneShort(offset, dirtyDelimiter) {
  var sign3 = offset > 0 ? "-" : "+";
  var absOffset = Math.abs(offset);
  var hours2 = Math.floor(absOffset / 60);
  var minutes2 = absOffset % 60;
  if (minutes2 === 0) {
    return sign3 + String(hours2);
  }
  var delimiter = dirtyDelimiter || "";
  return sign3 + String(hours2) + delimiter + addLeadingZeros(minutes2, 2);
}
function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
  if (offset % 60 === 0) {
    var sign3 = offset > 0 ? "-" : "+";
    return sign3 + addLeadingZeros(Math.abs(offset) / 60, 2);
  }
  return formatTimezone(offset, dirtyDelimiter);
}
function formatTimezone(offset, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || "";
  var sign3 = offset > 0 ? "-" : "+";
  var absOffset = Math.abs(offset);
  var hours2 = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes2 = addLeadingZeros(absOffset % 60, 2);
  return sign3 + hours2 + delimiter + minutes2;
}
var formatters_default = formatters2;

// node_modules/date-fns/esm/_lib/format/longFormatters/index.js
function dateLongFormatter(pattern, formatLong2) {
  switch (pattern) {
    case "P":
      return formatLong2.date({
        width: "short"
      });
    case "PP":
      return formatLong2.date({
        width: "medium"
      });
    case "PPP":
      return formatLong2.date({
        width: "long"
      });
    case "PPPP":
    default:
      return formatLong2.date({
        width: "full"
      });
  }
}
function timeLongFormatter(pattern, formatLong2) {
  switch (pattern) {
    case "p":
      return formatLong2.time({
        width: "short"
      });
    case "pp":
      return formatLong2.time({
        width: "medium"
      });
    case "ppp":
      return formatLong2.time({
        width: "long"
      });
    case "pppp":
    default:
      return formatLong2.time({
        width: "full"
      });
  }
}
function dateTimeLongFormatter(pattern, formatLong2) {
  var matchResult = pattern.match(/(P+)(p+)?/);
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];
  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong2);
  }
  var dateTimeFormat;
  switch (datePattern) {
    case "P":
      dateTimeFormat = formatLong2.dateTime({
        width: "short"
      });
      break;
    case "PP":
      dateTimeFormat = formatLong2.dateTime({
        width: "medium"
      });
      break;
    case "PPP":
      dateTimeFormat = formatLong2.dateTime({
        width: "long"
      });
      break;
    case "PPPP":
    default:
      dateTimeFormat = formatLong2.dateTime({
        width: "full"
      });
      break;
  }
  return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong2)).replace("{{time}}", timeLongFormatter(timePattern, formatLong2));
}
var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};
var longFormatters_default = longFormatters;

// node_modules/date-fns/esm/_lib/protectedTokens/index.js
var protectedDayOfYearTokens = ["D", "DD"];
var protectedWeekYearTokens = ["YY", "YYYY"];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token) {
  if (token === "YYYY") {
    throw new RangeError("Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr");
  } else if (token === "YY") {
    throw new RangeError("Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr");
  } else if (token === "D") {
    throw new RangeError("Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr");
  } else if (token === "DD") {
    throw new RangeError("Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr");
  }
}

// node_modules/date-fns/esm/format/index.js
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
function format2(dirtyDate, dirtyFormatStr, dirtyOptions) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var formatStr = String(dirtyFormatStr);
  var options2 = dirtyOptions || {};
  var locale4 = options2.locale || en_US_default;
  var localeFirstWeekContainsDate = locale4.options && locale4.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger2(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options2.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger2(options2.firstWeekContainsDate);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var localeWeekStartsOn = locale4.options && locale4.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger2(localeWeekStartsOn);
  var weekStartsOn = options2.weekStartsOn == null ? defaultWeekStartsOn : toInteger2(options2.weekStartsOn);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  if (!locale4.localize) {
    throw new RangeError("locale must contain localize property");
  }
  if (!locale4.formatLong) {
    throw new RangeError("locale must contain formatLong property");
  }
  var originalDate = toDate(dirtyDate);
  if (!isValid(originalDate)) {
    throw new RangeError("Invalid time value");
  }
  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
  var utcDate2 = subMilliseconds(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale: locale4,
    _originalDate: originalDate
  };
  var result2 = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
    var firstCharacter = substring[0];
    if (firstCharacter === "p" || firstCharacter === "P") {
      var longFormatter = longFormatters_default[firstCharacter];
      return longFormatter(substring, locale4.formatLong, formatterOptions);
    }
    return substring;
  }).join("").match(formattingTokensRegExp).map(function(substring) {
    if (substring === "''") {
      return "'";
    }
    var firstCharacter = substring[0];
    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }
    var formatter = formatters_default[firstCharacter];
    if (formatter) {
      if (!options2.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {
        throwProtectedError(substring);
      }
      if (!options2.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {
        throwProtectedError(substring);
      }
      return formatter(utcDate2, substring, locale4.localize, formatterOptions);
    }
    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
    }
    return substring;
  }).join("");
  return result2;
}
function cleanEscapedString(input) {
  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}

// node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js
var MILLISECONDS_IN_DAY3 = 24 * 60 * 60 * 1e3;

// node_modules/date-fns/esm/subDays/index.js
function subDays(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var amount = toInteger2(dirtyAmount);
  return addDays(dirtyDate, -amount);
}

// node_modules/date-fns/esm/subHours/index.js
function subHours(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var amount = toInteger2(dirtyAmount);
  return addHours(dirtyDate, -amount);
}

// node_modules/date-fns/esm/subMinutes/index.js
function subMinutes(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var amount = toInteger2(dirtyAmount);
  return addMinutes(dirtyDate, -amount);
}

// node_modules/date-fns/esm/subMonths/index.js
function subMonths(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var amount = toInteger2(dirtyAmount);
  return addMonths(dirtyDate, -amount);
}

// node_modules/date-fns/esm/subSeconds/index.js
function subSeconds(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var amount = toInteger2(dirtyAmount);
  return addSeconds(dirtyDate, -amount);
}

// node_modules/date-fns/esm/subYears/index.js
function subYears(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError("2 arguments required, but only " + arguments.length + " present");
  }
  var amount = toInteger2(dirtyAmount);
  return addYears(dirtyDate, -amount);
}

// node_modules/date-fns/esm/constants/index.js
var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;
var minTime = -maxTime;

// node_modules/@carbon/charts/services/scales-cartesian.js
var __extends6 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __rest = function(s3, e) {
  var t = {};
  for (var p in s3)
    if (Object.prototype.hasOwnProperty.call(s3, p) && e.indexOf(p) < 0)
      t[p] = s3[p];
  if (s3 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s3); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s3, p[i]))
        t[p[i]] = s3[p[i]];
    }
  return t;
};
var __spreadArrays2 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var CartesianScales = function(_super) {
  __extends6(CartesianScales2, _super);
  function CartesianScales2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.scaleTypes = {
      top: null,
      right: null,
      bottom: null,
      left: null
    };
    _this.scales = {
      top: null,
      right: null,
      bottom: null,
      left: null
    };
    return _this;
  }
  CartesianScales2.prototype.getDomainAxisPosition = function(_a4) {
    var _b = (_a4 === void 0 ? {} : _a4).datum, datum2 = _b === void 0 ? null : _b;
    var _c;
    if (this.dualAxes && datum2) {
      var options2 = this.model.getOptions();
      var groupMapsTo = options2.data.groupMapsTo;
      var axesOptions = Tools.getProperty(options2, "axes", this.secondaryDomainAxisPosition);
      var dataset = datum2[groupMapsTo];
      if (((_c = axesOptions) === null || _c === void 0 ? void 0 : _c.correspondingDatasets) && axesOptions.correspondingDatasets.includes(dataset)) {
        return this.secondaryDomainAxisPosition;
      }
    }
    return this.domainAxisPosition;
  };
  CartesianScales2.prototype.getRangeAxisPosition = function(_a4) {
    var _b = _a4 === void 0 ? {} : _a4, _c = _b.datum, datum2 = _c === void 0 ? null : _c, _d = _b.groups, groups3 = _d === void 0 ? null : _d;
    var _e;
    if (this.dualAxes) {
      var options2 = this.model.getOptions();
      var groupMapsTo = options2.data.groupMapsTo;
      var axisOptions = Tools.getProperty(options2, "axes", this.secondaryRangeAxisPosition);
      var dataset = void 0;
      if (datum2 !== null) {
        dataset = datum2[groupMapsTo];
      } else if (groups3 && groups3.length > 0) {
        dataset = groups3[0];
      }
      if (((_e = axisOptions) === null || _e === void 0 ? void 0 : _e.correspondingDatasets) && axisOptions.correspondingDatasets.includes(dataset)) {
        return this.secondaryRangeAxisPosition;
      }
    }
    return this.rangeAxisPosition;
  };
  CartesianScales2.prototype.getAxisOptions = function(position2) {
    return Tools.getProperty(this.model.getOptions(), "axes", position2);
  };
  CartesianScales2.prototype.getDomainAxisOptions = function() {
    var domainAxisPosition = this.getDomainAxisPosition();
    return this.getAxisOptions(domainAxisPosition);
  };
  CartesianScales2.prototype.getRangeAxisOptions = function() {
    var rangeAxisPosition = this.getRangeAxisPosition();
    return this.getAxisOptions(rangeAxisPosition);
  };
  CartesianScales2.prototype.getScaleLabel = function(position2) {
    var axisOptions = this.getAxisOptions(position2);
    var title = axisOptions.title;
    if (!title) {
      if (position2 === AxisPositions.BOTTOM || position2 === AxisPositions.TOP) {
        return "x-value";
      }
      return "y-value";
    }
    return title;
  };
  CartesianScales2.prototype.getDomainLabel = function() {
    return this.getScaleLabel(this.getDomainAxisPosition());
  };
  CartesianScales2.prototype.getRangeLabel = function() {
    return this.getScaleLabel(this.getRangeAxisPosition());
  };
  CartesianScales2.prototype.update = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    this.determineAxisDuality();
    this.findDomainAndRangeAxes();
    this.determineOrientation();
    var axisPositions = Object.keys(AxisPositions).map(function(axisPositionKey) {
      return AxisPositions[axisPositionKey];
    });
    axisPositions.forEach(function(axisPosition) {
      _this.scales[axisPosition] = _this.createScale(axisPosition);
    });
  };
  CartesianScales2.prototype.findDomainAndRangeAxes = function() {
    var verticalAxesPositions = this.findVerticalAxesPositions();
    var horizontalAxesPositions = this.findHorizontalAxesPositions();
    var domainAndRangeAxesPositions = this.findDomainAndRangeAxesPositions(verticalAxesPositions, horizontalAxesPositions);
    this.domainAxisPosition = domainAndRangeAxesPositions.primaryDomainAxisPosition;
    this.rangeAxisPosition = domainAndRangeAxesPositions.primaryRangeAxisPosition;
    if (this.isDualAxes()) {
      this.secondaryDomainAxisPosition = domainAndRangeAxesPositions.secondaryDomainAxisPosition;
      this.secondaryRangeAxisPosition = domainAndRangeAxesPositions.secondaryRangeAxisPosition;
    }
  };
  CartesianScales2.prototype.determineOrientation = function() {
    if ((this.rangeAxisPosition === AxisPositions.LEFT || this.rangeAxisPosition === AxisPositions.RIGHT) && (this.domainAxisPosition === AxisPositions.BOTTOM || this.domainAxisPosition === AxisPositions.TOP)) {
      this.orientation = CartesianOrientations.VERTICAL;
    } else {
      this.orientation = CartesianOrientations.HORIZONTAL;
    }
  };
  CartesianScales2.prototype.isDualAxes = function() {
    return this.dualAxes;
  };
  CartesianScales2.prototype.determineAxisDuality = function() {
    var _a4, _b, _c, _d;
    var options2 = this.model.getOptions();
    var axesOptions = Tools.getProperty(options2, "axes");
    if (((_a4 = axesOptions[AxisPositions.LEFT]) === null || _a4 === void 0 ? void 0 : _a4.correspondingDatasets) && axesOptions[AxisPositions.RIGHT] || ((_b = axesOptions[AxisPositions.RIGHT]) === null || _b === void 0 ? void 0 : _b.correspondingDatasets) && axesOptions[AxisPositions.LEFT] || ((_c = axesOptions[AxisPositions.TOP]) === null || _c === void 0 ? void 0 : _c.correspondingDatasets) && axesOptions[AxisPositions.BOTTOM] || ((_d = axesOptions[AxisPositions.BOTTOM]) === null || _d === void 0 ? void 0 : _d.correspondingDatasets) && axesOptions[AxisPositions.TOP]) {
      this.dualAxes = true;
    }
  };
  CartesianScales2.prototype.getCustomDomainValuesByposition = function(axisPosition) {
    var domain = Tools.getProperty(this.model.getOptions(), "axes", axisPosition, "domain");
    if (domain && !Array.isArray(domain)) {
      throw new Error("Domain in " + axisPosition + " axis is not a valid array");
    }
    if (Array.isArray(domain)) {
      if ((this.scaleTypes[axisPosition] === ScaleTypes.LINEAR || this.scaleTypes[axisPosition] === ScaleTypes.TIME) && domain.length !== 2) {
        throw new Error("There can only be 2 elements in domain for scale type: " + this.scaleTypes[axisPosition]);
      }
    }
    return domain;
  };
  CartesianScales2.prototype.getOrientation = function() {
    return this.orientation;
  };
  CartesianScales2.prototype.getScaleByPosition = function(axisPosition) {
    return this.scales[axisPosition];
  };
  CartesianScales2.prototype.getScaleTypeByPosition = function(axisPosition) {
    return this.scaleTypes[axisPosition];
  };
  CartesianScales2.prototype.getDomainAxisScaleType = function() {
    var domainAxisPosition = this.getDomainAxisPosition();
    return this.getScaleTypeByPosition(domainAxisPosition);
  };
  CartesianScales2.prototype.getRangeAxisScaleType = function() {
    var rangeAxisPosition = this.getRangeAxisPosition();
    return this.getScaleTypeByPosition(rangeAxisPosition);
  };
  CartesianScales2.prototype.getDomainScale = function() {
    return this.scales[this.domainAxisPosition];
  };
  CartesianScales2.prototype.getRangeScale = function() {
    return this.scales[this.rangeAxisPosition];
  };
  CartesianScales2.prototype.getMainXAxisPosition = function() {
    var possibleXAxisPositions = [
      AxisPositions.BOTTOM,
      AxisPositions.TOP
    ];
    return [this.domainAxisPosition, this.rangeAxisPosition].find(function(position2) {
      return possibleXAxisPositions.indexOf(position2) > -1;
    });
  };
  CartesianScales2.prototype.getMainYAxisPosition = function() {
    var possibleYAxisPositions = [
      AxisPositions.LEFT,
      AxisPositions.RIGHT
    ];
    return [this.domainAxisPosition, this.rangeAxisPosition].find(function(position2) {
      return possibleYAxisPositions.indexOf(position2) > -1;
    });
  };
  CartesianScales2.prototype.getMainXScale = function() {
    return this.scales[this.getMainXAxisPosition()];
  };
  CartesianScales2.prototype.getMainYScale = function() {
    return this.scales[this.getMainYAxisPosition()];
  };
  CartesianScales2.prototype.getValueFromScale = function(scale, scaleType, axisPosition, datum2, index4) {
    var options2 = this.model.getOptions();
    var axesOptions = Tools.getProperty(options2, "axes");
    var axisOptions = axesOptions[axisPosition];
    var mapsTo = axisOptions.mapsTo;
    var value2 = Tools.getProperty(datum2, mapsTo) !== null ? datum2[mapsTo] : datum2;
    var scaledValue;
    switch (scaleType) {
      case ScaleTypes.LABELS:
        scaledValue = scale(value2) + scale.step() / 2;
        break;
      case ScaleTypes.TIME:
        scaledValue = scale(new Date(value2));
        break;
      default:
        scaledValue = scale(value2);
    }
    return scaledValue;
  };
  CartesianScales2.prototype.getBoundedScaledValues = function(datum2, index4) {
    var bounds = this.model.getOptions().bounds;
    var axisPosition = this.getRangeAxisPosition({ datum: datum2 });
    var scale = this.scales[axisPosition];
    var options2 = this.model.getOptions();
    var axesOptions = Tools.getProperty(options2, "axes");
    var axisOptions = axesOptions[axisPosition];
    var mapsTo = axisOptions.mapsTo;
    var value2 = datum2[mapsTo] !== void 0 ? datum2[mapsTo] : datum2;
    var boundedValues = [
      scale(Tools.getProperty(datum2, bounds.upperBoundMapsTo) !== null ? datum2[bounds.upperBoundMapsTo] : value2),
      scale(Tools.getProperty(datum2, bounds.lowerBoundMapsTo) !== null ? datum2[bounds.lowerBoundMapsTo] : value2)
    ];
    return boundedValues;
  };
  CartesianScales2.prototype.getValueThroughAxisPosition = function(axisPosition, datum2, index4) {
    var scaleType = this.scaleTypes[axisPosition];
    var scale = this.scales[axisPosition];
    return this.getValueFromScale(scale, scaleType, axisPosition, datum2, index4);
  };
  CartesianScales2.prototype.getDomainValue = function(d, i) {
    var axisPosition = this.getDomainAxisPosition({ datum: d });
    return this.getValueThroughAxisPosition(axisPosition, d, i);
  };
  CartesianScales2.prototype.getRangeValue = function(d, i) {
    var axisPosition = this.getRangeAxisPosition({ datum: d });
    return this.getValueThroughAxisPosition(axisPosition, d, i);
  };
  CartesianScales2.prototype.getMainXScaleType = function() {
    return this.getScaleTypeByPosition(this.getMainXAxisPosition());
  };
  CartesianScales2.prototype.getMainYScaleType = function() {
    return this.getScaleTypeByPosition(this.getMainYAxisPosition());
  };
  CartesianScales2.prototype.getDomainIdentifier = function(datum2) {
    var options2 = this.model.getOptions();
    return Tools.getProperty(options2, "axes", this.getDomainAxisPosition({ datum: datum2 }), "mapsTo");
  };
  CartesianScales2.prototype.getRangeIdentifier = function(datum2) {
    var options2 = this.model.getOptions();
    return Tools.getProperty(options2, "axes", this.getRangeAxisPosition({ datum: datum2 }), "mapsTo");
  };
  CartesianScales2.prototype.extendsDomain = function(axisPosition, domain) {
    var options2 = this.model.getOptions();
    var axisOptions = Tools.getProperty(options2, "axes", axisPosition);
    if (axisOptions.scaleType === ScaleTypes.TIME) {
      var spaceToAddToEdges = Tools.getProperty(options2, "timeScale", "addSpaceOnEdges");
      return addSpacingToTimeDomain(domain, spaceToAddToEdges);
    } else {
      return addSpacingToContinuousDomain(domain, axis.paddingRatio, axisOptions.scaleType);
    }
  };
  CartesianScales2.prototype.findVerticalAxesPositions = function() {
    var options2 = this.model.getOptions();
    var axesOptions = Tools.getProperty(options2, "axes");
    var dualAxes = this.isDualAxes();
    if (Tools.getProperty(axesOptions, AxisPositions.LEFT) === null && Tools.getProperty(axesOptions, AxisPositions.RIGHT) !== null || Tools.getProperty(axesOptions, AxisPositions.RIGHT, "main") === true || dualAxes && Tools.getProperty(axesOptions, AxisPositions.LEFT, "correspondingDatasets")) {
      return {
        primary: AxisPositions.RIGHT,
        secondary: AxisPositions.LEFT
      };
    }
    return { primary: AxisPositions.LEFT, secondary: AxisPositions.RIGHT };
  };
  CartesianScales2.prototype.findHorizontalAxesPositions = function() {
    var options2 = this.model.getOptions();
    var axesOptions = Tools.getProperty(options2, "axes");
    var dualAxes = this.isDualAxes();
    if (Tools.getProperty(axesOptions, AxisPositions.BOTTOM) === null && Tools.getProperty(axesOptions, AxisPositions.TOP) !== null || Tools.getProperty(axesOptions, AxisPositions.TOP, "main") === true || dualAxes && Tools.getProperty(axesOptions, AxisPositions.BOTTOM, "correspondingDatasets")) {
      return {
        primary: AxisPositions.TOP,
        secondary: AxisPositions.BOTTOM
      };
    }
    return { primary: AxisPositions.BOTTOM, secondary: AxisPositions.TOP };
  };
  CartesianScales2.prototype.findDomainAndRangeAxesPositions = function(verticalAxesPositions, horizontalAxesPositions) {
    var options2 = this.model.getOptions();
    var mainVerticalAxisOptions = Tools.getProperty(options2, "axes", verticalAxesPositions.primary);
    var mainHorizontalAxisOptions = Tools.getProperty(options2, "axes", horizontalAxesPositions.primary);
    var mainVerticalScaleType = mainVerticalAxisOptions.scaleType || ScaleTypes.LINEAR;
    var mainHorizontalScaleType = mainHorizontalAxisOptions.scaleType || ScaleTypes.LINEAR;
    var result2 = {
      primaryDomainAxisPosition: null,
      secondaryDomainAxisPosition: null,
      primaryRangeAxisPosition: null,
      secondaryRangeAxisPosition: null
    };
    result2.primaryDomainAxisPosition = horizontalAxesPositions.primary;
    result2.primaryRangeAxisPosition = verticalAxesPositions.primary;
    result2.secondaryDomainAxisPosition = horizontalAxesPositions.secondary;
    result2.secondaryRangeAxisPosition = verticalAxesPositions.secondary;
    if (!(mainHorizontalScaleType === ScaleTypes.LABELS || mainHorizontalScaleType === ScaleTypes.TIME) && mainVerticalScaleType === ScaleTypes.LABELS || mainVerticalScaleType === ScaleTypes.TIME) {
      result2.primaryDomainAxisPosition = verticalAxesPositions.primary;
      result2.primaryRangeAxisPosition = horizontalAxesPositions.primary;
      result2.secondaryDomainAxisPosition = verticalAxesPositions.secondary;
      result2.secondaryRangeAxisPosition = horizontalAxesPositions.secondary;
    }
    return result2;
  };
  CartesianScales2.prototype.getScaleDomain = function(axisPosition) {
    var options2 = this.model.getOptions();
    var axisOptions = Tools.getProperty(options2, "axes", axisPosition);
    var bounds = Tools.getProperty(options2, "bounds");
    var includeZero = axisOptions.includeZero;
    var scaleType = Tools.getProperty(axisOptions, "scaleType") || ScaleTypes.LINEAR;
    if (this.model.isDataEmpty()) {
      return [];
    }
    if (axisOptions.binned) {
      var bins = this.model.getBinConfigurations().bins;
      return [0, max2(bins, function(d) {
        return d.length;
      })];
    } else if (axisOptions.limitDomainToBins) {
      var bins = this.model.getBinConfigurations().bins;
      var stackKeys = this.model.getStackKeys({ bins });
      return [
        stackKeys[0].split("-")[0],
        stackKeys[stackKeys.length - 1].split("-")[1]
      ];
    }
    var displayData = this.model.getDisplayData();
    var extendLinearDomainBy = axisOptions.extendLinearDomainBy, mapsTo = axisOptions.mapsTo, percentage = axisOptions.percentage, thresholds = axisOptions.thresholds;
    var _a4 = axis.ratio, ratioReference = _a4.reference, ratioCompareTo = _a4.compareTo;
    if (axisOptions.domain) {
      if (scaleType === ScaleTypes.LABELS) {
        return axisOptions.domain;
      } else if (scaleType === ScaleTypes.TIME) {
        axisOptions.domain = axisOptions.domain.map(function(d) {
          return d.getTime === void 0 ? new Date(d) : d;
        });
      }
      return this.extendsDomain(axisPosition, axisOptions.domain);
    }
    if (percentage) {
      return [0, 100];
    }
    if (axisOptions && scaleType === ScaleTypes.LABELS) {
      return Tools.removeArrayDuplicates(displayData.map(function(d) {
        return d[mapsTo];
      }));
    }
    var domain;
    var allDataValues;
    var dataGroupNames = this.model.getDataGroupNames();
    if (scaleType === ScaleTypes.LABELS_RATIO) {
      return displayData.map(function(datum2) {
        return datum2[ratioReference] + "/" + datum2[ratioCompareTo];
      });
    } else if (scaleType === ScaleTypes.TIME) {
      allDataValues = displayData.map(function(datum2) {
        return +new Date(datum2[mapsTo]);
      });
    } else if (bounds && options2.axes) {
      allDataValues = [];
      displayData.forEach(function(datum2) {
        allDataValues.push(datum2[mapsTo]);
        if (datum2[bounds.upperBoundMapsTo]) {
          allDataValues.push(datum2[bounds.upperBoundMapsTo]);
        }
        if (datum2[bounds.lowerBoundMapsTo]) {
          allDataValues.push(datum2[bounds.lowerBoundMapsTo]);
        }
      });
    } else if (axisOptions.stacked === true && dataGroupNames && axisPosition === this.getRangeAxisPosition()) {
      var groupMapsTo_1 = options2.data.groupMapsTo;
      var dataValuesGroupedByKeys = this.model.getDataValuesGroupedByKeys({
        groups: dataGroupNames
      });
      var nonStackedGroupsData = displayData.filter(function(datum2) {
        return !dataGroupNames.includes(datum2[groupMapsTo_1]);
      });
      var stackedValues_1 = [];
      dataValuesGroupedByKeys.forEach(function(dataValues) {
        var sharedStackKey = dataValues.sharedStackKey, numericalValues = __rest(dataValues, ["sharedStackKey"]);
        var positiveSum = 0, negativeSum = 0;
        Object.values(numericalValues).forEach(function(value2) {
          if (!isNaN(value2)) {
            if (value2 < 0) {
              negativeSum += value2;
            } else {
              positiveSum += value2;
            }
          }
        });
        stackedValues_1.push([negativeSum, positiveSum]);
      });
      allDataValues = __spreadArrays2(Tools.flatten(stackedValues_1), nonStackedGroupsData.map(function(datum2) {
        return datum2[mapsTo];
      }));
    } else {
      allDataValues = [];
      displayData.forEach(function(datum2) {
        var value2 = datum2[mapsTo];
        if (Array.isArray(value2) && value2.length === 2) {
          allDataValues.push(value2[0]);
          allDataValues.push(value2[1]);
        } else {
          if (extendLinearDomainBy) {
            allDataValues.push(Math.max(datum2[mapsTo], datum2[extendLinearDomainBy]));
          }
          allDataValues.push(value2);
        }
      });
    }
    if (scaleType !== ScaleTypes.TIME && scaleType !== ScaleTypes.LOG && includeZero) {
      allDataValues.push(0);
    }
    if (thresholds && thresholds.length > 0) {
      thresholds.forEach(function(threshold2) {
        var thresholdValue = Tools.getProperty(threshold2, "value");
        if (thresholdValue !== null)
          allDataValues.push(thresholdValue);
      });
    }
    domain = extent(allDataValues);
    domain = this.extendsDomain(axisPosition, domain);
    return domain;
  };
  CartesianScales2.prototype.createScale = function(axisPosition) {
    var options2 = this.model.getOptions();
    var axisOptions = Tools.getProperty(options2, "axes", axisPosition);
    if (!axisOptions) {
      return null;
    }
    var scaleType = Tools.getProperty(axisOptions, "scaleType") || ScaleTypes.LINEAR;
    this.scaleTypes[axisPosition] = scaleType;
    var scale;
    if (scaleType === ScaleTypes.TIME) {
      scale = time();
    } else if (scaleType === ScaleTypes.LOG) {
      scale = log().base(axisOptions.base || 10);
    } else if (scaleType === ScaleTypes.LABELS || scaleType === ScaleTypes.LABELS_RATIO) {
      scale = band();
    } else {
      scale = linear3();
    }
    scale.domain(this.getScaleDomain(axisPosition));
    return scale;
  };
  CartesianScales2.prototype.getHighestDomainThreshold = function() {
    var axesOptions = Tools.getProperty(this.model.getOptions(), "axes");
    var domainAxisPosition = this.getDomainAxisPosition();
    var thresholds = axesOptions[domainAxisPosition].thresholds;
    if (!Array.isArray(thresholds) || Array.isArray(thresholds) && !thresholds.length) {
      return null;
    }
    var domainScale = this.getDomainScale();
    var highestThreshold = thresholds.sort(function(a3, b) {
      return b.value - a3.value;
    })[0];
    var scaleType = this.getScaleTypeByPosition(domainAxisPosition);
    if (scaleType === ScaleTypes.TIME && (typeof highestThreshold.value === "string" || highestThreshold.value.getTime === void 0)) {
      highestThreshold.value = new Date(highestThreshold.value);
    }
    return {
      threshold: highestThreshold,
      scaleValue: domainScale(highestThreshold.value)
    };
  };
  CartesianScales2.prototype.getHighestRangeThreshold = function() {
    var axesOptions = Tools.getProperty(this.model.getOptions(), "axes");
    var rangeAxisPosition = this.getRangeAxisPosition();
    var thresholds = axesOptions[rangeAxisPosition].thresholds;
    if (!Array.isArray(thresholds) || Array.isArray(thresholds) && !thresholds.length) {
      return null;
    }
    var rangeScale = this.getRangeScale();
    var highestThreshold = thresholds.sort(function(a3, b) {
      return b.value - a3.value;
    })[0];
    return {
      threshold: highestThreshold,
      scaleValue: rangeScale(highestThreshold.value)
    };
  };
  return CartesianScales2;
}(Service);
function addSpacingToTimeDomain(domain, spaceToAddToEdges) {
  var startDate = new Date(domain[0]);
  var endDate = new Date(domain[1]);
  if (differenceInYears(endDate, startDate) > 1) {
    return [
      subYears(startDate, spaceToAddToEdges),
      addYears(endDate, spaceToAddToEdges)
    ];
  }
  if (differenceInMonths(endDate, startDate) > 1) {
    return [
      subMonths(startDate, spaceToAddToEdges),
      addMonths(endDate, spaceToAddToEdges)
    ];
  }
  if (differenceInDays(endDate, startDate) > 1) {
    return [
      subDays(startDate, spaceToAddToEdges),
      addDays(endDate, spaceToAddToEdges)
    ];
  }
  if (differenceInHours(endDate, startDate) > 1) {
    return [
      subHours(startDate, spaceToAddToEdges),
      addHours(endDate, spaceToAddToEdges)
    ];
  }
  if (differenceInMinutes(endDate, startDate) > 30) {
    return [
      subMinutes(startDate, spaceToAddToEdges * 30),
      addMinutes(endDate, spaceToAddToEdges * 30)
    ];
  }
  if (differenceInMinutes(endDate, startDate) > 1) {
    return [
      subMinutes(startDate, spaceToAddToEdges),
      addMinutes(endDate, spaceToAddToEdges)
    ];
  }
  if (differenceInSeconds(endDate, startDate) > 15) {
    return [
      subSeconds(startDate, spaceToAddToEdges * 15),
      addSeconds(endDate, spaceToAddToEdges * 15)
    ];
  }
  if (differenceInSeconds(endDate, startDate) > 1) {
    return [
      subSeconds(startDate, spaceToAddToEdges),
      addSeconds(endDate, spaceToAddToEdges)
    ];
  }
  return [startDate, endDate];
}
function addSpacingToContinuousDomain(_a4, paddingRatio, scaleType) {
  var lower2 = _a4[0], upper = _a4[1];
  var domainLength = upper - lower2;
  var padding = domainLength * paddingRatio;
  var newUpper = upper <= 0 && upper + padding > 0 ? 0 : upper + padding;
  var newLower = lower2 >= 0 && lower2 - padding < 0 ? 0 : lower2 - padding;
  if (scaleType === ScaleTypes.LOG && newLower <= 0) {
    if (lower2 <= 0) {
      throw Error("Data must have values greater than 0 if log scale type is used.");
    }
    newLower = lower2;
  }
  return [newLower, newUpper];
}

// node_modules/@carbon/charts/services/curves.js
var __extends7 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Curves = function(_super) {
  __extends7(Curves2, _super);
  function Curves2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.curveTypes = {
      curveLinear: linear_default,
      curveLinearClosed: linearClosed_default,
      curveBasis: basis_default2,
      curveBasisClosed: basisClosed_default2,
      curveBasisOpen: basisOpen_default,
      curveBundle: bundle_default,
      curveCardinal: cardinal_default,
      curveCardinalClosed: cardinalClosed_default,
      curveCardinalOpen: cardinalOpen_default,
      curveCatmullRom: catmullRom_default,
      curveCatmullRomClosed: catmullRomClosed_default,
      curveCatmullRomOpen: catmullRomOpen_default,
      curveMonotoneX: monotoneX,
      curveMonotoneY: monotoneY,
      curveNatural: natural_default,
      curveStep: step_default,
      curveStepAfter: stepAfter,
      curveStepBefore: stepBefore
    };
    return _this;
  }
  Curves2.prototype.getD3Curve = function() {
    var curveName = "curveLinear";
    var curveOptions = this.model.getOptions().curve;
    if (curveOptions) {
      if (typeof curveOptions === "string") {
        curveName = curveOptions;
      } else {
        curveName = curveOptions.name;
      }
    }
    if (this.curveTypes[curveName]) {
      var curve_1 = this.curveTypes[curveName];
      if (curveOptions) {
        Object.keys(curveOptions).forEach(function(optionName) {
          if (curve_1[optionName]) {
            curve_1 = curve_1[optionName](curveOptions[optionName]);
          }
        });
      }
      return curve_1;
    }
    console.warn("The curve type '" + curveName + "' is invalid, using 'curveLinear' instead");
    return this.curveTypes["curveLinear"];
  };
  return Curves2;
}(Service);

// node_modules/@carbon/charts/services/zoom.js
var __extends8 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Zoom = function(_super) {
  __extends8(Zoom2, _super);
  function Zoom2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Zoom2.prototype.isZoomBarEnabled = function() {
    if (!this.services.cartesianScales) {
      return false;
    }
    if (!Tools.getProperty(this.model.getOptions(), "zoomBar", "top", "enabled")) {
      return false;
    }
    this.services.cartesianScales.findDomainAndRangeAxes();
    var mainXAxisPosition = this.services.cartesianScales.getMainXAxisPosition();
    var mainXScaleType = Tools.getProperty(this.model.getOptions(), "axes", mainXAxisPosition, "scaleType");
    return mainXAxisPosition === AxisPositions.BOTTOM && mainXScaleType === ScaleTypes.TIME;
  };
  Zoom2.prototype.getZoomBarData = function() {
    var customZoomBarData = this.model.getZoomBarData();
    if (customZoomBarData && customZoomBarData.length > 1) {
      return customZoomBarData;
    } else {
      return this.model.getDisplayData();
    }
  };
  Zoom2.prototype.getDefaultZoomBarDomain = function(zoomBarData) {
    var allZoomBarData = zoomBarData || this.services.zoom.getZoomBarData();
    var cartesianScales = this.services.cartesianScales;
    var mainXAxisPosition = cartesianScales.getMainXAxisPosition();
    var domainIdentifier = cartesianScales.getDomainIdentifier();
    var customDomain = Tools.getProperty(this.model.getOptions(), "axes", mainXAxisPosition, "domain");
    if (Array.isArray(customDomain) && customDomain.length === 2) {
      return customDomain;
    }
    return cartesianScales.extendsDomain(mainXAxisPosition, extent(allZoomBarData, function(d) {
      return d[domainIdentifier];
    }));
  };
  Zoom2.prototype.handleDomainChange = function(newDomain, configs) {
    if (configs === void 0) {
      configs = { dispatchEvent: true };
    }
    this.model.set({ zoomDomain: newDomain }, { animate: false });
    if (configs.dispatchEvent) {
      this.services.events.dispatchEvent(Events.ZoomDomain.CHANGE, {
        newDomain
      });
    }
  };
  Zoom2.prototype.getZoomRatio = function() {
    return Tools.getProperty(this.model.getOptions(), "zoomBar", "zoomRatio");
  };
  Zoom2.prototype.filterDataForRangeAxis = function(displayData, configs) {
    var zoomDomain = this.model.get("zoomDomain");
    var mergedConfigs = Object.assign({ stacked: false }, configs);
    var shouldUpdateRangeAxis = Tools.getProperty(this.model.getOptions(), "zoomBar", "updateRangeAxis");
    if (this.isZoomBarEnabled() && shouldUpdateRangeAxis && zoomDomain) {
      var domainIdentifier_1 = mergedConfigs.stacked ? "sharedStackKey" : this.services.cartesianScales.getDomainIdentifier();
      var filteredData = displayData.filter(function(datum2) {
        return new Date(datum2[domainIdentifier_1]) >= zoomDomain[0] && new Date(datum2[domainIdentifier_1]) <= zoomDomain[1];
      });
      if (filteredData.length > 0) {
        return filteredData;
      }
    }
    return displayData;
  };
  Zoom2.prototype.zoomIn = function(zoomRatio) {
    if (zoomRatio === void 0) {
      zoomRatio = this.getZoomRatio();
    }
    var currentZoomDomain = this.model.get("zoomDomain");
    var handleWidth = zoomBar.handleWidth;
    var xScale = this.services.cartesianScales.getMainXScale().copy();
    xScale.domain(this.getDefaultZoomBarDomain());
    var currentX0 = xScale(currentZoomDomain[0]);
    var currentX1 = xScale(currentZoomDomain[1]);
    if (currentX1 - currentX0 < handleWidth + 1) {
      return;
    }
    var fullRange = xScale.range();
    var gap = currentX1 - currentX0;
    var diff = Math.min((fullRange[1] - fullRange[0]) / 2 * (zoomRatio / 2), gap / 2);
    var newX0 = currentX0 + diff;
    var newX1 = currentX1 - diff;
    if (newX0 >= newX1) {
      newX0 = currentX0 + gap / 2 - handleWidth / 2;
      newX1 = currentX1 - gap / 2 + handleWidth / 2;
    }
    var newDomain = [xScale.invert(newX0), xScale.invert(newX1)];
    if (currentZoomDomain[0].valueOf() !== newDomain[0].valueOf() || currentZoomDomain[1].valueOf() !== newDomain[1].valueOf()) {
      this.handleDomainChange(newDomain);
    }
  };
  Zoom2.prototype.zoomOut = function(zoomRatio) {
    if (zoomRatio === void 0) {
      zoomRatio = this.getZoomRatio();
    }
    var currentZoomDomain = this.model.get("zoomDomain");
    var xScale = this.services.cartesianScales.getMainXScale().copy();
    xScale.domain(this.getDefaultZoomBarDomain());
    var currentX0 = xScale(currentZoomDomain[0]);
    var currentX1 = xScale(currentZoomDomain[1]);
    var fullRange = xScale.range();
    var diff = (fullRange[1] - fullRange[0]) / 2 * (zoomRatio / 2);
    var newX0 = Math.max(currentX0 - diff, fullRange[0]);
    var newX1 = Math.min(currentX1 + diff, fullRange[1]);
    var newDomain = [xScale.invert(newX0), xScale.invert(newX1)];
    if (currentZoomDomain[0].valueOf() !== newDomain[0].valueOf() || currentZoomDomain[1].valueOf() !== newDomain[1].valueOf()) {
      this.handleDomainChange(newDomain);
    }
  };
  Zoom2.prototype.resetZoomDomain = function() {
    var currentZoomDomain = this.model.get("zoomDomain");
    var newDomain = this.getDefaultZoomBarDomain();
    if (currentZoomDomain[0].valueOf() !== newDomain[0].valueOf() || currentZoomDomain[1].valueOf() !== newDomain[1].valueOf()) {
      this.handleDomainChange(newDomain);
    }
  };
  Zoom2.prototype.isMinZoomDomain = function() {
    var currentZoomDomain = this.model.get("zoomDomain");
    var maxZoomDomain = this.getDefaultZoomBarDomain();
    if (!currentZoomDomain || !maxZoomDomain) {
      return false;
    }
    var currentZoomDomainPeriod = currentZoomDomain[1].valueOf() - currentZoomDomain[0].valueOf();
    var maxZoomDomainPeriod = maxZoomDomain[1].valueOf() - maxZoomDomain[0].valueOf();
    var minZoomRatio = Tools.getProperty(this.model.getOptions(), "zoomBar", "minZoomRatio");
    if (currentZoomDomainPeriod / maxZoomDomainPeriod < minZoomRatio) {
      return true;
    }
    return false;
  };
  Zoom2.prototype.isMaxZoomDomain = function() {
    var currentZoomDomain = this.model.get("zoomDomain");
    var maxZoomDomain = this.getDefaultZoomBarDomain();
    if (currentZoomDomain && maxZoomDomain && currentZoomDomain[0].valueOf() === maxZoomDomain[0].valueOf() && currentZoomDomain[1].valueOf() === maxZoomDomain[1].valueOf()) {
      return true;
    }
    return false;
  };
  Zoom2.prototype.isEmptyState = function() {
    return this.getZoomBarData().length === 0;
  };
  Zoom2.prototype.isZoomBarLoading = function(position2) {
    return Tools.getProperty(this.model.getOptions(), "zoomBar", position2, "loading");
  };
  Zoom2.prototype.isZoomBarLocked = function(position2) {
    return Tools.getProperty(this.model.getOptions(), "zoomBar", position2, "locked");
  };
  return Zoom2;
}(Service);

// node_modules/@carbon/charts/services/canvas-zoom.js
var __extends9 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var CanvasZoom2 = function(_super) {
  __extends9(CanvasZoom3, _super);
  function CanvasZoom3() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  CanvasZoom3.prototype.zoomIn = function(focal, canvasElements, zoomSettings) {
    var x3;
    var y3;
    var zoomLevel;
    var settings2 = zoomSettings ? zoomSettings : canvasZoomSettings;
    if (focal) {
      x3 = focal.x;
      y3 = focal.y;
      zoomLevel = 2;
    }
    var _a4 = DOMUtils.getSVGElementSize(this.services.domUtils.getHolder(), {
      useClientDimensions: true
    }), width = _a4.width, height = _a4.height;
    canvasElements.transition().duration(settings2.duration).ease(settings2.ease).attr("transform", "translate(" + width / 2 + ", " + height / 2 + ") scale(" + zoomLevel + ") translate(" + -x3 + "," + -y3 + ")");
    this.services.events.dispatchEvent(Events.CanvasZoom.CANVAS_ZOOM_IN, {
      element: select_default2(focal)
    });
  };
  CanvasZoom3.prototype.zoomOut = function(canvasElements, zoomSettings) {
    var settings2 = zoomSettings ? zoomSettings : canvasZoomSettings;
    canvasElements.transition().duration(settings2.duration).ease(settings2.ease).attr("transform", "");
    this.services.events.dispatchEvent(Events.CanvasZoom.CANVAS_ZOOM_OUT);
  };
  return CanvasZoom3;
}(Service);

// node_modules/@carbon/charts/components/component.js
var Component = function() {
  function Component2(model, services, configs) {
    this.renderType = RenderTypes.HTML;
    this.configs = {};
    this.model = model;
    this.services = services;
    if (configs) {
      this.configs = configs;
      if (this.configs.id) {
        var chartprefix = Tools.getProperty(this.model.getOptions(), "style", "prefix");
        this.id = chartprefix + "--" + this.configs.id;
      }
    }
    if (!this.parent) {
      this.setParent(select_default2(this.services.domUtils.getMainContainer()));
    }
  }
  Component2.prototype.init = function() {
  };
  Component2.prototype.render = function(animate) {
    if (animate === void 0) {
      animate = true;
    }
    console.error("render() method is not implemented");
  };
  Component2.prototype.destroy = function() {
  };
  Component2.prototype.setModel = function(newObj) {
    this.model = newObj;
  };
  Component2.prototype.setServices = function(newObj) {
    this.services = newObj;
  };
  Component2.prototype.setParent = function(parent2) {
    var oldParent = this.parent;
    this.parent = parent2;
    if (oldParent && oldParent.node() === parent2.node()) {
      return;
    }
    if (this.type) {
      var chartprefix = Tools.getProperty(this.model.getOptions(), "style", "prefix");
      this.parent.classed(settings_default.prefix + "--" + chartprefix + "--" + this.type, true);
      if (oldParent) {
        oldParent.classed(settings_default.prefix + "--" + chartprefix + "--" + this.type, false);
      }
    }
  };
  Component2.prototype.getParent = function() {
    return this.parent;
  };
  Component2.prototype.getComponentContainer = function(configs) {
    if (configs === void 0) {
      configs = { withinChartClip: false };
    }
    if (this.type) {
      var chartprefix = Tools.getProperty(this.model.getOptions(), "style", "prefix");
      var idSelector = this.id ? "#" + this.id : "";
      var container = DOMUtils.appendOrSelect(this.parent, "" + (this.renderType === RenderTypes.SVG ? "svg" : "div") + idSelector + "." + settings_default.prefix + "--" + chartprefix + "--" + this.type);
      if (configs.withinChartClip) {
        var chartClipId = this.model.get("chartClipId");
        if (chartClipId) {
          var chartClipSelection = select_default2("#" + chartClipId);
          var chartClipRectSelection = chartClipSelection.select("rect");
          if (chartClipRectSelection.size() !== 0 && parseFloat(chartClipRectSelection.attr("height")) > 0) {
            container.attr("clip-path", "url(#" + chartClipId + ")");
          }
        }
      }
      return container.attr("width", "100%").attr("height", "100%");
    }
    return this.parent;
  };
  Component2.prototype.getOptions = function() {
    if (this.configs.options) {
      var options2 = Tools.merge({}, this.model.getOptions(), this.configs.options);
      return options2;
    }
    return this.model.getOptions();
  };
  return Component2;
}();

// node_modules/@carbon/charts/components/essentials/legend.js
var __extends10 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Legend2 = function(_super) {
  __extends10(Legend3, _super);
  function Legend3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "legend";
    _this.renderType = RenderTypes.HTML;
    return _this;
  }
  Legend3.prototype.render = function() {
    var _this = this;
    var options2 = this.getOptions();
    var legendOptions = Tools.getProperty(options2, "legend");
    var alignment = Tools.getProperty(legendOptions, "alignment");
    var legendOrientation = Tools.getProperty(options2, "legend", "orientation");
    var dataGroups = this.model.getDataGroups();
    var DISABLED = legend.items.status.DISABLED;
    var hasDeactivatedItems = dataGroups.some(function(dataGroup) {
      return dataGroup.status === DISABLED;
    });
    var userProvidedOrder = Tools.getProperty(legendOptions, "order");
    var svg = this.getComponentContainer().classed("center-aligned", alignment === Alignments.CENTER).classed("right-aligned", alignment === Alignments.RIGHT).classed(legendOrientation, true).classed("has-deactivated-items", hasDeactivatedItems).attr("role", Roles.GROUP).attr("aria-label", "Data groups").attr("data-name", "legend-items");
    if (userProvidedOrder) {
      dataGroups = this.sortDataGroups(dataGroups, userProvidedOrder);
    }
    var legendItems = svg.selectAll("div.legend-item").data(dataGroups, function(dataGroup) {
      return dataGroup.name;
    });
    var addedLegendItems = legendItems.enter().append("div").attr("class", "legend-item");
    addedLegendItems.merge(svg.selectAll("div.legend-item")).classed("active", function(d, i) {
      return d.status === legend.items.status.ACTIVE;
    });
    var legendClickable = Tools.getProperty(this.getOptions(), "legend", "clickable");
    svg.classed("clickable", legendClickable && dataGroups.length > 1);
    var checkboxRadius = legend.checkbox.radius;
    var addedCheckboxes = addedLegendItems.append("div").classed("checkbox", true);
    var allCheckboxes = addedCheckboxes.merge(legendItems.select("div.checkbox")).attr("role", Roles.CHECKBOX).attr("tabindex", legendClickable ? 0 : -1).attr("aria-labelledby", function(d, i) {
      return _this.services.domUtils.generateElementIDString("legend-datagroup-" + i + "-title");
    }).attr("aria-checked", function(_a4) {
      var status = _a4.status;
      return status === legend.items.status.ACTIVE;
    }).attr("width", checkboxRadius * 2).attr("height", checkboxRadius * 2).attr("class", function(d, i) {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.BACKGROUND],
        dataGroupName: d.name,
        originalClassName: "checkbox"
      });
    }).style("background", function(d) {
      return d.status === legend.items.status.ACTIVE ? _this.model.getFillColor(d.name) || _this.model.getStrokeColor(d.name) : null;
    }).classed("active", function(d, i) {
      return d.status === legend.items.status.ACTIVE;
    });
    var addedCheckIcons = addedCheckboxes.append("svg").attr("focusable", false).attr("preserveAspectRatio", "xMidYMid meet").attr("xmlns", "http://www.w3.org/2000/svg").attr("width", "11").attr("height", "11").attr("viewBox", "0 0 31 28").attr("aria-hidden", true).style("will-change", "transform").append("path").attr("d", "M13 21.2l-7.1-7.1-1.4 1.4 7.1 7.1L13 24 27.1 9.9l-1.4-1.5z");
    var addedLegendItemsText = addedLegendItems.append("p").merge(legendItems.select("p"));
    var additionalItemsOption = Tools.getProperty(options2, "legend", "additionalItems");
    if (additionalItemsOption && dataGroups.length) {
      var self_1 = this;
      var additionalItems = svg.selectAll("div.additional-item").data(additionalItemsOption);
      additionalItems.exit().remove();
      var addedAdditionalItems = additionalItems.enter().append("div").merge(additionalItems).classed("legend-item", true).classed("additional", true).attr("aria-labelledby", function(d, i) {
        return _this.services.domUtils.generateElementIDString("legend-datagroup-" + (allCheckboxes.size() + i) + "-title");
      });
      addedAdditionalItems.selectAll("*").remove();
      var previousType_1;
      var indexOfItem_1 = 1;
      addedAdditionalItems.append("svg").classed("icon", true).each(function(d, i) {
        var additionalItem = select_default2(this);
        if (!previousType_1 || previousType_1 != d.type) {
          previousType_1 = d.type;
          indexOfItem_1 = 1;
        } else {
          indexOfItem_1++;
        }
        self_1.addAdditionalItem(additionalItem, d, indexOfItem_1);
      });
      var addedAdditionalItemsText = addedAdditionalItems.append("p").merge(addedAdditionalItems.select("p"));
      this.truncateLegendText();
    }
    legendItems.exit().on("mouseover", null).on("click", null).on("mouseout", null).remove();
    if (legendClickable && addedLegendItems.size() > 1) {
      this.addEventListeners();
    }
  };
  Legend3.prototype.sortDataGroups = function(dataGroups, legendOrder) {
    dataGroups.sort(function(dataA, dataB) {
      return legendOrder.indexOf(dataA.name) - legendOrder.indexOf(dataB.name);
    });
    if (legendOrder.length < dataGroups.length) {
      var definedOrderIndex = dataGroups.length - legendOrder.length;
      var definedOrder = dataGroups.slice(definedOrderIndex);
      return definedOrder.concat(dataGroups.slice(0, definedOrderIndex));
    }
    return dataGroups;
  };
  Legend3.prototype.addAdditionalItem = function(additionalItem, itemConfig, indexOfItem) {
    var _a4 = legend.area, width = _a4.width, height = _a4.height;
    if (itemConfig.type === LegendItemType.RADIUS) {
      additionalItem.style("width", height + "px").style("height", height + "px");
    } else {
      additionalItem.style("width", width + "px").style("height", height + "px");
    }
    if (itemConfig.type === LegendItemType.RADIUS) {
      var _b = legend.radius, iconData = _b.iconData, fill2 = _b.fill, stroke = _b.stroke;
      var circleEnter = additionalItem.attr("fill", "none").selectAll("circle").data(iconData).enter();
      circleEnter.append("circle").classed("radius", true).attr("role", Roles.IMG).attr("aria-label", "radius").attr("cx", function(d) {
        return d.cx;
      }).attr("cy", function(d) {
        return d.cy;
      }).attr("r", function(d) {
        return d.r;
      }).style("fill", itemConfig.fill ? itemConfig.fill : fill2).style("stroke", itemConfig.stroke ? itemConfig.stroke : stroke);
    } else if (itemConfig.type === LegendItemType.LINE) {
      var lineConfig = legend.line;
      if (additionalItem.select("line.line").empty()) {
        additionalItem.append("line").classed("line-" + indexOfItem, true).attr("role", Roles.IMG).attr("aria-label", "line").attr("x1", 0).attr("y1", lineConfig.yPosition).attr("x2", width).attr("y2", lineConfig.yPosition).style("stroke", itemConfig.stroke ? itemConfig.stroke : lineConfig.stroke).style("stroke-width", lineConfig.strokeWidth);
      }
    } else if (itemConfig.type === LegendItemType.AREA) {
      if (additionalItem.select("rect.area").empty()) {
        additionalItem.append("rect").classed("area-" + indexOfItem, true).attr("role", Roles.IMG).attr("aria-label", "area").attr("width", width).attr("height", height).style("fill", indexOfItem > 3 && !itemConfig.fill ? legend.area.fill : itemConfig.fill).style("stroke", itemConfig.stroke);
      }
    } else if (itemConfig.type === LegendItemType.SIZE) {
      var _c = legend.size, iconData = _c.iconData, fill2 = _c.fill, stroke = _c.stroke;
      var sizeEnter = additionalItem.attr("fill", "none").attr("role", Roles.IMG).attr("aria-label", "size").selectAll("rect").data(iconData).enter();
      sizeEnter.append("rect").classed("size", true).attr("width", function(d) {
        return d.width;
      }).attr("height", function(d) {
        return d.height;
      }).attr("y", function(d) {
        return 0;
      }).style("fill", itemConfig.fill ? itemConfig.fill : fill2).style("stroke", itemConfig.stroke ? itemConfig.stroke : stroke).style("stroke-width", 1);
    } else if (itemConfig.type === LegendItemType.QUARTILE) {
      var iconData = legend.quartile.iconData;
      var quartileEnter = additionalItem.selectAll("rect").attr("role", Roles.IMG).attr("aria-label", "quartile").data(iconData).enter();
      quartileEnter.append("rect").attr("class", function(d, i) {
        return "quartile-" + (i === 0 ? "wrapper" : "line");
      }).attr("x", function(d) {
        return d.x;
      }).attr("y", function(d) {
        return d.y;
      }).attr("width", function(d) {
        return d.width;
      }).attr("height", function(d) {
        return d.height;
      });
    } else if (itemConfig.type === LegendItemType.ZOOM) {
      var _d = Tools.getProperty(configuration_exports, "legend", "zoom"), iconData = _d.iconData, color_1 = _d.color;
      var zoomEnter = additionalItem.attr("role", Roles.IMG).attr("aria-label", "zoom").selectAll("g.icon").data(iconData).enter();
      zoomEnter.append("g").attr("x", function(d) {
        return d.x;
      }).attr("y", function(d) {
        return d.y;
      }).attr("width", function(d) {
        return d.width;
      }).attr("height", function(d) {
        return d.height;
      }).append("polygon").attr("points", "7.7 4.82 5.78 4.82 5.78 2.89 4.82 2.89 4.82 4.82 2.89 4.82 2.89 5.78 4.82 5.78 4.82 7.7 5.78 7.7 5.78 5.78 7.7 5.78 7.7 4.82").attr("fill", function(d) {
        return itemConfig.color ? itemConfig.color : color_1;
      });
      zoomEnter.append("path").attr("d", "M9.36,8.67A5.22,5.22,0,0,0,10.59,5.3,5.3,5.3,0,1,0,5.3,10.59,5.22,5.22,0,0,0,8.67,9.36L12.32,13l.68-.68Zm-4.06,1A4.34,4.34,0,1,1,9.63,5.3,4.33,4.33,0,0,1,5.3,9.63Z").attr("fill", function(d) {
        return itemConfig.color ? itemConfig.color : color_1;
      });
    }
  };
  Legend3.prototype.truncateLegendText = function() {
    var svg = this.getComponentContainer();
    var truncationOptions = Tools.getProperty(this.getOptions(), "legend", "truncation");
    var truncationType = Tools.getProperty(truncationOptions, "type");
    var truncationThreshold = Tools.getProperty(truncationOptions, "threshold");
    var truncationNumCharacter = Tools.getProperty(truncationOptions, "numCharacter");
    var addedLegendItemsText = svg.selectAll("div.legend-item p");
    var self2 = this;
    addedLegendItemsText.attr("id", function(d, i) {
      var elementToReference = this.parentNode.querySelector("div.checkbox") || this.parentNode;
      return elementToReference.getAttribute("aria-labelledby");
    });
    if (truncationType !== TruncationTypes.NONE) {
      addedLegendItemsText.html(function(d) {
        if (d.name.length > truncationThreshold) {
          return Tools.truncateLabel(d.name, truncationType, truncationNumCharacter);
        } else {
          return d.name;
        }
      });
    } else {
      addedLegendItemsText.html(function(d) {
        return d.name;
      });
    }
  };
  Legend3.prototype.addEventListeners = function() {
    var self2 = this;
    var svg = this.getComponentContainer();
    var options2 = this.getOptions();
    var legendOptions = Tools.getProperty(options2, "legend");
    var truncationThreshold = Tools.getProperty(legendOptions, "truncation", "threshold");
    svg.selectAll("div.legend-item").on("mouseover", function(event) {
      self2.services.events.dispatchEvent(Events.Legend.ITEM_HOVER, {
        hoveredElement: select_default2(this)
      });
      var hoveredItem = select_default2(this);
      hoveredItem.select("div.checkbox").classed("hovered", true);
      var hoveredItemData = hoveredItem.datum();
      if (hoveredItemData.name.length > truncationThreshold) {
        self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
          event,
          hoveredElement: hoveredItem,
          content: hoveredItemData.name
        });
      }
    }).on("mousemove", function(event) {
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function() {
      self2.services.events.dispatchEvent(Events.Legend.ITEM_CLICK, {
        clickedElement: select_default2(this)
      });
      var clickedItem = select_default2(this);
      var clickedItemData = clickedItem.datum();
      self2.model.toggleDataLabel(clickedItemData.name);
    }).on("mouseout", function() {
      var hoveredItem = select_default2(this);
      hoveredItem.select("div.checkbox").classed("hovered", false);
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE);
      self2.services.events.dispatchEvent(Events.Legend.ITEM_MOUSEOUT, {
        hoveredElement: hoveredItem
      });
    });
    svg.selectAll("div.legend-item div.checkbox").on("keyup", function(event) {
      if (event.key && event.key === "Tab") {
        self2.services.events.dispatchEvent(Events.Legend.ITEM_HOVER, {
          hoveredElement: select_default2(this)
        });
      }
    });
    svg.selectAll("div.legend-item div.checkbox").on("keydown", function(event, d) {
      if (event.key && event.key === " ") {
        event.preventDefault();
        self2.model.toggleDataLabel(d.name);
      } else if (event.key && event.key === "Tab") {
        self2.services.events.dispatchEvent(Events.Legend.ITEM_MOUSEOUT, {
          hoveredElement: select_default2(this)
        });
      }
    });
    svg.selectAll("g.additional-item").on("mouseover", function(event) {
      var hoveredItem = select_default2(this);
      var hoveredItemData = hoveredItem.datum();
      if (hoveredItemData.name.length > truncationThreshold) {
        self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
          event,
          hoveredElement: hoveredItem,
          content: hoveredItemData.name
        });
      }
    });
  };
  return Legend3;
}(Component);

// node_modules/d3-axis/src/identity.js
function identity_default4(x3) {
  return x3;
}

// node_modules/d3-axis/src/axis.js
var top = 1;
var right = 2;
var bottom = 3;
var left = 4;
var epsilon4 = 1e-6;
function translateX(x3) {
  return "translate(" + x3 + ",0)";
}
function translateY(y3) {
  return "translate(0," + y3 + ")";
}
function number4(scale) {
  return (d) => +scale(d);
}
function center(scale, offset) {
  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;
  if (scale.round())
    offset = Math.round(offset);
  return (d) => +scale(d) + offset;
}
function entering() {
  return !this.__axis;
}
function axis2(orient, scale) {
  var tickArguments = [], tickValues = null, tickFormat2 = null, tickSizeInner = 6, tickSizeOuter = 6, tickPadding = 3, offset = typeof window !== "undefined" && window.devicePixelRatio > 1 ? 0 : 0.5, k3 = orient === top || orient === left ? -1 : 1, x3 = orient === left || orient === right ? "x" : "y", transform2 = orient === top || orient === bottom ? translateX : translateY;
  function axis3(context) {
    var values2 = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues, format3 = tickFormat2 == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity_default4 : tickFormat2, spacing = Math.max(tickSizeInner, 0) + tickPadding, range3 = scale.range(), range0 = +range3[0] + offset, range1 = +range3[range3.length - 1] + offset, position2 = (scale.bandwidth ? center : number4)(scale.copy(), offset), selection2 = context.selection ? context.selection() : context, path3 = selection2.selectAll(".domain").data([null]), tick = selection2.selectAll(".tick").data(values2, scale).order(), tickExit = tick.exit(), tickEnter = tick.enter().append("g").attr("class", "tick"), line = tick.select("line"), text = tick.select("text");
    path3 = path3.merge(path3.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor"));
    tick = tick.merge(tickEnter);
    line = line.merge(tickEnter.append("line").attr("stroke", "currentColor").attr(x3 + "2", k3 * tickSizeInner));
    text = text.merge(tickEnter.append("text").attr("fill", "currentColor").attr(x3, k3 * spacing).attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));
    if (context !== selection2) {
      path3 = path3.transition(context);
      tick = tick.transition(context);
      line = line.transition(context);
      text = text.transition(context);
      tickExit = tickExit.transition(context).attr("opacity", epsilon4).attr("transform", function(d) {
        return isFinite(d = position2(d)) ? transform2(d + offset) : this.getAttribute("transform");
      });
      tickEnter.attr("opacity", epsilon4).attr("transform", function(d) {
        var p = this.parentNode.__axis;
        return transform2((p && isFinite(p = p(d)) ? p : position2(d)) + offset);
      });
    }
    tickExit.remove();
    path3.attr("d", orient === left || orient === right ? tickSizeOuter ? "M" + k3 * tickSizeOuter + "," + range0 + "H" + offset + "V" + range1 + "H" + k3 * tickSizeOuter : "M" + offset + "," + range0 + "V" + range1 : tickSizeOuter ? "M" + range0 + "," + k3 * tickSizeOuter + "V" + offset + "H" + range1 + "V" + k3 * tickSizeOuter : "M" + range0 + "," + offset + "H" + range1);
    tick.attr("opacity", 1).attr("transform", function(d) {
      return transform2(position2(d) + offset);
    });
    line.attr(x3 + "2", k3 * tickSizeInner);
    text.attr(x3, k3 * spacing).text(format3);
    selection2.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");
    selection2.each(function() {
      this.__axis = position2;
    });
  }
  axis3.scale = function(_) {
    return arguments.length ? (scale = _, axis3) : scale;
  };
  axis3.ticks = function() {
    return tickArguments = Array.from(arguments), axis3;
  };
  axis3.tickArguments = function(_) {
    return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis3) : tickArguments.slice();
  };
  axis3.tickValues = function(_) {
    return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis3) : tickValues && tickValues.slice();
  };
  axis3.tickFormat = function(_) {
    return arguments.length ? (tickFormat2 = _, axis3) : tickFormat2;
  };
  axis3.tickSize = function(_) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis3) : tickSizeInner;
  };
  axis3.tickSizeInner = function(_) {
    return arguments.length ? (tickSizeInner = +_, axis3) : tickSizeInner;
  };
  axis3.tickSizeOuter = function(_) {
    return arguments.length ? (tickSizeOuter = +_, axis3) : tickSizeOuter;
  };
  axis3.tickPadding = function(_) {
    return arguments.length ? (tickPadding = +_, axis3) : tickPadding;
  };
  axis3.offset = function(_) {
    return arguments.length ? (offset = +_, axis3) : offset;
  };
  return axis3;
}
function axisTop(scale) {
  return axis2(top, scale);
}
function axisRight(scale) {
  return axis2(right, scale);
}
function axisBottom(scale) {
  return axis2(bottom, scale);
}
function axisLeft(scale) {
  return axis2(left, scale);
}

// node_modules/@carbon/charts/components/essentials/color-scale-legend.js
var __extends11 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ColorScaleLegend = function(_super) {
  __extends11(ColorScaleLegend2, _super);
  function ColorScaleLegend2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "color-legend";
    _this.renderType = RenderTypes.SVG;
    _this.gradient_id = "gradient-id-" + Math.floor(Math.random() * 99999999999);
    _this.handleAxisComplete = function(event) {
      var svg = _this.getComponentContainer();
      var width = DOMUtils.getSVGElementSize(svg, {
        useAttrs: true
      }).width;
      var isDataLoading = Tools.getProperty(_this.getOptions(), "data", "loading");
      if (width > legend.color.barWidth && !isDataLoading) {
        var title = Tools.getProperty(_this.getOptions(), "heatmap", "colorLegend", "title");
        var cartesianScales = _this.services.cartesianScales;
        var mainXScale = cartesianScales.getMainXScale();
        var xDimensions = mainXScale.range();
        if (xDimensions[0] > 1) {
          svg.select("g.legend").attr("transform", "translate(" + xDimensions[0] + ", 0)");
          if (title) {
            var textWidth = DOMUtils.getSVGElementSize(svg.select("g.legend-title").select("text"), { useBBox: true }).width;
            var availableSpace = xDimensions[0] - textWidth - 9;
            if (availableSpace > 1) {
              svg.select("g.legend-title").attr("transform", "translate(" + availableSpace + ", 0)");
            } else {
              svg.select("g.legend").attr("transform", "translate(" + xDimensions[0] + ", 16)");
              svg.select("g.legend-title").attr("transform", "translate(" + xDimensions[0] + ", 0)");
            }
          }
        }
      }
    };
    return _this;
  }
  ColorScaleLegend2.prototype.init = function() {
    var eventsFragment = this.services.events;
    eventsFragment.addEventListener(Events.Axis.RENDER_COMPLETE, this.handleAxisComplete);
  };
  ColorScaleLegend2.prototype.render = function(animate) {
    if (animate === void 0) {
      animate = false;
    }
    var options2 = this.getOptions();
    var customColors = Tools.getProperty(options2, "color", "gradient", "colors");
    var colorScaleType = Tools.getProperty(options2, "heatmap", "colorLegend", "type");
    var colorPairingOption = Tools.getProperty(options2, "color", "pairing", "option");
    var title = Tools.getProperty(options2, "heatmap", "colorLegend", "title");
    var customColorsEnabled = !Tools.isEmpty(customColors);
    var domain = this.model.getValueDomain();
    var svg = this.getComponentContainer();
    var isDataLoading = Tools.getProperty(this.getOptions(), "data", "loading");
    if (isDataLoading) {
      svg.html("");
      return;
    }
    var legend3 = DOMUtils.appendOrSelect(svg, "g.legend");
    var axis3 = DOMUtils.appendOrSelect(legend3, "g.legend-axis");
    var width = DOMUtils.getSVGElementSize(svg, {
      useAttrs: true
    }).width;
    var barWidth = legend.color.barWidth;
    if (width <= legend.color.barWidth) {
      barWidth = width;
    }
    if (title) {
      var legendTitleGroup = DOMUtils.appendOrSelect(svg, "g.legend-title");
      var legendTitle = DOMUtils.appendOrSelect(legendTitleGroup, "text");
      legendTitle.text(title).attr("dy", "0.7em");
      legend3.attr("transform", "translate(0, 16)");
    }
    var colorScheme = domain[0] < 0 && domain[1] > 0 ? "diverge" : "mono";
    if (colorPairingOption < 1 && colorPairingOption > 4 && colorScheme === "mono") {
      colorPairingOption = 1;
    } else if (colorPairingOption < 1 && colorPairingOption > 2 && colorScheme === "diverge") {
      colorPairingOption = 1;
    }
    var colorPairing = [];
    var colorGroupingLength = colorScheme === "diverge" ? 17 : 11;
    if (!customColorsEnabled) {
      for (var i = 1; i < colorGroupingLength + 1; i++) {
        colorPairing.push(colorScaleType === ColorLegendType.LINEAR ? "stop-color-" + colorScheme + "-" + colorPairingOption + "-" + i : "fill-" + colorScheme + "-" + colorPairingOption + "-" + i);
      }
    } else {
      colorPairing = customColors;
    }
    if (colorScaleType === ColorLegendType.LINEAR) {
      var stopLengthPercentage_1 = 100 / (colorPairing.length - 1);
      var linearGradient = DOMUtils.appendOrSelect(legend3, "linearGradient");
      linearGradient.attr("id", this.gradient_id + "-legend").selectAll("stop").data(colorPairing).enter().append("stop").attr("offset", function(_, i2) {
        return i2 * stopLengthPercentage_1 + "%";
      }).attr("class", function(_, i2) {
        return colorPairing[i2];
      }).attr("stop-color", function(d) {
        return d;
      });
      var rectangle = DOMUtils.appendOrSelect(legend3, "rect");
      rectangle.attr("width", barWidth).attr("height", legend.color.barHeight).style("fill", "url(#" + this.gradient_id + "-legend)");
      var linearScale = linear3().domain(domain).range([0, barWidth]);
      domain.splice(1, 0, (domain[0] + domain[1]) / 2);
      var xAxis = axisBottom(linearScale).tickSize(0).tickValues(domain);
      axis3.attr("transform", "translate(0," + legend.color.axisYTranslation + ")").call(xAxis);
      axis3.select(".domain").remove();
      axis3.style("text-anchor", "start");
    } else if (colorScaleType === ColorLegendType.QUANTIZE) {
      var interpolator = round_default2(domain[0], domain[1]);
      var quant_1 = quantize_default(interpolator, colorPairing.length);
      if (!customColorsEnabled && colorScheme === "diverge") {
        colorPairing.splice(colorPairing.length / 2, 1);
      }
      var colorScaleBand_1 = band().domain(colorPairing).range([0, barWidth]);
      var rectangle = DOMUtils.appendOrSelect(legend3, "g.quantized-rect");
      rectangle.selectAll("rect").data(colorScaleBand_1.domain()).join("rect").attr("x", function(d) {
        return colorScaleBand_1(d);
      }).attr("y", 0).attr("width", Math.max(0, colorScaleBand_1.bandwidth()) - 1).attr("height", legend.color.barHeight).attr("class", function(d) {
        return d;
      }).attr("fill", function(d) {
        return d;
      });
      var xAxis = axisBottom(colorScaleBand_1).tickSize(0).tickValues(colorPairing).tickFormat(function(_, i2) {
        if (!customColorsEnabled && ((i2 + 1) % 2 === 0 || i2 === colorPairing.length - 1)) {
          return null;
        }
        return quant_1[i2].toString();
      });
      var axisTranslation = colorScaleBand_1.bandwidth() / 2;
      axis3.attr("transform", "translate(" + (!customColorsEnabled && colorScheme === "diverge" ? "-" : "") + axisTranslation + ", " + legend.color.axisYTranslation + ")").call(xAxis);
      var firstTick = axis3.select("g.tick").clone(true);
      firstTick.attr("transform", "translate(" + (barWidth + (!customColorsEnabled && colorScheme === "diverge" ? axisTranslation : -axisTranslation)) + ", 0)").classed("final-tick", true).select("text").text(quant_1[quant_1.length - 1]);
      axis3.enter().append(firstTick.node());
      axis3.select(".domain").remove();
    } else {
      throw Error("Entered color legend type is not supported.");
    }
    if (width <= legend.color.barWidth) {
      var lastTick = axis3.select("g.tick:last-of-type text");
      var width_1 = DOMUtils.getSVGElementSize(lastTick, {
        useBBox: true
      }).width;
      lastTick.attr("x", "-" + width_1);
    }
  };
  ColorScaleLegend2.prototype.destroy = function() {
    var eventsFragment = this.services.events;
    eventsFragment.removeEventListener(Events.Axis.RENDER_COMPLETE, this.handleAxisComplete);
  };
  return ColorScaleLegend2;
}(Legend2);

// node_modules/carbon-components/es/globals/js/misc/mixin.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function flatten2(a3) {
  return a3.reduce(function(result2, item) {
    if (Array.isArray(item)) {
      result2.push.apply(result2, _toConsumableArray(flatten2(item)));
    } else {
      result2.push(item);
    }
    return result2;
  }, []);
}
function mixin3() {
  for (var _len = arguments.length, mixinfns = new Array(_len), _key = 0; _key < _len; _key++) {
    mixinfns[_key] = arguments[_key];
  }
  return flatten2(mixinfns).reduce(function(Class, mixinfn) {
    return mixinfn(Class);
  }, function() {
    function _class() {
      _classCallCheck(this, _class);
    }
    return _class;
  }());
}

// node_modules/carbon-components/es/globals/js/mixins/create-component.js
function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof(obj);
}
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  return Constructor;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result2);
  };
}
function _possibleConstructorReturn(self2, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized(self2);
}
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
function create_component_default(ToMix) {
  var CreateComponent = function(_ToMix) {
    _inherits(CreateComponent2, _ToMix);
    var _super = _createSuper(CreateComponent2);
    function CreateComponent2(element) {
      var _this;
      var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      _classCallCheck2(this, CreateComponent2);
      _this = _super.call(this, element, options2);
      _this.children = [];
      if (!element || element.nodeType !== Node.ELEMENT_NODE) {
        throw new TypeError("DOM element should be given to initialize this widget.");
      }
      _this.element = element;
      _this.options = Object.assign(Object.create(_this.constructor.options), options2);
      _this.constructor.components.set(_this.element, _assertThisInitialized(_this));
      return _this;
    }
    _createClass(CreateComponent2, [{
      key: "release",
      value: function release() {
        for (var child = this.children.pop(); child; child = this.children.pop()) {
          child.release();
        }
        this.constructor.components.delete(this.element);
        return null;
      }
    }], [{
      key: "create",
      value: function create3(element, options2) {
        return this.components.get(element) || new this(element, options2);
      }
    }]);
    return CreateComponent2;
  }(ToMix);
  return CreateComponent;
}

// node_modules/carbon-components/es/globals/js/mixins/init-component-by-search.js
function _typeof2(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof2 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof2 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof2(obj);
}
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties2(Constructor, staticProps);
  return Constructor;
}
function _inherits2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf2(subClass, superClass);
}
function _setPrototypeOf2(o, p) {
  _setPrototypeOf2 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf2(o, p);
}
function _createSuper2(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct2();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf2(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf2(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn2(this, result2);
  };
}
function _possibleConstructorReturn2(self2, call) {
  if (call && (_typeof2(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized2(self2);
}
function _assertThisInitialized2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct2() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf2(o) {
  _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf2(o);
}
function init_component_by_search_default(ToMix) {
  var InitComponentBySearch = function(_ToMix) {
    _inherits2(InitComponentBySearch2, _ToMix);
    var _super = _createSuper2(InitComponentBySearch2);
    function InitComponentBySearch2() {
      _classCallCheck3(this, InitComponentBySearch2);
      return _super.apply(this, arguments);
    }
    _createClass2(InitComponentBySearch2, null, [{
      key: "init",
      value: function init2() {
        var _this = this;
        var target = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : document;
        var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var effectiveOptions = Object.assign(Object.create(this.options), options2);
        if (!target || target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {
          throw new TypeError("DOM document or DOM element should be given to search for and initialize this widget.");
        }
        if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {
          this.create(target, options2);
        } else {
          Array.prototype.forEach.call(target.querySelectorAll(effectiveOptions.selectorInit), function(element) {
            return _this.create(element, options2);
          });
        }
      }
    }]);
    return InitComponentBySearch2;
  }(ToMix);
  return InitComponentBySearch;
}

// node_modules/carbon-components/es/globals/js/mixins/handles.js
function _typeof3(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof3 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof3 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof3(obj);
}
function _classCallCheck4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties3(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass3(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties3(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties3(Constructor, staticProps);
  return Constructor;
}
function _get(target, property2, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get = Reflect.get;
  } else {
    _get = function _get7(target2, property3, receiver2) {
      var base = _superPropBase(target2, property3);
      if (!base)
        return;
      var desc = Object.getOwnPropertyDescriptor(base, property3);
      if (desc.get) {
        return desc.get.call(receiver2);
      }
      return desc.value;
    };
  }
  return _get(target, property2, receiver || target);
}
function _superPropBase(object, property2) {
  while (!Object.prototype.hasOwnProperty.call(object, property2)) {
    object = _getPrototypeOf3(object);
    if (object === null)
      break;
  }
  return object;
}
function _inherits3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf3(subClass, superClass);
}
function _setPrototypeOf3(o, p) {
  _setPrototypeOf3 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf3(o, p);
}
function _createSuper3(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct3();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf3(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf3(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn3(this, result2);
  };
}
function _possibleConstructorReturn3(self2, call) {
  if (call && (_typeof3(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized3(self2);
}
function _assertThisInitialized3(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct3() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf3(o) {
  _getPrototypeOf3 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf3(o);
}
function handles_default(ToMix) {
  var Handles = function(_ToMix) {
    _inherits3(Handles2, _ToMix);
    var _super = _createSuper3(Handles2);
    function Handles2() {
      var _this;
      _classCallCheck4(this, Handles2);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _this.handles = new Set();
      return _this;
    }
    _createClass3(Handles2, [{
      key: "manage",
      value: function manage(handle) {
        this.handles.add(handle);
        return handle;
      }
    }, {
      key: "unmanage",
      value: function unmanage(handle) {
        this.handles.delete(handle);
        return handle;
      }
    }, {
      key: "release",
      value: function release() {
        var _this2 = this;
        this.handles.forEach(function(handle) {
          handle.release();
          _this2.handles.delete(handle);
        });
        return _get(_getPrototypeOf3(Handles2.prototype), "release", this).call(this);
      }
    }]);
    return Handles2;
  }(ToMix);
  return Handles;
}

// node_modules/carbon-components/es/globals/js/misc/on.js
function on(element) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  element.addEventListener.apply(element, args);
  return {
    release: function release() {
      element.removeEventListener.apply(element, args);
      return null;
    }
  };
}

// node_modules/carbon-components/es/components/checkbox/checkbox.js
function _typeof4(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof4 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof4 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof4(obj);
}
function _classCallCheck5(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties4(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass4(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties4(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties4(Constructor, staticProps);
  return Constructor;
}
function _inherits4(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf4(subClass, superClass);
}
function _setPrototypeOf4(o, p) {
  _setPrototypeOf4 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf4(o, p);
}
function _createSuper4(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct4();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf4(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf4(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn4(this, result2);
  };
}
function _possibleConstructorReturn4(self2, call) {
  if (call && (_typeof4(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized4(self2);
}
function _assertThisInitialized4(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct4() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf4(o) {
  _getPrototypeOf4 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf4(o);
}
var stateChangeTypes = {
  true: "true",
  false: "false",
  mixed: "mixed"
};
var Checkbox = function(_mixin) {
  _inherits4(Checkbox2, _mixin);
  var _super = _createSuper4(Checkbox2);
  function Checkbox2(element, options2) {
    var _this;
    _classCallCheck5(this, Checkbox2);
    _this = _super.call(this, element, options2);
    _this.manage(on(_this.element, "click", function(event) {
      _this._handleClick(event);
    }));
    _this.manage(on(_this.element, "focus", function(event) {
      _this._handleFocus(event);
    }));
    _this.manage(on(_this.element, "blur", function(event) {
      _this._handleBlur(event);
    }));
    _this._indeterminateCheckbox();
    _this._initCheckbox();
    return _this;
  }
  _createClass4(Checkbox2, [{
    key: "_handleClick",
    value: function _handleClick() {
      if (this.element.checked === true) {
        this.element.setAttribute("checked", "");
        this.element.setAttribute("aria-checked", "true");
        this.element.checked = true;
        if (this.element.parentElement.classList.contains(this.options.classLabel)) {
          this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, "true");
        }
      } else if (this.element.checked === false) {
        this.element.removeAttribute("checked");
        this.element.setAttribute("aria-checked", "false");
        this.element.checked = false;
        if (this.element.parentElement.classList.contains(this.options.classLabel)) {
          this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, "false");
        }
      }
    }
  }, {
    key: "_handleFocus",
    value: function _handleFocus() {
      if (this.element.parentElement.classList.contains(this.options.classLabel)) {
        this.element.parentElement.classList.add(this.options.classLabelFocused);
      }
    }
  }, {
    key: "_handleBlur",
    value: function _handleBlur() {
      if (this.element.parentElement.classList.contains(this.options.classLabel)) {
        this.element.parentElement.classList.remove(this.options.classLabelFocused);
      }
    }
  }, {
    key: "setState",
    value: function setState(state) {
      if (state === void 0 || stateChangeTypes[state] === void 0) {
        throw new TypeError("setState expects a value of true, false or mixed.");
      }
      this.element.setAttribute("aria-checked", state);
      this.element.indeterminate = state === stateChangeTypes.mixed;
      this.element.checked = state === stateChangeTypes.true;
      var container = this.element.closest(this.options.selectorContainedCheckboxState);
      if (container) {
        container.setAttribute(this.options.attribContainedCheckboxState, state);
      }
    }
  }, {
    key: "setDisabled",
    value: function setDisabled(value2) {
      if (value2 === void 0) {
        throw new TypeError("setDisabled expects a boolean value of true or false");
      }
      if (value2 === true) {
        this.element.setAttribute("disabled", true);
      } else if (value2 === false) {
        this.element.removeAttribute("disabled");
      }
      var container = this.element.closest(this.options.selectorContainedCheckboxDisabled);
      if (container) {
        container.setAttribute(this.options.attribContainedCheckboxDisabled, value2);
      }
    }
  }, {
    key: "_indeterminateCheckbox",
    value: function _indeterminateCheckbox() {
      if (this.element.getAttribute("aria-checked") === "mixed") {
        this.element.indeterminate = true;
      }
      if (this.element.indeterminate === true) {
        this.element.setAttribute("aria-checked", "mixed");
      }
      if (this.element.parentElement.classList.contains(this.options.classLabel) && this.element.indeterminate === true) {
        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, "mixed");
      }
    }
  }, {
    key: "_initCheckbox",
    value: function _initCheckbox() {
      if (this.element.checked === true) {
        this.element.setAttribute("aria-checked", "true");
      }
      if (this.element.parentElement.classList.contains(this.options.classLabel) && this.element.checked) {
        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, "true");
      }
      if (this.element.parentElement.classList.contains(this.options.classLabel)) {
        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxDisabled, "false");
      }
      if (this.element.parentElement.classList.contains(this.options.classLabel) && this.element.disabled) {
        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxDisabled, "true");
      }
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: ".".concat(prefix2, "--checkbox"),
        selectorContainedCheckboxState: "[data-contained-checkbox-state]",
        selectorContainedCheckboxDisabled: "[data-contained-checkbox-disabled]",
        classLabel: "".concat(prefix2, "--checkbox-label"),
        classLabelFocused: "".concat(prefix2, "--checkbox-label__focus"),
        attribContainedCheckboxState: "data-contained-checkbox-state",
        attribContainedCheckboxDisabled: "data-contained-checkbox-disabled"
      };
    }
  }]);
  Checkbox2.components = new WeakMap();
  Checkbox2.stateChangeTypes = stateChangeTypes;
  return Checkbox2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/globals/js/mixins/evented-state.js
function _typeof5(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof5 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof5 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof5(obj);
}
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray2(arr);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _classCallCheck6(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties5(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass5(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties5(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties5(Constructor, staticProps);
  return Constructor;
}
function _inherits5(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf5(subClass, superClass);
}
function _setPrototypeOf5(o, p) {
  _setPrototypeOf5 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf5(o, p);
}
function _createSuper5(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct5();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf5(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf5(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn5(this, result2);
  };
}
function _possibleConstructorReturn5(self2, call) {
  if (call && (_typeof5(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized5(self2);
}
function _assertThisInitialized5(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct5() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf5(o) {
  _getPrototypeOf5 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf5(o);
}
function evented_state_default(ToMix) {
  var EventedState = function(_ToMix) {
    _inherits5(EventedState2, _ToMix);
    var _super = _createSuper5(EventedState2);
    function EventedState2() {
      _classCallCheck6(this, EventedState2);
      return _super.apply(this, arguments);
    }
    _createClass5(EventedState2, [{
      key: "_changeState",
      value: function _changeState() {
        throw new Error("_changeState() should be overriden to perform actual change in state.");
      }
    }, {
      key: "changeState",
      value: function changeState() {
        var _this = this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        var state = typeof args[0] === "string" ? args.shift() : void 0;
        var detail = Object(args[0]) === args[0] && typeof args[0] !== "function" ? args.shift() : void 0;
        var callback = typeof args[0] === "function" ? args.shift() : void 0;
        if (typeof this.shouldStateBeChanged === "function" && !this.shouldStateBeChanged(state, detail)) {
          if (callback) {
            callback(null, true);
          }
          return;
        }
        var data = {
          group: detail && detail.group,
          state
        };
        var eventNameSuffix = [data.group, state].filter(Boolean).join("-").split("-").map(function(item) {
          return item[0].toUpperCase() + item.substr(1);
        }).join("");
        var eventStart = new CustomEvent(this.options["eventBefore".concat(eventNameSuffix)], {
          bubbles: true,
          cancelable: true,
          detail
        });
        var fireOnNode = detail && detail.delegatorNode || this.element;
        var canceled = !fireOnNode.dispatchEvent(eventStart);
        if (canceled) {
          if (callback) {
            var error = new Error("Changing state (".concat(JSON.stringify(data), ") has been canceled."));
            error.canceled = true;
            callback(error);
          }
        } else {
          var changeStateArgs = [state, detail].filter(Boolean);
          this._changeState.apply(this, _toConsumableArray2(changeStateArgs).concat([function() {
            fireOnNode.dispatchEvent(new CustomEvent(_this.options["eventAfter".concat(eventNameSuffix)], {
              bubbles: true,
              cancelable: true,
              detail
            }));
            if (callback) {
              callback();
            }
          }]));
        }
      }
    }]);
    return EventedState2;
  }(ToMix);
  return EventedState;
}

// node_modules/carbon-components/es/globals/js/misc/event-matches.js
function eventMatches(event, selector) {
  var target = event.target, currentTarget = event.currentTarget;
  if (typeof target.matches === "function") {
    if (target.matches(selector)) {
      return target;
    }
    if (target.matches("".concat(selector, " *"))) {
      var closest = target.closest(selector);
      if ((currentTarget.nodeType === Node.DOCUMENT_NODE ? currentTarget.documentElement : currentTarget).contains(closest)) {
        return closest;
      }
    }
  }
  return void 0;
}

// node_modules/carbon-components/es/components/file-uploader/file-uploader.js
function _typeof6(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof6 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof6 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof6(obj);
}
function _classCallCheck7(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties6(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass6(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties6(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties6(Constructor, staticProps);
  return Constructor;
}
function _inherits6(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf6(subClass, superClass);
}
function _setPrototypeOf6(o, p) {
  _setPrototypeOf6 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf6(o, p);
}
function _createSuper6(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct6();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf6(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf6(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn6(this, result2);
  };
}
function _possibleConstructorReturn6(self2, call) {
  if (call && (_typeof6(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized6(self2);
}
function _assertThisInitialized6(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct6() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf6(o) {
  _getPrototypeOf6 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf6(o);
}
var toArray2 = function toArray3(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};
var FileUploader = function(_mixin) {
  _inherits6(FileUploader2, _mixin);
  var _super = _createSuper6(FileUploader2);
  function FileUploader2(element) {
    var _this;
    var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    _classCallCheck7(this, FileUploader2);
    _this = _super.call(this, element, options2);
    _this._changeState = function(state, detail, callback) {
      if (state === "delete-filename-fileuploader") {
        _this.container.removeChild(detail.filenameElement);
      }
      if (typeof callback === "function") {
        callback();
      }
    };
    _this._handleDeleteButton = function(evt) {
      var target = eventMatches(evt, _this.options.selectorCloseButton);
      if (target) {
        _this.changeState("delete-filename-fileuploader", {
          initialEvt: evt,
          filenameElement: target.closest(_this.options.selectorSelectedFile)
        });
      }
    };
    _this._handleDragDrop = function(evt) {
      var isOfSelf = _this.element.contains(evt.target);
      if (Array.prototype.indexOf.call(evt.dataTransfer.types, "Files") >= 0 && !eventMatches(evt, _this.options.selectorOtherDropContainers)) {
        var inArea = isOfSelf && eventMatches(evt, _this.options.selectorDropContainer);
        if (evt.type === "dragover") {
          evt.preventDefault();
          var dropEffect = inArea ? "copy" : "none";
          if (Array.isArray(evt.dataTransfer.types)) {
            evt.dataTransfer.effectAllowed = dropEffect;
          }
          evt.dataTransfer.dropEffect = dropEffect;
          _this.dropContainer.classList.toggle(_this.options.classDragOver, Boolean(inArea));
        }
        if (evt.type === "dragleave") {
          _this.dropContainer.classList.toggle(_this.options.classDragOver, false);
        }
        if (inArea && evt.type === "drop") {
          evt.preventDefault();
          _this._displayFilenames(evt.dataTransfer.files);
          _this.dropContainer.classList.remove(_this.options.classDragOver);
        }
      }
    };
    _this.input = _this.element.querySelector(_this.options.selectorInput);
    _this.container = _this.element.querySelector(_this.options.selectorContainer);
    _this.dropContainer = _this.element.querySelector(_this.options.selectorDropContainer);
    if (!_this.input) {
      throw new TypeError("Cannot find the file input box.");
    }
    if (!_this.container) {
      throw new TypeError("Cannot find the file names container.");
    }
    _this.inputId = _this.input.getAttribute("id");
    _this.manage(on(_this.input, "change", function() {
      return _this._displayFilenames();
    }));
    _this.manage(on(_this.container, "click", _this._handleDeleteButton));
    _this.manage(on(_this.element.ownerDocument, "dragleave", _this._handleDragDrop));
    _this.manage(on(_this.dropContainer, "dragover", _this._handleDragDrop));
    _this.manage(on(_this.dropContainer, "drop", _this._handleDragDrop));
    return _this;
  }
  _createClass6(FileUploader2, [{
    key: "_filenamesHTML",
    value: function _filenamesHTML(name, id2) {
      return '<span class="'.concat(this.options.classSelectedFile, '">\n      <p class="').concat(this.options.classFileName, '">').concat(name, '</p>\n      <span data-for="').concat(id2, '" class="').concat(this.options.classStateContainer, '"></span>\n    </span>');
    }
  }, {
    key: "_uploadHTML",
    value: function _uploadHTML() {
      return '\n      <div class="'.concat(this.options.classLoadingAnimation, '">\n        <div data-inline-loading-spinner class="').concat(this.options.classLoading, '">\n          <svg class="').concat(this.options.classLoadingSvg, '" viewBox="-75 -75 150 150">\n            <circle class="').concat(this.options.classLoadingBackground, '" cx="0" cy="0" r="37.5" />\n            <circle class="').concat(this.options.classLoadingStroke, '" cx="0" cy="0" r="37.5" />\n          </svg>\n        </div>\n      </div>');
    }
  }, {
    key: "_closeButtonHTML",
    value: function _closeButtonHTML() {
      return '\n      <button class="'.concat(this.options.classFileClose, '" type="button" aria-label="close">\n      <svg aria-hidden="true" viewBox="0 0 16 16" width="16" height="16">\n      <path fill="#231F20" d="M12 4.7l-.7-.7L8 7.3 4.7 4l-.7.7L7.3 8 4 11.3l.7.7L8 8.7l3.3 3.3.7-.7L8.7 8z"/>\n      </svg>\n      </button>');
    }
  }, {
    key: "_checkmarkHTML",
    value: function _checkmarkHTML() {
      return '\n      <svg focusable="false"\n        preserveAspectRatio="xMidYMid meet"\n        style="will-change: transform;"\n        xmlns="http://www.w3.org/2000/svg"\n        class="'.concat(this.options.classFileComplete, '"\n        width="16" height="16" viewBox="0 0 16 16"\n        aria-hidden="true">\n        <path d="M8 1C4.1 1 1 4.1 1 8s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7zM7 11L4.3 8.3l.9-.8L7 9.3l4-3.9.9.8L7 11z"></path>\n        <path d="M7 11L4.3 8.3l.9-.8L7 9.3l4-3.9.9.8L7 11z" data-icon-path="inner-path" opacity="0"></path>\n      </svg>\n    ');
    }
  }, {
    key: "_getStateContainers",
    value: function _getStateContainers() {
      var stateContainers = toArray2(this.element.querySelectorAll("[data-for=".concat(this.inputId, "]")));
      if (stateContainers.length === 0) {
        throw new TypeError("State container elements not found; invoke _displayFilenames() first");
      }
      if (stateContainers[0].dataset.for !== this.inputId) {
        throw new TypeError("File input id must equal [data-for] attribute");
      }
      return stateContainers;
    }
  }, {
    key: "_displayFilenames",
    value: function _displayFilenames() {
      var _this2 = this;
      var files = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.input.files;
      var container = this.element.querySelector(this.options.selectorContainer);
      var HTMLString = toArray2(files).map(function(file) {
        return _this2._filenamesHTML(file.name, _this2.inputId);
      }).join("");
      container.insertAdjacentHTML("afterbegin", HTMLString);
    }
  }, {
    key: "_removeState",
    value: function _removeState(element) {
      if (!element || element.nodeType !== Node.ELEMENT_NODE) {
        throw new TypeError("DOM element should be given to initialize this widget.");
      }
      while (element.firstChild) {
        element.removeChild(element.firstChild);
      }
    }
  }, {
    key: "_handleStateChange",
    value: function _handleStateChange(elements, selectIndex, html) {
      var _this3 = this;
      if (selectIndex === void 0) {
        elements.forEach(function(el) {
          _this3._removeState(el);
          el.insertAdjacentHTML("beforeend", html);
        });
      } else {
        elements.forEach(function(el, index4) {
          if (index4 === selectIndex) {
            _this3._removeState(el);
            el.insertAdjacentHTML("beforeend", html);
          }
        });
      }
    }
  }, {
    key: "setState",
    value: function setState(state, selectIndex) {
      var stateContainers = this._getStateContainers();
      if (state === "edit") {
        this._handleStateChange(stateContainers, selectIndex, this._closeButtonHTML());
      }
      if (state === "upload") {
        this._handleStateChange(stateContainers, selectIndex, this._uploadHTML());
      }
      if (state === "complete") {
        this._handleStateChange(stateContainers, selectIndex, this._checkmarkHTML());
      }
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-file]",
        selectorInput: 'input[type="file"].'.concat(prefix2, "--file-input"),
        selectorContainer: "[data-file-container]",
        selectorCloseButton: ".".concat(prefix2, "--file-close"),
        selectorSelectedFile: ".".concat(prefix2, "--file__selected-file"),
        selectorDropContainer: "[data-file-drop-container]",
        selectorOtherDropContainers: "[data-drop-container]",
        classLoading: "".concat(prefix2, "--loading ").concat(prefix2, "--loading--small"),
        classLoadingAnimation: "".concat(prefix2, "--inline-loading__animation"),
        classLoadingSvg: "".concat(prefix2, "--loading__svg"),
        classLoadingBackground: "".concat(prefix2, "--loading__background"),
        classLoadingStroke: "".concat(prefix2, "--loading__stroke"),
        classFileName: "".concat(prefix2, "--file-filename"),
        classFileClose: "".concat(prefix2, "--file-close"),
        classFileComplete: "".concat(prefix2, "--file-complete"),
        classSelectedFile: "".concat(prefix2, "--file__selected-file"),
        classStateContainer: "".concat(prefix2, "--file__state-container"),
        classDragOver: "".concat(prefix2, "--file__drop-container--drag-over"),
        eventBeforeDeleteFilenameFileuploader: "fileuploader-before-delete-filename",
        eventAfterDeleteFilenameFileuploader: "fileuploader-after-delete-filename"
      };
    }
  }]);
  FileUploader2.components = new WeakMap();
  return FileUploader2;
}(mixin3(create_component_default, init_component_by_search_default, evented_state_default, handles_default));

// node_modules/carbon-components/es/components/content-switcher/content-switcher.js
function _typeof7(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof7 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof7 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof7(obj);
}
function _classCallCheck8(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties7(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass7(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties7(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties7(Constructor, staticProps);
  return Constructor;
}
function _inherits7(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf7(subClass, superClass);
}
function _setPrototypeOf7(o, p) {
  _setPrototypeOf7 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf7(o, p);
}
function _createSuper7(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct7();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf7(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf7(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn7(this, result2);
  };
}
function _possibleConstructorReturn7(self2, call) {
  if (call && (_typeof7(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized7(self2);
}
function _assertThisInitialized7(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct7() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf7(o) {
  _getPrototypeOf7 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf7(o);
}
var toArray4 = function toArray5(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};
var ContentSwitcher = function(_mixin) {
  _inherits7(ContentSwitcher2, _mixin);
  var _super = _createSuper7(ContentSwitcher2);
  function ContentSwitcher2(element, options2) {
    var _this;
    _classCallCheck8(this, ContentSwitcher2);
    _this = _super.call(this, element, options2);
    _this.manage(on(_this.element, "click", function(event) {
      _this._handleClick(event);
    }));
    return _this;
  }
  _createClass7(ContentSwitcher2, [{
    key: "_handleClick",
    value: function _handleClick(event) {
      var button = eventMatches(event, this.options.selectorButton);
      if (button) {
        this.changeState({
          group: "selected",
          item: button,
          launchingEvent: event
        });
      }
    }
  }, {
    key: "_changeState",
    value: function _changeState(_ref, callback) {
      var _this2 = this;
      var item = _ref.item;
      var itemLink = item.querySelector(this.options.selectorLink);
      if (itemLink) {
        toArray4(this.element.querySelectorAll(this.options.selectorLink)).forEach(function(link3) {
          if (link3 !== itemLink) {
            link3.setAttribute("aria-selected", "false");
          }
        });
        itemLink.setAttribute("aria-selected", "true");
      }
      var selectorButtons = toArray4(this.element.querySelectorAll(this.options.selectorButton));
      selectorButtons.forEach(function(button) {
        if (button !== item) {
          button.setAttribute("aria-selected", false);
          button.classList.toggle(_this2.options.classActive, false);
          toArray4(button.ownerDocument.querySelectorAll(button.dataset.target)).forEach(function(element) {
            element.setAttribute("hidden", "");
            element.setAttribute("aria-hidden", "true");
          });
        }
      });
      item.classList.toggle(this.options.classActive, true);
      item.setAttribute("aria-selected", true);
      toArray4(item.ownerDocument.querySelectorAll(item.dataset.target)).forEach(function(element) {
        element.removeAttribute("hidden");
        element.setAttribute("aria-hidden", "false");
      });
      if (callback) {
        callback();
      }
    }
  }, {
    key: "setActive",
    value: function setActive(item, callback) {
      this.changeState({
        group: "selected",
        item
      }, function(error) {
        if (error) {
          if (callback) {
            callback(Object.assign(error, {
              item
            }));
          }
        } else if (callback) {
          callback(null, item);
        }
      });
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-content-switcher]",
        selectorButton: 'input[type="radio"], .'.concat(prefix2, "--content-switcher-btn"),
        classActive: "".concat(prefix2, "--content-switcher--selected"),
        eventBeforeSelected: "content-switcher-beingselected",
        eventAfterSelected: "content-switcher-selected"
      };
    }
  }]);
  ContentSwitcher2.components = new WeakMap();
  return ContentSwitcher2;
}(mixin3(create_component_default, init_component_by_search_default, evented_state_default, handles_default));
var content_switcher_default = ContentSwitcher;

// node_modules/carbon-components/es/components/tabs/tabs.js
function _typeof8(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof8 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof8 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof8(obj);
}
function _classCallCheck9(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties8(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass8(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties8(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties8(Constructor, staticProps);
  return Constructor;
}
function _get2(target, property2, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get2 = Reflect.get;
  } else {
    _get2 = function _get7(target2, property3, receiver2) {
      var base = _superPropBase2(target2, property3);
      if (!base)
        return;
      var desc = Object.getOwnPropertyDescriptor(base, property3);
      if (desc.get) {
        return desc.get.call(receiver2);
      }
      return desc.value;
    };
  }
  return _get2(target, property2, receiver || target);
}
function _superPropBase2(object, property2) {
  while (!Object.prototype.hasOwnProperty.call(object, property2)) {
    object = _getPrototypeOf8(object);
    if (object === null)
      break;
  }
  return object;
}
function _inherits8(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf8(subClass, superClass);
}
function _setPrototypeOf8(o, p) {
  _setPrototypeOf8 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf8(o, p);
}
function _createSuper8(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct8();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf8(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf8(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn8(this, result2);
  };
}
function _possibleConstructorReturn8(self2, call) {
  if (call && (_typeof8(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized8(self2);
}
function _assertThisInitialized8(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct8() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf8(o) {
  _getPrototypeOf8 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf8(o);
}
var toArray6 = function toArray7(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};
var Tab = function(_ContentSwitcher) {
  _inherits8(Tab2, _ContentSwitcher);
  var _super = _createSuper8(Tab2);
  function Tab2(element, options2) {
    var _this;
    _classCallCheck9(this, Tab2);
    _this = _super.call(this, element, options2);
    _this.manage(on(_this.element, "keydown", function(event) {
      _this._handleKeyDown(event);
    }));
    _this.manage(on(_this.element.ownerDocument, "click", function(event) {
      _this._handleDocumentClick(event);
    }));
    var selected = _this.element.querySelector(_this.options.selectorButtonSelected);
    if (selected) {
      _this._updateTriggerText(selected);
    }
    return _this;
  }
  _createClass8(Tab2, [{
    key: "_changeState",
    value: function _changeState(detail, callback) {
      var _this2 = this;
      _get2(_getPrototypeOf8(Tab2.prototype), "_changeState", this).call(this, detail, function(error) {
        if (!error) {
          _this2._updateTriggerText(detail.item);
        }
        for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          data[_key - 1] = arguments[_key];
        }
        callback.apply(void 0, [error].concat(data));
      });
    }
  }, {
    key: "_handleClick",
    value: function _handleClick(event) {
      var button = eventMatches(event, this.options.selectorButton);
      var trigger = eventMatches(event, this.options.selectorTrigger);
      if (button && !button.classList.contains(this.options.classButtonDisabled)) {
        _get2(_getPrototypeOf8(Tab2.prototype), "_handleClick", this).call(this, event);
        this._updateMenuState(false);
      }
      if (trigger) {
        this._updateMenuState();
      }
    }
  }, {
    key: "_handleDocumentClick",
    value: function _handleDocumentClick(event) {
      var element = this.element;
      var isOfSelf = element.contains(event.target);
      if (isOfSelf) {
        return;
      }
      this._updateMenuState(false);
    }
  }, {
    key: "_handleKeyDown",
    value: function _handleKeyDown(event) {
      var _this3 = this;
      var triggerNode = eventMatches(event, this.options.selectorTrigger);
      if (triggerNode) {
        if (event.which === 13) {
          this._updateMenuState();
        }
        return;
      }
      var direction = {
        37: this.constructor.NAVIGATE.BACKWARD,
        39: this.constructor.NAVIGATE.FORWARD
      }[event.which];
      if (direction) {
        var buttons = toArray6(this.element.querySelectorAll(this.options.selectorButtonEnabled));
        var button = this.element.querySelector(this.options.selectorButtonSelected);
        var nextIndex = Math.max(buttons.indexOf(button) + direction, -1);
        var nextIndexLooped = nextIndex >= 0 && nextIndex < buttons.length ? nextIndex : nextIndex - Math.sign(nextIndex) * buttons.length;
        this.setActive(buttons[nextIndexLooped], function(error, item) {
          if (item) {
            var link3 = item.querySelector(_this3.options.selectorLink);
            if (link3) {
              link3.focus();
            }
          }
        });
        event.preventDefault();
      }
    }
  }, {
    key: "_updateMenuState",
    value: function _updateMenuState(force) {
      var menu = this.element.querySelector(this.options.selectorMenu);
      var trigger = this.element.querySelector(this.options.selectorTrigger);
      if (menu) {
        menu.classList.toggle(this.options.classHidden, typeof force === "undefined" ? force : !force);
        if (menu.classList.contains(this.options.classHidden)) {
          trigger.classList.remove(this.options.classOpen);
        } else {
          trigger.classList.add(this.options.classOpen);
        }
      }
    }
  }, {
    key: "_updateTriggerText",
    value: function _updateTriggerText(target) {
      var triggerText = this.element.querySelector(this.options.selectorTriggerText);
      if (triggerText) {
        triggerText.textContent = target.textContent;
      }
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return Object.assign(Object.create(content_switcher_default.options), {
        selectorInit: "[data-tabs]",
        selectorMenu: ".".concat(prefix2, "--tabs__nav"),
        selectorTrigger: ".".concat(prefix2, "--tabs-trigger"),
        selectorTriggerText: ".".concat(prefix2, "--tabs-trigger-text"),
        selectorButton: ".".concat(prefix2, "--tabs__nav-item"),
        selectorButtonEnabled: ".".concat(prefix2, "--tabs__nav-item:not(.").concat(prefix2, "--tabs__nav-item--disabled)"),
        selectorButtonSelected: ".".concat(prefix2, "--tabs__nav-item--selected"),
        selectorLink: ".".concat(prefix2, "--tabs__nav-link"),
        classActive: "".concat(prefix2, "--tabs__nav-item--selected"),
        classHidden: "".concat(prefix2, "--tabs__nav--hidden"),
        classOpen: "".concat(prefix2, "--tabs-trigger--open"),
        classButtonDisabled: "".concat(prefix2, "--tabs__nav-item--disabled"),
        eventBeforeSelected: "tab-beingselected",
        eventAfterSelected: "tab-selected"
      });
    }
  }]);
  Tab2.components = new WeakMap();
  Tab2.NAVIGATE = {
    BACKWARD: -1,
    FORWARD: 1
  };
  return Tab2;
}(content_switcher_default);

// node_modules/carbon-components/es/globals/js/misc/get-launching-details.js
function getLaunchingDetails(evt) {
  if (!evt || typeof evt === "function") {
    return {
      launchingElement: null,
      launchingEvent: null
    };
  }
  var launchingElement = evt.delegateTarget || evt.currentTarget || evt;
  var launchingEvent = evt.currentTarget && evt;
  if (launchingElement && !launchingElement.nodeType) {
    throw new TypeError("DOM Node should be given for launching element.");
  }
  if (launchingEvent && !launchingEvent.type) {
    throw new TypeError("DOM event should be given for launching event.");
  }
  return {
    launchingElement,
    launchingEvent
  };
}

// node_modules/carbon-components/es/globals/js/mixins/evented-show-hide-state.js
function _typeof9(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof9 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof9 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof9(obj);
}
function _classCallCheck10(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties9(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass9(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties9(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties9(Constructor, staticProps);
  return Constructor;
}
function _inherits9(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf9(subClass, superClass);
}
function _setPrototypeOf9(o, p) {
  _setPrototypeOf9 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf9(o, p);
}
function _createSuper9(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct9();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf9(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf9(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn9(this, result2);
  };
}
function _possibleConstructorReturn9(self2, call) {
  if (call && (_typeof9(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized9(self2);
}
function _assertThisInitialized9(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct9() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf9(o) {
  _getPrototypeOf9 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf9(o);
}
function eventedShowHideState(ToMix) {
  var EventedShowHideState = function(_ToMix) {
    _inherits9(EventedShowHideState2, _ToMix);
    var _super = _createSuper9(EventedShowHideState2);
    function EventedShowHideState2() {
      _classCallCheck10(this, EventedShowHideState2);
      return _super.apply(this, arguments);
    }
    _createClass9(EventedShowHideState2, [{
      key: "show",
      value: function show(evtOrElem, callback) {
        if (!evtOrElem || typeof evtOrElem === "function") {
          callback = evtOrElem;
        }
        this.changeState("shown", getLaunchingDetails(evtOrElem), callback);
      }
    }, {
      key: "hide",
      value: function hide(evtOrElem, callback) {
        if (!evtOrElem || typeof evtOrElem === "function") {
          callback = evtOrElem;
        }
        this.changeState("hidden", getLaunchingDetails(evtOrElem), callback);
      }
    }]);
    return EventedShowHideState2;
  }(ToMix);
  return EventedShowHideState;
}
var exports2 = [evented_state_default, eventedShowHideState];
var evented_show_hide_state_default = exports2;

// node_modules/carbon-components/es/components/floating-menu/floating-menu.js
var import_warning = __toModule(require_browser());

// node_modules/carbon-components/es/globals/js/mixins/track-blur.js
function _typeof10(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof10 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof10 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof10(obj);
}
function _classCallCheck11(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties10(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass10(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties10(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties10(Constructor, staticProps);
  return Constructor;
}
function _inherits10(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf10(subClass, superClass);
}
function _setPrototypeOf10(o, p) {
  _setPrototypeOf10 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf10(o, p);
}
function _createSuper10(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct10();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf10(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf10(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn10(this, result2);
  };
}
function _possibleConstructorReturn10(self2, call) {
  if (call && (_typeof10(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized10(self2);
}
function _assertThisInitialized10(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct10() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf10(o) {
  _getPrototypeOf10 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf10(o);
}
function trackBlur(ToMix) {
  var TrackBlur = function(_ToMix) {
    _inherits10(TrackBlur2, _ToMix);
    var _super = _createSuper10(TrackBlur2);
    function TrackBlur2(element, options2) {
      var _this;
      _classCallCheck11(this, TrackBlur2);
      _this = _super.call(this, element, options2);
      var hasFocusin = "onfocusin" in window;
      var focusinEventName = hasFocusin ? "focusin" : "focus";
      var focusoutEventName = hasFocusin ? "focusout" : "blur";
      _this.manage(on(_this.element.ownerDocument, focusinEventName, function(event) {
        if (!(_this.options.contentNode || _this.element).contains(event.target)) {
          _this.handleBlur(event);
        }
      }, !hasFocusin));
      _this.manage(on(_this.element.ownerDocument, focusoutEventName, function(event) {
        if (!event.relatedTarget) {
          _this.handleBlur(event);
        }
      }, !hasFocusin));
      return _this;
    }
    _createClass10(TrackBlur2, [{
      key: "handleBlur",
      value: function handleBlur() {
        throw new Error("Components inheriting TrackBlur mix-in must implement handleBlur() method.");
      }
    }]);
    return TrackBlur2;
  }(ToMix);
  return TrackBlur;
}
var exports3 = [handles_default, trackBlur];
var track_blur_default = exports3;

// node_modules/carbon-components/es/globals/js/misc/resize.js
var optimizedResize = function optimizedResize2() {
  var callbacks = [];
  var running = false;
  function runCallbacks() {
    callbacks.forEach(function(callback) {
      callback();
    });
    running = false;
  }
  function resize() {
    if (!running) {
      running = true;
      window.requestAnimationFrame(runCallbacks);
    }
  }
  function addCallback(callback) {
    if (callback) {
      var index4 = callbacks.indexOf(callback);
      if (index4 < 0) {
        callbacks.push(callback);
      }
    }
  }
  return {
    add: function add2(callback) {
      if (!callbacks.length) {
        window.addEventListener("resize", resize);
      }
      addCallback(callback);
      return {
        release: function release() {
          var index4 = callbacks.indexOf(callback);
          if (index4 >= 0) {
            callbacks.splice(index4, 1);
          }
        }
      };
    }
  };
}();
var resize_default = optimizedResize;

// node_modules/carbon-components/es/components/floating-menu/floating-menu.js
function _typeof11(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof11 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof11 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof11(obj);
}
function _classCallCheck12(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties11(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass11(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties11(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties11(Constructor, staticProps);
  return Constructor;
}
function _get3(target, property2, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get3 = Reflect.get;
  } else {
    _get3 = function _get7(target2, property3, receiver2) {
      var base = _superPropBase3(target2, property3);
      if (!base)
        return;
      var desc = Object.getOwnPropertyDescriptor(base, property3);
      if (desc.get) {
        return desc.get.call(receiver2);
      }
      return desc.value;
    };
  }
  return _get3(target, property2, receiver || target);
}
function _superPropBase3(object, property2) {
  while (!Object.prototype.hasOwnProperty.call(object, property2)) {
    object = _getPrototypeOf11(object);
    if (object === null)
      break;
  }
  return object;
}
function _inherits11(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf11(subClass, superClass);
}
function _setPrototypeOf11(o, p) {
  _setPrototypeOf11 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf11(o, p);
}
function _createSuper11(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct11();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf11(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf11(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn11(this, result2);
  };
}
function _possibleConstructorReturn11(self2, call) {
  if (call && (_typeof11(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized11(self2);
}
function _assertThisInitialized11(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct11() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf11(o) {
  _getPrototypeOf11 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf11(o);
}
function _defineProperty(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value2,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value2;
  }
  return obj;
}
var DIRECTION_LEFT = "left";
var DIRECTION_TOP = "top";
var DIRECTION_RIGHT = "right";
var DIRECTION_BOTTOM = "bottom";
var getFloatingPosition = function getFloatingPosition2(_ref) {
  var _DIRECTION_LEFT$DIREC;
  var menuSize = _ref.menuSize, refPosition = _ref.refPosition, _ref$offset = _ref.offset, offset = _ref$offset === void 0 ? {} : _ref$offset, _ref$direction = _ref.direction, direction = _ref$direction === void 0 ? DIRECTION_BOTTOM : _ref$direction, _ref$scrollX = _ref.scrollX, scrollX = _ref$scrollX === void 0 ? 0 : _ref$scrollX, _ref$scrollY = _ref.scrollY, scrollY = _ref$scrollY === void 0 ? 0 : _ref$scrollY;
  var _refPosition$left = refPosition.left, refLeft = _refPosition$left === void 0 ? 0 : _refPosition$left, _refPosition$top = refPosition.top, refTop = _refPosition$top === void 0 ? 0 : _refPosition$top, _refPosition$right = refPosition.right, refRight = _refPosition$right === void 0 ? 0 : _refPosition$right, _refPosition$bottom = refPosition.bottom, refBottom = _refPosition$bottom === void 0 ? 0 : _refPosition$bottom;
  var width = menuSize.width, height = menuSize.height;
  var _offset$top = offset.top, top2 = _offset$top === void 0 ? 0 : _offset$top, _offset$left = offset.left, left3 = _offset$left === void 0 ? 0 : _offset$left;
  var refCenterHorizontal = (refLeft + refRight) / 2;
  var refCenterVertical = (refTop + refBottom) / 2;
  return (_DIRECTION_LEFT$DIREC = {}, _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_LEFT, {
    left: refLeft - width + scrollX - left3,
    top: refCenterVertical - height / 2 + scrollY + top2
  }), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_TOP, {
    left: refCenterHorizontal - width / 2 + scrollX + left3,
    top: refTop - height + scrollY - top2
  }), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_RIGHT, {
    left: refRight + scrollX + left3,
    top: refCenterVertical - height / 2 + scrollY + top2
  }), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_BOTTOM, {
    left: refCenterHorizontal - width / 2 + scrollX + left3,
    top: refBottom + scrollY + top2
  }), _DIRECTION_LEFT$DIREC)[direction];
};
var FloatingMenu = function(_mixin) {
  _inherits11(FloatingMenu2, _mixin);
  var _super = _createSuper11(FloatingMenu2);
  function FloatingMenu2(element, options2) {
    var _this;
    _classCallCheck12(this, FloatingMenu2);
    _this = _super.call(this, element, options2);
    var attribDirectionValue = _this.element.getAttribute(_this.options.attribDirection);
    if (!_this.options.direction) {
      _this.options.direction = attribDirectionValue || "bottom";
    }
    if (!attribDirectionValue) {
      _this.element.setAttribute(_this.options.attribDirection, _this.options.direction);
    }
    _this.manage(on(_this.element.ownerDocument, "keydown", function(event) {
      _this._handleKeydown(event);
    }));
    return _this;
  }
  _createClass11(FloatingMenu2, [{
    key: "_handleKeydown",
    value: function _handleKeydown(event) {
      var key = event.which;
      var _this$options = this.options, triggerNode = _this$options.triggerNode, refNode = _this$options.refNode;
      var isOfMenu = this.element.contains(event.target);
      switch (key) {
        case 27:
          this.changeState("hidden", getLaunchingDetails(event), function() {
            if (isOfMenu) {
              (triggerNode || refNode).focus();
            }
          });
          break;
        default:
          break;
      }
    }
  }, {
    key: "handleBlur",
    value: function handleBlur(event) {
      if (this.element.classList.contains(this.options.classShown)) {
        this.changeState("hidden", getLaunchingDetails(event));
        var _this$options2 = this.options, refNode = _this$options2.refNode, triggerNode = _this$options2.triggerNode;
        if ((event.relatedTarget === null || this.element.contains(event.relatedTarget)) && refNode && event.target !== refNode) {
          HTMLElement.prototype.focus.call(triggerNode || refNode);
        }
      }
    }
  }, {
    key: "_getContainer",
    value: function _getContainer() {
      return this.element.closest(this.options.selectorContainer) || this.element.ownerDocument.body;
    }
  }, {
    key: "_getPos",
    value: function _getPos() {
      var element = this.element;
      var _this$options3 = this.options, refNode = _this$options3.refNode, offset = _this$options3.offset, direction = _this$options3.direction;
      if (!refNode) {
        throw new Error("Cannot find the reference node for positioning floating menu.");
      }
      return getFloatingPosition({
        menuSize: element.getBoundingClientRect(),
        refPosition: refNode.getBoundingClientRect(),
        offset: typeof offset !== "function" ? offset : offset(element, direction, refNode),
        direction,
        scrollX: refNode.ownerDocument.defaultView.pageXOffset,
        scrollY: refNode.ownerDocument.defaultView.pageYOffset
      });
    }
  }, {
    key: "_testStyles",
    value: function _testStyles() {
      if (!this.options.debugStyle) {
        return;
      }
      var element = this.element;
      var computedStyle = element.ownerDocument.defaultView.getComputedStyle(element);
      var styles = {
        position: "absolute",
        right: "auto",
        margin: 0
      };
      Object.keys(styles).forEach(function(key) {
        var expected = typeof styles[key] === "number" ? parseFloat(styles[key]) : styles[key];
        var actual = computedStyle.getPropertyValue(key);
        if (expected !== actual) {
          console.warn("Floating menu component expects ".concat(key, ": ").concat(styles[key], " style."));
        }
      });
    }
  }, {
    key: "_place",
    value: function _place() {
      var element = this.element;
      var _this$_getPos = this._getPos(), left3 = _this$_getPos.left, top2 = _this$_getPos.top;
      element.style.left = "".concat(left3, "px");
      element.style.top = "".concat(top2, "px");
      this._testStyles();
    }
  }, {
    key: "shouldStateBeChanged",
    value: function shouldStateBeChanged(state) {
      return (state === "shown" || state === "hidden") && state !== (this.element.classList.contains(this.options.classShown) ? "shown" : "hidden");
    }
  }, {
    key: "_changeState",
    value: function _changeState(state, detail, callback) {
      var _this2 = this;
      var shown = state === "shown";
      var _this$options4 = this.options, refNode = _this$options4.refNode, classShown = _this$options4.classShown, classRefShown = _this$options4.classRefShown, triggerNode = _this$options4.triggerNode;
      if (!refNode) {
        throw new TypeError("Cannot find the reference node for changing the style.");
      }
      if (state === "shown") {
        if (!this.hResize) {
          this.hResize = resize_default.add(function() {
            _this2._place();
          });
        }
        this._getContainer().appendChild(this.element);
      }
      this.element.setAttribute("aria-hidden", (!shown).toString());
      (triggerNode || refNode).setAttribute("aria-expanded", shown.toString());
      this.element.classList.toggle(classShown, shown);
      if (classRefShown) {
        refNode.classList.toggle(classRefShown, shown);
      }
      if (state === "shown") {
        this._place();
        if (!this.element.hasAttribute(this.options.attribAvoidFocusOnOpen)) {
          var primaryFocusNode = this.element.querySelector(this.options.selectorPrimaryFocus);
          var contentNode = this.options.contentNode || this.element;
          var tabbableNode = contentNode.querySelector(settings_default.selectorTabbable);
          var focusableNode = contentNode.matches(settings_default.selectorFocusable) ? contentNode : contentNode.querySelector(settings_default.selectorFocusable);
          if (primaryFocusNode) {
            primaryFocusNode.focus();
          } else if (tabbableNode) {
            tabbableNode.focus();
          } else if (focusableNode) {
            focusableNode.focus();
          } else {
            this.element.focus();
            if (true) {
              true ? (0, import_warning.default)(focusableNode === null, 'Floating Menus must have at least a programmatically focusable child. This can be accomplished by adding tabindex="-1" to the content element.') : void 0;
            }
          }
        }
      }
      if (state === "hidden" && this.hResize) {
        this.hResize.release();
        this.hResize = null;
      }
      callback();
    }
  }, {
    key: "release",
    value: function release() {
      if (this.hResize) {
        this.hResize.release();
        this.hResize = null;
      }
      _get3(_getPrototypeOf11(FloatingMenu2.prototype), "release", this).call(this);
    }
  }]);
  FloatingMenu2.options = {
    selectorContainer: "[data-floating-menu-container]",
    selectorPrimaryFocus: "[data-floating-menu-primary-focus]",
    attribDirection: "data-floating-menu-direction",
    attribAvoidFocusOnOpen: "data-avoid-focus-on-open",
    classShown: "",
    classRefShown: "",
    eventBeforeShown: "floating-menu-beingshown",
    eventAfterShown: "floating-menu-shown",
    eventBeforeHidden: "floating-menu-beinghidden",
    eventAfterHidden: "floating-menu-hidden",
    refNode: null,
    offset: {
      left: 0,
      top: 0
    }
  };
  FloatingMenu2.components = new WeakMap();
  return FloatingMenu2;
}(mixin3(create_component_default, evented_show_hide_state_default, track_blur_default, handles_default));
var floating_menu_default = FloatingMenu;

// node_modules/carbon-components/es/components/overflow-menu/overflow-menu.js
function _typeof12(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof12 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof12 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof12(obj);
}
function _toConsumableArray3(arr) {
  return _arrayWithoutHoles3(arr) || _iterableToArray3(arr) || _unsupportedIterableToArray3(arr) || _nonIterableSpread3();
}
function _nonIterableSpread3() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray3(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray3(o, minLen);
}
function _iterableToArray3(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles3(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray3(arr);
}
function _arrayLikeToArray3(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _classCallCheck13(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties12(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass12(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties12(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties12(Constructor, staticProps);
  return Constructor;
}
function _inherits12(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf12(subClass, superClass);
}
function _setPrototypeOf12(o, p) {
  _setPrototypeOf12 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf12(o, p);
}
function _createSuper12(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct12();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf12(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf12(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn12(this, result2);
  };
}
function _possibleConstructorReturn12(self2, call) {
  if (call && (_typeof12(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized12(self2);
}
function _assertThisInitialized12(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct12() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf12(o) {
  _getPrototypeOf12 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf12(o);
}
function _defineProperty2(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value2,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value2;
  }
  return obj;
}
var triggerButtonPositionProps = function() {
  var _ref;
  return _ref = {}, _defineProperty2(_ref, DIRECTION_TOP, "bottom"), _defineProperty2(_ref, DIRECTION_BOTTOM, "top"), _defineProperty2(_ref, DIRECTION_LEFT, "left"), _defineProperty2(_ref, DIRECTION_RIGHT, "right"), _ref;
}();
var triggerButtonPositionFactors = function() {
  var _ref2;
  return _ref2 = {}, _defineProperty2(_ref2, DIRECTION_TOP, -2), _defineProperty2(_ref2, DIRECTION_BOTTOM, -1), _defineProperty2(_ref2, DIRECTION_LEFT, -2), _defineProperty2(_ref2, DIRECTION_RIGHT, -1), _ref2;
}();
var getMenuOffset = function getMenuOffset2(menuBody, direction, trigger) {
  var triggerButtonPositionProp = triggerButtonPositionProps[direction];
  var triggerButtonPositionFactor = triggerButtonPositionFactors[direction];
  if (!triggerButtonPositionProp || !triggerButtonPositionFactor) {
    console.warn("Wrong floating menu direction:", direction);
  }
  var menuWidth = menuBody.offsetWidth;
  var menuHeight = menuBody.offsetHeight;
  var menu = OverflowMenu.components.get(trigger);
  if (!menu) {
    throw new TypeError("Overflow menu instance cannot be found.");
  }
  var flip2 = menuBody.classList.contains(menu.options.classMenuFlip);
  if (triggerButtonPositionProp === "top" || triggerButtonPositionProp === "bottom") {
    var triggerWidth = trigger.offsetWidth;
    return {
      left: (!flip2 ? 1 : -1) * (menuWidth / 2 - triggerWidth / 2),
      top: 0
    };
  }
  if (triggerButtonPositionProp === "left" || triggerButtonPositionProp === "right") {
    var triggerHeight = trigger.offsetHeight;
    return {
      left: 0,
      top: (!flip2 ? 1 : -1) * (menuHeight / 2 - triggerHeight / 2)
    };
  }
  return void 0;
};
var OverflowMenu = function(_mixin) {
  _inherits12(OverflowMenu2, _mixin);
  var _super = _createSuper12(OverflowMenu2);
  function OverflowMenu2(element, options2) {
    var _this;
    _classCallCheck13(this, OverflowMenu2);
    _this = _super.call(this, element, options2);
    _this.getCurrentNavigation = function() {
      var focused = _this.element.ownerDocument.activeElement;
      return focused.nodeType === Node.ELEMENT_NODE && focused.matches(_this.options.selectorItem) ? focused : null;
    };
    _this.navigate = function(direction) {
      var items = _toConsumableArray3(_this.element.ownerDocument.querySelectorAll(_this.options.selectorItem));
      var start2 = _this.getCurrentNavigation() || _this.element.querySelector(_this.options.selectorItemSelected);
      var getNextItem = function getNextItem2(old) {
        var handleUnderflow = function handleUnderflow2(index5, length) {
          return index5 + (index5 >= 0 ? 0 : length);
        };
        var handleOverflow = function handleOverflow2(index5, length) {
          return index5 - (index5 < length ? 0 : length);
        };
        var index4 = Math.max(items.indexOf(old) + direction, -1);
        return items[handleUnderflow(handleOverflow(index4, items.length), items.length)];
      };
      for (var current = getNextItem(start2); current && current !== start2; current = getNextItem(current)) {
        if (!current.matches(_this.options.selectorItemHidden) && !current.parentNode.matches(_this.options.selectorItemHidden) && !current.matches(_this.options.selectorItemSelected)) {
          current.focus();
          break;
        }
      }
    };
    if (_this.element.getAttribute("role") !== "button") {
      _this.triggerNode = _this.element.querySelector(_this.options.selectorTrigger);
    }
    _this.manage(on(_this.element.ownerDocument, "click", function(event) {
      _this._handleDocumentClick(event);
      _this.wasOpenBeforeClick = void 0;
    }));
    _this.manage(on(_this.element.ownerDocument, "keydown", function(event) {
      _this._handleKeyPress(event);
    }));
    _this.manage(on(_this.element, "mousedown", function() {
      _this.wasOpenBeforeClick = element.classList.contains(_this.options.classShown);
    }));
    return _this;
  }
  _createClass12(OverflowMenu2, [{
    key: "changeState",
    value: function changeState(state, detail, callback) {
      if (!this.optionMenu) {
        var optionMenu = this.element.querySelector(this.options.selectorOptionMenu);
        if (!optionMenu) {
          throw new Error("Cannot find the target menu.");
        }
        this.optionMenu = floating_menu_default.create(optionMenu, {
          refNode: this.element,
          classShown: this.options.classMenuShown,
          classRefShown: this.options.classShown,
          offset: this.options.objMenuOffset,
          triggerNode: this.triggerNode,
          contentNode: this.element.querySelector(this.options.selectorContent)
        });
        this.children.push(this.optionMenu);
      }
      if (this.optionMenu.element.classList.contains(this.options.classMenuFlip)) {
        this.optionMenu.options.offset = this.options.objMenuOffsetFlip;
      }
      this.optionMenu.changeState(state, Object.assign(detail, {
        delegatorNode: this.element
      }), callback);
    }
  }, {
    key: "_handleDocumentClick",
    value: function _handleDocumentClick(event) {
      var _this2 = this;
      var element = this.element, optionMenu = this.optionMenu, wasOpenBeforeClick = this.wasOpenBeforeClick, triggerNode = this.triggerNode;
      var isOfSelf = element.contains(event.target);
      var isOfMenu = optionMenu && optionMenu.element.contains(event.target);
      var shouldBeOpen = isOfSelf && !wasOpenBeforeClick;
      var state = shouldBeOpen ? "shown" : "hidden";
      if (isOfSelf) {
        if (element.tagName === "A") {
          event.preventDefault();
        }
        event.delegateTarget = element;
      }
      if (!isOfMenu || eventMatches(event, this.options.selectorItem)) {
        this.changeState(state, getLaunchingDetails(event), function() {
          if (state === "hidden" && isOfMenu) {
            _this2[triggerNode ? "triggerNode" : "element"].focus();
          }
        });
      }
    }
  }, {
    key: "_handleKeyPress",
    value: function _handleKeyPress(event) {
      var _this3 = this;
      var key = event.which;
      var element = this.element, optionMenu = this.optionMenu, options2 = this.options, triggerNode = this.triggerNode;
      var isOfMenu = optionMenu && optionMenu.element.contains(event.target);
      var isExpanded = this.element.classList.contains(this.options.classShown);
      var triggerElement = triggerNode ? "triggerNode" : "element";
      switch (key) {
        case 13:
        case 32: {
          if (!isExpanded && this.element.ownerDocument.activeElement !== this.element) {
            return;
          }
          var isOfSelf = element.contains(event.target);
          var shouldBeOpen = isOfSelf && !element.classList.contains(options2.classShown);
          var state = shouldBeOpen ? "shown" : "hidden";
          if (isOfSelf) {
            event.delegateTarget = element;
            event.preventDefault();
            this.changeState(state, getLaunchingDetails(event), function() {
              if (state === "hidden" && isOfMenu) {
                _this3[triggerElement].focus();
              }
            });
          }
          break;
        }
        case 38:
        case 40:
          {
            if (!isExpanded) {
              return;
            }
            event.preventDefault();
            var direction = {
              38: -1,
              40: 1
            }[event.which];
            this.navigate(direction);
          }
          break;
        default:
          break;
      }
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-overflow-menu]",
        selectorOptionMenu: ".".concat(prefix2, "--overflow-menu-options"),
        selectorTrigger: "button[aria-haspopup]",
        selectorContent: ".".concat(prefix2, "--overflow-menu-options__content"),
        selectorItem: "\n        .".concat(prefix2, "--overflow-menu-options--open\n        .").concat(prefix2, "--overflow-menu-options__option:not(.").concat(prefix2, "--overflow-menu-options__option--disabled) >\n        .").concat(prefix2, "--overflow-menu-options__btn\n      "),
        classShown: "".concat(prefix2, "--overflow-menu--open"),
        classMenuShown: "".concat(prefix2, "--overflow-menu-options--open"),
        classMenuFlip: "".concat(prefix2, "--overflow-menu--flip"),
        objMenuOffset: getMenuOffset,
        objMenuOffsetFlip: getMenuOffset
      };
    }
  }]);
  OverflowMenu2.components = new WeakMap();
  return OverflowMenu2;
}(mixin3(create_component_default, init_component_by_search_default, evented_show_hide_state_default, handles_default));

// node_modules/carbon-components/es/components/modal/modal.js
var import_warning2 = __toModule(require_browser());

// node_modules/carbon-components/es/globals/js/mixins/init-component-by-launcher.js
function _typeof13(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof13 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof13 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof13(obj);
}
function _classCallCheck14(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties13(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass13(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties13(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties13(Constructor, staticProps);
  return Constructor;
}
function _inherits13(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf13(subClass, superClass);
}
function _setPrototypeOf13(o, p) {
  _setPrototypeOf13 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf13(o, p);
}
function _createSuper13(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct13();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf13(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf13(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn13(this, result2);
  };
}
function _possibleConstructorReturn13(self2, call) {
  if (call && (_typeof13(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized13(self2);
}
function _assertThisInitialized13(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct13() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf13(o) {
  _getPrototypeOf13 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf13(o);
}
function init_component_by_launcher_default(ToMix) {
  var InitComponentByLauncher = function(_ToMix) {
    _inherits13(InitComponentByLauncher2, _ToMix);
    var _super = _createSuper13(InitComponentByLauncher2);
    function InitComponentByLauncher2() {
      _classCallCheck14(this, InitComponentByLauncher2);
      return _super.apply(this, arguments);
    }
    _createClass13(InitComponentByLauncher2, null, [{
      key: "init",
      value: function init2() {
        var _this = this;
        var target = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : document;
        var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var effectiveOptions = Object.assign(Object.create(this.options), options2);
        if (!target || target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {
          throw new TypeError("DOM document or DOM element should be given to search for and initialize this widget.");
        }
        if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {
          this.create(target, options2);
        } else {
          var handles = effectiveOptions.initEventNames.map(function(name) {
            return on(target, name, function(event) {
              var launcher = eventMatches(event, "[".concat(effectiveOptions.attribInitTarget, "]"));
              if (launcher) {
                event.delegateTarget = launcher;
                var elements = launcher.ownerDocument.querySelectorAll(launcher.getAttribute(effectiveOptions.attribInitTarget));
                if (elements.length > 1) {
                  throw new Error("Target widget must be unique.");
                }
                if (elements.length === 1) {
                  if (launcher.tagName === "A") {
                    event.preventDefault();
                  }
                  var component = _this.create(elements[0], options2);
                  if (typeof component.createdByLauncher === "function") {
                    component.createdByLauncher(event);
                  }
                }
              }
            });
          });
          return {
            release: function release() {
              for (var handle = handles.pop(); handle; handle = handles.pop()) {
                handle.release();
              }
            }
          };
        }
        return "";
      }
    }]);
    InitComponentByLauncher2.forLazyInit = true;
    return InitComponentByLauncher2;
  }(ToMix);
  return InitComponentByLauncher;
}

// node_modules/carbon-components/es/components/modal/modal.js
function _typeof14(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof14 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof14 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof14(obj);
}
function _classCallCheck15(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties14(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass14(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties14(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties14(Constructor, staticProps);
  return Constructor;
}
function _inherits14(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf14(subClass, superClass);
}
function _setPrototypeOf14(o, p) {
  _setPrototypeOf14 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf14(o, p);
}
function _createSuper14(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct14();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf14(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf14(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn14(this, result2);
  };
}
function _possibleConstructorReturn14(self2, call) {
  if (call && (_typeof14(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized14(self2);
}
function _assertThisInitialized14(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct14() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf14(o) {
  _getPrototypeOf14 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf14(o);
}
var Modal2 = function(_mixin) {
  _inherits14(Modal4, _mixin);
  var _super = _createSuper14(Modal4);
  function Modal4(element, options2) {
    var _this;
    _classCallCheck15(this, Modal4);
    _this = _super.call(this, element, options2);
    _this._handleFocusinListener = void 0;
    _this._handleKeydownListener = void 0;
    _this._handleFocusin = function(evt) {
      var focusWrapNode = _this.element.querySelector(_this.options.selectorModalContainer) || _this.element;
      if (_this.element.classList.contains(_this.options.classVisible) && !focusWrapNode.contains(evt.target) && _this.options.selectorsFloatingMenus.every(function(selector) {
        return !eventMatches(evt, selector);
      })) {
        _this.element.querySelector(settings_default.selectorTabbable).focus();
      }
    };
    _this._hookCloseActions();
    return _this;
  }
  _createClass14(Modal4, [{
    key: "createdByLauncher",
    value: function createdByLauncher(evt) {
      this.show(evt);
    }
  }, {
    key: "shouldStateBeChanged",
    value: function shouldStateBeChanged(state) {
      if (state === "shown") {
        return !this.element.classList.contains(this.options.classVisible);
      }
      return this.element.classList.contains(this.options.classVisible);
    }
  }, {
    key: "_changeState",
    value: function _changeState(state, detail, callback) {
      var _this2 = this;
      var handleTransitionEnd;
      var transitionEnd = function transitionEnd2() {
        if (handleTransitionEnd) {
          handleTransitionEnd = _this2.unmanage(handleTransitionEnd).release();
        }
        if (state === "shown" && _this2.element.offsetWidth > 0 && _this2.element.offsetHeight > 0) {
          _this2.previouslyFocusedNode = _this2.element.ownerDocument.activeElement;
          var focusableItem = _this2.element.querySelector(_this2.options.selectorPrimaryFocus) || _this2.element.querySelector(settings_default.selectorTabbable);
          focusableItem.focus();
          if (true) {
            true ? (0, import_warning2.default)(focusableItem, "Modals need to contain a focusable element by either using " + "`".concat(_this2.options.selectorPrimaryFocus, "` or settings.selectorTabbable.")) : void 0;
          }
        }
        callback();
      };
      if (this._handleFocusinListener) {
        this._handleFocusinListener = this.unmanage(this._handleFocusinListener).release();
      }
      if (state === "shown") {
        var hasFocusin = "onfocusin" in this.element.ownerDocument.defaultView;
        var focusinEventName = hasFocusin ? "focusin" : "focus";
        this._handleFocusinListener = this.manage(on(this.element.ownerDocument, focusinEventName, this._handleFocusin, !hasFocusin));
      }
      if (state === "hidden") {
        this.element.classList.toggle(this.options.classVisible, false);
        this.element.ownerDocument.body.classList.toggle(this.options.classBody, false);
        if (this.options.selectorFocusOnClose || this.previouslyFocusedNode) {
          (this.element.ownerDocument.querySelector(this.options.selectorFocusOnClose) || this.previouslyFocusedNode).focus();
        }
      } else if (state === "shown") {
        this.element.classList.toggle(this.options.classVisible, true);
        this.element.ownerDocument.body.classList.toggle(this.options.classBody, true);
      }
      handleTransitionEnd = this.manage(on(this.element, "transitionend", transitionEnd));
    }
  }, {
    key: "_hookCloseActions",
    value: function _hookCloseActions() {
      var _this3 = this;
      this.manage(on(this.element, "click", function(evt) {
        var closeButton = eventMatches(evt, _this3.options.selectorModalClose);
        if (closeButton) {
          evt.delegateTarget = closeButton;
        }
        if (closeButton || evt.target === _this3.element) {
          _this3.hide(evt);
        }
      }));
      if (this._handleKeydownListener) {
        this._handleKeydownListener = this.unmanage(this._handleKeydownListener).release();
      }
      this._handleKeydownListener = this.manage(on(this.element.ownerDocument.body, "keydown", function(evt) {
        if (evt.which === 27 && _this3.shouldStateBeChanged("hidden")) {
          evt.stopPropagation();
          _this3.hide(evt);
        }
      }));
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-modal]",
        selectorModalClose: "[data-modal-close]",
        selectorPrimaryFocus: "[data-modal-primary-focus]",
        selectorsFloatingMenus: [".".concat(prefix2, "--overflow-menu-options"), ".".concat(prefix2, "--tooltip"), ".flatpickr-calendar"],
        selectorModalContainer: ".".concat(prefix2, "--modal-container"),
        classVisible: "is-visible",
        classBody: "".concat(prefix2, "--body--with-modal-open"),
        attribInitTarget: "data-modal-target",
        initEventNames: ["click"],
        eventBeforeShown: "modal-beingshown",
        eventAfterShown: "modal-shown",
        eventBeforeHidden: "modal-beinghidden",
        eventAfterHidden: "modal-hidden"
      };
    }
  }]);
  Modal4.components = new WeakMap();
  return Modal4;
}(mixin3(create_component_default, init_component_by_launcher_default, evented_show_hide_state_default, handles_default));
var modal_default = Modal2;

// node_modules/carbon-components/es/components/loading/loading.js
function _typeof15(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof15 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof15 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof15(obj);
}
function _classCallCheck16(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties15(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass15(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties15(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties15(Constructor, staticProps);
  return Constructor;
}
function _inherits15(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf15(subClass, superClass);
}
function _setPrototypeOf15(o, p) {
  _setPrototypeOf15 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf15(o, p);
}
function _createSuper15(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct15();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf15(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf15(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn15(this, result2);
  };
}
function _possibleConstructorReturn15(self2, call) {
  if (call && (_typeof15(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized15(self2);
}
function _assertThisInitialized15(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct15() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf15(o) {
  _getPrototypeOf15 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf15(o);
}
var Loading = function(_mixin) {
  _inherits15(Loading2, _mixin);
  var _super = _createSuper15(Loading2);
  function Loading2(element, options2) {
    var _this;
    _classCallCheck16(this, Loading2);
    _this = _super.call(this, element, options2);
    _this.active = _this.options.active;
    _this.set(_this.active);
    return _this;
  }
  _createClass15(Loading2, [{
    key: "set",
    value: function set7(active) {
      if (typeof active !== "boolean") {
        throw new TypeError("set expects a boolean.");
      }
      this.active = active;
      this.element.classList.toggle(this.options.classLoadingStop, !this.active);
      var parentNode = this.element.parentNode;
      if (parentNode && parentNode.classList.contains(this.options.classLoadingOverlay)) {
        parentNode.classList.toggle(this.options.classLoadingOverlayStop, !this.active);
      }
      return this;
    }
  }, {
    key: "toggle",
    value: function toggle() {
      return this.set(!this.active);
    }
  }, {
    key: "isActive",
    value: function isActive() {
      return this.active;
    }
  }, {
    key: "end",
    value: function end() {
      var _this2 = this;
      this.set(false);
      var handleAnimationEnd = this.manage(on(this.element, "animationend", function(evt) {
        if (handleAnimationEnd) {
          handleAnimationEnd = _this2.unmanage(handleAnimationEnd).release();
        }
        if (evt.animationName === "rotate-end-p2") {
          _this2._deleteElement();
        }
      }));
    }
  }, {
    key: "_deleteElement",
    value: function _deleteElement() {
      var parentNode = this.element.parentNode;
      parentNode.removeChild(this.element);
      if (parentNode.classList.contains(this.options.selectorLoadingOverlay)) {
        parentNode.remove();
      }
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-loading]",
        selectorLoadingOverlay: ".".concat(prefix2, "--loading-overlay"),
        classLoadingOverlay: "".concat(prefix2, "--loading-overlay"),
        classLoadingStop: "".concat(prefix2, "--loading--stop"),
        classLoadingOverlayStop: "".concat(prefix2, "--loading-overlay--stop"),
        active: true
      };
    }
  }]);
  Loading2.components = new WeakMap();
  return Loading2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/globals/js/misc/toggle-attribute.js
function toggleAttribute(elem, name, add2) {
  if (add2) {
    elem.setAttribute(name, "");
  } else {
    elem.removeAttribute(name);
  }
}

// node_modules/carbon-components/es/components/inline-loading/inline-loading.js
function _typeof16(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof16 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof16 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof16(obj);
}
function _classCallCheck17(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties16(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass16(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties16(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties16(Constructor, staticProps);
  return Constructor;
}
function _inherits16(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf16(subClass, superClass);
}
function _setPrototypeOf16(o, p) {
  _setPrototypeOf16 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf16(o, p);
}
function _createSuper16(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct16();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf16(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf16(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn16(this, result2);
  };
}
function _possibleConstructorReturn16(self2, call) {
  if (call && (_typeof16(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized16(self2);
}
function _assertThisInitialized16(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct16() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf16(o) {
  _getPrototypeOf16 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf16(o);
}
var InlineLoading = function(_mixin) {
  _inherits16(InlineLoading2, _mixin);
  var _super = _createSuper16(InlineLoading2);
  function InlineLoading2(element, options2) {
    var _this;
    _classCallCheck17(this, InlineLoading2);
    _this = _super.call(this, element, options2);
    var initialState = _this.options.initialState;
    if (initialState) {
      _this.setState(initialState);
    }
    return _this;
  }
  _createClass16(InlineLoading2, [{
    key: "setState",
    value: function setState(state) {
      var states = this.constructor.states;
      var values2 = Object.keys(states).map(function(key) {
        return states[key];
      });
      if (values2.indexOf(state) < 0) {
        throw new Error("One of the following value should be given as the state: ".concat(values2.join(", ")));
      }
      var elem = this.element;
      var _this$options = this.options, selectorSpinner = _this$options.selectorSpinner, selectorFinished = _this$options.selectorFinished, selectorError = _this$options.selectorError, selectorTextActive = _this$options.selectorTextActive, selectorTextFinished = _this$options.selectorTextFinished, selectorTextError = _this$options.selectorTextError;
      var spinner = elem.querySelector(selectorSpinner);
      var finished = elem.querySelector(selectorFinished);
      var error = elem.querySelector(selectorError);
      var textActive = elem.querySelector(selectorTextActive);
      var textFinished = elem.querySelector(selectorTextFinished);
      var textError = elem.querySelector(selectorTextError);
      if (spinner) {
        spinner.classList.toggle(this.options.classLoadingStop, state !== states.ACTIVE);
        toggleAttribute(spinner, "hidden", state !== states.INACTIVE && state !== states.ACTIVE);
      }
      if (finished) {
        toggleAttribute(finished, "hidden", state !== states.FINISHED);
      }
      if (error) {
        toggleAttribute(error, "hidden", state !== states.ERROR);
      }
      if (textActive) {
        toggleAttribute(textActive, "hidden", state !== states.ACTIVE);
      }
      if (textFinished) {
        toggleAttribute(textFinished, "hidden", state !== states.FINISHED);
      }
      if (textError) {
        toggleAttribute(textError, "hidden", state !== states.ERROR);
      }
      return this;
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-inline-loading]",
        selectorSpinner: "[data-inline-loading-spinner]",
        selectorFinished: "[data-inline-loading-finished]",
        selectorError: "[data-inline-loading-error]",
        selectorTextActive: "[data-inline-loading-text-active]",
        selectorTextFinished: "[data-inline-loading-text-finished]",
        selectorTextError: "[data-inline-loading-text-error]",
        classLoadingStop: "".concat(prefix2, "--loading--stop")
      };
    }
  }]);
  InlineLoading2.states = {
    INACTIVE: "inactive",
    ACTIVE: "active",
    FINISHED: "finished",
    ERROR: "error"
  };
  InlineLoading2.components = new WeakMap();
  return InlineLoading2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/components/dropdown/dropdown.js
function _typeof17(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof17 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof17 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof17(obj);
}
function _classCallCheck18(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties17(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass17(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties17(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties17(Constructor, staticProps);
  return Constructor;
}
function _inherits17(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf17(subClass, superClass);
}
function _setPrototypeOf17(o, p) {
  _setPrototypeOf17 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf17(o, p);
}
function _createSuper17(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct17();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf17(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf17(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn17(this, result2);
  };
}
function _possibleConstructorReturn17(self2, call) {
  if (call && (_typeof17(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized17(self2);
}
function _assertThisInitialized17(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct17() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf17(o) {
  _getPrototypeOf17 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf17(o);
}
var toArray8 = function toArray9(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};
var Dropdown = function(_mixin) {
  _inherits17(Dropdown2, _mixin);
  var _super = _createSuper17(Dropdown2);
  function Dropdown2(element, options2) {
    var _this;
    _classCallCheck18(this, Dropdown2);
    _this = _super.call(this, element, options2);
    _this.manage(on(_this.element.ownerDocument, "click", function(event) {
      _this._toggle(event);
    }));
    _this.manage(on(_this.element, "keydown", function(event) {
      _this._handleKeyDown(event);
    }));
    _this.manage(on(_this.element, "click", function(event) {
      var item = eventMatches(event, _this.options.selectorItem);
      if (item) {
        _this.select(item);
      }
    }));
    if (_this.element.querySelector(_this.options.selectorTrigger) && _this.element.querySelector(_this.options.selectorMenu)) {
      _this.manage(on(_this.element, "mouseover", function(event) {
        var item = eventMatches(event, _this.options.selectorItem);
        if (item) {
          _this._updateFocus(item);
        }
      }));
    }
    return _this;
  }
  _createClass17(Dropdown2, [{
    key: "_handleKeyDown",
    value: function _handleKeyDown(event) {
      var isOpen = this.element.classList.contains(this.options.classOpen);
      var direction = {
        38: this.constructor.NAVIGATE.BACKWARD,
        40: this.constructor.NAVIGATE.FORWARD
      }[event.which];
      if (isOpen && direction !== void 0) {
        this.navigate(direction);
        event.preventDefault();
      } else {
        var item = this.getCurrentNavigation();
        if (item && isOpen && (event.which === 13 || event.which === 32) && !this.element.ownerDocument.activeElement.matches(this.options.selectorItem)) {
          event.preventDefault();
          this.select(item);
        }
        this._toggle(event);
      }
    }
  }, {
    key: "_focusCleanup",
    value: function _focusCleanup() {
      var triggerNode = this.element.querySelector(this.options.selectorTrigger);
      var listNode = triggerNode ? this.element.querySelector(this.options.selectorMenu) : null;
      if (listNode) {
        listNode.removeAttribute("aria-activedescendant");
        var focusedItem = this.element.querySelector(this.options.selectorItemFocused);
        if (focusedItem) {
          focusedItem.classList.remove(this.options.classFocused);
        }
      }
    }
  }, {
    key: "_updateFocus",
    value: function _updateFocus(itemToFocus) {
      var triggerNode = this.element.querySelector(this.options.selectorTrigger);
      var listNode = triggerNode ? this.element.querySelector(this.options.selectorMenu) : null;
      var previouslyFocused = listNode.querySelector(this.options.selectorItemFocused);
      itemToFocus.classList.add(this.options.classFocused);
      listNode.setAttribute("aria-activedescendant", itemToFocus.id);
      if (previouslyFocused) {
        previouslyFocused.classList.remove(this.options.classFocused);
      }
    }
  }, {
    key: "_toggle",
    value: function _toggle(event) {
      var _this2 = this;
      var isDisabled = this.element.classList.contains(this.options.classDisabled);
      if (isDisabled) {
        return;
      }
      var triggerNode = this.element.querySelector(this.options.selectorTrigger);
      if (event.which === 40 && !event.target.matches(this.options.selectorItem) || (!triggerNode || !triggerNode.contains(event.target)) && [13, 32].indexOf(event.which) >= 0 && !event.target.matches(this.options.selectorItem) || event.which === 27 || event.type === "click") {
        var isOpen = this.element.classList.contains(this.options.classOpen);
        var isOfSelf = this.element.contains(event.target);
        var actions = {
          add: isOfSelf && event.which === 40 && !isOpen,
          remove: (!isOfSelf || event.which === 27) && isOpen,
          toggle: isOfSelf && event.which !== 27 && event.which !== 40
        };
        var changedState = false;
        Object.keys(actions).forEach(function(action) {
          if (actions[action]) {
            changedState = true;
            _this2.element.classList[action](_this2.options.classOpen);
          }
        });
        var listItems = toArray8(this.element.querySelectorAll(this.options.selectorItem));
        var listNode = triggerNode ? this.element.querySelector(this.options.selectorMenu) : null;
        if (changedState && this.element.classList.contains(this.options.classOpen)) {
          if (triggerNode) {
            triggerNode.setAttribute("aria-expanded", "true");
          }
          (listNode || this.element).focus();
          if (listNode) {
            var selectedNode = listNode.querySelector(this.options.selectorLinkSelected);
            listNode.setAttribute("aria-activedescendant", (selectedNode || listItems[0]).id);
            (selectedNode || listItems[0]).classList.add(this.options.classFocused);
          }
        } else if (changedState && (isOfSelf || actions.remove)) {
          setTimeout(function() {
            return (triggerNode || _this2.element).focus();
          }, 0);
          if (triggerNode) {
            triggerNode.setAttribute("aria-expanded", "false");
          }
          this._focusCleanup();
        }
        if (!triggerNode) {
          listItems.forEach(function(item) {
            if (_this2.element.classList.contains(_this2.options.classOpen)) {
              item.tabIndex = 0;
            } else {
              item.tabIndex = -1;
            }
          });
        }
        var menuListNode = this.element.querySelector(this.options.selectorMenu);
        if (menuListNode) {
          menuListNode.tabIndex = this.element.classList.contains(this.options.classOpen) ? "0" : "-1";
        }
      }
    }
  }, {
    key: "getCurrentNavigation",
    value: function getCurrentNavigation() {
      var focusedNode;
      if (this.element.querySelector(this.options.selectorTrigger)) {
        var listNode = this.element.querySelector(this.options.selectorMenu);
        var focusedId = listNode.getAttribute("aria-activedescendant");
        focusedNode = focusedId ? listNode.querySelector("#".concat(focusedId)) : null;
      } else {
        var focused = this.element.ownerDocument.activeElement;
        focusedNode = focused.nodeType === Node.ELEMENT_NODE && focused.matches(this.options.selectorItem) ? focused : null;
      }
      return focusedNode;
    }
  }, {
    key: "navigate",
    value: function navigate(direction) {
      var items = toArray8(this.element.querySelectorAll(this.options.selectorItem));
      var start2 = this.getCurrentNavigation() || this.element.querySelector(this.options.selectorLinkSelected);
      var getNextItem = function getNextItem2(old) {
        var handleUnderflow = function handleUnderflow2(i, l) {
          return i + (i >= 0 ? 0 : l);
        };
        var handleOverflow = function handleOverflow2(i, l) {
          return i - (i < l ? 0 : l);
        };
        var index4 = Math.max(items.indexOf(old) + direction, -1);
        return items[handleUnderflow(handleOverflow(index4, items.length), items.length)];
      };
      var isShowSelected = this.element.classList.contains(this.options.classShowSelected);
      for (var current = getNextItem(start2); current && current !== start2; current = getNextItem(current)) {
        if (!current.matches(this.options.selectorItemHidden) && !current.parentNode.matches(this.options.selectorItemHidden) && (isShowSelected || !isShowSelected && !current.parentElement.matches(this.options.selectorItemSelected))) {
          if (this.element.querySelector(this.options.selectorTrigger)) {
            this._updateFocus(current);
          } else {
            current.focus();
          }
          break;
        }
      }
    }
  }, {
    key: "select",
    value: function select(itemToSelect) {
      var _this3 = this;
      var eventStart = new CustomEvent(this.options.eventBeforeSelected, {
        bubbles: true,
        cancelable: true,
        detail: {
          item: itemToSelect
        }
      });
      if (this.element.dispatchEvent(eventStart)) {
        if (this.element.dataset.dropdownType !== "navigation") {
          var selectorText = !this.element.querySelector(this.options.selectorTrigger) && this.element.dataset.dropdownType !== "inline" ? this.options.selectorText : this.options.selectorTextInner;
          var text = this.element.querySelector(selectorText);
          if (text) {
            text.innerHTML = itemToSelect.innerHTML;
          }
          itemToSelect.parentElement.classList.add(this.options.classSelected);
        }
        this.element.dataset.value = itemToSelect.parentElement.dataset.value;
        toArray8(this.element.querySelectorAll(this.options.selectorLinkSelected)).forEach(function(item) {
          if (itemToSelect !== item) {
            item.parentElement.classList.remove(_this3.options.classSelected);
          }
        });
        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {
          bubbles: true,
          cancelable: true,
          detail: {
            item: itemToSelect
          }
        }));
      }
    }
  }, {
    key: "handleBlur",
    value: function handleBlur() {
      this.element.classList.remove(this.options.classOpen);
      this._focusCleanup();
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-dropdown]",
        selectorTrigger: "button.".concat(prefix2, "--dropdown-text"),
        selectorMenu: ".".concat(prefix2, "--dropdown-list"),
        selectorText: ".".concat(prefix2, "--dropdown-text"),
        selectorTextInner: ".".concat(prefix2, "--dropdown-text__inner"),
        selectorItem: ".".concat(prefix2, "--dropdown-link"),
        selectorItemSelected: ".".concat(prefix2, "--dropdown--selected"),
        selectorItemFocused: ".".concat(prefix2, "--dropdown--focused"),
        selectorItemHidden: '[hidden],[aria-hidden="true"]',
        selectorLinkSelected: ".".concat(prefix2, "--dropdown--selected .").concat(prefix2, "--dropdown-link"),
        classShowSelected: "".concat(prefix2, "--dropdown--show-selected"),
        classSelected: "".concat(prefix2, "--dropdown--selected"),
        classFocused: "".concat(prefix2, "--dropdown--focused"),
        classOpen: "".concat(prefix2, "--dropdown--open"),
        classDisabled: "".concat(prefix2, "--dropdown--disabled"),
        eventBeforeSelected: "dropdown-beingselected",
        eventAfterSelected: "dropdown-selected"
      };
    }
  }]);
  Dropdown2.components = new WeakMap();
  Dropdown2.NAVIGATE = {
    BACKWARD: -1,
    FORWARD: 1
  };
  return Dropdown2;
}(mixin3(create_component_default, init_component_by_search_default, track_blur_default));

// node_modules/carbon-components/es/components/number-input/number-input.js
function _typeof18(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof18 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof18 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof18(obj);
}
function _classCallCheck19(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties18(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass18(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties18(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties18(Constructor, staticProps);
  return Constructor;
}
function _inherits18(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf18(subClass, superClass);
}
function _setPrototypeOf18(o, p) {
  _setPrototypeOf18 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf18(o, p);
}
function _createSuper18(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct18();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf18(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf18(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn18(this, result2);
  };
}
function _possibleConstructorReturn18(self2, call) {
  if (call && (_typeof18(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized18(self2);
}
function _assertThisInitialized18(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct18() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf18(o) {
  _getPrototypeOf18 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf18(o);
}
var NumberInput = function(_mixin) {
  _inherits18(NumberInput2, _mixin);
  var _super = _createSuper18(NumberInput2);
  function NumberInput2(element, options2) {
    var _this;
    _classCallCheck19(this, NumberInput2);
    _this = _super.call(this, element, options2);
    _this.manage(on(_this.element.querySelector(".up-icon"), "click", function(event) {
      _this._handleClick(event);
    }));
    _this.manage(on(_this.element.querySelector(".down-icon"), "click", function(event) {
      _this._handleClick(event);
    }));
    return _this;
  }
  _createClass18(NumberInput2, [{
    key: "_handleClick",
    value: function _handleClick(event) {
      var numberInput = this.element.querySelector(this.options.selectorInput);
      var target = event.currentTarget.getAttribute("class").split(" ");
      var min8 = Number(numberInput.min);
      var max8 = Number(numberInput.max);
      var step = Number(numberInput.step) || 1;
      if (target.indexOf("up-icon") >= 0) {
        var nextValue = Number(numberInput.value) + step;
        if (numberInput.max === "") {
          numberInput.value = nextValue;
        } else if (numberInput.value < max8) {
          if (nextValue > max8) {
            numberInput.value = max8;
          } else if (nextValue < min8) {
            numberInput.value = min8;
          } else {
            numberInput.value = nextValue;
          }
        }
      } else if (target.indexOf("down-icon") >= 0) {
        var _nextValue = Number(numberInput.value) - step;
        if (numberInput.min === "") {
          numberInput.value = _nextValue;
        } else if (numberInput.value > min8) {
          if (_nextValue < min8) {
            numberInput.value = min8;
          } else if (_nextValue > max8) {
            numberInput.value = max8;
          } else {
            numberInput.value = _nextValue;
          }
        }
      }
      numberInput.dispatchEvent(new CustomEvent("change", {
        bubbles: true,
        cancelable: false
      }));
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-numberinput]",
        selectorInput: ".".concat(prefix2, "--number input")
      };
    }
  }]);
  NumberInput2.components = new WeakMap();
  return NumberInput2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/components/data-table/data-table.js
function _typeof19(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof19 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof19 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof19(obj);
}
function _toConsumableArray4(arr) {
  return _arrayWithoutHoles4(arr) || _iterableToArray4(arr) || _unsupportedIterableToArray4(arr) || _nonIterableSpread4();
}
function _nonIterableSpread4() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray4(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray4(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray4(o, minLen);
}
function _iterableToArray4(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles4(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray4(arr);
}
function _arrayLikeToArray4(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _classCallCheck20(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties19(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass19(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties19(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties19(Constructor, staticProps);
  return Constructor;
}
function _inherits19(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf19(subClass, superClass);
}
function _setPrototypeOf19(o, p) {
  _setPrototypeOf19 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf19(o, p);
}
function _createSuper19(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct19();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf19(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf19(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn19(this, result2);
  };
}
function _possibleConstructorReturn19(self2, call) {
  if (call && (_typeof19(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized19(self2);
}
function _assertThisInitialized19(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct19() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf19(o) {
  _getPrototypeOf19 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf19(o);
}
var toArray10 = function toArray11(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};
var DataTable = function(_mixin) {
  _inherits19(DataTable2, _mixin);
  var _super = _createSuper19(DataTable2);
  function DataTable2(_element, options2) {
    var _this;
    _classCallCheck20(this, DataTable2);
    _this = _super.call(this, _element, options2);
    _this._sortToggle = function(detail) {
      var element = detail.element, previousValue = detail.previousValue;
      toArray10(_this.tableHeaders).forEach(function(header) {
        var sortEl = header.querySelector(_this.options.selectorTableSort);
        if (sortEl !== null && sortEl !== element) {
          sortEl.classList.remove(_this.options.classTableSortActive);
          sortEl.classList.remove(_this.options.classTableSortAscending);
        }
      });
      if (!previousValue) {
        element.dataset.previousValue = "ascending";
        element.classList.add(_this.options.classTableSortActive);
        element.classList.add(_this.options.classTableSortAscending);
      } else if (previousValue === "ascending") {
        element.dataset.previousValue = "descending";
        element.classList.add(_this.options.classTableSortActive);
        element.classList.remove(_this.options.classTableSortAscending);
      } else if (previousValue === "descending") {
        element.removeAttribute("data-previous-value");
        element.classList.remove(_this.options.classTableSortActive);
        element.classList.remove(_this.options.classTableSortAscending);
      }
    };
    _this._selectToggle = function(detail) {
      var element = detail.element;
      var checked = element.checked;
      _this.state.checkboxCount += checked ? 1 : -1;
      _this.countEl.textContent = _this.state.checkboxCount;
      var row = element.parentNode.parentNode;
      row.classList.toggle(_this.options.classTableSelected);
      _this._actionBarToggle(_this.state.checkboxCount > 0);
    };
    _this._selectAllToggle = function(_ref) {
      var element = _ref.element;
      var checked = element.checked;
      var inputs = toArray10(_this.element.querySelectorAll(_this.options.selectorCheckbox));
      _this.state.checkboxCount = checked ? inputs.length - 1 : 0;
      inputs.forEach(function(item) {
        item.checked = checked;
        var row = item.parentNode.parentNode;
        if (checked && row) {
          row.classList.add(_this.options.classTableSelected);
        } else {
          row.classList.remove(_this.options.classTableSelected);
        }
      });
      _this._actionBarToggle(_this.state.checkboxCount > 0);
      if (_this.batchActionEl) {
        _this.countEl.textContent = _this.state.checkboxCount;
      }
    };
    _this._actionBarCancel = function() {
      var inputs = toArray10(_this.element.querySelectorAll(_this.options.selectorCheckbox));
      var row = toArray10(_this.element.querySelectorAll(_this.options.selectorTableSelected));
      row.forEach(function(item) {
        item.classList.remove(_this.options.classTableSelected);
      });
      inputs.forEach(function(item) {
        item.checked = false;
      });
      _this.state.checkboxCount = 0;
      _this._actionBarToggle(false);
      if (_this.batchActionEl) {
        _this.countEl.textContent = _this.state.checkboxCount;
      }
    };
    _this._actionBarToggle = function(toggleOn) {
      var handleTransitionEnd;
      var transition2 = function transition3(evt) {
        if (handleTransitionEnd) {
          handleTransitionEnd = _this.unmanage(handleTransitionEnd).release();
        }
        if (evt.target.matches(_this.options.selectorActions)) {
          if (_this.batchActionEl.dataset.active === "false") {
            _this.batchActionEl.setAttribute("tabIndex", -1);
          } else {
            _this.batchActionEl.setAttribute("tabIndex", 0);
          }
        }
      };
      if (toggleOn) {
        _this.batchActionEl.dataset.active = true;
        _this.batchActionEl.classList.add(_this.options.classActionBarActive);
      } else if (_this.batchActionEl) {
        _this.batchActionEl.dataset.active = false;
        _this.batchActionEl.classList.remove(_this.options.classActionBarActive);
      }
      if (_this.batchActionEl) {
        handleTransitionEnd = _this.manage(on(_this.batchActionEl, "transitionend", transition2));
      }
    };
    _this._rowExpandToggle = function(_ref2) {
      var element = _ref2.element, forceExpand = _ref2.forceExpand;
      var parent2 = element.closest(_this.options.eventParentContainer);
      var shouldExpand = forceExpand != null ? forceExpand : element.dataset.previousValue === void 0 || element.dataset.previousValue === "expanded";
      if (shouldExpand) {
        element.dataset.previousValue = "collapsed";
        parent2.classList.add(_this.options.classExpandableRow);
      } else {
        parent2.classList.remove(_this.options.classExpandableRow);
        element.dataset.previousValue = "expanded";
        var expandHeader = _this.element.querySelector(_this.options.selectorExpandHeader);
        if (expandHeader) {
          expandHeader.dataset.previousValue = "expanded";
        }
      }
    };
    _this._rowExpandToggleAll = function(_ref3) {
      var element = _ref3.element;
      var shouldExpand = element.dataset.previousValue === void 0 || element.dataset.previousValue === "expanded";
      element.dataset.previousValue = shouldExpand ? "collapsed" : "expanded";
      var expandCells = _this.element.querySelectorAll(_this.options.selectorExpandCells);
      Array.prototype.forEach.call(expandCells, function(cell) {
        _this._rowExpandToggle({
          element: cell,
          forceExpand: shouldExpand
        });
      });
    };
    _this._expandableHoverToggle = function(evt) {
      var element = eventMatches(evt, _this.options.selectorChildRow);
      if (element) {
        element.previousElementSibling.classList.toggle(_this.options.classExpandableRowHover, evt.type === "mouseover");
      }
    };
    _this._toggleState = function(element, evt) {
      var data = element.dataset;
      var label = data.label ? data.label : "";
      var previousValue = data.previousValue ? data.previousValue : "";
      var initialEvt = evt;
      _this.changeState({
        group: data.event,
        element,
        label,
        previousValue,
        initialEvt
      });
    };
    _this._keydownHandler = function(evt) {
      var searchContainer = _this.element.querySelector(_this.options.selectorToolbarSearchContainer);
      var searchEvent = eventMatches(evt, _this.options.selectorSearchMagnifier);
      var activeSearch = searchContainer.classList.contains(_this.options.classToolbarSearchActive);
      if (evt.which === 27) {
        _this._actionBarCancel();
      }
      if (searchContainer && searchEvent && evt.which === 13) {
        _this.activateSearch(searchContainer);
      }
      if (activeSearch && evt.which === 27) {
        _this.deactivateSearch(searchContainer, evt);
      }
    };
    _this.refreshRows = function() {
      var newExpandCells = toArray10(_this.element.querySelectorAll(_this.options.selectorExpandCells));
      var newExpandableRows = toArray10(_this.element.querySelectorAll(_this.options.selectorExpandableRows));
      var newParentRows = toArray10(_this.element.querySelectorAll(_this.options.selectorParentRows));
      if (_this.parentRows.length > 0) {
        var diffParentRows = newParentRows.filter(function(newRow) {
          return !_this.parentRows.some(function(oldRow) {
            return oldRow === newRow;
          });
        });
        if (newExpandableRows.length > 0) {
          var diffExpandableRows = diffParentRows.map(function(newRow) {
            return newRow.nextElementSibling;
          });
          var mergedExpandableRows = [].concat(_toConsumableArray4(toArray10(_this.expandableRows)), _toConsumableArray4(toArray10(diffExpandableRows)));
          _this.expandableRows = mergedExpandableRows;
        }
      } else if (newExpandableRows.length > 0) {
        _this.expandableRows = newExpandableRows;
      }
      _this.expandCells = newExpandCells;
      _this.parentRows = newParentRows;
    };
    _this.container = _element.parentNode;
    _this.toolbarEl = _this.element.querySelector(_this.options.selectorToolbar);
    _this.batchActionEl = _this.element.querySelector(_this.options.selectorActions);
    _this.countEl = _this.element.querySelector(_this.options.selectorCount);
    _this.cancelEl = _this.element.querySelector(_this.options.selectorActionCancel);
    _this.tableHeaders = _this.element.querySelectorAll("th");
    _this.tableBody = _this.element.querySelector(_this.options.selectorTableBody);
    _this.expandCells = [];
    _this.expandableRows = [];
    _this.parentRows = [];
    _this.refreshRows();
    _this.manage(on(_this.element, "mouseover", _this._expandableHoverToggle));
    _this.manage(on(_this.element, "mouseout", _this._expandableHoverToggle));
    _this.manage(on(_this.element, "click", function(evt) {
      var eventElement = eventMatches(evt, _this.options.eventTrigger);
      var searchContainer = _this.element.querySelector(_this.options.selectorToolbarSearchContainer);
      if (eventElement) {
        _this._toggleState(eventElement, evt);
      }
      if (searchContainer) {
        _this._handleDocumentClick(evt);
      }
    }));
    _this.manage(on(_this.element, "keydown", _this._keydownHandler));
    _this.state = {
      checkboxCount: 0
    };
    return _this;
  }
  _createClass19(DataTable2, [{
    key: "_handleDocumentClick",
    value: function _handleDocumentClick(evt) {
      var searchContainer = this.element.querySelector(this.options.selectorToolbarSearchContainer);
      var searchEvent = eventMatches(evt, this.options.selectorSearchMagnifier);
      var activeSearch = searchContainer.classList.contains(this.options.classToolbarSearchActive);
      if (searchContainer && searchEvent) {
        this.activateSearch(searchContainer);
      }
      if (activeSearch) {
        this.deactivateSearch(searchContainer, evt);
      }
    }
  }, {
    key: "activateSearch",
    value: function activateSearch(container) {
      var input = container.querySelector(this.options.selectorSearchInput);
      container.classList.add(this.options.classToolbarSearchActive);
      input.focus();
    }
  }, {
    key: "deactivateSearch",
    value: function deactivateSearch(container, evt) {
      var trigger = container.querySelector(this.options.selectorSearchMagnifier);
      var input = container.querySelector(this.options.selectorSearchInput);
      var svg = trigger.querySelector("svg");
      if (input.value.length === 0 && evt.target !== input && evt.target !== trigger && evt.target !== svg) {
        container.classList.remove(this.options.classToolbarSearchActive);
        trigger.focus();
      }
      if (evt.which === 27 && evt.target === input) {
        container.classList.remove(this.options.classToolbarSearchActive);
        trigger.focus();
      }
    }
  }, {
    key: "_changeState",
    value: function _changeState(detail, callback) {
      this[this.constructor.eventHandlers[detail.group]](detail);
      callback();
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-table]",
        selectorToolbar: ".".concat(prefix2, "--table--toolbar"),
        selectorActions: ".".concat(prefix2, "--batch-actions"),
        selectorCount: "[data-items-selected]",
        selectorActionCancel: ".".concat(prefix2, "--batch-summary__cancel"),
        selectorCheckbox: ".".concat(prefix2, "--checkbox"),
        selectorExpandHeader: "th.".concat(prefix2, "--table-expand"),
        selectorExpandCells: "td.".concat(prefix2, "--table-expand"),
        selectorExpandableRows: ".".concat(prefix2, "--expandable-row"),
        selectorParentRows: ".".concat(prefix2, "--parent-row"),
        selectorChildRow: "[data-child-row]",
        selectorTableBody: "tbody",
        selectorTableSort: ".".concat(prefix2, "--table-sort"),
        selectorTableSelected: ".".concat(prefix2, "--data-table--selected"),
        selectorToolbarSearchContainer: ".".concat(prefix2, "--toolbar-search-container-expandable"),
        selectorSearchMagnifier: ".".concat(prefix2, "--search-magnifier"),
        selectorSearchInput: ".".concat(prefix2, "--search-input"),
        classExpandableRow: "".concat(prefix2, "--expandable-row"),
        classExpandableRowHidden: "".concat(prefix2, "--expandable-row--hidden"),
        classExpandableRowHover: "".concat(prefix2, "--expandable-row--hover"),
        classTableSortAscending: "".concat(prefix2, "--table-sort--ascending"),
        classTableSortActive: "".concat(prefix2, "--table-sort--active"),
        classToolbarSearchActive: "".concat(prefix2, "--toolbar-search-container-active"),
        classActionBarActive: "".concat(prefix2, "--batch-actions--active"),
        classTableSelected: "".concat(prefix2, "--data-table--selected"),
        eventBeforeExpand: "data-table-beforetoggleexpand",
        eventAfterExpand: "data-table-aftertoggleexpand",
        eventBeforeExpandAll: "data-table-beforetoggleexpandall",
        eventAfterExpandAll: "data-table-aftertoggleexpandall",
        eventBeforeSort: "data-table-beforetogglesort",
        eventAfterSort: "data-table-aftertogglesort",
        eventTrigger: "[data-event]",
        eventParentContainer: "[data-parent-row]"
      };
    }
  }]);
  DataTable2.components = new WeakMap();
  DataTable2.eventHandlers = {
    expand: "_rowExpandToggle",
    expandAll: "_rowExpandToggleAll",
    sort: "_sortToggle",
    select: "_selectToggle",
    "select-all": "_selectAllToggle",
    "action-bar-cancel": "_actionBarCancel"
  };
  return DataTable2;
}(mixin3(create_component_default, init_component_by_search_default, evented_state_default, handles_default));

// node_modules/carbon-components/es/components/date-picker/date-picker.js
var import_flatpickr = __toModule(require_flatpickr());
function _typeof20(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof20 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof20 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof20(obj);
}
function _classCallCheck21(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties20(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass20(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties20(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties20(Constructor, staticProps);
  return Constructor;
}
function _get4(target, property2, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get4 = Reflect.get;
  } else {
    _get4 = function _get7(target2, property3, receiver2) {
      var base = _superPropBase4(target2, property3);
      if (!base)
        return;
      var desc = Object.getOwnPropertyDescriptor(base, property3);
      if (desc.get) {
        return desc.get.call(receiver2);
      }
      return desc.value;
    };
  }
  return _get4(target, property2, receiver || target);
}
function _superPropBase4(object, property2) {
  while (!Object.prototype.hasOwnProperty.call(object, property2)) {
    object = _getPrototypeOf20(object);
    if (object === null)
      break;
  }
  return object;
}
function _inherits20(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf20(subClass, superClass);
}
function _setPrototypeOf20(o, p) {
  _setPrototypeOf20 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf20(o, p);
}
function _createSuper20(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct20();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf20(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf20(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn20(this, result2);
  };
}
function _possibleConstructorReturn20(self2, call) {
  if (call && (_typeof20(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized20(self2);
}
function _assertThisInitialized20(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct20() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf20(o) {
  _getPrototypeOf20 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf20(o);
}
function _toConsumableArray5(arr) {
  return _arrayWithoutHoles5(arr) || _iterableToArray5(arr) || _unsupportedIterableToArray5(arr) || _nonIterableSpread5();
}
function _nonIterableSpread5() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray5(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray5(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray5(o, minLen);
}
function _iterableToArray5(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles5(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray5(arr);
}
function _arrayLikeToArray5(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function flattenOptions(options2) {
  var o = {};
  for (var key in options2) {
    o[key] = options2[key];
  }
  return o;
}
import_flatpickr.default.l10ns.en.weekdays.shorthand.forEach(function(day2, index4) {
  var currentDay = import_flatpickr.default.l10ns.en.weekdays.shorthand;
  if (currentDay[index4] === "Thu" || currentDay[index4] === "Th") {
    currentDay[index4] = "Th";
  } else {
    currentDay[index4] = currentDay[index4].charAt(0);
  }
});
var toArray12 = function toArray13(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};
var monthToStr = function monthToStr2(monthNumber, shorthand, locale4) {
  return locale4.months[shorthand ? "shorthand" : "longhand"][monthNumber];
};
var carbonFlatpickrMonthSelectPlugin = function carbonFlatpickrMonthSelectPlugin2(config) {
  return function(fp) {
    var setupElements = function setupElements2() {
      var _fp$monthElements;
      if (!fp.monthElements) {
        return;
      }
      fp.monthElements.forEach(function(elem) {
        if (!elem.parentNode)
          return;
        elem.parentNode.removeChild(elem);
      });
      (_fp$monthElements = fp.monthElements).splice.apply(_fp$monthElements, [0, fp.monthElements.length].concat(_toConsumableArray5(fp.monthElements.map(function() {
        var monthElement = fp._createElement("span", config.classFlatpickrCurrentMonth);
        monthElement.textContent = monthToStr(fp.currentMonth, config.shorthand === true, fp.l10n);
        fp.yearElements[0].closest(config.selectorFlatpickrMonthYearContainer).insertBefore(monthElement, fp.yearElements[0].closest(config.selectorFlatpickrYearContainer));
        return monthElement;
      }))));
    };
    var updateCurrentMonth = function updateCurrentMonth2() {
      var monthStr = monthToStr(fp.currentMonth, config.shorthand === true, fp.l10n);
      fp.yearElements.forEach(function(elem) {
        var currentMonthContainer = elem.closest(config.selectorFlatpickrMonthYearContainer);
        Array.prototype.forEach.call(currentMonthContainer.querySelectorAll(".cur-month"), function(monthElement) {
          monthElement.textContent = monthStr;
        });
      });
    };
    var register = function register2() {
      fp.loadedPlugins.push("carbonFlatpickrMonthSelectPlugin");
    };
    return {
      onMonthChange: updateCurrentMonth,
      onValueUpdate: updateCurrentMonth,
      onOpen: updateCurrentMonth,
      onReady: [setupElements, updateCurrentMonth, register]
    };
  };
};
var DatePicker = function(_mixin) {
  _inherits20(DatePicker2, _mixin);
  var _super = _createSuper20(DatePicker2);
  function DatePicker2(element, options2) {
    var _this;
    _classCallCheck21(this, DatePicker2);
    _this = _super.call(this, element, options2);
    _this._handleFocus = function() {
      if (_this.calendar) {
        _this.calendar.open();
      }
    };
    _this._handleBlur = function(event) {
      if (_this.calendar) {
        var focusTo = event.relatedTarget;
        if (!focusTo || !_this.element.contains(focusTo) && (!_this.calendar.calendarContainer || !_this.calendar.calendarContainer.contains(focusTo))) {
          _this.calendar.close();
        }
      }
    };
    _this._initDatePicker = function(type2) {
      if (type2 === "range") {
        var doc = _this.element.ownerDocument;
        var rangeInput = doc.createElement("input");
        rangeInput.className = _this.options.classVisuallyHidden;
        rangeInput.setAttribute("aria-hidden", "true");
        _this.element.appendChild(rangeInput);
        _this._rangeInput = rangeInput;
        var w = doc.defaultView;
        var hasFocusin = "onfocusin" in w;
        var hasFocusout = "onfocusout" in w;
        var focusinEventName = hasFocusin ? "focusin" : "focus";
        var focusoutEventName = hasFocusout ? "focusout" : "blur";
        _this.manage(on(_this.element, focusinEventName, _this._handleFocus, !hasFocusin));
        _this.manage(on(_this.element, focusoutEventName, _this._handleBlur, !hasFocusout));
        _this.manage(on(_this.element.querySelector(_this.options.selectorDatePickerIcon), focusoutEventName, _this._handleBlur, !hasFocusout));
      }
      var self2 = _assertThisInitialized20(_this);
      var date2 = type2 === "range" ? _this._rangeInput : _this.element.querySelector(_this.options.selectorDatePickerInput);
      var _this$options = _this.options, _onClose = _this$options.onClose, _onChange = _this$options.onChange, _onMonthChange = _this$options.onMonthChange, _onYearChange = _this$options.onYearChange, _onOpen = _this$options.onOpen, _onValueUpdate = _this$options.onValueUpdate;
      var calendar2 = new import_flatpickr.default(date2, Object.assign(flattenOptions(_this.options), {
        allowInput: true,
        mode: type2,
        disableMobile: true,
        positionElement: type2 === "range" && _this.element.querySelector(_this.options.selectorDatePickerInputFrom),
        onClose: function onClose(selectedDates) {
          if (self2.shouldForceOpen) {
            if (self2.calendar.calendarContainer) {
              self2.calendar.calendarContainer.classList.add("open");
            }
            self2.calendar.isOpen = true;
          }
          for (var _len = arguments.length, remainder = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            remainder[_key - 1] = arguments[_key];
          }
          if (!_onClose || _onClose.call.apply(_onClose, [this, selectedDates].concat(remainder)) !== false) {
            self2._updateClassNames(calendar2);
            self2._updateInputFields(selectedDates, type2);
          }
        },
        onChange: function onChange() {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          if (!_onChange || _onChange.call.apply(_onChange, [this].concat(args)) !== false) {
            self2._updateClassNames(calendar2);
            if (type2 === "range") {
              if (calendar2.selectedDates.length === 1 && calendar2.isOpen) {
                self2.element.querySelector(self2.options.selectorDatePickerInputTo).classList.add(self2.options.classFocused);
              } else {
                self2.element.querySelector(self2.options.selectorDatePickerInputTo).classList.remove(self2.options.classFocused);
              }
            }
          }
        },
        onMonthChange: function onMonthChange() {
          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
          }
          if (!_onMonthChange || _onMonthChange.call.apply(_onMonthChange, [this].concat(args)) !== false) {
            self2._updateClassNames(calendar2);
          }
        },
        onYearChange: function onYearChange() {
          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            args[_key4] = arguments[_key4];
          }
          if (!_onYearChange || _onYearChange.call.apply(_onYearChange, [this].concat(args)) !== false) {
            self2._updateClassNames(calendar2);
          }
        },
        onOpen: function onOpen() {
          self2.shouldForceOpen = true;
          setTimeout(function() {
            self2.shouldForceOpen = false;
          }, 0);
          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
            args[_key5] = arguments[_key5];
          }
          if (!_onOpen || _onOpen.call.apply(_onOpen, [this].concat(args)) !== false) {
            self2._updateClassNames(calendar2);
          }
        },
        onValueUpdate: function onValueUpdate() {
          for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
            args[_key6] = arguments[_key6];
          }
          if ((!_onValueUpdate || _onValueUpdate.call.apply(_onValueUpdate, [this].concat(args)) !== false) && type2 === "range") {
            self2._updateInputFields(self2.calendar.selectedDates, type2);
          }
        },
        nextArrow: _this._rightArrowHTML(),
        prevArrow: _this._leftArrowHTML(),
        plugins: [].concat(_toConsumableArray5(_this.options.plugins || []), [carbonFlatpickrMonthSelectPlugin(_this.options)])
      }));
      if (type2 === "range") {
        _this._addInputLogic(_this.element.querySelector(_this.options.selectorDatePickerInputFrom), 0);
        _this._addInputLogic(_this.element.querySelector(_this.options.selectorDatePickerInputTo), 1);
      }
      _this.manage(on(_this.element.querySelector(_this.options.selectorDatePickerIcon), "click", function() {
        calendar2.open();
      }));
      _this._updateClassNames(calendar2);
      if (type2 !== "range") {
        _this._addInputLogic(date2);
      }
      return calendar2;
    };
    _this._addInputLogic = function(input, index4) {
      if (!isNaN(index4) && (index4 < 0 || index4 > 1)) {
        throw new RangeError("The index of <input> (".concat(index4, ") is out of range."));
      }
      var inputField = input;
      _this.manage(on(inputField, "change", function(evt) {
        if (evt.isTrusted || evt.detail && evt.detail.isNotFromFlatpickr) {
          var inputDate = _this.calendar.parseDate(inputField.value);
          if (inputDate && !isNaN(inputDate.valueOf())) {
            if (isNaN(index4)) {
              _this.calendar.setDate(inputDate);
            } else {
              var selectedDates = _this.calendar.selectedDates;
              selectedDates[index4] = inputDate;
              _this.calendar.setDate(selectedDates);
            }
          }
        }
        _this._updateClassNames(_this.calendar);
      }));
      _this.manage(on(inputField, "keydown", function(evt) {
        var origInput = _this.calendar._input;
        _this.calendar._input = evt.target;
        setTimeout(function() {
          _this.calendar._input = origInput;
        });
      }));
    };
    _this._updateClassNames = function(_ref) {
      var calendarContainer = _ref.calendarContainer, selectedDates = _ref.selectedDates;
      if (calendarContainer) {
        calendarContainer.classList.add(_this.options.classCalendarContainer);
        calendarContainer.querySelector(".flatpickr-month").classList.add(_this.options.classMonth);
        calendarContainer.querySelector(".flatpickr-weekdays").classList.add(_this.options.classWeekdays);
        calendarContainer.querySelector(".flatpickr-days").classList.add(_this.options.classDays);
        toArray12(calendarContainer.querySelectorAll(".flatpickr-weekday")).forEach(function(item) {
          var currentItem = item;
          currentItem.innerHTML = currentItem.innerHTML.replace(/\s+/g, "");
          currentItem.classList.add(_this.options.classWeekday);
        });
        toArray12(calendarContainer.querySelectorAll(".flatpickr-day")).forEach(function(item) {
          item.classList.add(_this.options.classDay);
          if (item.classList.contains("today") && selectedDates.length > 0) {
            item.classList.add("no-border");
          } else if (item.classList.contains("today") && selectedDates.length === 0) {
            item.classList.remove("no-border");
          }
        });
      }
    };
    _this._updateInputFields = function(selectedDates, type2) {
      if (type2 === "range") {
        if (selectedDates.length === 2) {
          _this.element.querySelector(_this.options.selectorDatePickerInputFrom).value = _this._formatDate(selectedDates[0]);
          _this.element.querySelector(_this.options.selectorDatePickerInputTo).value = _this._formatDate(selectedDates[1]);
        } else if (selectedDates.length === 1) {
          _this.element.querySelector(_this.options.selectorDatePickerInputFrom).value = _this._formatDate(selectedDates[0]);
        }
      } else if (selectedDates.length === 1) {
        _this.element.querySelector(_this.options.selectorDatePickerInput).value = _this._formatDate(selectedDates[0]);
      }
      _this._updateClassNames(_this.calendar);
    };
    _this._formatDate = function(date2) {
      return _this.calendar.formatDate(date2, _this.calendar.config.dateFormat);
    };
    var _type = _this.element.getAttribute(_this.options.attribType);
    _this.calendar = _this._initDatePicker(_type);
    if (_this.calendar.calendarContainer) {
      _this.manage(on(_this.element, "keydown", function(e) {
        if (e.which === 40) {
          e.preventDefault();
          (_this.calendar.selectedDateElem || _this.calendar.todayDateElem || _this.calendar.calendarContainer).focus();
        }
      }));
      _this.manage(on(_this.calendar.calendarContainer, "keydown", function(e) {
        if (e.which === 9 && _type === "range") {
          _this._updateClassNames(_this.calendar);
          _this.element.querySelector(_this.options.selectorDatePickerInputFrom).focus();
        }
      }));
    }
    return _this;
  }
  _createClass20(DatePicker2, [{
    key: "_rightArrowHTML",
    value: function _rightArrowHTML() {
      return '\n      <svg\n        focusable="false"\n        preserveAspectRatio="xMidYMid meet"\n        style="will-change: transform;"\n        xmlns="http://www.w3.org/2000/svg"\n        width="16"\n        height="16"\n        viewBox="0 0 16 16"\n        aria-hidden="true">\n          <path d="M11 8l-5 5-.7-.7L9.6 8 5.3 3.7 6 3z"></path>\n      </svg>';
    }
  }, {
    key: "_leftArrowHTML",
    value: function _leftArrowHTML() {
      return '\n      <svg\n        focusable="false"\n        preserveAspectRatio="xMidYMid meet"\n        style="will-change: transform;"\n        xmlns="http://www.w3.org/2000/svg"\n        width="16"\n        height="16"\n        viewBox="0 0 16 16"\n        aria-hidden="true"\n      >\n        <path d="M5 8l5-5 .7.7L6.4 8l4.3 4.3-.7.7z"></path>\n      </svg>';
    }
  }, {
    key: "release",
    value: function release() {
      if (this._rangeInput && this._rangeInput.parentNode) {
        this._rangeInput.parentNode.removeChild(this._rangeInput);
      }
      if (this.calendar) {
        try {
          this.calendar.destroy();
        } catch (err) {
        }
        this.calendar = null;
      }
      return _get4(_getPrototypeOf20(DatePicker2.prototype), "release", this).call(this);
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-date-picker]",
        selectorDatePickerInput: "[data-date-picker-input]",
        selectorDatePickerInputFrom: "[data-date-picker-input-from]",
        selectorDatePickerInputTo: "[data-date-picker-input-to]",
        selectorDatePickerIcon: "[data-date-picker-icon]",
        selectorFlatpickrMonthYearContainer: ".flatpickr-current-month",
        selectorFlatpickrYearContainer: ".numInputWrapper",
        selectorFlatpickrCurrentMonth: ".cur-month",
        classCalendarContainer: "".concat(prefix2, "--date-picker__calendar"),
        classMonth: "".concat(prefix2, "--date-picker__month"),
        classWeekdays: "".concat(prefix2, "--date-picker__weekdays"),
        classDays: "".concat(prefix2, "--date-picker__days"),
        classWeekday: "".concat(prefix2, "--date-picker__weekday"),
        classDay: "".concat(prefix2, "--date-picker__day"),
        classFocused: "".concat(prefix2, "--focused"),
        classVisuallyHidden: "".concat(prefix2, "--visually-hidden"),
        classFlatpickrCurrentMonth: "cur-month",
        attribType: "data-date-picker-type",
        dateFormat: "m/d/Y"
      };
    }
  }]);
  DatePicker2.components = new WeakMap();
  return DatePicker2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/components/pagination/pagination.js
function _typeof21(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof21 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof21 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof21(obj);
}
function _classCallCheck22(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _inherits21(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf21(subClass, superClass);
}
function _setPrototypeOf21(o, p) {
  _setPrototypeOf21 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf21(o, p);
}
function _createSuper21(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct21();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf21(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf21(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn21(this, result2);
  };
}
function _possibleConstructorReturn21(self2, call) {
  if (call && (_typeof21(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized21(self2);
}
function _assertThisInitialized21(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct21() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf21(o) {
  _getPrototypeOf21 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf21(o);
}
var Pagination = function(_mixin) {
  _inherits21(Pagination2, _mixin);
  var _super = _createSuper21(Pagination2);
  function Pagination2(element, options2) {
    var _this;
    _classCallCheck22(this, Pagination2);
    _this = _super.call(this, element, options2);
    _this._emitEvent = function(evtName, detail) {
      var event = new CustomEvent("".concat(evtName), {
        bubbles: true,
        cancelable: true,
        detail
      });
      _this.element.dispatchEvent(event);
    };
    _this.manage(on(_this.element, "click", function(evt) {
      if (eventMatches(evt, _this.options.selectorPageBackward)) {
        var detail = {
          initialEvt: evt,
          element: evt.target,
          direction: "backward"
        };
        _this._emitEvent(_this.options.eventPageChange, detail);
      } else if (eventMatches(evt, _this.options.selectorPageForward)) {
        var _detail = {
          initialEvt: evt,
          element: evt.target,
          direction: "forward"
        };
        _this._emitEvent(_this.options.eventPageChange, _detail);
      }
    }));
    _this.manage(on(_this.element, "input", function(evt) {
      if (eventMatches(evt, _this.options.selectorItemsPerPageInput)) {
        var detail = {
          initialEvt: evt,
          element: evt.target,
          value: evt.target.value
        };
        _this._emitEvent(_this.options.eventItemsPerPage, detail);
      } else if (eventMatches(evt, _this.options.selectorPageNumberInput)) {
        var _detail2 = {
          initialEvt: evt,
          element: evt.target,
          value: evt.target.value
        };
        _this._emitEvent(_this.options.eventPageNumber, _detail2);
      }
    }));
    return _this;
  }
  Pagination2.components = new WeakMap();
  Pagination2.options = {
    selectorInit: "[data-pagination]",
    selectorItemsPerPageInput: "[data-items-per-page]",
    selectorPageNumberInput: "[data-page-number-input]",
    selectorPageBackward: "[data-page-backward]",
    selectorPageForward: "[data-page-forward]",
    eventItemsPerPage: "itemsPerPage",
    eventPageNumber: "pageNumber",
    eventPageChange: "pageChange"
  };
  return Pagination2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/globals/js/misc/svg-toggle-class.js
function _defineProperty3(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value2,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value2;
  }
  return obj;
}
function svgToggleClass(svg, name, forceAdd) {
  var list = svg.getAttribute("class").trim().split(/\s+/);
  var uniqueList = Object.keys(list.reduce(function(o, item) {
    return Object.assign(o, _defineProperty3({}, item, 1));
  }, {}));
  var index4 = uniqueList.indexOf(name);
  var found = index4 >= 0;
  var add2 = forceAdd === void 0 ? !found : forceAdd;
  if (found === !add2) {
    if (add2) {
      uniqueList.push(name);
    } else {
      uniqueList.splice(index4, 1);
    }
    svg.setAttribute("class", uniqueList.join(" "));
  }
}
var svg_toggle_class_default = svgToggleClass;

// node_modules/carbon-components/es/components/search/search.js
function _typeof22(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof22 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof22 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof22(obj);
}
function _classCallCheck23(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties21(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass21(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties21(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties21(Constructor, staticProps);
  return Constructor;
}
function _inherits22(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf22(subClass, superClass);
}
function _setPrototypeOf22(o, p) {
  _setPrototypeOf22 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf22(o, p);
}
function _createSuper22(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct22();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf22(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf22(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn22(this, result2);
  };
}
function _possibleConstructorReturn22(self2, call) {
  if (call && (_typeof22(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized22(self2);
}
function _assertThisInitialized22(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct22() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf22(o) {
  _getPrototypeOf22 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf22(o);
}
var toArray14 = function toArray15(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};
var Search = function(_mixin) {
  _inherits22(Search2, _mixin);
  var _super = _createSuper22(Search2);
  function Search2(element, options2) {
    var _this;
    _classCallCheck23(this, Search2);
    _this = _super.call(this, element, options2);
    var closeIcon = _this.element.querySelector(_this.options.selectorClearIcon);
    var input = _this.element.querySelector(_this.options.selectorSearchInput);
    if (!input) {
      throw new Error("Cannot find the search input.");
    }
    if (closeIcon) {
      _this.manage(on(closeIcon, "click", function() {
        svg_toggle_class_default(closeIcon, _this.options.classClearHidden, true);
        input.value = "";
        input.focus();
      }));
    }
    _this.manage(on(_this.element, "click", function(evt) {
      var toggleItem = eventMatches(evt, _this.options.selectorIconContainer);
      if (toggleItem)
        _this.toggleLayout(toggleItem);
    }));
    _this.manage(on(input, "input", function(evt) {
      if (closeIcon)
        _this.showClear(evt.target.value, closeIcon);
    }));
    return _this;
  }
  _createClass21(Search2, [{
    key: "toggleLayout",
    value: function toggleLayout(element) {
      var _this2 = this;
      toArray14(element.querySelectorAll(this.options.selectorSearchView)).forEach(function(item) {
        item.classList.toggle(_this2.options.classLayoutHidden);
      });
    }
  }, {
    key: "showClear",
    value: function showClear(value2, icon) {
      svg_toggle_class_default(icon, this.options.classClearHidden, value2.length === 0);
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-search]",
        selectorSearchView: "[data-search-view]",
        selectorSearchInput: ".".concat(prefix2, "--search-input"),
        selectorClearIcon: ".".concat(prefix2, "--search-close"),
        selectorIconContainer: ".".concat(prefix2, "--search-button[data-search-toggle]"),
        classClearHidden: "".concat(prefix2, "--search-close--hidden"),
        classLayoutHidden: "".concat(prefix2, "--search-view--hidden")
      };
    }
  }]);
  Search2.components = new WeakMap();
  return Search2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/components/accordion/accordion.js
function _typeof23(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof23 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof23 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof23(obj);
}
function _classCallCheck24(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties22(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass22(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties22(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties22(Constructor, staticProps);
  return Constructor;
}
function _inherits23(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf23(subClass, superClass);
}
function _setPrototypeOf23(o, p) {
  _setPrototypeOf23 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf23(o, p);
}
function _createSuper23(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct23();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf23(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf23(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn23(this, result2);
  };
}
function _possibleConstructorReturn23(self2, call) {
  if (call && (_typeof23(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized23(self2);
}
function _assertThisInitialized23(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct23() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf23(o) {
  _getPrototypeOf23 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf23(o);
}
var Accordion = function(_mixin) {
  _inherits23(Accordion2, _mixin);
  var _super = _createSuper23(Accordion2);
  function Accordion2(element, options2) {
    var _this;
    _classCallCheck24(this, Accordion2);
    _this = _super.call(this, element, options2);
    _this.manage(on(_this.element, "click", function(event) {
      var item = eventMatches(event, _this.options.selectorAccordionItem);
      if (item && !eventMatches(event, _this.options.selectorAccordionContent)) {
        _this._toggle(item);
      }
    }));
    if (!_this._checkIfButton()) {
      _this.manage(on(_this.element, "keypress", function(event) {
        var item = eventMatches(event, _this.options.selectorAccordionItem);
        if (item && !eventMatches(event, _this.options.selectorAccordionContent)) {
          _this._handleKeypress(event);
        }
      }));
    }
    return _this;
  }
  _createClass22(Accordion2, [{
    key: "_checkIfButton",
    value: function _checkIfButton() {
      return this.element.firstElementChild.firstElementChild.nodeName === "BUTTON";
    }
  }, {
    key: "_handleKeypress",
    value: function _handleKeypress(event) {
      if (event.which === 13 || event.which === 32) {
        this._toggle(event.target);
      }
    }
  }, {
    key: "_toggle",
    value: function _toggle(element) {
      var heading = element.querySelector(this.options.selectorAccordionItemHeading);
      var expanded = heading.getAttribute("aria-expanded");
      if (expanded !== null) {
        heading.setAttribute("aria-expanded", expanded === "true" ? "false" : "true");
      }
      element.classList.toggle(this.options.classActive);
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-accordion]",
        selectorAccordionItem: ".".concat(prefix2, "--accordion__item"),
        selectorAccordionItemHeading: ".".concat(prefix2, "--accordion__heading"),
        selectorAccordionContent: ".".concat(prefix2, "--accordion__content"),
        classActive: "".concat(prefix2, "--accordion__item--active")
      };
    }
  }]);
  Accordion2.components = new WeakMap();
  return Accordion2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/components/copy-button/copy-button.js
function _typeof24(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof24 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof24 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof24(obj);
}
function _classCallCheck25(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties23(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass23(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties23(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties23(Constructor, staticProps);
  return Constructor;
}
function _inherits24(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf24(subClass, superClass);
}
function _setPrototypeOf24(o, p) {
  _setPrototypeOf24 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf24(o, p);
}
function _createSuper24(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct24();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf24(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf24(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn24(this, result2);
  };
}
function _possibleConstructorReturn24(self2, call) {
  if (call && (_typeof24(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized24(self2);
}
function _assertThisInitialized24(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct24() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf24(o) {
  _getPrototypeOf24 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf24(o);
}
var CopyButton = function(_mixin) {
  _inherits24(CopyButton2, _mixin);
  var _super = _createSuper24(CopyButton2);
  function CopyButton2(element, options2) {
    var _this;
    _classCallCheck25(this, CopyButton2);
    _this = _super.call(this, element, options2);
    _this.manage(on(_this.element, "click", function() {
      return _this.handleClick();
    }));
    _this.manage(on(_this.element, "animationend", function(event) {
      return _this.handleAnimationEnd(event);
    }));
    return _this;
  }
  _createClass23(CopyButton2, [{
    key: "handleAnimationEnd",
    value: function handleAnimationEnd(event) {
      if (event.animationName === "hide-feedback") {
        this.element.classList.remove(this.options.classAnimating);
        this.element.classList.remove(this.options.classFadeOut);
      }
    }
  }, {
    key: "handleClick",
    value: function handleClick() {
      var _this2 = this;
      var feedback = this.element.querySelector(this.options.feedbackTooltip);
      if (feedback) {
        feedback.classList.add(this.options.classShowFeedback);
        setTimeout(function() {
          feedback.classList.remove(_this2.options.classShowFeedback);
        }, this.options.timeoutValue);
      } else {
        this.element.classList.add(this.options.classAnimating);
        this.element.classList.add(this.options.classFadeIn);
        setTimeout(function() {
          _this2.element.classList.remove(_this2.options.classFadeIn);
          _this2.element.classList.add(_this2.options.classFadeOut);
        }, this.options.timeoutValue);
      }
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-copy-btn]",
        feedbackTooltip: "[data-feedback]",
        classShowFeedback: "".concat(prefix2, "--btn--copy__feedback--displayed"),
        classAnimating: "".concat(prefix2, "--copy-btn--animating"),
        classFadeIn: "".concat(prefix2, "--copy-btn--fade-in"),
        classFadeOut: "".concat(prefix2, "--copy-btn--fade-out"),
        timeoutValue: 2e3
      };
    }
  }]);
  CopyButton2.components = new WeakMap();
  return CopyButton2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/components/notification/notification.js
function _typeof25(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof25 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof25 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof25(obj);
}
function _classCallCheck26(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties24(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass24(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties24(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties24(Constructor, staticProps);
  return Constructor;
}
function _inherits25(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf25(subClass, superClass);
}
function _setPrototypeOf25(o, p) {
  _setPrototypeOf25 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf25(o, p);
}
function _createSuper25(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct25();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf25(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf25(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn25(this, result2);
  };
}
function _possibleConstructorReturn25(self2, call) {
  if (call && (_typeof25(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized25(self2);
}
function _assertThisInitialized25(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct25() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf25(o) {
  _getPrototypeOf25 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf25(o);
}
var Notification = function(_mixin) {
  _inherits25(Notification2, _mixin);
  var _super = _createSuper25(Notification2);
  function Notification2(element, options2) {
    var _this;
    _classCallCheck26(this, Notification2);
    _this = _super.call(this, element, options2);
    _this._changeState = function(state, callback) {
      if (state === "delete-notification") {
        _this.element.parentNode.removeChild(_this.element);
        _this.release();
      }
      callback();
    };
    _this.button = element.querySelector(_this.options.selectorButton);
    if (_this.button) {
      _this.manage(on(_this.button, "click", function(evt) {
        if (evt.currentTarget === _this.button) {
          _this.remove();
        }
      }));
    }
    return _this;
  }
  _createClass24(Notification2, [{
    key: "remove",
    value: function remove3() {
      this.changeState("delete-notification");
    }
  }]);
  Notification2.components = new WeakMap();
  Notification2.options = {
    selectorInit: "[data-notification]",
    selectorButton: "[data-notification-btn]",
    eventBeforeDeleteNotification: "notification-before-delete",
    eventAfterDeleteNotification: "notification-after-delete"
  };
  return Notification2;
}(mixin3(create_component_default, init_component_by_search_default, evented_state_default, handles_default));

// node_modules/carbon-components/es/components/toolbar/toolbar.js
function _typeof26(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof26 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof26 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof26(obj);
}
function _classCallCheck27(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties25(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass25(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties25(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties25(Constructor, staticProps);
  return Constructor;
}
function _inherits26(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf26(subClass, superClass);
}
function _setPrototypeOf26(o, p) {
  _setPrototypeOf26 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf26(o, p);
}
function _createSuper26(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct26();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf26(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf26(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn26(this, result2);
  };
}
function _possibleConstructorReturn26(self2, call) {
  if (call && (_typeof26(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized26(self2);
}
function _assertThisInitialized26(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct26() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf26(o) {
  _getPrototypeOf26 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf26(o);
}
var toArray16 = function toArray17(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};
var Toolbar2 = function(_mixin) {
  _inherits26(Toolbar4, _mixin);
  var _super = _createSuper26(Toolbar4);
  function Toolbar4(element, options2) {
    var _this;
    _classCallCheck27(this, Toolbar4);
    _this = _super.call(this, element, options2);
    if (!_this.element.dataset.tableTarget) {
      console.warn("There is no table bound to this toolbar!");
    } else {
      var boundTable = _this.element.ownerDocument.querySelector(_this.element.dataset.tableTarget);
      var rowHeightBtns = _this.element.querySelector(_this.options.selectorRowHeight);
      if (rowHeightBtns) {
        _this.manage(on(rowHeightBtns, "click", function(event) {
          _this._handleRowHeightChange(event, boundTable);
        }));
      }
    }
    _this.manage(on(_this.element.ownerDocument, "keydown", function(evt) {
      _this._handleKeyDown(evt);
    }));
    _this.manage(on(_this.element.ownerDocument, "click", function(evt) {
      _this._handleDocumentClick(evt);
    }));
    return _this;
  }
  _createClass25(Toolbar4, [{
    key: "_handleDocumentClick",
    value: function _handleDocumentClick(event) {
      var _this2 = this;
      var searchInput = eventMatches(event, this.options.selectorSearch);
      var isOfSelfSearchInput = searchInput && this.element.contains(searchInput);
      if (isOfSelfSearchInput) {
        var shouldBeOpen = isOfSelfSearchInput && !this.element.classList.contains(this.options.classSearchActive);
        searchInput.classList.toggle(this.options.classSearchActive, shouldBeOpen);
        if (shouldBeOpen) {
          searchInput.querySelector("input").focus();
        }
      }
      var targetComponentElement = eventMatches(event, this.options.selectorInit);
      toArray16(this.element.ownerDocument.querySelectorAll(this.options.selectorSearch)).forEach(function(item) {
        if (!targetComponentElement || !targetComponentElement.contains(item)) {
          item.classList.remove(_this2.options.classSearchActive);
        }
      });
    }
  }, {
    key: "_handleKeyDown",
    value: function _handleKeyDown(event) {
      var searchInput = eventMatches(event, this.options.selectorSearch);
      if (searchInput && event.which === 27) {
        searchInput.classList.remove(this.options.classSearchActive);
      }
    }
  }, {
    key: "_handleRowHeightChange",
    value: function _handleRowHeightChange(event, boundTable) {
      var _event$currentTarget$ = event.currentTarget.querySelector("input:checked"), value2 = _event$currentTarget$.value;
      if (value2 === "tall") {
        boundTable.classList.add(this.options.classTallRows);
      } else {
        boundTable.classList.remove(this.options.classTallRows);
      }
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-toolbar]",
        selectorSearch: "[data-toolbar-search]",
        selectorRowHeight: "[data-row-height]",
        classTallRows: "".concat(prefix2, "--responsive-table--tall"),
        classSearchActive: "".concat(prefix2, "--toolbar-search--active")
      };
    }
  }]);
  Toolbar4.components = new WeakMap();
  return Toolbar4;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/globals/js/mixins/init-component-by-event.js
function _typeof27(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof27 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof27 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof27(obj);
}
function _classCallCheck28(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties26(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass26(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties26(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties26(Constructor, staticProps);
  return Constructor;
}
function _inherits27(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf27(subClass, superClass);
}
function _setPrototypeOf27(o, p) {
  _setPrototypeOf27 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf27(o, p);
}
function _createSuper27(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct27();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf27(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf27(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn27(this, result2);
  };
}
function _possibleConstructorReturn27(self2, call) {
  if (call && (_typeof27(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized27(self2);
}
function _assertThisInitialized27(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct27() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf27(o) {
  _getPrototypeOf27 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf27(o);
}
function init_component_by_event_default(ToMix) {
  var InitComponentByEvent = function(_ToMix) {
    _inherits27(InitComponentByEvent2, _ToMix);
    var _super = _createSuper27(InitComponentByEvent2);
    function InitComponentByEvent2() {
      _classCallCheck28(this, InitComponentByEvent2);
      return _super.apply(this, arguments);
    }
    _createClass26(InitComponentByEvent2, null, [{
      key: "init",
      value: function init2() {
        var _this = this;
        var target = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : document;
        var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var effectiveOptions = Object.assign(Object.create(this.options), options2);
        if (!target || target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {
          throw new TypeError("DOM document or DOM element should be given to search for and initialize this widget.");
        }
        if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {
          this.create(target, options2);
        } else {
          var hasFocusin = "onfocusin" in (target.nodeType === Node.ELEMENT_NODE ? target.ownerDocument : target).defaultView;
          var handles = effectiveOptions.initEventNames.map(function(name) {
            var eventName = name === "focus" && hasFocusin ? "focusin" : name;
            return on(target, eventName, function(event) {
              var element = eventMatches(event, effectiveOptions.selectorInit);
              if (element && !_this.components.has(element)) {
                var component = _this.create(element, options2);
                if (typeof component.createdByEvent === "function") {
                  component.createdByEvent(event);
                }
              }
            }, name === "focus" && !hasFocusin);
          });
          return {
            release: function release() {
              for (var handle = handles.pop(); handle; handle = handles.pop()) {
                handle.release();
              }
            }
          };
        }
        return "";
      }
    }]);
    InitComponentByEvent2.forLazyInit = true;
    return InitComponentByEvent2;
  }(ToMix);
  return InitComponentByEvent;
}

// node_modules/carbon-components/es/components/tooltip/tooltip.js
function _typeof28(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof28 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof28 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof28(obj);
}
function _classCallCheck29(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties27(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass27(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties27(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties27(Constructor, staticProps);
  return Constructor;
}
function _inherits28(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf28(subClass, superClass);
}
function _setPrototypeOf28(o, p) {
  _setPrototypeOf28 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf28(o, p);
}
function _createSuper28(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct28();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf28(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf28(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn28(this, result2);
  };
}
function _possibleConstructorReturn28(self2, call) {
  if (call && (_typeof28(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized28(self2);
}
function _assertThisInitialized28(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct28() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf28(o) {
  _getPrototypeOf28 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf28(o);
}
function ownKeys(object, enumerableOnly) {
  var keys2 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys2.push.apply(keys2, symbols2);
  }
  return keys2;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty4(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty4(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value2,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value2;
  }
  return obj;
}
var getMenuOffset3 = function getMenuOffset4(menuBody, menuDirection) {
  var _DIRECTION_LEFT$DIREC, _DIRECTION_LEFT$DIREC2;
  var arrowStyle = menuBody.ownerDocument.defaultView.getComputedStyle(menuBody, ":before");
  var arrowPositionProp = (_DIRECTION_LEFT$DIREC = {}, _defineProperty4(_DIRECTION_LEFT$DIREC, DIRECTION_LEFT, "right"), _defineProperty4(_DIRECTION_LEFT$DIREC, DIRECTION_TOP, "bottom"), _defineProperty4(_DIRECTION_LEFT$DIREC, DIRECTION_RIGHT, "left"), _defineProperty4(_DIRECTION_LEFT$DIREC, DIRECTION_BOTTOM, "top"), _DIRECTION_LEFT$DIREC)[menuDirection];
  var menuPositionAdjustmentProp = (_DIRECTION_LEFT$DIREC2 = {}, _defineProperty4(_DIRECTION_LEFT$DIREC2, DIRECTION_LEFT, "left"), _defineProperty4(_DIRECTION_LEFT$DIREC2, DIRECTION_TOP, "top"), _defineProperty4(_DIRECTION_LEFT$DIREC2, DIRECTION_RIGHT, "left"), _defineProperty4(_DIRECTION_LEFT$DIREC2, DIRECTION_BOTTOM, "top"), _DIRECTION_LEFT$DIREC2)[menuDirection];
  var values2 = [arrowPositionProp, "border-bottom-width"].reduce(function(o, name) {
    return _objectSpread(_objectSpread({}, o), {}, _defineProperty4({}, name, Number((/^([\d-.]+)px$/.exec(arrowStyle.getPropertyValue(name)) || [])[1])));
  }, {});
  var margin = 0;
  if (menuDirection !== DIRECTION_BOTTOM) {
    var style = menuBody.ownerDocument.defaultView.getComputedStyle(menuBody);
    margin = Number((/^([\d-.]+)px$/.exec(style.getPropertyValue("margin-top")) || [])[1]);
  }
  values2[arrowPositionProp] = values2[arrowPositionProp] || -6;
  if (Object.keys(values2).every(function(name) {
    return !isNaN(values2[name]);
  })) {
    var arrowPosition = values2[arrowPositionProp], borderBottomWidth = values2["border-bottom-width"];
    return _defineProperty4({
      left: 0,
      top: 0
    }, menuPositionAdjustmentProp, Math.sqrt(Math.pow(borderBottomWidth, 2) * 2) - arrowPosition + margin * (menuDirection === DIRECTION_TOP ? 2 : 1));
  }
  return void 0;
};
var allowedOpenKeys = [32, 13];
var Tooltip2 = function(_mixin) {
  _inherits28(Tooltip4, _mixin);
  var _super = _createSuper28(Tooltip4);
  function Tooltip4(element, options2) {
    var _this;
    _classCallCheck29(this, Tooltip4);
    _this = _super.call(this, element, options2);
    _this._hasContextMenu = false;
    _this._hookOn(element);
    return _this;
  }
  _createClass27(Tooltip4, [{
    key: "createdByEvent",
    value: function createdByEvent(event) {
      var relatedTarget = event.relatedTarget, type2 = event.type, which = event.which;
      if (type2 === "click" || allowedOpenKeys.includes(which)) {
        this._handleClick({
          relatedTarget,
          type: type2,
          details: getLaunchingDetails(event)
        });
      }
    }
  }, {
    key: "changeState",
    value: function changeState(state, detail, callback) {
      if (!this.tooltip) {
        var tooltip = this.element.ownerDocument.querySelector(this.element.getAttribute(this.options.attribTooltipTarget));
        if (!tooltip) {
          throw new Error("Cannot find the target tooltip.");
        }
        this.tooltip = floating_menu_default.create(tooltip, {
          refNode: this.element,
          classShown: this.options.classShown,
          offset: this.options.objMenuOffset,
          contentNode: tooltip.querySelector(this.options.selectorContent)
        });
        this._hookOn(tooltip);
        this.children.push(this.tooltip);
      }
      this.tooltip.changeState(state, Object.assign(detail, {
        delegatorNode: this.element
      }), callback);
    }
  }, {
    key: "_hookOn",
    value: function _hookOn(element) {
      var _this2 = this;
      var handleClickContextMenu = function handleClickContextMenu2(evt, allowedKeys) {
        var relatedTarget = evt.relatedTarget, type2 = evt.type, which = evt.which;
        if (typeof allowedKeys === "undefined" || allowedKeys.includes(which)) {
          var hadContextMenu = _this2._hasContextMenu;
          _this2._hasContextMenu = type2 === "contextmenu";
          _this2._handleClick({
            relatedTarget,
            type: type2,
            hadContextMenu,
            details: getLaunchingDetails(evt)
          });
        }
      };
      this.manage(on(element, "click", handleClickContextMenu, false));
      if (this.element.tagName !== "BUTTON") {
        this.manage(on(this.element, "keydown", function(event) {
          handleClickContextMenu(event, allowedOpenKeys);
        }, false));
      }
    }
  }, {
    key: "_handleClick",
    value: function _handleClick(_ref2) {
      var relatedTarget = _ref2.relatedTarget, type2 = _ref2.type, hadContextMenu = _ref2.hadContextMenu, details = _ref2.details;
      var state = {
        click: "shown",
        keydown: "shown",
        blur: "hidden",
        touchleave: "hidden",
        touchcancel: "hidden"
      }[type2];
      var shouldPreventClose;
      if (type2 === "blur") {
        var wentToSelf = relatedTarget && this.element.contains && this.element.contains(relatedTarget) || this.tooltip && this.tooltip.element.contains(relatedTarget);
        shouldPreventClose = hadContextMenu || wentToSelf;
      }
      if (!shouldPreventClose) {
        this.changeState(state, details);
      }
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-tooltip-trigger]",
        selectorContent: ".".concat(prefix2, "--tooltip__content"),
        classShown: "".concat(prefix2, "--tooltip--shown"),
        attribTooltipTarget: "data-tooltip-target",
        objMenuOffset: getMenuOffset3,
        initEventNames: ["click", "keydown"]
      };
    }
  }]);
  Tooltip4.components = new WeakMap();
  return Tooltip4;
}(mixin3(create_component_default, init_component_by_event_default, evented_show_hide_state_default, handles_default));

// node_modules/carbon-components/es/components/tooltip/tooltip--simple.js
var import_lodash = __toModule(require_lodash());
function _typeof29(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof29 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof29 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof29(obj);
}
function _classCallCheck30(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties28(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass28(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties28(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties28(Constructor, staticProps);
  return Constructor;
}
function _inherits29(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf29(subClass, superClass);
}
function _setPrototypeOf29(o, p) {
  _setPrototypeOf29 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf29(o, p);
}
function _createSuper29(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct29();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf29(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf29(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn29(this, result2);
  };
}
function _possibleConstructorReturn29(self2, call) {
  if (call && (_typeof29(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized29(self2);
}
function _assertThisInitialized29(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct29() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf29(o) {
  _getPrototypeOf29 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf29(o);
}
var TooltipSimple = function(_mixin) {
  _inherits29(TooltipSimple2, _mixin);
  var _super = _createSuper29(TooltipSimple2);
  function TooltipSimple2(element, options2) {
    var _this;
    _classCallCheck30(this, TooltipSimple2);
    _this = _super.call(this, element, options2);
    _this.tooltipFadeOut = (0, import_lodash.default)(function() {
      var tooltipTriggerButton = _this.getTooltipTriggerButton();
      if (tooltipTriggerButton) {
        tooltipTriggerButton.classList.remove(_this.options.classTooltipVisible);
      }
    }, 100);
    _this.getTooltipTriggerButton = function() {
      return _this.element.matches(_this.options.selectorTriggerButton) ? _this.element : _this.element.querySelector(_this.options.selectorTriggerButton);
    };
    _this.allowTooltipVisibility = function(_ref) {
      var visible = _ref.visible;
      var tooltipTriggerButton = _this.getTooltipTriggerButton();
      if (!tooltipTriggerButton) {
        return;
      }
      if (visible) {
        tooltipTriggerButton.classList.remove(_this.options.classTooltipHidden);
      } else {
        tooltipTriggerButton.classList.add(_this.options.classTooltipHidden);
      }
    };
    _this.manage(on(_this.element.ownerDocument, "keydown", function(event) {
      if (event.which === 27) {
        _this.allowTooltipVisibility({
          visible: false
        });
        var tooltipTriggerButton = _this.getTooltipTriggerButton();
        if (tooltipTriggerButton) {
          tooltipTriggerButton.classList.remove(_this.options.classTooltipVisible);
        }
      }
    }));
    _this.manage(on(_this.element, "mouseenter", function() {
      _this.tooltipFadeOut.cancel();
      _this.allowTooltipVisibility({
        visible: true
      });
      var tooltipTriggerButton = _this.getTooltipTriggerButton();
      if (tooltipTriggerButton) {
        tooltipTriggerButton.classList.add(_this.options.classTooltipVisible);
      }
    }));
    _this.manage(on(_this.element, "mouseleave", _this.tooltipFadeOut));
    _this.manage(on(_this.element, "focusin", function(event) {
      if (eventMatches(event, _this.options.selectorTriggerButton)) {
        _this.allowTooltipVisibility({
          visible: true
        });
      }
    }));
    return _this;
  }
  _createClass28(TooltipSimple2, null, [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-tooltip-definition],[data-tooltip-icon]",
        selectorTriggerButton: ".".concat(prefix2, "--tooltip__trigger.").concat(prefix2, "--tooltip--a11y"),
        classTooltipHidden: "".concat(prefix2, "--tooltip--hidden"),
        classTooltipVisible: "".concat(prefix2, "--tooltip--visible")
      };
    }
  }]);
  TooltipSimple2.components = new WeakMap();
  return TooltipSimple2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/components/progress-indicator/progress-indicator.js
function _typeof30(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof30 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof30 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof30(obj);
}
function _classCallCheck31(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties29(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass29(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties29(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties29(Constructor, staticProps);
  return Constructor;
}
function _inherits30(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf30(subClass, superClass);
}
function _setPrototypeOf30(o, p) {
  _setPrototypeOf30 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf30(o, p);
}
function _createSuper30(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct30();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf30(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf30(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn30(this, result2);
  };
}
function _possibleConstructorReturn30(self2, call) {
  if (call && (_typeof30(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized30(self2);
}
function _assertThisInitialized30(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct30() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf30(o) {
  _getPrototypeOf30 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf30(o);
}
var toArray18 = function toArray19(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};
var ProgressIndicator = function(_mixin) {
  _inherits30(ProgressIndicator2, _mixin);
  var _super = _createSuper30(ProgressIndicator2);
  function ProgressIndicator2(element, options2) {
    var _this;
    _classCallCheck31(this, ProgressIndicator2);
    _this = _super.call(this, element, options2);
    _this.state = {
      currentIndex: _this.getCurrent().index,
      totalSteps: _this.getSteps().length
    };
    _this.addOverflowTooltip();
    return _this;
  }
  _createClass29(ProgressIndicator2, [{
    key: "getSteps",
    value: function getSteps() {
      return toArray18(this.element.querySelectorAll(this.options.selectorStepElement)).map(function(element, index4) {
        return {
          element,
          index: index4
        };
      });
    }
  }, {
    key: "getCurrent",
    value: function getCurrent() {
      var currentEl = this.element.querySelector(this.options.selectorCurrent);
      return this.getSteps().filter(function(step) {
        return step.element === currentEl;
      })[0];
    }
  }, {
    key: "setCurrent",
    value: function setCurrent() {
      var _this2 = this;
      var newCurrentStep = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.state.currentIndex;
      var changed = false;
      if (newCurrentStep !== this.state.currentIndex) {
        this.state.currentIndex = newCurrentStep;
        changed = true;
      }
      if (changed) {
        this.getSteps().forEach(function(step) {
          if (step.index < newCurrentStep) {
            _this2._updateStep({
              element: step.element,
              className: _this2.options.classComplete,
              html: _this2._getSVGComplete()
            });
          }
          if (step.index === newCurrentStep) {
            _this2._updateStep({
              element: step.element,
              className: _this2.options.classCurrent,
              html: _this2._getCurrentSVG()
            });
          }
          if (step.index > newCurrentStep) {
            _this2._updateStep({
              element: step.element,
              className: _this2.options.classIncomplete,
              html: _this2._getIncompleteSVG()
            });
          }
        });
      }
    }
  }, {
    key: "_updateStep",
    value: function _updateStep(args) {
      var element = args.element, className = args.className, html = args.html;
      if (element.firstElementChild) {
        element.removeChild(element.firstElementChild);
      }
      if (!element.classList.contains(className)) {
        element.setAttribute("class", this.options.classStep);
        element.classList.add(className);
      }
      element.insertAdjacentHTML("afterbegin", html);
    }
  }, {
    key: "_getSVGComplete",
    value: function _getSVGComplete() {
      return '<svg width="24px" height="24px" viewBox="0 0 24 24">\n        <circle cx="12" cy="12" r="12"></circle>\n        <polygon points="10.3 13.6 7.7 11 6.3 12.4 10.3 16.4 17.8 9 16.4 7.6"></polygon>\n      </svg>';
    }
  }, {
    key: "_getCurrentSVG",
    value: function _getCurrentSVG() {
      return '<svg>\n        <circle cx="12" cy="12" r="12"></circle>\n        <circle cx="12" cy="12" r="6"></circle>\n      </svg>';
    }
  }, {
    key: "_getIncompleteSVG",
    value: function _getIncompleteSVG() {
      return '<svg>\n        <circle cx="12" cy="12" r="12"></circle>\n      </svg>';
    }
  }, {
    key: "addOverflowTooltip",
    value: function addOverflowTooltip() {
      var _this3 = this;
      var stepLabels = toArray18(this.element.querySelectorAll(this.options.selectorLabel));
      var tooltips2 = toArray18(this.element.querySelectorAll(this.options.selectorTooltip));
      stepLabels.forEach(function(step) {
        if (step.scrollWidth > _this3.options.maxWidth) {
          step.classList.add(_this3.options.classOverflowLabel);
        }
      });
      tooltips2.forEach(function(tooltip) {
        var childText = tooltip.querySelector(_this3.options.selectorTooltipText);
        if (childText.scrollHeight > _this3.options.tooltipMaxHeight) {
          tooltip.classList.add(_this3.options.classTooltipMulti);
        }
      });
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-progress]",
        selectorStepElement: ".".concat(prefix2, "--progress-step"),
        selectorCurrent: ".".concat(prefix2, "--progress-step--current"),
        selectorIncomplete: ".".concat(prefix2, "--progress-step--incomplete"),
        selectorComplete: ".".concat(prefix2, "--progress-step--complete"),
        selectorLabel: ".".concat(prefix2, "--progress-label"),
        selectorTooltip: ".".concat(prefix2, "--tooltip"),
        selectorTooltipText: ".".concat(prefix2, "--tooltip__text"),
        classStep: "".concat(prefix2, "--progress-step"),
        classComplete: "".concat(prefix2, "--progress-step--complete"),
        classCurrent: "".concat(prefix2, "--progress-step--current"),
        classIncomplete: "".concat(prefix2, "--progress-step--incomplete"),
        classOverflowLabel: "".concat(prefix2, "--progress-label-overflow"),
        classTooltipMulti: "".concat(prefix2, "--tooltip_multi"),
        maxWidth: 87,
        tooltipMaxHeight: 21
      };
    }
  }]);
  ProgressIndicator2.components = new WeakMap();
  return ProgressIndicator2;
}(mixin3(create_component_default, init_component_by_search_default));

// node_modules/carbon-components/es/components/structured-list/structured-list.js
function _typeof31(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof31 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof31 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof31(obj);
}
function _classCallCheck32(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties30(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass30(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties30(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties30(Constructor, staticProps);
  return Constructor;
}
function _inherits31(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf31(subClass, superClass);
}
function _setPrototypeOf31(o, p) {
  _setPrototypeOf31 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf31(o, p);
}
function _createSuper31(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct31();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf31(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf31(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn31(this, result2);
  };
}
function _possibleConstructorReturn31(self2, call) {
  if (call && (_typeof31(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized31(self2);
}
function _assertThisInitialized31(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct31() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf31(o) {
  _getPrototypeOf31 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf31(o);
}
var toArray20 = function toArray21(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};
var StructuredList = function(_mixin) {
  _inherits31(StructuredList2, _mixin);
  var _super = _createSuper31(StructuredList2);
  function StructuredList2(element, options2) {
    var _this;
    _classCallCheck32(this, StructuredList2);
    _this = _super.call(this, element, options2);
    _this.manage(on(_this.element, "keydown", function(evt) {
      if (evt.which === 37 || evt.which === 38 || evt.which === 39 || evt.which === 40) {
        _this._handleKeydownArrow(evt);
      }
      if (evt.which === 13 || evt.which === 32) {
        _this._handleKeydownChecked(evt);
      }
    }));
    _this.manage(on(_this.element, "click", function(evt) {
      _this._handleClick(evt);
    }));
    return _this;
  }
  _createClass30(StructuredList2, [{
    key: "_direction",
    value: function _direction(evt) {
      return {
        37: -1,
        38: -1,
        39: 1,
        40: 1
      }[evt.which];
    }
  }, {
    key: "_nextIndex",
    value: function _nextIndex(array4, arrayItem, direction) {
      return array4.indexOf(arrayItem) + direction;
    }
  }, {
    key: "_getInput",
    value: function _getInput(index4) {
      var rows = toArray20(this.element.querySelectorAll(this.options.selectorRow));
      return this.element.ownerDocument.querySelector(this.options.selectorListInput(rows[index4].getAttribute("for")));
    }
  }, {
    key: "_handleInputChecked",
    value: function _handleInputChecked(index4) {
      var rows = this.element.querySelectorAll(this.options.selectorRow);
      var input = this.getInput(index4) || rows[index4].querySelector("input");
      input.checked = true;
    }
  }, {
    key: "_handleClick",
    value: function _handleClick(evt) {
      var _this2 = this;
      var selectedRow = eventMatches(evt, this.options.selectorRow);
      toArray20(this.element.querySelectorAll(this.options.selectorRow)).forEach(function(row) {
        return row.classList.remove(_this2.options.classActive);
      });
      if (selectedRow) {
        selectedRow.classList.add(this.options.classActive);
      }
    }
  }, {
    key: "_handleKeydownChecked",
    value: function _handleKeydownChecked(evt) {
      var _this3 = this;
      evt.preventDefault();
      var selectedRow = eventMatches(evt, this.options.selectorRow);
      toArray20(this.element.querySelectorAll(this.options.selectorRow)).forEach(function(row) {
        return row.classList.remove(_this3.options.classActive);
      });
      if (selectedRow) {
        selectedRow.classList.add(this.options.classActive);
        var input = selectedRow.querySelector(this.options.selectorListInput(selectedRow.getAttribute("for"))) || selectedRow.querySelector("input");
        input.checked = true;
      }
    }
  }, {
    key: "_handleKeydownArrow",
    value: function _handleKeydownArrow(evt) {
      var _this4 = this;
      evt.preventDefault();
      var selectedRow = eventMatches(evt, this.options.selectorRow);
      var direction = this._direction(evt);
      if (direction && selectedRow !== void 0) {
        var rows = toArray20(this.element.querySelectorAll(this.options.selectorRow));
        rows.forEach(function(row) {
          return row.classList.remove(_this4.options.classActive);
        });
        var firstIndex = 0;
        var nextIndex = this._nextIndex(rows, selectedRow, direction);
        var lastIndex = rows.length - 1;
        var getSelectedIndex = function getSelectedIndex2() {
          switch (nextIndex) {
            case -1:
              return lastIndex;
            case rows.length:
              return firstIndex;
            default:
              return nextIndex;
          }
        };
        var selectedIndex = getSelectedIndex();
        rows[selectedIndex].classList.add(this.options.classActive);
        rows[selectedIndex].focus();
        this._handleInputChecked(selectedIndex);
      }
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-structured-list]",
        selectorRow: "[data-structured-list] .".concat(prefix2, "--structured-list-tbody > label.").concat(prefix2, "--structured-list-row"),
        selectorListInput: function selectorListInput(id2) {
          return "#".concat(id2, ".").concat(prefix2, "--structured-list-input");
        },
        classActive: "".concat(prefix2, "--structured-list-row--selected")
      };
    }
  }]);
  StructuredList2.components = new WeakMap();
  return StructuredList2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/components/slider/slider.js
function _typeof32(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof32 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof32 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof32(obj);
}
function _classCallCheck33(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties31(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass31(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties31(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties31(Constructor, staticProps);
  return Constructor;
}
function _inherits32(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf32(subClass, superClass);
}
function _setPrototypeOf32(o, p) {
  _setPrototypeOf32 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf32(o, p);
}
function _createSuper32(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct32();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf32(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf32(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn32(this, result2);
  };
}
function _possibleConstructorReturn32(self2, call) {
  if (call && (_typeof32(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized32(self2);
}
function _assertThisInitialized32(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct32() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf32(o) {
  _getPrototypeOf32 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf32(o);
}
var Slider = function(_mixin) {
  _inherits32(Slider2, _mixin);
  var _super = _createSuper32(Slider2);
  function Slider2(element, options2) {
    var _this;
    _classCallCheck33(this, Slider2);
    _this = _super.call(this, element, options2);
    _this._changeState = function(state, detail, callback) {
      callback();
    };
    _this.sliderActive = false;
    _this.dragging = false;
    _this.track = _this.element.querySelector(_this.options.selectorTrack);
    _this.filledTrack = _this.element.querySelector(_this.options.selectorFilledTrack);
    _this.thumb = _this.element.querySelector(_this.options.selectorThumb);
    _this.input = _this.element.querySelector(_this.options.selectorInput);
    if (_this.element.dataset.sliderInputBox) {
      _this.boundInput = _this.element.ownerDocument.querySelector(_this.element.dataset.sliderInputBox);
      _this._updateInput();
      _this.manage(on(_this.boundInput, "change", function(evt) {
        _this.setValue(evt.target.value);
      }));
      _this.manage(on(_this.boundInput, "focus", function(evt) {
        evt.target.select();
      }));
      _this.manage(on(_this.boundInput, "mouseup", function(evt) {
        evt.preventDefault();
      }));
    }
    _this._updatePosition();
    _this.manage(on(_this.thumb, "mousedown", function() {
      _this.sliderActive = true;
    }));
    _this.manage(on(_this.element.ownerDocument, "mouseup", function() {
      _this.sliderActive = false;
    }));
    _this.manage(on(_this.element.ownerDocument, "mousemove", function(evt) {
      var disabled = _this.element.classList.contains(_this.options.classDisabled);
      if (_this.sliderActive === true && !disabled) {
        _this._updatePosition(evt);
      }
    }));
    _this.manage(on(_this.thumb, "keydown", function(evt) {
      var disabled = _this.element.classList.contains(_this.options.classDisabled);
      if (!disabled) {
        _this._updatePosition(evt);
      }
    }));
    _this.manage(on(_this.track, "click", function(evt) {
      var disabled = _this.element.classList.contains(_this.options.classDisabled);
      if (!disabled) {
        _this._updatePosition(evt);
      }
    }));
    return _this;
  }
  _createClass31(Slider2, [{
    key: "_updatePosition",
    value: function _updatePosition(evt) {
      var _this2 = this;
      var _this$_calcValue = this._calcValue(evt), left3 = _this$_calcValue.left, newValue = _this$_calcValue.newValue;
      if (this.dragging) {
        return;
      }
      this.dragging = true;
      requestAnimationFrame(function() {
        _this2.dragging = false;
        _this2.thumb.style.left = "".concat(left3, "%");
        _this2.filledTrack.style.transform = "translate(0%, -50%) scaleX(".concat(left3 / 100, ")");
        _this2.input.value = newValue;
        _this2._updateInput();
        _this2.changeState("slider-value-change", {
          value: newValue
        });
      });
    }
  }, {
    key: "_calcValue",
    value: function _calcValue(evt) {
      var _this$getInputProps = this.getInputProps(), value2 = _this$getInputProps.value, min8 = _this$getInputProps.min, max8 = _this$getInputProps.max, step = _this$getInputProps.step;
      var range3 = max8 - min8;
      var valuePercentage = (value2 - min8) / range3 * 100;
      var left3;
      var newValue;
      left3 = valuePercentage;
      newValue = value2;
      if (evt) {
        var type2 = evt.type;
        if (type2 === "keydown") {
          var direction = {
            40: -1,
            37: -1,
            38: 1,
            39: 1
          }[evt.which];
          if (direction !== void 0) {
            var multiplier = evt.shiftKey === true ? range3 / step / this.options.stepMultiplier : 1;
            var stepMultiplied = step * multiplier;
            var stepSize = stepMultiplied / range3 * 100;
            left3 = valuePercentage + stepSize * direction;
            newValue = Number(value2) + stepMultiplied * direction;
          }
        }
        if (type2 === "mousemove" || type2 === "click") {
          if (type2 === "click") {
            this.element.querySelector(this.options.selectorThumb).classList.add(this.options.classThumbClicked);
          } else {
            this.element.querySelector(this.options.selectorThumb).classList.remove(this.options.classThumbClicked);
          }
          var track = this.track.getBoundingClientRect();
          var unrounded = (evt.clientX - track.left) / track.width;
          var rounded = Math.round(range3 * unrounded / step) * step;
          left3 = rounded / range3 * 100;
          newValue = rounded + min8;
        }
      }
      if (newValue <= Number(min8)) {
        left3 = 0;
        newValue = min8;
      }
      if (newValue >= Number(max8)) {
        left3 = 100;
        newValue = max8;
      }
      return {
        left: left3,
        newValue
      };
    }
  }, {
    key: "_updateInput",
    value: function _updateInput() {
      if (this.boundInput) {
        this.boundInput.value = this.input.value;
      }
    }
  }, {
    key: "getInputProps",
    value: function getInputProps() {
      var values2 = {
        value: Number(this.input.value),
        min: Number(this.input.min),
        max: Number(this.input.max),
        step: this.input.step ? Number(this.input.step) : 1
      };
      return values2;
    }
  }, {
    key: "setValue",
    value: function setValue(value2) {
      this.input.value = value2;
      this._updatePosition();
    }
  }, {
    key: "stepUp",
    value: function stepUp() {
      this.input.stepUp();
      this._updatePosition();
    }
  }, {
    key: "stepDown",
    value: function stepDown() {
      this.input.stepDown();
      this._updatePosition();
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-slider]",
        selectorTrack: ".".concat(prefix2, "--slider__track"),
        selectorFilledTrack: ".".concat(prefix2, "--slider__filled-track"),
        selectorThumb: ".".concat(prefix2, "--slider__thumb"),
        selectorInput: ".".concat(prefix2, "--slider__input"),
        classDisabled: "".concat(prefix2, "--slider--disabled"),
        classThumbClicked: "".concat(prefix2, "--slider__thumb--clicked"),
        eventBeforeSliderValueChange: "slider-before-value-change",
        eventAfterSliderValueChange: "slider-after-value-change",
        stepMultiplier: 4
      };
    }
  }]);
  Slider2.components = new WeakMap();
  return Slider2;
}(mixin3(create_component_default, init_component_by_search_default, evented_state_default, handles_default));

// node_modules/carbon-components/es/components/tile/tile.js
function _typeof33(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof33 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof33 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof33(obj);
}
function _classCallCheck34(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties32(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass32(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties32(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties32(Constructor, staticProps);
  return Constructor;
}
function _get5(target, property2, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get5 = Reflect.get;
  } else {
    _get5 = function _get7(target2, property3, receiver2) {
      var base = _superPropBase5(target2, property3);
      if (!base)
        return;
      var desc = Object.getOwnPropertyDescriptor(base, property3);
      if (desc.get) {
        return desc.get.call(receiver2);
      }
      return desc.value;
    };
  }
  return _get5(target, property2, receiver || target);
}
function _superPropBase5(object, property2) {
  while (!Object.prototype.hasOwnProperty.call(object, property2)) {
    object = _getPrototypeOf33(object);
    if (object === null)
      break;
  }
  return object;
}
function _inherits33(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf33(subClass, superClass);
}
function _setPrototypeOf33(o, p) {
  _setPrototypeOf33 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf33(o, p);
}
function _createSuper33(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct33();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf33(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf33(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn33(this, result2);
  };
}
function _possibleConstructorReturn33(self2, call) {
  if (call && (_typeof33(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized33(self2);
}
function _assertThisInitialized33(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct33() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf33(o) {
  _getPrototypeOf33 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf33(o);
}
var Tile = function(_mixin) {
  _inherits33(Tile2, _mixin);
  var _super = _createSuper33(Tile2);
  function Tile2(element, options2) {
    var _this;
    _classCallCheck34(this, Tile2);
    _this = _super.call(this, element, options2);
    _this._getClass = function(type2) {
      var typeObj = {
        expandable: _this.options.classExpandedTile,
        clickable: _this.options.classClickableTile,
        selectable: _this.options.classSelectableTile
      };
      return typeObj[type2];
    };
    _this._hookActions = function(tileClass) {
      var isExpandable = _this.tileType === "expandable";
      if (isExpandable) {
        var aboveTheFold = _this.element.querySelector(_this.options.selectorAboveTheFold);
        var getStyle = _this.element.ownerDocument.defaultView.getComputedStyle(_this.element, null);
        var tilePaddingTop = parseInt(getStyle.getPropertyValue("padding-top"), 10);
        var tilePaddingBottom = parseInt(getStyle.getPropertyValue("padding-bottom"), 10);
        var tilePadding = tilePaddingTop + tilePaddingBottom;
        if (aboveTheFold) {
          _this.tileHeight = _this.element.getBoundingClientRect().height;
          _this.atfHeight = aboveTheFold.getBoundingClientRect().height + tilePadding;
          _this.element.style.maxHeight = "".concat(_this.atfHeight, "px");
        }
        if (_this.element.classList.contains(_this.options.classExpandedTile)) {
          _this._setTileHeight();
        }
      }
      _this.element.addEventListener("click", function(evt) {
        var input = eventMatches(evt, _this.options.selectorTileInput);
        if (!input) {
          _this.element.classList.toggle(tileClass);
        }
        if (isExpandable) {
          _this._setTileHeight();
        }
      });
      _this.element.addEventListener("keydown", function(evt) {
        var input = _this.element.querySelector(_this.options.selectorTileInput);
        if (input) {
          if (evt.which === 13 || evt.which === 32) {
            if (!isExpandable) {
              _this.element.classList.toggle(tileClass);
              input.checked = !input.checked;
            }
          }
        }
      });
    };
    _this._setTileHeight = function() {
      var isExpanded = _this.element.classList.contains(_this.options.classExpandedTile);
      _this.element.style.maxHeight = isExpanded ? "".concat(_this.tileHeight, "px") : "".concat(_this.atfHeight, "px");
    };
    _this.tileType = _this.element.dataset.tile;
    _this.tileHeight = 0;
    _this.atfHeight = 0;
    _this._hookActions(_this._getClass(_this.tileType));
    return _this;
  }
  _createClass32(Tile2, [{
    key: "release",
    value: function release() {
      _get5(_getPrototypeOf33(Tile2.prototype), "release", this).call(this);
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-tile]",
        selectorAboveTheFold: "[data-tile-atf]",
        selectorTileInput: "[data-tile-input]",
        classExpandedTile: "".concat(prefix2, "--tile--is-expanded"),
        classClickableTile: "".concat(prefix2, "--tile--is-clicked"),
        classSelectableTile: "".concat(prefix2, "--tile--is-selected")
      };
    }
  }]);
  Tile2.components = new WeakMap();
  return Tile2;
}(mixin3(create_component_default, init_component_by_search_default));

// node_modules/carbon-components/es/components/code-snippet/code-snippet.js
function _typeof34(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof34 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof34 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof34(obj);
}
function _classCallCheck35(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties33(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass33(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties33(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties33(Constructor, staticProps);
  return Constructor;
}
function _inherits34(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf34(subClass, superClass);
}
function _setPrototypeOf34(o, p) {
  _setPrototypeOf34 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf34(o, p);
}
function _createSuper34(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct34();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf34(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf34(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn34(this, result2);
  };
}
function _possibleConstructorReturn34(self2, call) {
  if (call && (_typeof34(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized34(self2);
}
function _assertThisInitialized34(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct34() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf34(o) {
  _getPrototypeOf34 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf34(o);
}
var CodeSnippet = function(_mixin) {
  _inherits34(CodeSnippet2, _mixin);
  var _super = _createSuper34(CodeSnippet2);
  function CodeSnippet2(element, options2) {
    var _this;
    _classCallCheck35(this, CodeSnippet2);
    _this = _super.call(this, element, options2);
    _this._initCodeSnippet();
    _this.element.querySelector(_this.options.classExpandBtn).addEventListener("click", function(evt) {
      return _this._handleClick(evt);
    });
    return _this;
  }
  _createClass33(CodeSnippet2, [{
    key: "_handleClick",
    value: function _handleClick() {
      var expandBtn = this.element.querySelector(this.options.classExpandText);
      this.element.classList.toggle(this.options.classExpanded);
      if (this.element.classList.contains(this.options.classExpanded)) {
        expandBtn.textContent = expandBtn.getAttribute(this.options.attribShowLessText);
      } else {
        expandBtn.textContent = expandBtn.getAttribute(this.options.attribShowMoreText);
      }
    }
  }, {
    key: "_initCodeSnippet",
    value: function _initCodeSnippet() {
      var expandBtn = this.element.querySelector(this.options.classExpandText);
      if (!expandBtn) {
        throw new TypeError("Cannot find the expand button.");
      }
      expandBtn.textContent = expandBtn.getAttribute(this.options.attribShowMoreText);
      if (this.element.offsetHeight < this.options.minHeight) {
        this.element.classList.add(this.options.classHideExpand);
      }
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-code-snippet]",
        attribShowMoreText: "data-show-more-text",
        attribShowLessText: "data-show-less-text",
        minHeight: 288,
        classExpanded: "".concat(prefix2, "--snippet--expand"),
        classExpandBtn: ".".concat(prefix2, "--snippet-btn--expand"),
        classExpandText: ".".concat(prefix2, "--snippet-btn--text"),
        classHideExpand: "".concat(prefix2, "--snippet-btn--expand--hide")
      };
    }
  }]);
  CodeSnippet2.components = new WeakMap();
  return CodeSnippet2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/components/text-input/text-input.js
function _typeof35(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof35 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof35 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof35(obj);
}
function _classCallCheck36(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties34(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass34(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties34(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties34(Constructor, staticProps);
  return Constructor;
}
function _inherits35(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf35(subClass, superClass);
}
function _setPrototypeOf35(o, p) {
  _setPrototypeOf35 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf35(o, p);
}
function _createSuper35(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct35();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf35(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf35(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn35(this, result2);
  };
}
function _possibleConstructorReturn35(self2, call) {
  if (call && (_typeof35(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized35(self2);
}
function _assertThisInitialized35(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct35() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf35(o) {
  _getPrototypeOf35 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf35(o);
}
var TextInput = function(_mixin) {
  _inherits35(TextInput2, _mixin);
  var _super = _createSuper35(TextInput2);
  function TextInput2(_element, options2) {
    var _this;
    _classCallCheck36(this, TextInput2);
    _this = _super.call(this, _element, options2);
    _this._setIconVisibility = function(_ref) {
      var iconVisibilityOn = _ref.iconVisibilityOn, iconVisibilityOff = _ref.iconVisibilityOff, passwordIsVisible = _ref.passwordIsVisible, selectorPasswordVisibilityTooltip = _ref.selectorPasswordVisibilityTooltip;
      if (passwordIsVisible) {
        iconVisibilityOn.setAttribute("hidden", true);
        iconVisibilityOff.removeAttribute("hidden");
        selectorPasswordVisibilityTooltip.textContent = "Hide password";
        return;
      }
      iconVisibilityOn.removeAttribute("hidden");
      iconVisibilityOff.setAttribute("hidden", true);
      selectorPasswordVisibilityTooltip.textContent = "Show password";
    };
    _this._toggle = function(_ref2) {
      var element = _ref2.element, button = _ref2.button;
      element.classList.toggle(_this.options.passwordIsVisible);
      var passwordIsVisible = element.classList.contains(_this.options.passwordIsVisible);
      var iconVisibilityOn = button.querySelector(_this.options.svgIconVisibilityOn);
      var iconVisibilityOff = button.querySelector(_this.options.svgIconVisibilityOff);
      var input = element.querySelector(_this.options.selectorPasswordField);
      var selectorPasswordVisibilityTooltip = element.querySelector(_this.options.selectorPasswordVisibilityTooltip);
      _this._setIconVisibility({
        iconVisibilityOn,
        iconVisibilityOff,
        passwordIsVisible,
        selectorPasswordVisibilityTooltip
      });
      input.type = passwordIsVisible ? "text" : "password";
    };
    _this.manage(on(_this.element, "click", function(event) {
      var toggleVisibilityButton = eventMatches(event, _this.options.selectorPasswordVisibilityButton);
      if (toggleVisibilityButton) {
        _this._toggle({
          element: _element,
          button: toggleVisibilityButton
        });
      }
    }));
    return _this;
  }
  _createClass34(TextInput2, null, [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-text-input]",
        selectorPasswordField: ".".concat(prefix2, "--text-input[data-toggle-password-visibility]"),
        selectorPasswordVisibilityButton: ".".concat(prefix2, "--text-input--password__visibility__toggle"),
        selectorPasswordVisibilityTooltip: ".".concat(prefix2, "--text-input--password__visibility__toggle > .").concat(prefix2, "--assistive-text"),
        passwordIsVisible: "".concat(prefix2, "--text-input--password-visible"),
        svgIconVisibilityOn: "svg.".concat(prefix2, "--icon--visibility-on"),
        svgIconVisibilityOff: "svg.".concat(prefix2, "--icon--visibility-off")
      };
    }
  }]);
  TextInput2.components = new WeakMap();
  return TextInput2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/components/ui-shell/side-nav.js
function _typeof36(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof36 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof36 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof36(obj);
}
function _toConsumableArray6(arr) {
  return _arrayWithoutHoles6(arr) || _iterableToArray6(arr) || _unsupportedIterableToArray6(arr) || _nonIterableSpread6();
}
function _nonIterableSpread6() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray6(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray6(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray6(o, minLen);
}
function _iterableToArray6(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles6(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray6(arr);
}
function _arrayLikeToArray6(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _classCallCheck37(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties35(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass35(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties35(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties35(Constructor, staticProps);
  return Constructor;
}
function _inherits36(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf36(subClass, superClass);
}
function _setPrototypeOf36(o, p) {
  _setPrototypeOf36 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf36(o, p);
}
function _createSuper36(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct36();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf36(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf36(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn36(this, result2);
  };
}
function _possibleConstructorReturn36(self2, call) {
  if (call && (_typeof36(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized36(self2);
}
function _assertThisInitialized36(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct36() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf36(o) {
  _getPrototypeOf36 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf36(o);
}
var prefix = settings_default.prefix;
var SideNav = function(_mixin) {
  _inherits36(SideNav2, _mixin);
  var _super = _createSuper36(SideNav2);
  function SideNav2(element, options2) {
    var _this;
    _classCallCheck37(this, SideNav2);
    _this = _super.call(this, element, options2);
    _this._handleClick = function(evt) {
      var matchesToggle = eventMatches(evt, _this.options.selectorSideNavToggle);
      var matchesNavSubmenu = eventMatches(evt, _this.options.selectorSideNavSubmenu);
      var matchesSideNavLink = eventMatches(evt, _this.options.selectorSideNavLink);
      if (!matchesToggle && !matchesNavSubmenu && !matchesSideNavLink) {
        return;
      }
      if (matchesToggle) {
        _this.changeState(!_this.isNavExpanded() ? _this.constructor.state.EXPANDED : _this.constructor.state.COLLAPSED);
        return;
      }
      if (matchesNavSubmenu) {
        var isSubmenuExpanded = matchesNavSubmenu.getAttribute("aria-expanded") === "true";
        matchesNavSubmenu.setAttribute("aria-expanded", "".concat(!isSubmenuExpanded));
        return;
      }
      if (matchesSideNavLink) {
        _toConsumableArray6(_this.element.querySelectorAll(_this.options.selectorSideNavLinkCurrent)).forEach(function(el) {
          el.classList.remove(_this.options.classSideNavItemActive, _this.options.classSideNavLinkCurrent);
          el.removeAttribute("aria-current");
        });
        matchesSideNavLink.classList.add(_this.options.classSideNavLinkCurrent);
        var closestSideNavItem = matchesSideNavLink.closest(_this.options.selectorSideNavItem);
        if (closestSideNavItem) {
          closestSideNavItem.classList.add(_this.options.classSideNavItemActive);
        }
      }
    };
    _this.manage(on(element, "click", _this._handleClick));
    return _this;
  }
  _createClass35(SideNav2, [{
    key: "isNavExpanded",
    value: function isNavExpanded() {
      return this.element.classList.contains(this.options.classSideNavExpanded);
    }
  }, {
    key: "changeState",
    value: function changeState(state) {
      this.element.classList.toggle(this.options.classSideNavExpanded, state === this.constructor.state.EXPANDED);
    }
  }]);
  SideNav2.components = new WeakMap();
  SideNav2.state = {
    EXPANDED: "expanded",
    COLLAPSED: "collapsed"
  };
  SideNav2.options = {
    selectorInit: "[data-side-nav]",
    selectorSideNavToggle: ".".concat(prefix, "--side-nav__toggle"),
    selectorSideNavSubmenu: ".".concat(prefix, "--side-nav__submenu"),
    selectorSideNavItem: ".".concat(prefix, "--side-nav__item"),
    selectorSideNavLink: ".".concat(prefix, "--side-nav__link"),
    selectorSideNavLinkCurrent: '[aria-current="page"],.'.concat(prefix, "--side-nav__link--current,.").concat(prefix, "--side-nav__item--active"),
    classSideNavExpanded: "".concat(prefix, "--side-nav--expanded"),
    classSideNavItemActive: "".concat(prefix, "--side-nav__item--active"),
    classSideNavLinkCurrent: "".concat(prefix, "--side-nav__link--current")
  };
  return SideNav2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/components/ui-shell/header-submenu.js
function _typeof37(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof37 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof37 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof37(obj);
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray7(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray7(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray7(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray7(o, minLen);
}
function _arrayLikeToArray7(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck38(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties36(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass36(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties36(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties36(Constructor, staticProps);
  return Constructor;
}
function _inherits37(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf37(subClass, superClass);
}
function _setPrototypeOf37(o, p) {
  _setPrototypeOf37 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf37(o, p);
}
function _createSuper37(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct37();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf37(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf37(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn37(this, result2);
  };
}
function _possibleConstructorReturn37(self2, call) {
  if (call && (_typeof37(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized37(self2);
}
function _assertThisInitialized37(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct37() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf37(o) {
  _getPrototypeOf37 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf37(o);
}
var forEach2 = function() {
  return Array.prototype.forEach;
}();
var toArray22 = function toArray23(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};
var HeaderSubmenu = function(_mixin) {
  _inherits37(HeaderSubmenu2, _mixin);
  var _super = _createSuper37(HeaderSubmenu2);
  function HeaderSubmenu2(element, options2) {
    var _this;
    _classCallCheck38(this, HeaderSubmenu2);
    _this = _super.call(this, element, options2);
    _this._getAction = function(event) {
      var isFlyoutMenu = eventMatches(event, _this.options.selectorFlyoutMenu);
      if (isFlyoutMenu) {
        return _this.constructor.actions.DELEGATE_TO_FLYOUT_MENU;
      }
      switch (event.type) {
        case "keydown":
          return {
            32: _this.constructor.actions.TOGGLE_SUBMENU_WITH_FOCUS,
            13: _this.constructor.actions.TOGGLE_SUBMENU_WITH_FOCUS,
            27: _this.constructor.actions.CLOSE_SUBMENU
          }[event.which];
        case "click":
          return eventMatches(event, _this.options.selectorItem) ? _this.constructor.actions.CLOSE_SUBMENU : null;
        case "blur":
        case "focusout": {
          var isOfSelf = _this.element.contains(event.relatedTarget);
          return isOfSelf ? null : _this.constructor.actions.CLOSE_SUBMENU;
        }
        case "mouseenter":
          return _this.constructor.actions.OPEN_SUBMENU;
        case "mouseleave":
          return _this.constructor.actions.CLOSE_SUBMENU;
        default:
          return null;
      }
    };
    _this._getNewState = function(action) {
      var trigger = _this.element.querySelector(_this.options.selectorTrigger);
      var isExpanded = trigger.getAttribute(_this.options.attribExpanded) === "true";
      switch (action) {
        case _this.constructor.actions.CLOSE_SUBMENU:
          return false;
        case _this.constructor.actions.OPEN_SUBMENU:
          return true;
        case _this.constructor.actions.TOGGLE_SUBMENU_WITH_FOCUS:
          return !isExpanded;
        default:
          return isExpanded;
      }
    };
    _this._setState = function(_ref) {
      var shouldBeExpanded = _ref.shouldBeExpanded, shouldFocusOnOpen = _ref.shouldFocusOnOpen;
      var trigger = _this.element.querySelector(_this.options.selectorTrigger);
      trigger.setAttribute(_this.options.attribExpanded, shouldBeExpanded);
      forEach2.call(_this.element.querySelectorAll(_this.options.selectorItem), function(item) {
        item.tabIndex = shouldBeExpanded ? 0 : -1;
      });
      if (shouldBeExpanded && shouldFocusOnOpen) {
        _this.element.querySelector(_this.options.selectorItem).focus();
      }
    };
    _this.getCurrentNavigation = function() {
      var focused = _this.element.ownerDocument.activeElement;
      return focused.nodeType === Node.ELEMENT_NODE && focused.matches(_this.options.selectorItem) ? focused : null;
    };
    _this.navigate = function(direction) {
      var items = toArray22(_this.element.querySelectorAll(_this.options.selectorItem));
      var start2 = _this.getCurrentNavigation() || _this.element.querySelector(_this.options.selectorItemSelected);
      var getNextItem = function getNextItem2(old) {
        var handleUnderflow = function handleUnderflow2(index5, length) {
          return index5 + (index5 >= 0 ? 0 : length);
        };
        var handleOverflow = function handleOverflow2(index5, length) {
          return index5 - (index5 < length ? 0 : length);
        };
        var index4 = Math.max(items.indexOf(old) + direction, -1);
        return items[handleUnderflow(handleOverflow(index4, items.length), items.length)];
      };
      for (var current = getNextItem(start2); current && current !== start2; current = getNextItem(current)) {
        if (!current.matches(_this.options.selectorItemHidden) && !current.parentNode.matches(_this.options.selectorItemHidden) && !current.matches(_this.options.selectorItemSelected)) {
          current.focus();
          break;
        }
      }
    };
    _this._handleEvent = function(event) {
      var trigger = _this.element.querySelector(_this.options.selectorTrigger);
      if (!trigger) {
        return;
      }
      var action = _this._getAction(event);
      if (action) {
        var shouldBeExpanded = _this._getNewState(action);
        _this._setState({
          shouldBeExpanded
        });
      }
    };
    _this._handleKeyDown = function(event) {
      var trigger = _this.element.querySelector(_this.options.selectorTrigger);
      if (!trigger) {
        return;
      }
      var action = _this._getAction(event);
      if (event.which === 32) {
        event.preventDefault();
      }
      switch (action) {
        case _this.constructor.actions.DELEGATE_TO_FLYOUT_MENU:
          break;
        case _this.constructor.actions.CLOSE_SUBMENU: {
          var shouldBeExpanded = _this._getNewState(action);
          _this._setState({
            shouldBeExpanded
          });
          break;
        }
        case _this.constructor.actions.TOGGLE_SUBMENU_WITH_FOCUS: {
          var _shouldBeExpanded = _this._getNewState(action);
          _this._setState({
            shouldBeExpanded: _shouldBeExpanded,
            shouldFocusOnOpen: true
          });
          break;
        }
        default: {
          var expanded = trigger.getAttribute(_this.options.attribExpanded) === "true";
          if (expanded) {
            var direction = {
              38: _this.constructor.NAVIGATE.BACKWARD,
              40: _this.constructor.NAVIGATE.FORWARD
            }[event.which];
            switch (event.which) {
              case 35: {
                event.preventDefault();
                var menuItems = _this.element.querySelectorAll(_this.options.selectorItem);
                var lastMenuItem = menuItems[menuItems.length - 1];
                if (lastMenuItem) {
                  lastMenuItem.focus();
                }
                break;
              }
              case 36: {
                event.preventDefault();
                var _this$element$querySe = _this.element.querySelectorAll(_this.options.selectorItem), _this$element$querySe2 = _slicedToArray(_this$element$querySe, 1), firstMenuItem = _this$element$querySe2[0];
                if (firstMenuItem) {
                  firstMenuItem.focus();
                }
                break;
              }
              case 38:
              case 40:
                _this.navigate(direction);
                event.preventDefault();
                break;
              default:
                break;
            }
          }
          break;
        }
      }
    };
    var hasFocusOut = "onfocusout" in window;
    _this.manage(on(_this.element, hasFocusOut ? "focusout" : "blur", _this._handleEvent, !hasFocusOut));
    _this.manage(on(_this.element, "mouseenter", _this._handleEvent));
    _this.manage(on(_this.element, "mouseleave", _this._handleEvent));
    _this.manage(on(_this.element, "click", _this._handleEvent));
    _this.manage(on(_this.element, "keydown", _this._handleKeyDown));
    return _this;
  }
  _createClass36(HeaderSubmenu2, null, [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-header-submenu]",
        selectorTrigger: ".".concat(prefix2, "--header__menu-title"),
        selectorItem: ".".concat(prefix2, "--header__menu .").concat(prefix2, "--header__menu-item"),
        attribExpanded: "aria-expanded"
      };
    }
  }]);
  HeaderSubmenu2.components = new WeakMap();
  HeaderSubmenu2.actions = {
    CLOSE_SUBMENU: "CLOSE_SUBMENU",
    OPEN_SUBMENU: "OPEN_SUBMENU",
    TOGGLE_SUBMENU_WITH_FOCUS: "TOGGLE_SUBMENU_WITH_FOCUS",
    DELEGATE_TO_FLYOUT_MENU: "DELEGATE_TO_FLYOUT_MENU"
  };
  HeaderSubmenu2.NAVIGATE = {
    BACKWARD: -1,
    FORWARD: 1
  };
  return HeaderSubmenu2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/components/ui-shell/header-nav.js
function _typeof38(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof38 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof38 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof38(obj);
}
function _classCallCheck39(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties37(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass37(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties37(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties37(Constructor, staticProps);
  return Constructor;
}
function _inherits38(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf38(subClass, superClass);
}
function _setPrototypeOf38(o, p) {
  _setPrototypeOf38 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf38(o, p);
}
function _createSuper38(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct38();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf38(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf38(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn38(this, result2);
  };
}
function _possibleConstructorReturn38(self2, call) {
  if (call && (_typeof38(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized38(self2);
}
function _assertThisInitialized38(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct38() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf38(o) {
  _getPrototypeOf38 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf38(o);
}
var toArray24 = function toArray25(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};
var HeaderNav = function(_mixin) {
  _inherits38(HeaderNav2, _mixin);
  var _super = _createSuper38(HeaderNav2);
  function HeaderNav2(element, options2) {
    var _this;
    _classCallCheck39(this, HeaderNav2);
    _this = _super.call(this, element, options2);
    _this.getCurrentNavigation = function() {
      var focused = _this.element.ownerDocument.activeElement.closest(_this.options.selectorSubmenu);
      return focused && focused.nodeType === Node.ELEMENT_NODE ? focused.querySelector(_this.options.selectorSubmenuLink) : null;
    };
    _this.navigate = function(direction) {
      var items = toArray24(_this.element.querySelectorAll(_this.options.selectorSubmenuLink));
      var start2 = _this.getCurrentNavigation();
      var getNextItem = function getNextItem2(old) {
        var handleUnderflow = function handleUnderflow2(index5, length) {
          return index5 + (index5 >= 0 ? 0 : length);
        };
        var handleOverflow = function handleOverflow2(index5, length) {
          return index5 - (index5 < length ? 0 : length);
        };
        var index4 = Math.max(items.indexOf(old) + direction, -1);
        return items[handleUnderflow(handleOverflow(index4, items.length), items.length)];
      };
      getNextItem(start2).focus();
    };
    _this._handleKeyDown = function(event) {
      var keyCodes = {
        37: _this.constructor.NAVIGATE.BACKWARD,
        39: _this.constructor.NAVIGATE.FORWARD
      };
      var keyCodeMatches = keyCodes[event.which];
      if (keyCodeMatches) {
        _this.navigate(keyCodeMatches);
      }
    };
    _this.manage(on(_this.element, "keydown", _this._handleKeyDown));
    return _this;
  }
  _createClass37(HeaderNav2, null, [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-header-nav]",
        selectorNavKind: "[data-header-nav-kind]",
        selectorSubmenu: ".".concat(prefix2, "--header__submenu"),
        selectorSubmenuLink: ".".concat(prefix2, "--header__menu-title"),
        selectorSubmenuItem: ".".concat(prefix2, "--header__menu-title > .").concat(prefix2, "--header__menu-item")
      };
    }
  }]);
  HeaderNav2.components = new WeakMap();
  HeaderNav2.NAVIGATE = {
    BACKWARD: -1,
    FORWARD: 1
  };
  return HeaderNav2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/carbon-components/es/components/ui-shell/navigation-menu-panel.js
function _typeof39(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof39 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof39 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof39(obj);
}
function _classCallCheck40(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties38(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass38(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties38(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties38(Constructor, staticProps);
  return Constructor;
}
function _inherits39(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf39(subClass, superClass);
}
function _setPrototypeOf39(o, p) {
  _setPrototypeOf39 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf39(o, p);
}
function _createSuper39(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct39();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf39(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf39(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn39(this, result2);
  };
}
function _possibleConstructorReturn39(self2, call) {
  if (call && (_typeof39(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized39(self2);
}
function _assertThisInitialized39(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct39() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf39(o) {
  _getPrototypeOf39 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf39(o);
}
var NavigationMenuPanel = function(_mixin) {
  _inherits39(NavigationMenuPanel2, _mixin);
  var _super = _createSuper39(NavigationMenuPanel2);
  function NavigationMenuPanel2() {
    var _this;
    _classCallCheck40(this, NavigationMenuPanel2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _this.createdByLauncher = function(event) {
      var isExpanded = !_this.element.hasAttribute("hidden");
      var newState = isExpanded ? "collapsed" : "expanded";
      _this.triggerButton = event.delegateTarget;
      _this.changeState(newState);
    };
    _this.shouldStateBeChanged = function(state) {
      return state === "expanded" === _this.element.hasAttribute("hidden");
    };
    _this._changeState = function(state, callback) {
      toggleAttribute(_this.element, "hidden", state !== "expanded");
      if (_this.triggerButton) {
        if (state === "expanded") {
          var focusableMenuItems = _this.element.querySelector(_this.options.selectorFocusableMenuItem);
          if (focusableMenuItems) {
            focusableMenuItems.focus();
          }
        }
        var label = state === "expanded" ? _this.triggerButton.getAttribute(_this.options.attribLabelCollapse) : _this.triggerButton.getAttribute(_this.options.attribLabelExpand);
        _this.triggerButton.classList.toggle(_this.options.classNavigationMenuPanelHeaderActionActive, state === "expanded");
        _this.triggerButton.setAttribute("aria-label", label);
        _this.triggerButton.setAttribute("title", label);
      }
      callback();
    };
    return _this;
  }
  _createClass38(NavigationMenuPanel2, null, [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        initEventNames: ["click"],
        eventBeforeExpanded: "navigation-menu-being-expanded",
        eventAfterExpanded: "navigation-menu-expanded",
        eventBeforeCollapsed: "navigation-menu-being-collapsed",
        eventAfterCollapsed: "navigation-menu-collapsed",
        selectorFocusableMenuItem: ".".concat(prefix2, "--navigation__category-toggle, .").concat(prefix2, "--navigation-link"),
        classNavigationMenuPanelHeaderActionActive: "".concat(prefix2, "--header__action--active"),
        attribLabelExpand: "data-navigation-menu-panel-label-expand",
        attribLabelCollapse: "data-navigation-menu-panel-label-collapse"
      };
    }
  }]);
  NavigationMenuPanel2.components = new WeakMap();
  return NavigationMenuPanel2;
}(mixin3(create_component_default, init_component_by_launcher_default, evented_show_hide_state_default, handles_default, evented_state_default));

// node_modules/carbon-components/es/components/ui-shell/navigation-menu.js
function _typeof40(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof40 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof40 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof40(obj);
}
function _toConsumableArray7(arr) {
  return _arrayWithoutHoles7(arr) || _iterableToArray7(arr) || _unsupportedIterableToArray8(arr) || _nonIterableSpread7();
}
function _nonIterableSpread7() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray8(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray8(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray8(o, minLen);
}
function _iterableToArray7(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles7(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray8(arr);
}
function _arrayLikeToArray8(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _classCallCheck41(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties39(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass39(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties39(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties39(Constructor, staticProps);
  return Constructor;
}
function _inherits40(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf40(subClass, superClass);
}
function _setPrototypeOf40(o, p) {
  _setPrototypeOf40 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf40(o, p);
}
function _createSuper40(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct40();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf40(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf40(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn40(this, result2);
  };
}
function _possibleConstructorReturn40(self2, call) {
  if (call && (_typeof40(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized40(self2);
}
function _assertThisInitialized40(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct40() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf40(o) {
  _getPrototypeOf40 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf40(o);
}
var NavigationMenu = function(_NavigationMenuPanel) {
  _inherits40(NavigationMenu2, _NavigationMenuPanel);
  var _super = _createSuper40(NavigationMenu2);
  function NavigationMenu2(element, options2) {
    var _this;
    _classCallCheck41(this, NavigationMenu2);
    _this = _super.call(this, element, options2);
    _this.getCurrentNavigation = function() {
      return _this.element.ownerDocument.activeElement;
    };
    _this.navigate = function(direction) {
      var items = _toConsumableArray7(_this.element.querySelectorAll(_this.options.selectorFocusableNavItems));
      var start2 = _this.getCurrentNavigation();
      var getNextItem = function getNextItem2(old) {
        var handleUnderflow = function handleUnderflow2(index5, length) {
          return index5 + (index5 >= 0 ? 0 : length);
        };
        var handleOverflow = function handleOverflow2(index5, length) {
          return index5 - (index5 < length ? 0 : length);
        };
        var index4 = Math.max(items.indexOf(old) + direction, -1);
        return items[handleUnderflow(handleOverflow(index4, items.length), items.length)];
      };
      getNextItem(start2).focus();
    };
    _this._handleKeyDown = function(event) {
      var isExpanded = !_this.element.hasAttribute("hidden");
      if (event.which === 27 && isExpanded) {
        _this.changeState("collapsed");
        if (_this.triggerButton) {
          _this.triggerButton.focus();
        }
        return;
      }
      var matchesNavSubmenu = eventMatches(event, _this.options.selectorShellNavSubmenu);
      var matchesShellNavLink = eventMatches(event, _this.options.selectorShellNavLink);
      if (!matchesNavSubmenu && !matchesShellNavLink) {
        return;
      }
      var navigationKeyCodes = {
        38: _this.constructor.NAVIGATE.BACKWARD,
        40: _this.constructor.NAVIGATE.FORWARD
      };
      var navigationKeyCodeMatches = navigationKeyCodes[event.which];
      if (navigationKeyCodeMatches) {
        event.preventDefault();
        _this.navigate(navigationKeyCodeMatches);
      }
    };
    _this._handleFocusOut = function(event) {
      var nextTargetIsOfSelf = _this.element.contains(event.relatedTarget) || event.relatedTarget === _this.triggerButton || !event.relatedTarget;
      var oldTargetIsOfSelf = _this.element.contains(event.target);
      if (oldTargetIsOfSelf && !nextTargetIsOfSelf) {
        _this.changeState("collapsed");
        _this.triggerButton.focus();
      }
    };
    _this.changeNavSubmenuState = function(_ref) {
      var matchesNavSubmenu = _ref.matchesNavSubmenu, shouldBeCollapsed = _ref.shouldBeCollapsed;
      var shellNavCategory = matchesNavSubmenu.closest(_this.options.selectorShellNavCategory);
      if (!shellNavCategory) {
        return;
      }
      matchesNavSubmenu.setAttribute("aria-expanded", !shouldBeCollapsed);
      shellNavCategory.classList.toggle(_this.options.classShellNavCategoryExpanded);
      Array.prototype.forEach.call(shellNavCategory.querySelectorAll(_this.options.selectorShellNavLink), function(item) {
        item.tabIndex = !shouldBeCollapsed ? 0 : -1;
      });
    };
    _this._handleClick = function(event) {
      var matchesNavSubmenu = eventMatches(event, _this.options.selectorShellNavSubmenu);
      var matchesShellNavLink = eventMatches(event, _this.options.selectorShellNavLink);
      var matchesNestedShellNavLink = eventMatches(event, _this.options.selectorShellNestedNavLink);
      if (!matchesNavSubmenu && !matchesShellNavLink) {
        return;
      }
      if (matchesNestedShellNavLink) {
        _toConsumableArray7(_this.element.querySelectorAll(_this.options.selectorShellNavLinkCurrent)).forEach(function(el) {
          el.classList.remove(_this.options.classShellNavItemActive, _this.options.classShellNavLinkCurrent);
        });
        matchesNestedShellNavLink.closest(_this.options.selectorShellNavNestedCategory).classList.add(_this.options.classShellNavItemActive);
        return;
      }
      if (matchesNavSubmenu) {
        var isExpanded = matchesNavSubmenu.getAttribute("aria-expanded") === "true";
        _this.changeNavSubmenuState({
          matchesNavSubmenu,
          isExpanded
        });
        return;
      }
      if (matchesShellNavLink) {
        _toConsumableArray7(_this.element.querySelectorAll(_this.options.selectorShellNavLinkCurrent)).forEach(function(el) {
          el.classList.remove(_this.options.classShellNavItemActive, _this.options.classShellNavLinkCurrent);
        });
        matchesShellNavLink.closest(_this.options.selectorShellNavItem).classList.add(_this.options.classShellNavItemActive);
      }
    };
    _this.manage(on(element, "click", _this._handleClick));
    _this.manage(on(element, "keydown", _this._handleKeyDown));
    _this.manage(on(_this.element.ownerDocument, "click", function(event) {
      if (!_this.element.hasAttribute("hidden") && !_this.triggerButton.contains(event.target) && !_this.element.contains(event.target)) {
        _this.changeState("collapsed");
      }
    }));
    var hasFocusOut = "onfocusout" in window;
    _this.manage(on(_this.element, hasFocusOut ? "focusout" : "blur", _this._handleFocusOut, !hasFocusOut));
    return _this;
  }
  _createClass39(NavigationMenu2, null, [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return Object.assign(Object.create(NavigationMenuPanel.options), {
        selectorInit: "[data-navigation-menu]",
        attribInitTarget: "data-navigation-menu-target",
        selectorShellNavSubmenu: ".".concat(prefix2, "--navigation__category-toggle"),
        selectorShellNavLink: ".".concat(prefix2, "--navigation-link"),
        selectorShellNestedNavLink: ".".concat(prefix2, "--navigation__category-item > a.").concat(prefix2, "--navigation-link"),
        selectorShellNavLinkCurrent: ".".concat(prefix2, "--navigation-item--active,.").concat(prefix2, "--navigation__category-item--active"),
        selectorFocusableNavItems: "\n        .".concat(prefix2, "--navigation__category-toggle,\n        .").concat(prefix2, "--navigation-item > .").concat(prefix2, "--navigation-link,\n        .").concat(prefix2, '--navigation-link[tabindex="0"]\n      '),
        selectorShellNavItem: ".".concat(prefix2, "--navigation-item"),
        selectorShellNavCategory: ".".concat(prefix2, "--navigation__category"),
        selectorShellNavNestedCategory: ".".concat(prefix2, "--navigation__category-item"),
        classShellNavItemActive: "".concat(prefix2, "--navigation-item--active"),
        classShellNavLinkCurrent: "".concat(prefix2, "--navigation__category-item--active"),
        classShellNavCategoryExpanded: "".concat(prefix2, "--navigation__category--expanded")
      });
    }
  }]);
  NavigationMenu2.components = new WeakMap();
  NavigationMenu2.NAVIGATE = {
    BACKWARD: -1,
    FORWARD: 1
  };
  return NavigationMenu2;
}(NavigationMenuPanel);

// node_modules/carbon-components/es/globals/js/misc/on-focus-by-keyboard.js
function onFocusByKeyboard(node, name, callback) {
  var hasFocusout = "onfocusout" in window;
  var focusinEventName = hasFocusout ? "focusin" : "focus";
  var focusoutEventName = hasFocusout ? "focusout" : "blur";
  var supportedEvents = {
    focus: focusinEventName,
    blur: focusoutEventName
  };
  var eventName = supportedEvents[name];
  if (!eventName) {
    throw new Error("Unsupported event!");
  }
  var clicked;
  var handleMousedown = function handleMousedown2() {
    clicked = true;
    requestAnimationFrame(function() {
      clicked = false;
    });
  };
  var handleFocusin = function handleFocusin2(evt) {
    if (!clicked) {
      callback(evt);
    }
  };
  node.ownerDocument.addEventListener("mousedown", handleMousedown);
  node.addEventListener(eventName, handleFocusin, !hasFocusout);
  return {
    release: function release() {
      if (handleFocusin) {
        node.removeEventListener(eventName, handleFocusin, !hasFocusout);
        handleFocusin = null;
      }
      if (handleMousedown) {
        node.ownerDocument.removeEventListener("mousedown", handleMousedown);
        handleMousedown = null;
      }
      return null;
    }
  };
}

// node_modules/carbon-components/es/components/ui-shell/product-switcher.js
function _typeof41(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof41 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof41 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof41(obj);
}
function _classCallCheck42(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties40(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass40(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties40(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties40(Constructor, staticProps);
  return Constructor;
}
function _get6(target, property2, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get6 = Reflect.get;
  } else {
    _get6 = function _get7(target2, property3, receiver2) {
      var base = _superPropBase6(target2, property3);
      if (!base)
        return;
      var desc = Object.getOwnPropertyDescriptor(base, property3);
      if (desc.get) {
        return desc.get.call(receiver2);
      }
      return desc.value;
    };
  }
  return _get6(target, property2, receiver || target);
}
function _superPropBase6(object, property2) {
  while (!Object.prototype.hasOwnProperty.call(object, property2)) {
    object = _getPrototypeOf41(object);
    if (object === null)
      break;
  }
  return object;
}
function _inherits41(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf41(subClass, superClass);
}
function _setPrototypeOf41(o, p) {
  _setPrototypeOf41 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf41(o, p);
}
function _createSuper41(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct41();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf41(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf41(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn41(this, result2);
  };
}
function _possibleConstructorReturn41(self2, call) {
  if (call && (_typeof41(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized41(self2);
}
function _assertThisInitialized41(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct41() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf41(o) {
  _getPrototypeOf41 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf41(o);
}
var seq = 0;
var ProductSwitcher = function(_NavigationMenuPanel) {
  _inherits41(ProductSwitcher2, _NavigationMenuPanel);
  var _super = _createSuper41(ProductSwitcher2);
  function ProductSwitcher2(element, options2) {
    var _this;
    _classCallCheck42(this, ProductSwitcher2);
    _this = _super.call(this, element, options2);
    _this.current = "";
    _this.triggerButtonIds = new Set();
    _this._handleFocusOut = function(event) {
      if (_this.element.contains(event.relatedTarget)) {
        return;
      }
      var currentTriggerButton = _this.element.ownerDocument.getElementById(_this.current);
      if (currentTriggerButton && event.relatedTarget && !event.relatedTarget.matches(_this.options.selectorFloatingMenus)) {
        currentTriggerButton.focus();
      }
    };
    _this._handleKeyDown = function(event) {
      var isExpanded = !_this.element.hasAttribute("hidden");
      if (event.which === 27 && isExpanded) {
        var triggerButton = _this.current;
        _this.changeState(_this.constructor.SELECT_NONE);
        _this.element.ownerDocument.getElementById(triggerButton).focus();
      }
    };
    _this.createdByLauncher = function(event) {
      var isExpanded = _this.element.classList.contains(_this.options.classProductSwitcherExpanded);
      var launcher = event.delegateTarget;
      if (!launcher.id) {
        launcher.id = "__carbon-product-switcher-launcher-".concat(seq++);
      }
      var current = launcher.id;
      _this.changeState(isExpanded && _this.current === current ? _this.constructor.SELECT_NONE : current);
    };
    _this.shouldStateBeChanged = function(current) {
      return _this.current !== current;
    };
    _this._changeState = function(state, callback) {
      _this.element.classList.toggle(_this.options.classProductSwitcherExpanded, state !== _this.constructor.SELECT_NONE);
      _this.current = state;
      if (_this.current !== _this.constructor.SELECT_NONE) {
        _this.triggerButtonIds.add(_this.current);
      }
      _this.triggerButtonIds.forEach(function(id2) {
        var button = _this.element.ownerDocument.getElementById(id2);
        var label2 = button.getAttribute(_this.options.attribLabelExpand);
        button.classList.remove(_this.options.classNavigationMenuPanelHeaderActionActive);
        button.setAttribute("aria-label", label2);
        button.setAttribute("title", label2);
      });
      var currentTriggerButton = _this.element.ownerDocument.getElementById(_this.current);
      if (currentTriggerButton) {
        var label = currentTriggerButton.getAttribute(_this.options.attribLabelCollapse);
        currentTriggerButton.classList.toggle(_this.options.classNavigationMenuPanelHeaderActionActive);
        currentTriggerButton.setAttribute("aria-label", label);
        currentTriggerButton.setAttribute("title", label);
      }
      if (state !== _this.constructor.SELECT_NONE) {
        _this.element.setAttribute("tabindex", "0");
        _this.element.focus();
      } else {
        _this.element.setAttribute("tabindex", "-1");
      }
      callback();
    };
    _this.manage(on(element, "keydown", _this._handleKeyDown));
    _this.manage(onFocusByKeyboard(element, "blur", _this._handleFocusOut));
    return _this;
  }
  _createClass40(ProductSwitcher2, [{
    key: "release",
    value: function release() {
      this.triggerButtonIds.clear();
      return _get6(_getPrototypeOf41(ProductSwitcher2.prototype), "release", this).call(this);
    }
  }], [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return Object.assign(Object.create(NavigationMenuPanel.options), {
        selectorInit: "[data-product-switcher]",
        selectorFloatingMenus: "\n        .".concat(prefix2, "--overflow-menu-options,\n        .").concat(prefix2, "--overflow-menu-options *,\n        .").concat(prefix2, "--tooltip,\n        .").concat(prefix2, "--tooltip *,\n        .flatpicker-calendar,\n        .flatpicker-calendar *\n        "),
        attribInitTarget: "data-product-switcher-target",
        classProductSwitcherExpanded: "".concat(prefix2, "--panel--expanded")
      });
    }
  }]);
  ProductSwitcher2.SELECT_NONE = "__carbon-product-switcher-launcher-NONE";
  ProductSwitcher2.components = new WeakMap();
  return ProductSwitcher2;
}(NavigationMenuPanel);

// node_modules/carbon-components/es/components/pagination-nav/pagination-nav.js
function _typeof42(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof42 = function _typeof43(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof42 = function _typeof43(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof42(obj);
}
function _classCallCheck43(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties41(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass41(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties41(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties41(Constructor, staticProps);
  return Constructor;
}
function _inherits42(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    _setPrototypeOf42(subClass, superClass);
}
function _setPrototypeOf42(o, p) {
  _setPrototypeOf42 = Object.setPrototypeOf || function _setPrototypeOf43(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf42(o, p);
}
function _createSuper42(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct42();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf42(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf42(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn42(this, result2);
  };
}
function _possibleConstructorReturn42(self2, call) {
  if (call && (_typeof42(call) === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized42(self2);
}
function _assertThisInitialized42(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct42() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf42(o) {
  _getPrototypeOf42 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf43(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf42(o);
}
var PaginationNav = function(_mixin) {
  _inherits42(PaginationNav2, _mixin);
  var _super = _createSuper42(PaginationNav2);
  function PaginationNav2(element, options2) {
    var _this;
    _classCallCheck43(this, PaginationNav2);
    _this = _super.call(this, element, options2);
    _this.getActivePageNumber = function() {
      var pageNum;
      var activePageElement = _this.element.querySelector(_this.options.selectorPageActive);
      if (activePageElement) {
        pageNum = Number(activePageElement.getAttribute(_this.options.attribPage));
      }
      return pageNum;
    };
    _this.clearActivePage = function(evt) {
      var pageButtonNodeList = _this.element.querySelectorAll(_this.options.selectorPageButton);
      var pageSelectElement = _this.element.querySelector(_this.options.selectorPageSelect);
      Array.prototype.forEach.call(pageButtonNodeList, function(el) {
        el.classList.remove(_this.options.classActive, _this.options.classDisabled);
        el.removeAttribute(_this.options.attribActive);
        el.removeAttribute("aria-disabled");
        el.removeAttribute("aria-current");
      });
      if (pageSelectElement) {
        pageSelectElement.removeAttribute("aria-current");
        var pageSelectElementOptions = pageSelectElement.options;
        Array.prototype.forEach.call(pageSelectElementOptions, function(el) {
          el.removeAttribute(_this.options.attribActive);
        });
        if (!evt.target.matches(_this.options.selectorPageSelect)) {
          pageSelectElement.classList.remove(_this.options.classActive);
          pageSelectElement.value = "";
        }
      }
    };
    _this.handleClick = function(evt) {
      if (!evt.target.getAttribute("aria-disabled") === true) {
        var nextActivePageNumber = _this.getActivePageNumber();
        var pageElementNodeList = _this.element.querySelectorAll(_this.options.selectorPageElement);
        var pageSelectElement = _this.element.querySelector(_this.options.selectorPageSelect);
        _this.clearActivePage(evt);
        if (evt.target.matches(_this.options.selectorPageButton)) {
          nextActivePageNumber = Number(evt.target.getAttribute(_this.options.attribPage));
        }
        if (evt.target.matches(_this.options.selectorPagePrevious)) {
          nextActivePageNumber -= 1;
        }
        if (evt.target.matches(_this.options.selectorPageNext)) {
          nextActivePageNumber += 1;
        }
        var pageTargetElement = pageElementNodeList[nextActivePageNumber - 1];
        pageTargetElement.setAttribute(_this.options.attribActive, true);
        if (pageTargetElement.tagName === "OPTION") {
          pageSelectElement.value = _this.getActivePageNumber();
          pageSelectElement.classList.add(_this.options.classActive);
          pageSelectElement.setAttribute("aria-current", "page");
        } else {
          pageTargetElement.classList.add(_this.options.classActive, _this.options.classDisabled);
          pageTargetElement.setAttribute("aria-disabled", true);
          pageTargetElement.setAttribute("aria-current", "page");
        }
        _this.setPrevNextStates();
      }
    };
    _this.handleSelectChange = function(evt) {
      _this.clearActivePage(evt);
      var pageSelectElement = _this.element.querySelector(_this.options.selectorPageSelect);
      var pageSelectElementOptions = pageSelectElement.options;
      pageSelectElementOptions[pageSelectElementOptions.selectedIndex].setAttribute(_this.options.attribActive, true);
      evt.target.setAttribute("aria-current", "page");
      evt.target.classList.add(_this.options.classActive);
      _this.setPrevNextStates();
    };
    _this.setPrevNextStates = function() {
      var pageElementNodeList = _this.element.querySelectorAll(_this.options.selectorPageElement);
      var totalPages = pageElementNodeList.length;
      var pageDirectionElementPrevious = _this.element.querySelector(_this.options.selectorPagePrevious);
      var pageDirectionElementNext = _this.element.querySelector(_this.options.selectorPageNext);
      if (pageDirectionElementPrevious) {
        if (_this.getActivePageNumber() <= 1) {
          pageDirectionElementPrevious.setAttribute("aria-disabled", true);
          pageDirectionElementPrevious.classList.add(_this.options.classDisabled);
        } else {
          pageDirectionElementPrevious.removeAttribute("aria-disabled");
          pageDirectionElementPrevious.classList.remove(_this.options.classDisabled);
        }
      }
      if (pageDirectionElementNext) {
        if (_this.getActivePageNumber() >= totalPages) {
          pageDirectionElementNext.setAttribute("aria-disabled", true);
          pageDirectionElementNext.classList.add(_this.options.classDisabled);
        } else {
          pageDirectionElementNext.removeAttribute("aria-disabled");
          pageDirectionElementNext.classList.remove(_this.options.classDisabled);
        }
      }
    };
    _this.manage(on(_this.element, "click", function(evt) {
      return _this.handleClick(evt);
    }));
    _this.manage(on(_this.element, "change", function(evt) {
      if (evt.target.matches(_this.options.selectorPageSelect)) {
        _this.handleSelectChange(evt);
      }
    }));
    return _this;
  }
  _createClass41(PaginationNav2, null, [{
    key: "options",
    get: function get5() {
      var prefix2 = settings_default.prefix;
      return {
        selectorInit: "[data-pagination-nav]",
        selectorPageElement: "[data-page]",
        selectorPageButton: "[data-page-button]",
        selectorPagePrevious: "[data-page-previous]",
        selectorPageNext: "[data-page-next]",
        selectorPageSelect: "[data-page-select]",
        selectorPageActive: '[data-page-active="true"]',
        attribPage: "data-page",
        attribActive: "data-page-active",
        classActive: "".concat(prefix2, "--pagination-nav__page--active"),
        classDisabled: "".concat(prefix2, "--pagination-nav__page--disabled")
      };
    }
  }]);
  PaginationNav2.components = new WeakMap();
  return PaginationNav2;
}(mixin3(create_component_default, init_component_by_search_default, handles_default));

// node_modules/@carbon/charts/components/essentials/modal.js
var __extends12 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Modal3 = function(_super) {
  __extends12(Modal4, _super);
  function Modal4(model, services, configs) {
    var _this = _super.call(this, model, services, configs) || this;
    _this.type = "modal";
    _this.isEventListenerAdded = false;
    _this.handleShowModal = function() {
      _this.modal.html(_this.getModalHTML());
      _this.modal.select("div.bx--modal-footer button.bx--btn").on("click", function() {
        return _this.model.exportToCSV();
      });
      var modalInstance = modal_default.create(_this.modal.node());
      modalInstance.show();
    };
    _this.init();
    return _this;
  }
  Modal4.prototype.addEventListeners = function() {
    this.services.events.addEventListener(Events.Modal.SHOW, this.handleShowModal);
  };
  Modal4.prototype.removeEventListeners = function() {
    this.services.events.removeEventListener(Events.Modal.SHOW, this.handleShowModal);
  };
  Modal4.prototype.getModalHTML = function() {
    var options2 = this.model.getOptions();
    var chartprefix = Tools.getProperty(options2, "style", "prefix");
    var tableArray = this.model.getTabularDataArray();
    return '\n		<div class="bx--modal-container">\n			<div class="bx--modal-header">\n				<p class="bx--modal-header__label bx--type-delta" id="modal-title">Tabular representation</p>\n				<p class="bx--modal-header__heading bx--type-beta" id="modal-description">' + options2.title + '</p>\n				<button class="bx--modal-close" type="button" data-modal-close aria-label="close modal"  data-modal-primary-focus>\n					<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" aria-label="Close" width="20" height="20" viewBox="0 0 32 32" role="img" class="bx--modal-close__icon">\n						<path d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"></path>\n					</svg>\n				</button>\n			</div>\n			<div class="bx--modal-content"><table class="bx--data-table bx--data-table--no-border">\n					<thead>\n						<tr>\n							' + get_default(tableArray, 0).map(function(heading) {
      return '<th scope="col">\n								<div class="bx--table-header-label">' + heading + "</div>\n							</th>";
    }).join("") + "\n						</tr>\n					</thead>\n					<tbody>" + tableArray.slice(1).map(function(row) {
      return "\n							<tr>\n								" + row.map(function(column) {
        return "<td>" + column + "</td>";
      }).join("") + "\n							</tr>";
    }).join("") + '\n					</tbody>\n				</table>\n			</div>\n			<div class="bx--modal-footer">\n			  <div class="' + settings_default.prefix + "--" + chartprefix + '-modal-footer-spacer"></div>\n			  <button class="bx--btn bx--btn--primary" type="button" data-modal-primary-focus>Download as CSV</button>\n			</div>\n		</div>';
  };
  Modal4.prototype.render = function() {
    var options2 = this.model.getOptions();
    if (!this.isEventListenerAdded) {
      var holder = select_default2(this.services.domUtils.getHolder());
      var chartprefix = Tools.getProperty(options2, "style", "prefix");
      this.modal = DOMUtils.appendOrSelect(holder, "div." + settings_default.prefix + "--" + chartprefix + "--modal");
      this.addEventListeners();
      this.isEventListenerAdded = true;
      this.modal.attr("data-modal", true).attr("class", "bx--modal").attr("role", "dialog").attr("aria-modal", true).attr("aria-labelledby", "modal-title").attr("aria-describedby", "modal-description").attr("tabindex", -1);
    }
  };
  Modal4.prototype.destroy = function() {
    this.removeEventListeners();
    this.isEventListenerAdded = false;
  };
  return Modal4;
}(Component);

// node_modules/@carbon/utils-position/index.js
var _a2;
var PLACEMENTS;
(function(PLACEMENTS2) {
  PLACEMENTS2["LEFT"] = "left";
  PLACEMENTS2["RIGHT"] = "right";
  PLACEMENTS2["TOP"] = "top";
  PLACEMENTS2["BOTTOM"] = "bottom";
})(PLACEMENTS || (PLACEMENTS = {}));
var defaultPositions = (_a2 = {}, _a2[PLACEMENTS.LEFT] = function(referenceOffset, target, referenceRect) {
  return {
    top: referenceOffset.top - Math.round(target.offsetHeight / 2) + Math.round(referenceRect.height / 2),
    left: Math.round(referenceOffset.left - target.offsetWidth)
  };
}, _a2[PLACEMENTS.RIGHT] = function(referenceOffset, target, referenceRect) {
  return {
    top: referenceOffset.top - Math.round(target.offsetHeight / 2) + Math.round(referenceRect.height / 2),
    left: Math.round(referenceOffset.left + referenceRect.width)
  };
}, _a2[PLACEMENTS.TOP] = function(referenceOffset, target, referenceRect) {
  return {
    top: Math.round(referenceOffset.top - target.offsetHeight),
    left: referenceOffset.left - Math.round(target.offsetWidth / 2) + Math.round(referenceRect.width / 2)
  };
}, _a2[PLACEMENTS.BOTTOM] = function(referenceOffset, target, referenceRect) {
  return {
    top: Math.round(referenceOffset.top + referenceRect.height),
    left: referenceOffset.left - Math.round(target.offsetWidth / 2) + Math.round(referenceRect.width / 2)
  };
}, _a2);
var windowRef = typeof window !== "undefined" ? window : {
  innerHeight: 0,
  scrollY: 0,
  innerWidth: 0,
  scrollX: 0
};
var Position = function() {
  function Position2(positions) {
    if (positions === void 0) {
      positions = {};
    }
    this.positions = defaultPositions;
    this.positions = Object.assign({}, defaultPositions, positions);
  }
  Position2.prototype.getRelativeOffset = function(target) {
    var offsets = {
      left: target.offsetLeft,
      top: target.offsetTop
    };
    while (target.offsetParent && getComputedStyle(target.offsetParent).position === "static") {
      offsets.left += target.offsetLeft;
      offsets.top += target.offsetTop;
      target = target.offsetParent;
    }
    return offsets;
  };
  Position2.prototype.getAbsoluteOffset = function(target) {
    var currentNode = target;
    var margins = {
      top: 0,
      left: 0
    };
    while (currentNode.offsetParent) {
      var computed = getComputedStyle(currentNode.offsetParent);
      if (computed.position === "static" && computed.marginLeft && computed.marginTop) {
        if (parseInt(computed.marginTop, 10)) {
          margins.top += parseInt(computed.marginTop, 10);
        }
        if (parseInt(computed.marginLeft, 10)) {
          margins.left += parseInt(computed.marginLeft, 10);
        }
      }
      currentNode = currentNode.offsetParent;
    }
    var targetRect = target.getBoundingClientRect();
    var relativeRect = document.body.getBoundingClientRect();
    return {
      top: targetRect.top - relativeRect.top + margins.top,
      left: targetRect.left - relativeRect.left + margins.left
    };
  };
  Position2.prototype.findRelative = function(reference, target, placement) {
    var referenceOffset = this.getRelativeOffset(reference);
    var referenceRect = reference.getBoundingClientRect();
    return this.calculatePosition(referenceOffset, referenceRect, target, placement);
  };
  Position2.prototype.findAbsolute = function(reference, target, placement) {
    var referenceOffset = this.getAbsoluteOffset(reference);
    var referenceRect = reference.getBoundingClientRect();
    return this.calculatePosition(referenceOffset, referenceRect, target, placement);
  };
  Position2.prototype.findPosition = function(reference, target, placement, offsetFunction) {
    if (offsetFunction === void 0) {
      offsetFunction = this.getAbsoluteOffset;
    }
    var referenceOffset = offsetFunction(reference);
    var referenceRect = reference.getBoundingClientRect();
    return this.calculatePosition(referenceOffset, referenceRect, target, placement);
  };
  Position2.prototype.findPositionAt = function(offset, target, placement) {
    return this.calculatePosition(offset, { height: 0, width: 0 }, target, placement);
  };
  Position2.prototype.getPlacementBox = function(target, position2) {
    var targetBottom = target.offsetHeight + position2.top;
    var targetRight = target.offsetWidth + position2.left;
    return {
      top: position2.top,
      bottom: targetBottom,
      left: position2.left,
      right: targetRight
    };
  };
  Position2.prototype.addOffset = function(position2, top2, left3) {
    if (top2 === void 0) {
      top2 = 0;
    }
    if (left3 === void 0) {
      left3 = 0;
    }
    return Object.assign({}, position2, {
      top: position2.top + top2,
      left: position2.left + left3
    });
  };
  Position2.prototype.setElement = function(element, position2) {
    element.style.top = position2.top + "px";
    element.style.left = position2.left + "px";
  };
  Position2.prototype.findBestPlacement = function(reference, target, placements, containerFunction, positionFunction) {
    var _this = this;
    if (containerFunction === void 0) {
      containerFunction = this.defaultContainerFunction;
    }
    if (positionFunction === void 0) {
      positionFunction = this.findPosition;
    }
    var weightedPlacements = placements.map(function(placement) {
      var pos = positionFunction(reference, target, placement);
      var box = _this.getPlacementBox(target, pos);
      var hiddenHeight = box.bottom - containerFunction().height;
      var hiddenWidth = box.right - containerFunction().width;
      hiddenHeight = hiddenHeight < 0 ? target.offsetHeight : hiddenHeight;
      hiddenWidth = hiddenWidth < 0 ? target.offsetWidth : hiddenWidth;
      var area2 = target.offsetHeight * target.offsetWidth;
      var hiddenArea = hiddenHeight * hiddenWidth;
      var visibleArea = area2 - hiddenArea;
      visibleArea = visibleArea === 0 ? area2 : visibleArea;
      var visiblePercent = visibleArea / area2;
      return {
        placement,
        weight: visiblePercent
      };
    });
    weightedPlacements.sort(function(a3, b) {
      return b.weight - a3.weight;
    });
    return weightedPlacements[0].placement;
  };
  Position2.prototype.findBestPlacementAt = function(offset, target, placements, containerFunction) {
    var _this = this;
    if (containerFunction === void 0) {
      containerFunction = this.defaultContainerFunction;
    }
    var positionAt = function(_, target2, placement) {
      return _this.findPositionAt(offset, target2, placement);
    };
    return this.findBestPlacement(null, target, placements, containerFunction, positionAt);
  };
  Position2.prototype.defaultContainerFunction = function() {
    return {
      width: windowRef.innerHeight - windowRef.scrollY,
      height: windowRef.innerWidth - windowRef.scrollX
    };
  };
  Position2.prototype.calculatePosition = function(referenceOffset, referenceRect, target, placement) {
    if (this.positions[placement]) {
      return this.positions[placement](referenceOffset, target, referenceRect);
    }
    console.error("No function found for placement, defaulting to 0,0");
    return { left: 0, top: 0 };
  };
  return Position2;
}();
var position = new Position();
var utils_position_default = Position;

// node_modules/@carbon/charts/services/time-series.js
var TIME_INTERVALS = [
  ["15seconds", 15 * 1e3],
  ["minute", 60 * 1e3],
  ["30minutes", 30 * 60 * 1e3],
  ["hourly", 60 * 60 * 1e3],
  ["daily", 24 * 60 * 60 * 1e3],
  ["monthly", 30 * 24 * 60 * 60 * 1e3],
  ["quarterly", 3 * 30 * 24 * 60 * 60 * 1e3],
  ["yearly", 12 * 30 * 24 * 60 * 60 * 1e3]
];
function isTickPrimary(tick, i, allTicks, interval2, showDayName) {
  var isFirstTick = i === 0;
  var hasANewWeekStarted = Number(format2(new Date(tick), "c")) === 2;
  var isFirstQuarter = Number(format2(new Date(tick), "q")) === 1;
  var previousTick = i !== 0 ? allTicks[i - 1] : null;
  switch (interval2) {
    case "15seconds":
      return isFirstTick || isDayOfMonthChanged(tick) || isMonthChanged(tick, previousTick) || isYearChanged(tick);
    case "minute":
      return isFirstTick || isDayOfMonthChanged(tick) || isMonthChanged(tick, previousTick) || isYearChanged(tick);
    case "30minutes":
      return isFirstTick || isDayOfMonthChanged(tick) || isMonthChanged(tick, previousTick) || isYearChanged(tick);
    case "hourly":
      return isFirstTick || isDayOfMonthChanged(tick) || isMonthChanged(tick, previousTick) || isYearChanged(tick);
    case "daily":
      if (!showDayName) {
        return isFirstTick || isMonthChanged(tick, previousTick) || isYearChanged(tick);
      } else {
        return isFirstTick || hasANewWeekStarted || isYearChanged(tick);
      }
    case "monthly":
      return isFirstTick || isYearChanged(tick);
    case "quarterly":
      return isFirstTick || isFirstQuarter;
    case "yearly":
      return false;
    default:
      throw new Error(interval2 + " is not a valid time interval.");
  }
}
function formatTick(tick, i, allTicks, interval2, timeScaleOptions) {
  var showDayName = timeScaleOptions.showDayName;
  var intervalConsideringAlsoShowDayNameOption = interval2 === "daily" && showDayName ? "weekly" : interval2;
  var date2 = new Date(tick);
  var formats = Tools.getProperty(timeScaleOptions, "timeIntervalFormats")[intervalConsideringAlsoShowDayNameOption];
  var primary = Tools.getProperty(formats, "primary");
  var secondary = Tools.getProperty(formats, "secondary");
  var formatString = isTickPrimary(tick, i, allTicks, interval2, showDayName) ? primary : secondary;
  var locale4 = timeScaleOptions.localeObject;
  return format2(date2, formatString, { locale: locale4 });
}
function getTimeformats(timestamp) {
  var date2 = new Date(timestamp);
  return {
    M: date2.getMonth() + 1,
    d: date2.getDate(),
    H: date2.getHours(),
    m: date2.getMinutes(),
    s: date2.getSeconds()
  };
}
function getConsecutiveDifferences(elements) {
  if (!elements) {
    return;
  }
  return elements.slice(1).map(function(elem, i) {
    return elem - elements[i];
  });
}
function closestTimeIntervalName(duration) {
  var index4 = TIME_INTERVALS.reduce(function(nearestIndex, _a4, i) {
    var intervalName = _a4[0], delta = _a4[1];
    var deltaNearest = TIME_INTERVALS[nearestIndex][1];
    var oldNearestSpan = Math.abs(deltaNearest - duration);
    var currentSpan = Math.abs(delta - duration);
    return oldNearestSpan < currentSpan ? nearestIndex : i;
  }, 0);
  return TIME_INTERVALS[index4][0];
}
function computeTimeIntervalName(ticks2) {
  if (ticks2.length === 1) {
    return "15seconds";
  }
  var differences = getConsecutiveDifferences(ticks2);
  var minDifference = min2(differences);
  return closestTimeIntervalName(minDifference);
}
function isDayOfMonthChanged(timestamp) {
  var _a4 = getTimeformats(timestamp), s3 = _a4.s, m = _a4.m, H = _a4.H;
  return H === 0 && m === 0 && s3 === 0;
}
function isMonthChanged(timestamp, previousTimestamp) {
  var currentMonth = getTimeformats(timestamp).M;
  var previousMonth = getTimeformats(previousTimestamp).M;
  return currentMonth !== previousMonth;
}
function isYearChanged(timestamp) {
  var _a4 = getTimeformats(timestamp), M = _a4.M, d = _a4.d, s3 = _a4.s, m = _a4.m, H = _a4.H;
  return M === 1 && d === 1 && H === 0 && m === 0 && s3 === 0;
}

// node_modules/@carbon/charts/components/essentials/threshold.js
var __extends13 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Threshold2 = function(_super) {
  __extends13(Threshold3, _super);
  function Threshold3(model, services) {
    var _this = _super.call(this, model, services) || this;
    _this.type = "threshold";
    _this.renderType = RenderTypes.SVG;
    _this.positionService = new utils_position_default();
    return _this;
  }
  Threshold3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = false;
    }
    var axesOptions = Tools.getProperty(this.getOptions(), "axes");
    var thresholdData = [];
    Object.keys(axesOptions).forEach(function(axisPosition) {
      var _a4, _b;
      if (Object.values(AxisPositions).includes(axisPosition)) {
        var axisOptions = axesOptions[axisPosition];
        if (axisOptions.thresholds && axisOptions.thresholds.length > 0) {
          thresholdData.push({
            axisPosition,
            thresholds: axisOptions.thresholds,
            correspondingDatasets: (_a4 = axisOptions) === null || _a4 === void 0 ? void 0 : _a4.correspondingDatasets,
            mapsTo: (_b = axisOptions) === null || _b === void 0 ? void 0 : _b.mapsTo
          });
        }
      }
    });
    var svg = this.getComponentContainer({ withinChartClip: true });
    var thresholdAxisGroups = svg.selectAll("g.axis-thresholds").data(thresholdData, function(thresholdData2) {
      return thresholdData2.axisPosition;
    });
    thresholdAxisGroups.exit().attr("opacity", 0).remove();
    var thresholdAxisGroupsEnter = thresholdAxisGroups.enter().append("g");
    var thresholdAxisGroupsMerge = thresholdAxisGroupsEnter.merge(thresholdAxisGroups);
    thresholdAxisGroupsMerge.attr("class", function(d) {
      return "axis-thresholds " + d.axisPosition;
    });
    var thresholdGroups = thresholdAxisGroupsMerge.selectAll("g.threshold-group").data(function(d) {
      return d.thresholds.map(function(threshold2) {
        threshold2.axisPosition = d.axisPosition;
        threshold2.datum = _this.constructDatumObj(d, threshold2);
        return threshold2;
      });
    });
    thresholdGroups.exit().attr("opacity", 0).remove();
    var thresholdGroupsEnter = thresholdGroups.enter().append("g");
    thresholdGroupsEnter.append("line").attr("class", "threshold-line");
    thresholdGroupsEnter.append("rect").attr("class", "threshold-hoverable-area");
    var thresholdGroupsMerge = thresholdGroupsEnter.merge(thresholdGroups);
    thresholdGroupsMerge.attr("class", "threshold-group");
    var self2 = this;
    thresholdAxisGroupsMerge.each(function(_a4) {
      var axisPosition = _a4.axisPosition;
      var scale = self2.services.cartesianScales.getScaleByPosition(axisPosition);
      var scaleType = self2.services.cartesianScales.getScaleTypeByPosition(axisPosition);
      var xScale = null;
      var yScale = null;
      if (axisPosition === AxisPositions.LEFT || axisPosition === AxisPositions.RIGHT) {
        yScale = scale;
        xScale = self2.services.cartesianScales.getMainXScale();
      } else {
        xScale = scale;
        yScale = self2.services.cartesianScales.getMainYScale();
      }
      var isScaleTypeLabels = scaleType === ScaleTypes.LABELS;
      var _b = xScale.range(), xScaleStart = _b[0], xScaleEnd = _b[1];
      var _c = yScale.range(), yScaleEnd = _c[0], yScaleStart = _c[1];
      var cartesianScales = self2.services.cartesianScales;
      var orientation = cartesianScales.getOrientation();
      var getDomainValue = function(d) {
        return cartesianScales.getDomainValue(d);
      };
      var getRangeValue = function(d) {
        return cartesianScales.getRangeValue(d);
      };
      var _d = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, orientation), getXValue = _d[0], getYValue = _d[1];
      var group3 = select_default2(this);
      if (axisPosition === AxisPositions.TOP || axisPosition === AxisPositions.BOTTOM) {
        group3.selectAll("line.threshold-line").transition().call(function(t) {
          return self2.services.transitions.setupTransition({
            transition: t,
            name: "threshold-line-update",
            animate
          });
        }).attr("y1", yScaleStart).attr("y2", yScaleEnd).attr("x1", function(_a5) {
          var datum2 = _a5.datum;
          return getXValue(datum2) + (isScaleTypeLabels ? scale.step() / 2 : 0);
        }).attr("x2", function(_a5) {
          var datum2 = _a5.datum;
          return getXValue(datum2) + (isScaleTypeLabels ? scale.step() / 2 : 0);
        }).style("stroke", function(_a5) {
          var fillColor = _a5.fillColor;
          return fillColor;
        });
        group3.selectAll("rect.threshold-hoverable-area").attr("x", 0).attr("y", function(_a5) {
          var datum2 = _a5.datum;
          return -getXValue(datum2);
        }).attr("width", Math.abs(yScaleEnd - yScaleStart)).classed("rotate", true);
      } else {
        group3.selectAll("line.threshold-line").transition().call(function(t) {
          return self2.services.transitions.setupTransition({
            transition: t,
            name: "threshold-line-update",
            animate
          });
        }).attr("x1", xScaleStart).attr("x2", xScaleEnd).attr("y1", function(_a5) {
          var datum2 = _a5.datum;
          return getYValue(datum2) + (isScaleTypeLabels ? scale.step() / 2 : 0);
        }).attr("y2", function(_a5) {
          var datum2 = _a5.datum;
          return getYValue(datum2) + (isScaleTypeLabels ? scale.step() / 2 : 0);
        }).style("stroke", function(_a5) {
          var fillColor = _a5.fillColor;
          return fillColor;
        });
        group3.selectAll("rect.threshold-hoverable-area").attr("x", xScaleStart).attr("y", function(_a5) {
          var datum2 = _a5.datum;
          return getYValue(datum2);
        }).attr("width", Math.abs(xScaleEnd - xScaleStart)).classed("rotate", false);
      }
    });
    this.services.events.addEventListener(Events.Threshold.SHOW, function(e) {
      _this.setThresholdLabelPosition(e.detail);
      _this.label.classed("hidden", false);
    });
    this.services.events.addEventListener(Events.Threshold.HIDE, function(e) {
      _this.label.classed("hidden", true);
    });
    this.appendThresholdLabel();
    this.addEventListeners();
  };
  Threshold3.prototype.getFormattedValue = function(datum2) {
    var value2 = datum2.value, axisPosition = datum2.axisPosition;
    var options2 = this.getOptions();
    var scaleType = this.services.cartesianScales.getScaleTypeByPosition(axisPosition);
    if (scaleType === ScaleTypes.TIME) {
      var isVertical = [
        AxisPositions.LEFT,
        AxisPositions.RIGHT
      ].includes(axisPosition);
      var mainXScale = this.services.cartesianScales.getMainXScale();
      var mainYScale = this.services.cartesianScales.getMainYScale();
      var scale = isVertical ? mainYScale : mainXScale;
      var timeScaleOptions = Tools.getProperty(options2, "timeScale");
      var timeInterval = computeTimeIntervalName(scale.ticks());
      return formatTick(value2, 0, scale.ticks(), timeInterval, timeScaleOptions);
    }
    return value2.toLocaleString("en");
  };
  Threshold3.prototype.appendThresholdLabel = function() {
    var holder = select_default2(this.services.domUtils.getHolder());
    var chartprefix = Tools.getProperty(this.getOptions(), "style", "prefix");
    this.label = DOMUtils.appendOrSelect(holder, "div." + settings_default.prefix + "--" + chartprefix + "--threshold--label").classed("hidden", true);
  };
  Threshold3.prototype.setThresholdLabelPosition = function(_a4) {
    var event = _a4.event, datum2 = _a4.datum;
    var holder = this.services.domUtils.getHolder();
    var mouseRelativePos = pointer_default(event, holder);
    var formattedValue = datum2.valueFormatter ? datum2.valueFormatter(datum2.value) : this.getFormattedValue(datum2);
    this.label.html((datum2.label || "Threshold") + ": " + formattedValue).style("background-color", datum2.fillColor);
    var target = this.label.node();
    var bestPlacementOption = this.positionService.findBestPlacementAt({
      left: mouseRelativePos[0],
      top: mouseRelativePos[1]
    }, target, [
      PLACEMENTS.RIGHT,
      PLACEMENTS.LEFT,
      PLACEMENTS.TOP,
      PLACEMENTS.BOTTOM
    ], function() {
      return {
        width: holder.offsetWidth,
        height: holder.offsetHeight
      };
    });
    var pos = this.positionService.findPositionAt({
      left: mouseRelativePos[0],
      top: mouseRelativePos[1]
    }, target, bestPlacementOption);
    this.positionService.setElement(target, pos);
  };
  Threshold3.prototype.constructDatumObj = function(d, element) {
    var datum2 = {};
    if (d.correspondingDatasets) {
      datum2["group"] = Tools.getProperty(d, "correspondingDatasets", 0);
    }
    datum2[d["mapsTo"]] = element.value;
    return datum2;
  };
  Threshold3.prototype.addEventListeners = function() {
    var self2 = this;
    var svg = this.getComponentContainer({ withinChartClip: true });
    svg.selectAll("rect.threshold-hoverable-area").on("mouseover mousemove", function(event) {
      select_default2(this.parentNode).select("line.threshold-line").classed("active", true);
      self2.services.events.dispatchEvent(Events.Threshold.SHOW, {
        event,
        hoveredElement: select_default2(this),
        datum: select_default2(this).datum()
      });
    }).on("mouseout", function(event) {
      select_default2(this.parentNode).select("line.threshold-line").classed("active", false);
      self2.services.events.dispatchEvent(Events.Threshold.HIDE, {
        event,
        hoveredElement: select_default2(this),
        datum: select_default2(this).datum()
      });
    });
  };
  return Threshold3;
}(Component);

// node_modules/@carbon/charts/components/essentials/title.js
var __extends14 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Title = function(_super) {
  __extends14(Title2, _super);
  function Title2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "title";
    _this.renderType = RenderTypes.HTML;
    return _this;
  }
  Title2.prototype.render = function() {
    var svg = this.getComponentContainer();
    var title = Tools.getProperty(this.getOptions(), "title");
    var text = svg.selectAll("p.title").data([title]);
    text.enter().append("p").classed("title", true).attr("role", "heading").attr("aria-level", 2).merge(text).html(function(d) {
      return d;
    });
    if (text.node() && text.node().offsetWidth < text.node().scrollWidth) {
      var self_1 = this;
      text.on("mouseover", function(event) {
        self_1.services.events.dispatchEvent(Events.Tooltip.SHOW, {
          event,
          hoveredElement: text,
          content: text.text()
        });
      }).on("mousemove", function(event) {
        self_1.services.events.dispatchEvent(Events.Tooltip.MOVE, {
          event
        });
      }).on("mouseout", function() {
        self_1.services.events.dispatchEvent(Events.Tooltip.HIDE);
      });
    }
    text.exit().remove();
  };
  Title2.prototype.truncateTitle = function(title, maxWidth) {
    if (maxWidth <= 0) {
      return;
    }
    var untruncatedTitle = title.text();
    if (title.node().getComputedTextLength() > maxWidth) {
      title.append("tspan").text("...");
      var tspanLength = DOMUtils.appendOrSelect(title, "tspan").node().getComputedTextLength();
      var titleString = title.text();
      var substringIndex = this.getSubstringIndex(title.node(), 0, titleString.length - 1, maxWidth - tspanLength);
      title.html(titleString.substring(0, substringIndex - 1)).append("tspan").text("...");
      var self_2 = this;
      title.on("mouseover", function(event) {
        self_2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
          event,
          hoveredElement: title,
          content: untruncatedTitle
        });
      }).on("mousemove", function(event) {
        self_2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
          event
        });
      }).on("mouseout", function() {
        self_2.services.events.dispatchEvent(Events.Tooltip.HIDE);
      });
    }
  };
  Title2.prototype.getMaxTitleWidth = function() {
    return DOMUtils.getSVGElementSize(this.parent.node(), {
      useAttrs: true
    }).width;
  };
  Title2.prototype.getSubstringIndex = function(title, start2, end, width) {
    var mid = Math.floor((end + start2) / 2);
    if (title.getSubStringLength(0, mid) > width) {
      return this.getSubstringIndex(title, start2, mid, width);
    } else if (title.getSubStringLength(0, mid) < width) {
      if (title.getSubStringLength(0, mid + 1) > width) {
        return mid;
      }
      return this.getSubstringIndex(title, mid, end, width);
    } else {
      return mid;
    }
  };
  return Title2;
}(Component);

// node_modules/@carbon/charts/components/essentials/title-meter.js
var __extends15 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var MeterTitle = function(_super) {
  __extends15(MeterTitle2, _super);
  function MeterTitle2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "meter-title";
    _this.renderType = RenderTypes.SVG;
    return _this;
  }
  MeterTitle2.prototype.render = function() {
    var dataset = Tools.getProperty(this.model.getDisplayData(), 0);
    var options2 = this.getOptions();
    var svg = this.getComponentContainer();
    var groupMapsTo = options2.data.groupMapsTo;
    var proportional = Tools.getProperty(options2, "meter", "proportional");
    if (proportional) {
      this.displayTotal();
      this.displayBreakdownTitle();
    } else {
      var title = svg.selectAll("text.meter-title").data([dataset[groupMapsTo]]);
      title.enter().append("text").classed("meter-title", true).merge(title).attr("x", 0).attr("y", "1em").text(function(d) {
        return d;
      });
      title.exit().remove();
      this.appendPercentage();
    }
    this.displayStatus();
    var maxWidth = this.getMaxTitleWidth();
    var titleElement = DOMUtils.appendOrSelect(svg, "text.meter-title");
    if (maxWidth > 0 && titleElement.node().getComputedTextLength() > maxWidth) {
      this.truncateTitle(titleElement, maxWidth);
    }
  };
  MeterTitle2.prototype.displayBreakdownTitle = function() {
    var self2 = this;
    var svg = this.getComponentContainer();
    var options2 = this.getOptions();
    var datasetsTotal = this.model.getMaximumDomain(this.model.getDisplayData());
    var total = Tools.getProperty(options2, "meter", "proportional", "total");
    var unit2 = Tools.getProperty(options2, "meter", "proportional", "unit") ? Tools.getProperty(options2, "meter", "proportional", "unit") : "";
    var data;
    if (datasetsTotal === total) {
      data = null;
    } else {
      var difference4 = total !== null ? total - datasetsTotal : datasetsTotal;
      var breakdownFormatter = Tools.getProperty(options2, "meter", "proportional", "breakdownFormatter");
      data = breakdownFormatter !== null ? breakdownFormatter({
        datasetsTotal,
        total
      }) : datasetsTotal + " " + unit2 + " used (" + difference4 + " " + unit2 + " available)";
    }
    var title = svg.selectAll("text.proportional-meter-title").data([data]);
    title.enter().append("text").classed("proportional-meter-title", true).merge(title).attr("x", 0).attr("y", "1em").text(function(d) {
      return d;
    });
    title.exit().remove();
    var maxWidth = this.getMaxTitleWidth();
    var titleElement = DOMUtils.appendOrSelect(svg, "text.proportional-meter-title");
    if (maxWidth > 0 && titleElement.node().getComputedTextLength() > maxWidth) {
      this.truncateTitle(titleElement, maxWidth);
    }
  };
  MeterTitle2.prototype.displayTotal = function() {
    var self2 = this;
    var svg = this.getComponentContainer();
    var options2 = this.getOptions();
    var total = Tools.getProperty(options2, "meter", "proportional", "total");
    var totalValue = total ? Tools.getProperty(options2, "meter", "proportional", "total") : this.model.getMaximumDomain(this.model.getDisplayData());
    var unit2 = Tools.getProperty(options2, "meter", "proportional", "unit") ? Tools.getProperty(options2, "meter", "proportional", "unit") : "";
    var totalFormatter = Tools.getProperty(options2, "meter", "proportional", "totalFormatter");
    var totalString = totalFormatter !== null ? totalFormatter(totalValue) : total + " " + unit2 + " total";
    var containerBounds = DOMUtils.getHTMLElementSize(this.services.domUtils.getMainContainer());
    var containerWidth = containerBounds.width ? containerBounds.width : this.parent.node().getAttribute("width");
    var title = svg.selectAll("text.proportional-meter-total").data([totalString]);
    title.enter().append("text").classed("proportional-meter-total", true).merge(title).attr("x", this.model.getStatus() ? containerWidth - meter.total.paddingRight : containerWidth).attr("y", "1em").attr("text-anchor", "end").text(function(d) {
      return d;
    });
    title.exit().remove();
  };
  MeterTitle2.prototype.displayStatus = function() {
    var self2 = this;
    var svg = this.getComponentContainer();
    var containerBounds = DOMUtils.getHTMLElementSize(this.services.domUtils.getMainContainer());
    var containerWidth = containerBounds.width ? containerBounds.width : 0;
    var status = this.model.getStatus();
    var radius = meter.status.indicatorSize / 2;
    var statusGroup = DOMUtils.appendOrSelect(svg, "g.status-indicator").attr("class", status !== null ? "status-indicator status--" + status : "").attr("transform", "translate(" + (containerWidth - radius) + ", 0)");
    var data = status ? [status] : [];
    var icon = statusGroup.selectAll("circle.status").data(data);
    icon.enter().append("circle").merge(icon).attr("class", "status").attr("r", radius).attr("cx", 0).attr("cy", "calc(1em / 2)");
    var innerIcon = statusGroup.selectAll("path.innerFill").data(data);
    innerIcon.enter().append("path").merge(innerIcon).attr("d", self2.getStatusIconPathString(status)).attr("transform", "translate(-" + radius + ", 0)").attr("class", "innerFill");
    innerIcon.exit().remove();
    icon.exit().remove();
  };
  MeterTitle2.prototype.appendPercentage = function() {
    var dataValue = Tools.getProperty(this.model.getDisplayData(), 0, "value");
    var svg = this.getComponentContainer();
    var title = DOMUtils.appendOrSelect(svg, "text.meter-title");
    var data = Tools.getProperty(this.getOptions(), "meter", "statusBar", "percentageIndicator", "enabled") === true ? [dataValue] : [];
    var percentage = svg.selectAll("text.percent-value").data(data);
    var offset = meter.statusBar.paddingRight;
    percentage.enter().append("text").classed("percent-value", true).merge(percentage).text(function(d) {
      return d + "%";
    }).attr("x", +title.attr("x") + title.node().getComputedTextLength() + offset).attr("y", title.attr("y"));
    percentage.exit().remove();
  };
  MeterTitle2.prototype.truncateTitle = function(title, maxWidth) {
    _super.prototype.truncateTitle.call(this, title, maxWidth);
    var tspan = DOMUtils.appendOrSelect(this.parent, "tspan");
    var offset = meter.statusBar.paddingRight;
    var tspanLength = Math.ceil(tspan.node().getComputedTextLength());
    var percentage = DOMUtils.appendOrSelect(this.parent, "text.percent-value");
    percentage.attr("x", +title.attr("x") + title.node().getComputedTextLength() + tspanLength + offset);
  };
  MeterTitle2.prototype.getMaxTitleWidth = function() {
    var containerBounds = DOMUtils.getHTMLElementSize(this.services.domUtils.getMainContainer());
    var proportional = Tools.getProperty(this.getOptions(), "meter", "proportional");
    var containerWidth = containerBounds.width ? containerBounds.width : this.parent.node().getAttribute("width");
    if (proportional !== null) {
      var total = DOMUtils.appendOrSelect(this.parent, "text.proportional-meter-total").node();
      var totalWidth = DOMUtils.getSVGElementSize(total, {
        useBBox: true
      }).width;
      return containerWidth - totalWidth - meter.total.paddingLeft;
    } else {
      var percentage = DOMUtils.appendOrSelect(this.parent, "text.percent-value");
      var offset = meter.statusBar.paddingRight;
      var percentageWidth = percentage.node().getComputedTextLength();
      var statusGroup = DOMUtils.appendOrSelect(this.parent, "g.status-indicator").node();
      var statusWidth = DOMUtils.getSVGElementSize(statusGroup, { useBBox: true }).width + meter.status.paddingLeft;
      return containerWidth - percentageWidth - offset - statusWidth;
    }
  };
  MeterTitle2.prototype.getStatusIconPathString = function(status) {
    switch (status) {
      case Statuses.SUCCESS:
        return "M6.875 11.3125 3.75 8.1875 4.74375 7.25 6.875 9.34375 11.50625 4.75 12.5 5.7375 Z";
      case Statuses.DANGER:
        return "M10.7 11.5 4.5 5.3 5.3 4.5 11.5 10.7 Z";
      case Statuses.WARNING:
        return "M7.9375,11.125 C7.41973305,11.125 7,11.544733 7,12.0625 C7,12.580267 7.41973305,13 7.9375,13 C8.45526695,13 8.875,12.580267 8.875,12.0625 C8.875,11.544733 8.45526695,11.125 7.9375,11.125 M7.3125, 3 8.5625, 3 8.5625, 9.875 7.3125, 9.875, 7.3125, 3 Z";
    }
  };
  return MeterTitle2;
}(Title);

// node_modules/@carbon/charts/components/essentials/tooltip.js
var __extends16 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Tooltip3 = function(_super) {
  __extends16(Tooltip4, _super);
  function Tooltip4(model, services, configs) {
    var _this = _super.call(this, model, services, configs) || this;
    _this.type = "tooltip";
    _this.renderType = RenderTypes.HTML;
    _this.isEventListenerAdded = false;
    _this.positionService = new utils_position_default();
    _this.handleShowTooltip = function(e) {
      var data = e.detail.data || e.detail.items;
      var defaultHTML = _this.getTooltipHTML(e);
      var tooltipTextContainer = DOMUtils.appendOrSelect(_this.tooltip, "div.content-box");
      if (Tools.getProperty(_this.getOptions(), "tooltip", "customHTML")) {
        if (e.detail.content) {
          var labelHTML = '<div class="title-tooltip"><p>' + e.detail.content + "</p></div>";
          tooltipTextContainer.html(labelHTML);
        } else {
          tooltipTextContainer.html(_this.model.getOptions().tooltip.customHTML(data, defaultHTML));
        }
      } else {
        tooltipTextContainer.html(defaultHTML);
      }
      _this.positionTooltip(e);
      _this.tooltip.classed("hidden", false).attr("aria-hidden", false);
    };
    _this.handleHideTooltip = function() {
      _this.tooltip.classed("hidden", true).attr("aria-hidden", true);
    };
    _this.init();
    return _this;
  }
  Tooltip4.prototype.addTooltipEventListener = function() {
    var _this = this;
    this.services.events.addEventListener(Events.Tooltip.MOVE, function(e) {
      if (_this.tooltip.classed("hidden") === false) {
        _this.positionTooltip(e);
      }
    });
    this.services.events.addEventListener(Events.Tooltip.SHOW, this.handleShowTooltip);
    this.services.events.addEventListener(Events.Tooltip.HIDE, this.handleHideTooltip);
    this.services.events.addEventListener(Events.Chart.MOUSEOUT, this.handleHideTooltip);
  };
  Tooltip4.prototype.removeTooltipEventListener = function() {
    this.services.events.removeEventListener(Events.Tooltip.MOVE, null);
    this.services.events.removeEventListener(Events.Tooltip.SHOW, this.handleShowTooltip);
    this.services.events.removeEventListener(Events.Tooltip.HIDE, this.handleHideTooltip);
    this.services.events.removeEventListener(Events.Chart.MOUSEOUT, this.handleHideTooltip);
  };
  Tooltip4.prototype.getItems = function(e) {
    if (e.detail.items) {
      return e.detail.items;
    }
    return [];
  };
  Tooltip4.prototype.formatItems = function(items) {
    var _this = this;
    var options2 = this.getOptions();
    var truncationType = Tools.getProperty(options2, "tooltip", "truncation", "type");
    var truncationThreshold = Tools.getProperty(options2, "tooltip", "truncation", "threshold");
    var truncationNumCharacter = Tools.getProperty(options2, "tooltip", "truncation", "numCharacter");
    if (truncationType !== TruncationTypes.NONE) {
      return items.map(function(item) {
        var labelIconSize = item.labelIcon ? 12 : 0;
        item.value = item.value ? _this.valueFormatter(item.value, item.label) : item.value;
        if (item.label && item.label.length + labelIconSize > truncationThreshold) {
          item.label = Tools.truncateLabel(item.label, truncationType, truncationNumCharacter);
        }
        if (item.value && item.value.length > truncationThreshold) {
          item.value = Tools.truncateLabel(item.value, truncationType, truncationNumCharacter);
        }
        return item;
      });
    }
    return items;
  };
  Tooltip4.prototype.getTooltipHTML = function(e) {
    var defaultHTML;
    if (e.detail.content) {
      defaultHTML = '<div class="title-tooltip"><p>' + e.detail.content + "</p></div>";
    } else {
      var items = this.getItems(e);
      var formattedItems = this.formatItems(items);
      defaultHTML = '<ul class="multi-tooltip">' + formattedItems.map(function(item) {
        return '<li>\n							<div class="datapoint-tooltip ' + (item.bold ? "bold" : "") + '">\n								' + (item.class ? '<div class="tooltip-color ' + item.class + '"></div>' : "") + "\n								" + (item.color ? '<div style="background-color: ' + item.color + '" class="tooltip-color"></div>' : "") + '\n								<div class="label">\n								<p>' + (item.label || "") + "</p>\n								" + (item.labelIcon ? '<span class="label-icon"/>' + item.labelIcon + "</span>" : "") + "\n								</div>\n								" + (item.value === void 0 || item.value === null ? "" : '<p class="value"/>' + item.value + "</p>") + "\n							</div>\n						</li>";
      }).join("") + "</ul>";
    }
    return defaultHTML;
  };
  Tooltip4.prototype.valueFormatter = function(value2, label) {
    var options2 = this.getOptions();
    var valueFormatter = Tools.getProperty(options2, "tooltip", "valueFormatter");
    if (valueFormatter) {
      return valueFormatter(value2, label);
    }
    if (typeof value2.getTime === "function") {
      return format2(value2, "MMM d, yyyy");
    }
    return value2.toLocaleString();
  };
  Tooltip4.prototype.render = function() {
    var options2 = this.getOptions();
    var isTooltipEnabled = Tools.getProperty(options2, "tooltip", "enabled");
    if (isTooltipEnabled) {
      var holder = select_default2(this.services.domUtils.getHolder());
      var chartprefix = Tools.getProperty(options2, "style", "prefix");
      this.tooltip = DOMUtils.appendOrSelect(holder, "div." + settings_default.prefix + "--" + chartprefix + "--tooltip");
      this.tooltip.style("max-width", null).attr("role", "tooltip");
      if (!this.isEventListenerAdded) {
        this.addTooltipEventListener();
        this.isEventListenerAdded = true;
      }
      this.tooltip.classed("hidden", true);
    } else if (!isTooltipEnabled && this.isEventListenerAdded) {
      this.removeTooltipEventListener();
      this.isEventListenerAdded = false;
    }
  };
  Tooltip4.prototype.positionTooltip = function(e) {
    var holder = this.services.domUtils.getHolder();
    var target = this.tooltip.node();
    var options2 = this.getOptions();
    var isTopZoomBarEnabled = Tools.getProperty(options2, "zoomBar", "top", "enabled");
    var mouseRelativePos = Tools.getProperty(e, "detail", "mousePosition");
    if (!mouseRelativePos) {
      mouseRelativePos = pointer_default(Tools.getProperty(e, "detail", "event"), holder);
    } else {
      var zoombarType = Tools.getProperty(options2, "zoomBar", "top", "type");
      var zoombarHeight = zoomBar.height[zoombarType];
      if (isTopZoomBarEnabled) {
        mouseRelativePos[1] += zoombarHeight + zoomBar.spacerHeight;
      }
    }
    var pos;
    var holderWidth = holder.offsetWidth;
    var holderHeight = holder.offsetHeight;
    var bestPlacementOption;
    if (mouseRelativePos[0] / holderWidth > 0.9) {
      bestPlacementOption = PLACEMENTS.LEFT;
    } else if (mouseRelativePos[0] / holderWidth < 0.1) {
      bestPlacementOption = PLACEMENTS.RIGHT;
    } else {
      bestPlacementOption = this.positionService.findBestPlacementAt({
        left: mouseRelativePos[0],
        top: mouseRelativePos[1]
      }, target, [
        PLACEMENTS.RIGHT,
        PLACEMENTS.LEFT,
        PLACEMENTS.TOP,
        PLACEMENTS.BOTTOM
      ], function() {
        return {
          width: holderWidth,
          height: holderHeight
        };
      });
    }
    var horizontalOffset = tooltips.horizontalOffset;
    if (bestPlacementOption === PLACEMENTS.LEFT) {
      horizontalOffset *= -1;
    }
    pos = this.positionService.findPositionAt({
      left: mouseRelativePos[0] + horizontalOffset,
      top: mouseRelativePos[1]
    }, target, bestPlacementOption);
    this.positionService.setElement(target, pos);
  };
  return Tooltip4;
}(Component);

// node_modules/@carbon/charts/components/essentials/tooltip-axis.js
var __extends17 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays3 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var AxisChartsTooltip = function(_super) {
  __extends17(AxisChartsTooltip2, _super);
  function AxisChartsTooltip2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  AxisChartsTooltip2.prototype.getItems = function(e) {
    var _this = this;
    if (e.detail.items) {
      return e.detail.items;
    }
    var data = e.detail.data;
    if (!data.length || !data[0]) {
      return [];
    }
    var options2 = this.getOptions();
    var cartesianScales = this.services.cartesianScales;
    var domainIdentifier = cartesianScales.getDomainIdentifier();
    var dualAxes = cartesianScales.isDualAxes();
    var groupMapsTo = options2.data.groupMapsTo;
    var domainLabel = cartesianScales.getDomainLabel();
    var rangeLabel = cartesianScales.getRangeLabel();
    var domainValue = data[0][domainIdentifier];
    var items;
    if (data.length === 1) {
      var datum2 = data[0];
      var rangeIdentifier = cartesianScales.getRangeIdentifier(datum2);
      if (dualAxes) {
        var position2 = cartesianScales.getRangeAxisPosition({
          datum: datum2,
          groups: [datum2[groupMapsTo]]
        });
        rangeLabel = cartesianScales.getScaleLabel(position2);
      }
      var value2 = datum2[rangeIdentifier];
      items = __spreadArrays3([
        {
          label: domainLabel,
          value: domainValue
        }
      ], Array.isArray(value2) && value2.length === 2 ? [
        {
          label: "Start",
          value: value2[0]
        },
        {
          label: "End",
          value: value2[1]
        }
      ] : [
        {
          label: rangeLabel,
          value: datum2[rangeIdentifier]
        }
      ]);
      if (e.detail.additionalItems) {
        e.detail.additionalItems.forEach(function(additionalItem) {
          return items.push({
            label: additionalItem.label,
            value: additionalItem.value
          });
        });
      }
      items.push({
        label: options2.tooltip.groupLabel,
        value: datum2[groupMapsTo],
        color: this.model.getFillColor(datum2[groupMapsTo]),
        class: this.model.getColorClassName({
          classNameTypes: [ColorClassNameTypes.TOOLTIP],
          dataGroupName: datum2[groupMapsTo]
        })
      });
    } else if (data.length > 1) {
      items = [
        {
          label: domainLabel,
          value: domainValue
        }
      ];
      items = items.concat(data.map(function(datum3) {
        var value3 = datum3[cartesianScales.getRangeIdentifier(datum3)];
        return {
          label: datum3[groupMapsTo],
          value: Array.isArray(value3) && value3.length === 2 ? value3[0] + " - " + value3[1] : value3,
          color: _this.model.getFillColor(datum3[groupMapsTo]),
          class: _this.model.getColorClassName({
            classNameTypes: [ColorClassNameTypes.TOOLTIP],
            dataGroupName: datum3[groupMapsTo]
          })
        };
      }).sort(function(a3, b) {
        return b.value - a3.value;
      }));
      if (!dualAxes && Tools.getProperty(options2, "tooltip", "showTotal") === true) {
        var rangeIdentifier_1 = cartesianScales.getRangeIdentifier();
        items.push({
          label: get_default(options2, "tooltip.totalLabel") || "Total",
          value: data.reduce(function(accumulator, datum3) {
            return accumulator + datum3[rangeIdentifier_1];
          }, 0),
          bold: true
        });
      }
    }
    return items;
  };
  return AxisChartsTooltip2;
}(Tooltip3);

// node_modules/@carbon/charts/components/axes/chart-clip.js
var __extends18 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ChartClip = function(_super) {
  __extends18(ChartClip2, _super);
  function ChartClip2(model, services, configs) {
    var _this = _super.call(this, model, services, configs) || this;
    _this.type = "chart-clip";
    _this.renderType = RenderTypes.SVG;
    _this.chartClipId = "chart-clip-id-" + Math.floor(Math.random() * 99999999999);
    _this.init();
    return _this;
  }
  ChartClip2.prototype.init = function() {
    this.model.set({ chartClipId: this.chartClipId }, { skipUpdate: true });
  };
  ChartClip2.prototype.render = function(animate) {
    if (animate === void 0) {
      animate = true;
    }
    this.createClipPath();
  };
  ChartClip2.prototype.createClipPath = function() {
    var svg = this.parent;
    var cartesianScales = this.services.cartesianScales;
    var mainXScale = cartesianScales.getMainXScale();
    var mainYScale = cartesianScales.getMainYScale();
    var _a4 = mainXScale.range(), xScaleStart = _a4[0], xScaleEnd = _a4[1];
    var _b = mainYScale.range(), yScaleEnd = _b[0], yScaleStart = _b[1];
    this.chartClipPath = DOMUtils.appendOrSelect(svg, "clipPath." + this.type).attr("id", this.chartClipId);
    var clipRect = DOMUtils.appendOrSelect(this.chartClipPath, "rect." + this.type);
    clipRect.attr("x", xScaleStart).attr("y", yScaleStart).attr("width", xScaleEnd - xScaleStart).attr("height", yScaleEnd - yScaleStart);
    this.chartClipPath.merge(clipRect).lower();
  };
  return ChartClip2;
}(Component);

// node_modules/@carbon/charts/components/essentials/canvas-chart-clip.js
var __extends19 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var CanvasChartClip = function(_super) {
  __extends19(CanvasChartClip2, _super);
  function CanvasChartClip2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "canvas-chart-clip";
    _this.chartClipId = "canvas-chart-clip-id-" + Math.floor(Math.random() * 99999999999);
    return _this;
  }
  CanvasChartClip2.prototype.createClipPath = function() {
    var svg = this.parent;
    var _a4 = DOMUtils.getSVGElementSize(this.parent, {
      useAttrs: true
    }), width = _a4.width, height = _a4.height;
    this.chartClipPath = DOMUtils.appendOrSelect(svg, "clipPath." + this.type).attr("id", this.chartClipId);
    var clipRect = DOMUtils.appendOrSelect(this.chartClipPath, "rect." + this.type);
    clipRect.attr("x", 0).attr("y", 0).attr("width", width).attr("height", height);
    this.chartClipPath.merge(clipRect).lower();
  };
  return CanvasChartClip2;
}(ChartClip);

// node_modules/@carbon/charts/components/essentials/highlights.js
var __extends20 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __rest2 = function(s3, e) {
  var t = {};
  for (var p in s3)
    if (Object.prototype.hasOwnProperty.call(s3, p) && e.indexOf(p) < 0)
      t[p] = s3[p];
  if (s3 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s3); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s3, p[i]))
        t[p[i]] = s3[p[i]];
    }
  return t;
};
var Highlight = function(_super) {
  __extends20(Highlight2, _super);
  function Highlight2(model, services) {
    var _this = _super.call(this, model, services) || this;
    _this.type = "highlight";
    _this.renderType = RenderTypes.SVG;
    _this.positionService = new utils_position_default();
    _this.highlightStrokeWidth = 1;
    return _this;
  }
  Highlight2.prototype.render = function(animate) {
    if (animate === void 0) {
      animate = false;
    }
    var axesOptions = Tools.getProperty(this.getOptions(), "axes");
    var highlightData = [];
    Object.keys(axesOptions).forEach(function(axisPosition) {
      if (Object.values(AxisPositions).includes(axisPosition)) {
        var axisOptions = axesOptions[axisPosition];
        if (axisOptions.highlights && axisOptions.highlights.data.length > 0) {
          highlightData.push({
            axisPosition,
            highlightStartMapsTo: axisOptions.highlights.highlightStartMapsTo,
            highlightEndMapsTo: axisOptions.highlights.highlightEndMapsTo,
            labelMapsTo: axisOptions.highlights.labelMapsTo,
            highlight: axisOptions.highlights.data,
            color: axisOptions.highlights.color
          });
        }
      }
    });
    var svg = this.getComponentContainer({ withinChartClip: true });
    var highlightAxisGroups = svg.selectAll("g.axis-highlight").data(highlightData, function(highlightData2) {
      return highlightData2.axisPosition;
    });
    highlightAxisGroups.exit().attr("opacity", 0).remove();
    var highlightAxisGroupsEnter = highlightAxisGroups.enter().append("g");
    var highlightAxisGroupsMerge = highlightAxisGroupsEnter.merge(highlightAxisGroups);
    highlightAxisGroupsMerge.attr("class", function(d) {
      return "axis-highlight " + d.axisPosition;
    });
    var highlightGroups = highlightAxisGroupsMerge.selectAll("g.highlight-group").data(function(d) {
      return d.highlight.map(function(highlight) {
        highlight.axisPosition = d.axisPosition;
        highlight.highlightStartMapsTo = d.highlightStartMapsTo;
        highlight.labelMapsTo = d.labelMapsTo;
        highlight.color = d.color;
        highlight.highlightEndMapsTo = d.highlightEndMapsTo;
        return highlight;
      });
    });
    highlightGroups.exit().attr("opacity", 0).remove();
    var highlightGroupsEnter = highlightGroups.enter().append("g");
    highlightGroupsEnter.append("rect").attr("class", "highlight-bar");
    highlightGroupsEnter.append("line").attr("class", "highlight-line");
    var highlightGroupsMerge = highlightGroupsEnter.merge(highlightGroups);
    highlightGroupsMerge.attr("class", "highlight-group");
    var self2 = this;
    highlightAxisGroupsMerge.each(function(_a4) {
      var axisPosition = _a4.axisPosition;
      var mainXScale = self2.services.cartesianScales.getMainXScale();
      var mainYScale = self2.services.cartesianScales.getMainYScale();
      var _b = mainXScale.range(), xScaleStart = _b[0], xScaleEnd = _b[1];
      var _c = mainYScale.range(), yScaleEnd = _c[0], yScaleStart = _c[1];
      var cartesianScales = self2.services.cartesianScales;
      var orientation = cartesianScales.getOrientation();
      var getDomainValue = function(d) {
        return cartesianScales.getDomainValue(d);
      };
      var getRangeValue = function(d) {
        return cartesianScales.getRangeValue(d);
      };
      var _d = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, orientation), getXValue = _d[0], getYValue = _d[1];
      var group3 = select_default2(this);
      if (axisPosition === AxisPositions.TOP || axisPosition === AxisPositions.BOTTOM) {
        group3.selectAll("rect.highlight-bar").transition().call(function(t) {
          return self2.services.transitions.setupTransition({
            transition: t,
            name: "highlight-bar-update",
            animate
          });
        }).attr("y", Math.max(yScaleStart + self2.highlightStrokeWidth, 0)).attr("height", Math.max(yScaleEnd - 2 * self2.highlightStrokeWidth, 0)).attr("x", function(_a5) {
          var highlightStartMapsTo = _a5.highlightStartMapsTo, d = __rest2(_a5, ["highlightStartMapsTo"]);
          return getXValue(d[highlightStartMapsTo]);
        }).attr("width", function(_a5) {
          var highlightStartMapsTo = _a5.highlightStartMapsTo, highlightEndMapsTo = _a5.highlightEndMapsTo, d = __rest2(_a5, ["highlightStartMapsTo", "highlightEndMapsTo"]);
          return Math.max(getXValue(d[highlightEndMapsTo]) - getXValue(d[highlightStartMapsTo]), 0);
        }).style("stroke", function(_a5) {
          var color3 = _a5.color, labelMapsTo = _a5.labelMapsTo, data = __rest2(_a5, ["color", "labelMapsTo"]);
          return color3 && color3.scale[data[labelMapsTo]] ? color3.scale[data[labelMapsTo]] : null;
        }).style("stroke-dasharray", "2, 2").attr("stroke-width", self2.highlightStrokeWidth + "px").style("fill-opacity", 0.1).style("fill", function(_a5) {
          var color3 = _a5.color, labelMapsTo = _a5.labelMapsTo, data = __rest2(_a5, ["color", "labelMapsTo"]);
          return color3 && color3.scale[data[labelMapsTo]] ? color3.scale[data[labelMapsTo]] : null;
        });
      } else {
        group3.selectAll("rect.highlight-bar").transition().call(function(t) {
          return self2.services.transitions.setupTransition({
            transition: t,
            name: "highlight-bar-update",
            animate
          });
        }).attr("x", xScaleStart).attr("width", Math.max(xScaleEnd - xScaleStart, 0)).attr("y", function(_a5) {
          var highlightEndMapsTo = _a5.highlightEndMapsTo, d = __rest2(_a5, ["highlightEndMapsTo"]);
          return getYValue(d[highlightEndMapsTo]);
        }).attr("height", function(_a5) {
          var highlightStartMapsTo = _a5.highlightStartMapsTo, highlightEndMapsTo = _a5.highlightEndMapsTo, d = __rest2(_a5, ["highlightStartMapsTo", "highlightEndMapsTo"]);
          return Math.max(getYValue(d[highlightStartMapsTo]) - getYValue(d[highlightEndMapsTo]), 0);
        }).style("stroke", function(_a5) {
          var color3 = _a5.color, labelMapsTo = _a5.labelMapsTo, data = __rest2(_a5, ["color", "labelMapsTo"]);
          return color3 && color3.scale[data[labelMapsTo]] ? color3.scale[data[labelMapsTo]] : null;
        }).style("stroke-dasharray", "2, 2").attr("stroke-width", self2.highlightStrokeWidth + "px").style("fill-opacity", 0.1).style("fill", function(_a5) {
          var color3 = _a5.color, labelMapsTo = _a5.labelMapsTo, data = __rest2(_a5, ["color", "labelMapsTo"]);
          return color3 && color3.scale[data[labelMapsTo]] ? color3.scale[data[labelMapsTo]] : null;
        });
      }
    });
  };
  return Highlight2;
}(Component);

// node_modules/@carbon/charts/components/graphs/area.js
var __extends21 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Area2 = function(_super) {
  __extends21(Area3, _super);
  function Area3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "area";
    _this.renderType = RenderTypes.SVG;
    _this.gradient_id = "gradient-id-" + Math.floor(Math.random() * 99999999999);
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      _this.parent.selectAll("path.area").transition("legend-hover-area").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-area"
        });
      }).attr("opacity", function(group3) {
        if (group3.name !== hoveredElement.datum()["name"]) {
          return area.opacity.unselected;
        }
        return area.opacity.selected;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("path.area").transition("legend-mouseout-area").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-area"
        });
      }).attr("opacity", area.opacity.selected);
    };
    return _this;
  }
  Area3.prototype.init = function() {
    var eventsFragment = this.services.events;
    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  Area3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var svg = this.getComponentContainer({ withinChartClip: true });
    var options2 = this.getOptions();
    var domain = [0, 0];
    var cartesianScales = this.services.cartesianScales;
    var orientation = cartesianScales.getOrientation();
    var areaGenerator = area_default().curve(this.services.curves.getD3Curve()).defined(function(datum2, i) {
      var rangeIdentifier = cartesianScales.getRangeIdentifier();
      var value2 = datum2[rangeIdentifier];
      if (value2 === null || value2 === void 0) {
        return false;
      }
      return true;
    });
    var groupedData = this.model.getGroupedData(this.configs.groups);
    var bounds = Tools.getProperty(options2, "bounds");
    var boundsEnabled = bounds && groupedData && groupedData.length === 1;
    if (!boundsEnabled && bounds) {
      console.warn("Bounds can only be shown when having 1 single datagroup, you've supplied " + groupedData.length);
    }
    var upperBoundRangeValue = 0;
    var includeZeroInRangeValue = function(position2, domain2) {
      if (Tools.getProperty(options2, "axes", position2, "includeZero") === false) {
        if (domain2[0] > 0 && domain2[1] > 0) {
          upperBoundRangeValue = domain2[0];
        }
      }
    };
    var upperBound = function(d, i) {
      return boundsEnabled ? cartesianScales.getBoundedScaledValues(d, i)[0] : cartesianScales.getRangeValue(upperBoundRangeValue);
    };
    var lowerBound = function(d, i) {
      return boundsEnabled ? cartesianScales.getBoundedScaledValues(d, i)[1] : cartesianScales.getRangeValue(d, i);
    };
    if (orientation === CartesianOrientations.VERTICAL) {
      domain = cartesianScales.getMainYScale().domain();
      includeZeroInRangeValue(cartesianScales.getMainYAxisPosition(), domain);
      areaGenerator.x(function(d, i) {
        return cartesianScales.getDomainValue(d, i);
      }).y0(function(d, i) {
        return upperBound(d, i);
      }).y1(function(d, i) {
        return lowerBound(d, i);
      });
    } else {
      domain = cartesianScales.getMainXScale().domain();
      includeZeroInRangeValue(cartesianScales.getMainXAxisPosition(), domain);
      areaGenerator.x0(function(d, i) {
        return upperBound(d, i);
      }).x1(function(d, i) {
        return lowerBound(d, i);
      }).y(function(d, i) {
        return cartesianScales.getDomainValue(d, i);
      });
    }
    var isGradientEnabled = Tools.getProperty(options2, "color", "gradient", "enabled");
    var isGradientAllowed = groupedData && groupedData.length === 1 && isGradientEnabled;
    if (groupedData.length > 1 && isGradientEnabled) {
      console.error("Gradients can only be enabled when having 1 single dataset");
    }
    var areas = svg.selectAll("path.area").data(groupedData, function(group3) {
      return group3.name;
    });
    var chartMainContainer = select_default2(this.services.domUtils.getMainContainer());
    areas.exit().attr("opacity", 0).remove();
    if (!groupedData.length) {
      return;
    }
    if (isGradientAllowed) {
      var strokePathElement = chartMainContainer.select("path." + this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.STROKE],
        dataGroupName: groupedData[0].name
      })).node();
      var colorValue = void 0;
      if (strokePathElement) {
        colorValue = getComputedStyle(strokePathElement, null).getPropertyValue("stroke");
      } else {
        var sparklineColorObject = Tools.getProperty(this.model.getOptions(), "color", "scale");
        if (sparklineColorObject !== null) {
          var sparklineColorObjectKeys = Object.keys(sparklineColorObject);
          colorValue = sparklineColorObject[sparklineColorObjectKeys[0]];
        }
      }
      GradientUtils.appendOrUpdateLinearGradient({
        svg: this.parent,
        id: this.services.domUtils.generateElementIDString(groupedData[0].name.replace(" ", "") + "_" + this.gradient_id),
        x1: "0%",
        x2: "0%",
        y1: "0%",
        y2: "100%",
        stops: GradientUtils.getStops(domain, colorValue)
      });
    } else {
      if (!this.parent.selectAll("defs linearGradient").empty()) {
        this.parent.selectAll("defs linearGradient").each(function() {
          this.parentNode.remove();
        });
      }
    }
    var self2 = this;
    var enteringAreas = areas.enter().append("path");
    if (isGradientAllowed) {
      enteringAreas.merge(areas).style("fill", function(group3) {
        return "url(#" + _this.services.domUtils.generateElementIDString(group3.name.replace(" ", "") + "_" + _this.gradient_id) + ")";
      }).attr("class", "area").attr("class", function(group3) {
        return _this.model.getColorClassName({
          classNameTypes: [ColorClassNameTypes.FILL],
          dataGroupName: group3.name,
          originalClassName: "area"
        });
      }).attr("d", function(group3) {
        var data = group3.data;
        return areaGenerator(data);
      });
    } else {
      enteringAreas.attr("opacity", 0).merge(areas).attr("class", "area").attr("class", function(group3) {
        return _this.model.getColorClassName({
          classNameTypes: [
            ColorClassNameTypes.FILL,
            ColorClassNameTypes.STROKE
          ],
          dataGroupName: group3.name,
          originalClassName: "area"
        });
      }).style("fill", function(group3) {
        return self2.model.getFillColor(group3.name);
      }).transition().call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "area-update-enter",
          animate
        });
      }).attr("opacity", boundsEnabled ? 1 : area.opacity.selected).attr("d", function(group3) {
        var data = group3.data;
        return areaGenerator(data);
      });
      if (boundsEnabled) {
        enteringAreas.attr("fill-opacity", area.opacity.selected).style("stroke", function(group3) {
          return self2.model.getStrokeColor(group3.name);
        }).style("stroke-dasharray", "2, 2").attr("stroke-width", 0.7 + "px");
      }
    }
  };
  Area3.prototype.destroy = function() {
    var eventsFragment = this.services.events;
    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  return Area3;
}(Component);

// node_modules/@carbon/charts/components/graphs/area-stacked.js
var __extends22 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var StackedArea = function(_super) {
  __extends22(StackedArea2, _super);
  function StackedArea2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "area-stacked";
    _this.renderType = RenderTypes.SVG;
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      var options2 = _this.getOptions();
      var groupMapsTo = options2.data.groupMapsTo;
      _this.parent.selectAll("path.area").transition("legend-hover-area").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-area"
        });
      }).attr("opacity", function(d) {
        if (Tools.getProperty(d, 0, groupMapsTo) !== hoveredElement.datum().name) {
          return area.opacity.unselected;
        }
        return area.opacity.selected;
      });
    };
    _this.handleLegendMouseOut = function() {
      _this.parent.selectAll("path.area").transition("legend-mouseout-area").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-area"
        });
      }).attr("opacity", area.opacity.selected);
    };
    return _this;
  }
  StackedArea2.prototype.init = function() {
    var eventsFragment = this.services.events;
    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  StackedArea2.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var svg = this.getComponentContainer({ withinChartClip: true });
    var self2 = this;
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var percentage = Object.keys(options2.axes).some(function(axis3) {
      return options2.axes[axis3].percentage;
    });
    var stackedData = this.model.getStackedData({
      percentage,
      groups: this.configs.groups
    });
    var firstDatum = Tools.getProperty(stackedData, 0, 0);
    var domainAxisPosition = this.services.cartesianScales.getDomainAxisPosition({ firstDatum });
    var rangeAxisPosition = this.services.cartesianScales.getRangeAxisPosition({ firstDatum });
    var mainYScale = this.services.cartesianScales.getScaleByPosition(rangeAxisPosition);
    var areas = svg.selectAll("path.area").data(stackedData, function(d) {
      return Tools.getProperty(d, 0, groupMapsTo);
    });
    this.areaGenerator = area_default().x(function(d, i) {
      return _this.services.cartesianScales.getValueThroughAxisPosition(domainAxisPosition, d.data.sharedStackKey, i);
    }).y0(function(d) {
      return mainYScale(d[0]);
    }).y1(function(d) {
      return mainYScale(d[1]);
    }).curve(this.services.curves.getD3Curve());
    areas.exit().attr("opacity", 0).remove();
    var enteringAreas = areas.enter().append("path").attr("opacity", 0);
    enteringAreas.merge(areas).data(stackedData, function(d) {
      return Tools.getProperty(d, 0, groupMapsTo);
    }).attr("class", "area").attr("class", function(d) {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.FILL],
        dataGroupName: Tools.getProperty(d, 0, groupMapsTo),
        originalClassName: "area"
      });
    }).style("fill", function(d) {
      return self2.model.getFillColor(Tools.getProperty(d, 0, groupMapsTo));
    }).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-roledescription", "area").attr("aria-label", function(d) {
      return Tools.getProperty(d, 0, groupMapsTo);
    }).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "area-update-enter",
        animate
      });
    }).attr("opacity", area.opacity.selected).attr("d", this.areaGenerator);
  };
  return StackedArea2;
}(Component);

// node_modules/@carbon/charts/components/graphs/bar.js
var __extends23 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Bar2 = function(_super) {
  __extends23(Bar3, _super);
  function Bar3() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Bar3.prototype.getBarWidth = function(allDataLabels) {
    var options2 = this.getOptions();
    if (options2.bars.width) {
      return options2.bars.width;
    }
    var numberOfDatapoints = this.model.getDisplayData().length;
    var mainXScale = this.services.cartesianScales.getMainXScale();
    var chartWidth = DOMUtils.getSVGElementSize(this.parent, {
      useAttrs: true
    }).width;
    if (!mainXScale.step) {
      var spacingFactor = Tools.getProperty(options2, "bars", "spacingFactor");
      return Math.min(options2.bars.maxWidth, chartWidth * spacingFactor / numberOfDatapoints);
    }
    return Math.min(options2.bars.maxWidth, mainXScale.step() / 2);
  };
  Bar3.prototype.isOutsideZoomedDomain = function(x0, x1) {
    var dataCount = this.model.getDisplayData().length;
    if (dataCount <= 1) {
      return false;
    }
    var zoomDomain = this.model.get("zoomDomain");
    if (zoomDomain !== void 0) {
      var domainScale = this.services.cartesianScales.getDomainScale();
      return x0 < domainScale(zoomDomain[0]) || x1 > domainScale(zoomDomain[1]);
    }
    return false;
  };
  return Bar3;
}(Component);

// node_modules/@carbon/charts/components/graphs/bar-simple.js
var __extends24 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var SimpleBar = function(_super) {
  __extends24(SimpleBar2, _super);
  function SimpleBar2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "simple-bar";
    _this.renderType = RenderTypes.SVG;
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      var groupMapsTo = _this.getOptions().data.groupMapsTo;
      _this.parent.selectAll("path.bar").transition("legend-hover-simple-bar").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-simple-bar"
        });
      }).attr("opacity", function(d) {
        return d[groupMapsTo] !== hoveredElement.datum()["name"] ? 0.3 : 1;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("path.bar").transition("legend-mouseout-simple-bar").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-simple-bar"
        });
      }).attr("opacity", 1);
    };
    return _this;
  }
  SimpleBar2.prototype.init = function() {
    var eventsFragment = this.services.events;
    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  SimpleBar2.prototype.render = function(animate) {
    var _this = this;
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var svg = this.getComponentContainer({ withinChartClip: true });
    var data = this.model.getDisplayData(this.configs.groups);
    var orientation = this.services.cartesianScales.getOrientation();
    var bars = svg.selectAll("path.bar").data(data, function(datum2) {
      return datum2[groupMapsTo];
    });
    bars.exit().attr("opacity", 0).remove();
    var barsEnter = bars.enter().append("path").attr("opacity", 0);
    barsEnter.merge(bars).classed("bar", true).attr("width", this.getBarWidth.bind(this)).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "bar-update-enter",
        animate
      });
    }).attr("class", function(d) {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.FILL],
        dataGroupName: d[groupMapsTo],
        originalClassName: "bar"
      });
    }).style("fill", function(d) {
      return _this.model.getFillColor(d[groupMapsTo]);
    }).attr("d", function(d, i) {
      var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier();
      var barWidth = _this.getBarWidth();
      var value2 = d[rangeIdentifier];
      var x0 = _this.services.cartesianScales.getDomainValue(d, i) - barWidth / 2;
      var x1 = x0 + barWidth;
      var y0, y1;
      if (Array.isArray(value2) && value2.length === 2) {
        y0 = _this.services.cartesianScales.getRangeValue(value2[0]);
        y1 = _this.services.cartesianScales.getRangeValue(value2[1], i);
      } else {
        var rangeScale = _this.services.cartesianScales.getRangeScale();
        var yScaleDomainStart = rangeScale.domain()[0];
        y0 = _this.services.cartesianScales.getRangeValue(Math.max(0, yScaleDomainStart));
        y1 = _this.services.cartesianScales.getRangeValue(d, i);
      }
      var difference4 = Math.abs(y1 - y0);
      if (difference4 !== 0 && difference4 < 2) {
        if (value2 > 0 && orientation === CartesianOrientations.VERTICAL || value2 < 0 && orientation === CartesianOrientations.HORIZONTAL) {
          y1 = y0 - 2;
        } else {
          y1 = y0 + 2;
        }
      }
      if (_this.isOutsideZoomedDomain(x0, x1)) {
        return;
      }
      return Tools.generateSVGPathString({ x0, x1, y0, y1 }, orientation);
    }).attr("opacity", 1).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-roledescription", "bar").attr("aria-label", function(d) {
      return d.value;
    });
    this.addEventListeners();
  };
  SimpleBar2.prototype.addEventListeners = function() {
    var self2 = this;
    this.parent.selectAll("path.bar").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", true);
      self2.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event,
        hoveredElement,
        data: [datum2]
      });
    }).on("mousemove", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {
        event,
        element: select_default2(this),
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", false);
      self2.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        hoveredElement
      });
    });
  };
  SimpleBar2.prototype.destroy = function() {
    this.parent.selectAll("path.bar").on("mouseover", null).on("mousemove", null).on("mouseout", null);
    var eventsFragment = this.services.events;
    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  return SimpleBar2;
}(Bar2);

// node_modules/@carbon/charts/components/graphs/bar-grouped.js
var __extends25 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var GroupedBar = function(_super) {
  __extends25(GroupedBar2, _super);
  function GroupedBar2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "grouped-bar";
    _this.renderType = RenderTypes.SVG;
    _this.padding = 5;
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      var groupMapsTo = _this.getOptions().data.groupMapsTo;
      _this.parent.selectAll("path.bar").transition("legend-hover-bar").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-bar"
        });
      }).attr("opacity", function(d) {
        return d[groupMapsTo] !== hoveredElement.datum()["name"] ? 0.3 : 1;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("path.bar").transition("legend-mouseout-bar").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-bar"
        });
      }).attr("opacity", 1);
    };
    return _this;
  }
  GroupedBar2.prototype.init = function() {
    var eventsFragment = this.services.events;
    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  GroupedBar2.prototype.render = function(animate) {
    var _this = this;
    var displayData = this.model.getDisplayData(this.configs.groups);
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    this.setGroupScale();
    var svg = this.getComponentContainer({ withinChartClip: true });
    var allDataLabels = Tools.removeArrayDuplicates(displayData.map(function(datum2) {
      var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum2);
      return datum2[domainIdentifier] && typeof datum2[domainIdentifier].toString === "function" ? datum2[domainIdentifier].toString() : datum2[domainIdentifier];
    }));
    var barGroups = svg.selectAll("g.bars").data(allDataLabels, function(label) {
      return label;
    });
    barGroups.exit().attr("opacity", 0).remove();
    var barGroupsEnter = barGroups.enter().append("g").classed("bars", true).attr("role", Roles.GROUP).attr("data-name", "bars");
    var allBarGroups = barGroupsEnter.merge(barGroups);
    allBarGroups.transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "bar-group-update-enter",
        animate
      });
    }).attr("transform", function(label, i) {
      var scaleValue = _this.services.cartesianScales.getDomainValue(label, i);
      var translateBy = scaleValue - _this.getGroupWidth() / 2;
      if (_this.services.cartesianScales.getOrientation() === CartesianOrientations.VERTICAL) {
        return "translate(" + translateBy + ", 0)";
      } else {
        return "translate(0, " + translateBy + ")";
      }
    });
    var bars = allBarGroups.selectAll("path.bar").data(function(label) {
      return _this.getDataCorrespondingToLabel(label);
    }, function(d) {
      return d[groupMapsTo];
    });
    bars.exit().attr("opacity", 0).remove();
    var barsEnter = bars.enter().append("path").attr("opacity", 0);
    barsEnter.merge(bars).classed("bar", true).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "bar-update-enter",
        animate
      });
    }).attr("class", function(d) {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.FILL],
        dataGroupName: d[groupMapsTo],
        originalClassName: "bar"
      });
    }).style("fill", function(d) {
      return _this.model.getFillColor(d[groupMapsTo]);
    }).attr("d", function(d) {
      var startX = _this.groupScale(d[groupMapsTo]);
      var barWidth = _this.getBarWidth();
      var x0 = startX;
      var x1 = startX + barWidth;
      var rangeAxis = _this.services.cartesianScales.getRangeAxisPosition({ datum: d });
      var y0 = _this.services.cartesianScales.getValueThroughAxisPosition(rangeAxis, 0);
      var y1 = _this.services.cartesianScales.getRangeValue(d);
      if (_this.isOutsideZoomedDomain(x0, x1)) {
        return;
      }
      return Tools.generateSVGPathString({ x0, x1, y0, y1 }, _this.services.cartesianScales.getOrientation());
    }).attr("opacity", 1).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-roledescription", "bar").attr("aria-label", function(d) {
      return d.value;
    });
    this.addEventListeners();
  };
  GroupedBar2.prototype.addEventListeners = function() {
    var self2 = this;
    this.parent.selectAll("path.bar").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", true);
      self2.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event,
        hoveredElement,
        data: [datum2]
      });
    }).on("mousemove", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", false);
      self2.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        hoveredElement
      });
    });
  };
  GroupedBar2.prototype.destroy = function() {
    this.parent.selectAll("path.bar").on("mouseover", null).on("mousemove", null).on("mouseout", null);
    var eventsFragment = this.services.events;
    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  GroupedBar2.prototype.getDataCorrespondingToLabel = function(label) {
    var _this = this;
    var displayData = this.model.getDisplayData(this.configs.groups);
    return displayData.filter(function(datum2) {
      var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum2);
      return datum2[domainIdentifier] === label;
    });
  };
  GroupedBar2.prototype.getGroupWidth = function() {
    var activeData = this.model.getGroupedData(this.configs.groups);
    var totalGroupPadding = this.getTotalGroupPadding();
    return this.getBarWidth() * activeData.length + totalGroupPadding;
  };
  GroupedBar2.prototype.getTotalGroupPadding = function() {
    var activeData = this.model.getGroupedData(this.configs.groups);
    if (activeData.length === 1) {
      return 0;
    }
    var domainScale = this.services.cartesianScales.getDomainScale();
    var padding = Math.min(5, 5 * (domainScale.step() / 70));
    return padding * (activeData.length - 1);
  };
  GroupedBar2.prototype.getBarWidth = function() {
    var options2 = this.getOptions();
    var providedWidth = Tools.getProperty(options2, "bars", "width");
    var providedMaxWidth = Tools.getProperty(options2, "bars", "maxWidth");
    if (providedWidth !== null) {
      if (providedMaxWidth === null || providedWidth <= providedMaxWidth) {
        return providedWidth;
      }
    }
    var activeData = this.model.getGroupedData(this.configs.groups);
    var numOfActiveDataGroups = activeData.length;
    var totalGroupPadding = this.getTotalGroupPadding();
    var domainScale = this.services.cartesianScales.getDomainScale();
    return Math.min(providedMaxWidth, (domainScale.step() - totalGroupPadding) / numOfActiveDataGroups);
  };
  GroupedBar2.prototype.setGroupScale = function() {
    var activeData = this.model.getActiveDataGroupNames(this.configs.groups);
    this.groupScale = band().domain(activeData).rangeRound([0, this.getGroupWidth()]);
  };
  return GroupedBar2;
}(Bar2);

// node_modules/@carbon/charts/components/graphs/bar-stacked.js
var __extends26 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var StackedBar = function(_super) {
  __extends26(StackedBar2, _super);
  function StackedBar2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "stacked-bar";
    _this.renderType = RenderTypes.SVG;
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      var groupMapsTo = _this.model.getOptions().data.groupMapsTo;
      _this.parent.selectAll("path.bar").transition("legend-hover-bar").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-bar"
        });
      }).attr("opacity", function(d) {
        return d[groupMapsTo] !== hoveredElement.datum()["name"] ? 0.3 : 1;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("path.bar").transition("legend-mouseout-bar").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-bar"
        });
      }).attr("opacity", 1);
    };
    return _this;
  }
  StackedBar2.prototype.init = function() {
    var eventsFragment = this.services.events;
    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  StackedBar2.prototype.render = function(animate) {
    var _this = this;
    var svg = this.getComponentContainer({ withinChartClip: true });
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var stackData = this.model.getStackedData({
      groups: this.configs.groups,
      divergent: true
    });
    var activeDataGroupNames = this.model.getActiveDataGroupNames();
    var barGroups = svg.selectAll("g.bars").data(stackData, function(d) {
      return Tools.getProperty(d, 0, groupMapsTo);
    });
    barGroups.exit().attr("opacity", 0).remove();
    barGroups.enter().append("g").classed("bars", true).attr("role", Roles.GROUP).attr("data-name", "bars");
    var bars = svg.selectAll("g.bars").selectAll("path.bar").data(function(d) {
      return d;
    }, function(d) {
      return d.data.sharedStackKey;
    });
    bars.exit().remove();
    bars.enter().append("path").merge(bars).classed("bar", true).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "bar-update-enter",
        animate
      });
    }).attr("class", function(d) {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.FILL],
        dataGroupName: d[groupMapsTo],
        originalClassName: "bar"
      });
    }).style("fill", function(d) {
      return _this.model.getFillColor(d[groupMapsTo]);
    }).attr("d", function(d, i) {
      var key = d.data.sharedStackKey;
      var barWidth = _this.getBarWidth();
      var x0 = _this.services.cartesianScales.getDomainValue(key, i) - barWidth / 2;
      var x1 = x0 + barWidth;
      var y0 = _this.services.cartesianScales.getRangeValue(d[0], i);
      var y1 = _this.services.cartesianScales.getRangeValue(d[1], i);
      if (_this.isOutsideZoomedDomain(x0, x1)) {
        return;
      }
      if (Math.abs(y1 - y0) > 0 && Math.abs(y1 - y0) > options2.bars.dividerSize) {
        var barIsNegative = d[0] < 0 && d[1] <= 0;
        if (barIsNegative && activeDataGroupNames.length > 1) {
          if (_this.services.cartesianScales.getOrientation() === CartesianOrientations.VERTICAL) {
            y1 += d[1] === 0 ? 2 : 1;
          } else {
            y1 -= 1;
          }
        } else if (!barIsNegative) {
          if (_this.services.cartesianScales.getOrientation() === CartesianOrientations.VERTICAL) {
            y1 += 1;
          } else {
            y1 -= 1;
          }
        }
      }
      return Tools.generateSVGPathString({ x0, x1, y0, y1 }, _this.services.cartesianScales.getOrientation());
    }).attr("opacity", 1).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-roledescription", "bar").attr("aria-label", function(d) {
      return d[1] - d[0];
    });
    this.addEventListeners();
  };
  StackedBar2.prototype.addEventListeners = function() {
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var self2 = this;
    this.parent.selectAll("path.bar").on("mouseover", function(event, datum2) {
      var _a4;
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", true);
      self2.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      var displayData = self2.model.getDisplayData(self2.configs.groups);
      var matchingDataPoint = displayData.find(function(d) {
        var domainIdentifier2 = self2.services.cartesianScales.getDomainIdentifier(d);
        var rangeIdentifier2 = self2.services.cartesianScales.getRangeIdentifier(d);
        return d[rangeIdentifier2] === datum2.data[datum2[groupMapsTo]] && d[domainIdentifier2].toString() === datum2.data.sharedStackKey && d[groupMapsTo] === datum2[groupMapsTo];
      });
      if (matchingDataPoint === void 0) {
        var domainIdentifier = self2.services.cartesianScales.getDomainIdentifier();
        var rangeIdentifier = self2.services.cartesianScales.getRangeIdentifier();
        matchingDataPoint = (_a4 = {}, _a4[domainIdentifier] = datum2.data.sharedStackKey, _a4[rangeIdentifier] = datum2.data[datum2[groupMapsTo]], _a4[groupMapsTo] = datum2[groupMapsTo], _a4);
      }
      self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event,
        hoveredElement,
        data: [matchingDataPoint]
      });
    }).on("mousemove", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", false);
      self2.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        hoveredElement
      });
    });
  };
  StackedBar2.prototype.getBarWidth = function() {
    var options2 = this.getOptions();
    if (Tools.getProperty(options2, "bars", "width")) {
      return options2.bars.width;
    }
    var mainXScale = this.services.cartesianScales.getMainXScale();
    var chartWidth = DOMUtils.getSVGElementSize(this.parent, {
      useAttrs: true
    }).width;
    var numberOfDomainValues = this.model.getStackKeys().length;
    var spacingFactor = Tools.getProperty(options2, "bars", "spacingFactor");
    if (!mainXScale.step) {
      return Math.min(options2.bars.maxWidth, chartWidth * spacingFactor / numberOfDomainValues);
    }
    return Math.min(options2.bars.maxWidth, mainXScale.step() / 2);
  };
  StackedBar2.prototype.destroy = function() {
    this.parent.selectAll("path.bar").on("mouseover", null).on("mousemove", null).on("mouseout", null);
    var eventsFragment = this.services.events;
    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  return StackedBar2;
}(Bar2);

// node_modules/@carbon/charts/components/graphs/boxplot.js
var __extends27 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Boxplot2 = function(_super) {
  __extends27(Boxplot3, _super);
  function Boxplot3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "boxplot";
    _this.renderType = RenderTypes.SVG;
    return _this;
  }
  Boxplot3.prototype.render = function(animate) {
    var _this = this;
    var svg = this.getComponentContainer({ withinChartClip: true });
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var dataGroupNames = this.model.getDataGroupNames();
    var mainXScale = this.services.cartesianScales.getMainXScale();
    var mainYScale = this.services.cartesianScales.getMainYScale();
    var _a4 = mainXScale.range(), xScaleStart = _a4[0], xScaleEnd = _a4[1];
    var _b = mainYScale.range(), yScaleEnd = _b[0], yScaleStart = _b[1];
    var width = xScaleEnd - xScaleStart;
    var height = yScaleEnd - yScaleStart;
    if (width === 0) {
      return;
    }
    var cartesianScales = this.services.cartesianScales;
    var orientation = cartesianScales.getOrientation();
    var isInVerticalOrientation = orientation === CartesianOrientations.VERTICAL;
    var _c = Tools.flipDomainAndRangeBasedOnOrientation(function(d, i) {
      return _this.services.cartesianScales.getDomainValue(d, i);
    }, function(d, i) {
      return _this.services.cartesianScales.getRangeValue(d, i);
    }, orientation), getXValue = _c[0], getYValue = _c[1];
    var gridSize = Math.floor((isInVerticalOrientation ? width : height) / dataGroupNames.length);
    var boxWidth = Math.min(gridSize / 2, 16);
    var boxplotData = this.model.getBoxplotData();
    var boxGroups = svg.selectAll(".box-group").data(boxplotData);
    boxGroups.exit().remove();
    var boxGroupsEnter = boxGroups.enter().append("g").attr("class", "box-group");
    var allBoxGroups = boxGroups.merge(boxGroupsEnter);
    boxGroupsEnter.append("path").merge(boxGroups.select("path.vertical-line.start")).attr("class", function() {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.STROKE],
        originalClassName: "vertical-line start"
      });
    }).attr("stroke-width", boxplot.strokeWidth.default).attr("fill", "none").transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "boxplot-update-verticalstartline",
        animate
      });
    }).attr("d", function(d) {
      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]);
      var x1 = x0;
      var y0 = cartesianScales.getRangeValue(d.whiskers.min);
      var y1 = cartesianScales.getRangeValue(d.quartiles.q_25);
      return Tools.generateSVGPathString({ x0, x1, y0, y1 }, orientation);
    });
    boxGroupsEnter.append("path").merge(boxGroups.select("path.vertical-line.end")).attr("class", function() {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.STROKE],
        originalClassName: "vertical-line end"
      });
    }).attr("stroke-width", boxplot.strokeWidth.default).attr("fill", "none").transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "boxplot-update-verticalendline",
        animate
      });
    }).attr("d", function(d) {
      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]);
      var x1 = x0;
      var y0 = cartesianScales.getRangeValue(d.whiskers.max);
      var y1 = cartesianScales.getRangeValue(d.quartiles.q_75);
      return Tools.generateSVGPathString({ x0, x1, y0, y1 }, orientation);
    });
    boxGroupsEnter.append("path").merge(boxGroups.select("path.box")).attr("class", function() {
      return _this.model.getColorClassName({
        classNameTypes: [
          ColorClassNameTypes.FILL,
          ColorClassNameTypes.STROKE
        ],
        originalClassName: "box"
      });
    }).attr("fill-opacity", boxplot.box.opacity.default).attr("stroke-width", boxplot.strokeWidth.default).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-roledescription", "box").attr("aria-label", function(d) {
      return d[groupMapsTo];
    }).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "boxplot-update-quartiles",
        animate
      });
    }).attr("d", function(d) {
      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) - boxWidth / 2;
      var x1 = x0 + boxWidth;
      var y0 = cartesianScales.getRangeValue(Math[isInVerticalOrientation ? "max" : "min"](d.quartiles.q_75, d.quartiles.q_25));
      var y1 = y0 + Math.abs(cartesianScales.getRangeValue(d.quartiles.q_75) - cartesianScales.getRangeValue(d.quartiles.q_25));
      return Tools.generateSVGPathString({ x0, x1, y0, y1 }, orientation);
    });
    boxGroupsEnter.append("path").merge(boxGroups.select("path.highlight-area")).attr("class", "highlight-area").attr("opacity", 0).attr("d", function(d) {
      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) - boxWidth / 2;
      var x1 = x0 + boxWidth;
      var y0 = cartesianScales.getRangeValue(d.whiskers.min);
      var y1 = cartesianScales.getRangeValue(d.whiskers.max);
      return Tools.generateSVGPathString({ x0, x1, y0, y1 }, orientation);
    });
    boxGroupsEnter.append("path").merge(boxGroups.select("path.whisker.start")).attr("class", function() {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.STROKE],
        originalClassName: "whisker start"
      });
    }).attr("stroke-width", boxplot.strokeWidth.thicker).attr("fill", "none").transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "boxplot-update-startingwhisker",
        animate
      });
    }).attr("d", function(d) {
      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) - boxWidth / 4;
      var x1 = x0 + boxWidth / 2;
      var y0 = cartesianScales.getRangeValue(d.whiskers.min);
      var y1 = cartesianScales.getRangeValue(d.whiskers.min);
      return Tools.generateSVGPathString({ x0, x1, y0, y1 }, orientation);
    });
    boxGroupsEnter.append("path").merge(boxGroups.select("path.median")).attr("fill", "none").attr("class", function() {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.STROKE],
        originalClassName: "median"
      });
    }).attr("stroke-width", 2).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "boxplot-update-median",
        animate
      });
    }).attr("d", function(d) {
      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) - boxWidth / 2;
      var x1 = x0 + boxWidth;
      var y0 = cartesianScales.getRangeValue(d.quartiles.q_50);
      var y1 = y0;
      return Tools.generateSVGPathString({ x0, x1, y0, y1 }, orientation);
    });
    boxGroupsEnter.append("path").merge(boxGroups.select("path.whisker.end")).attr("class", function() {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.STROKE],
        originalClassName: "whisker end"
      });
    }).attr("stroke-width", boxplot.strokeWidth.thicker).attr("fill", "none").transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "boxplot-update-endingwhisker",
        animate
      });
    }).attr("d", function(d) {
      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) - boxWidth / 4;
      var x1 = x0 + boxWidth / 2;
      var y0 = cartesianScales.getRangeValue(d.whiskers.max);
      var y1 = cartesianScales.getRangeValue(d.whiskers.max);
      return Tools.generateSVGPathString({ x0, x1, y0, y1 }, orientation);
    });
    var circles = allBoxGroups.selectAll("circle.outlier").data(function(d) {
      return d.outliers.map(function(outlier) {
        var _a5;
        return _a5 = {
          min: d.whiskers.min,
          max: d.whiskers.max
        }, _a5[groupMapsTo] = d[groupMapsTo], _a5.value = outlier, _a5;
      });
    });
    circles.exit().remove();
    var circlesEnter = circles.enter().append("circle");
    circles.merge(circlesEnter).attr("r", boxplot.circle.radius).attr("class", function() {
      return _this.model.getColorClassName({
        classNameTypes: [
          ColorClassNameTypes.FILL,
          ColorClassNameTypes.STROKE
        ],
        originalClassName: "outlier"
      });
    }).attr("fill-opacity", boxplot.circle.opacity.default).attr("cx", getXValue).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "boxplot-update-circles",
        animate
      });
    }).attr("cy", getYValue);
    this.addBoxEventListeners();
    this.addCircleEventListeners();
  };
  Boxplot3.prototype.addBoxEventListeners = function() {
    var self2 = this;
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    this.parent.selectAll("path.highlight-area").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      var parentElement = select_default2(this.parentNode);
      parentElement.select("path.box").classed("hovered", true).attr("fill-opacity", boxplot.box.opacity.hovered);
      self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event,
        hoveredElement,
        items: [
          {
            label: options2.tooltip.groupLabel,
            value: datum2[groupMapsTo],
            class: self2.model.getColorClassName({
              classNameTypes: [ColorClassNameTypes.TOOLTIP]
            })
          },
          {
            label: "Minimum",
            value: datum2.whiskers.min
          },
          {
            label: "Q1",
            value: datum2.quartiles.q_25
          },
          {
            label: "Median",
            value: datum2.quartiles.q_50
          },
          {
            label: "Q3",
            value: datum2.quartiles.q_75
          },
          {
            label: "Maximum",
            value: datum2.whiskers.max
          },
          {
            label: "IQR",
            value: datum2.quartiles.q_75 - datum2.quartiles.q_25
          }
        ]
      });
      self2.services.events.dispatchEvent(Events.Boxplot.BOX_MOUSEOVER, {
        event,
        element: hoveredElement,
        datum: datum2
      });
    }).on("mousemove", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Boxplot.BOX_MOUSEMOVE, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Boxplot.BOX_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      var parentElement = select_default2(this.parentNode);
      parentElement.select("path.box").classed("hovered", false).attr("fill-opacity", boxplot.box.opacity.default);
      self2.services.events.dispatchEvent(Events.Boxplot.BOX_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        hoveredElement
      });
    });
  };
  Boxplot3.prototype.addCircleEventListeners = function() {
    var self2 = this;
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();
    this.parent.selectAll("circle").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", true).attr("fill-opacity", boxplot.circle.opacity.hovered).classed("unfilled", false);
      self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event,
        hoveredElement,
        items: [
          {
            label: options2.tooltip.groupLabel,
            value: datum2[groupMapsTo],
            class: self2.model.getColorClassName({
              classNameTypes: [ColorClassNameTypes.TOOLTIP]
            })
          },
          {
            label: "Outlier",
            value: datum2[rangeIdentifier]
          }
        ]
      });
      self2.services.events.dispatchEvent(Events.Boxplot.OUTLIER_MOUSEOVER, {
        event,
        element: hoveredElement,
        datum: datum2
      });
    }).on("mousemove", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Boxplot.OUTLIER_MOUSEMOVE, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Boxplot.OUTLIER_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", false).attr("fill-opacity", boxplot.circle.opacity.default);
      self2.services.events.dispatchEvent(Events.Boxplot.OUTLIER_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        hoveredElement
      });
    });
  };
  return Boxplot3;
}(Component);

// node_modules/@carbon/charts/components/graphs/scatter.js
var __extends28 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Scatter2 = function(_super) {
  __extends28(Scatter3, _super);
  function Scatter3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "scatter";
    _this.renderType = RenderTypes.SVG;
    _this.handleChartHolderOnHover = function(event) {
      _this.parent.selectAll("circle.dot").transition("chart-holder-hover-scatter").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "chart-holder-hover-scatter"
        });
      }).attr("opacity", 1);
    };
    _this.handleChartHolderOnMouseOut = function(event) {
      _this.parent.selectAll("circle.dot").transition("chart-holder-mouseout-scatter").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "chart-holder-mouseout-scatter"
        });
      }).attr("opacity", 0);
    };
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      var groupMapsTo = _this.getOptions().data.groupMapsTo;
      _this.parent.selectAll("circle.dot").transition("legend-hover-scatter").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-scatter"
        });
      }).attr("opacity", function(d) {
        return d[groupMapsTo] !== hoveredElement.datum()["name"] ? 0.3 : 1;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("circle.dot").transition("legend-mouseout-scatter").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-scatter"
        });
      }).attr("opacity", 1);
    };
    return _this;
  }
  Scatter3.prototype.init = function() {
    var events = this.services.events;
    events.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    events.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    var fadeInOnChartHolderMouseover = this.configs.fadeInOnChartHolderMouseover;
    if (fadeInOnChartHolderMouseover) {
      events.addEventListener(Events.Chart.MOUSEOVER, this.handleChartHolderOnHover);
      events.addEventListener(Events.Chart.MOUSEOUT, this.handleChartHolderOnMouseOut);
    }
  };
  Scatter3.prototype.filterBasedOnZoomDomain = function(data) {
    var domainIdentifier = this.services.cartesianScales.getDomainIdentifier(data);
    var zoomDomain = this.model.get("zoomDomain");
    if (zoomDomain !== void 0) {
      return data.filter(function(d) {
        return d[domainIdentifier].getTime() >= zoomDomain[0].getTime() && d[domainIdentifier].getTime() <= zoomDomain[1].getTime();
      });
    }
    return data;
  };
  Scatter3.prototype.getScatterData = function() {
    var _this = this;
    var options2 = this.getOptions();
    var stacked = this.configs.stacked;
    var scatterData;
    if (stacked) {
      var percentage = Object.keys(options2.axes).some(function(axis3) {
        return options2.axes[axis3].percentage;
      });
      scatterData = this.model.getStackedData({
        groups: this.configs.groups,
        percentage
      });
    } else {
      scatterData = this.model.getDisplayData(this.configs.groups).filter(function(d) {
        var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(d);
        return d[rangeIdentifier] !== void 0 && d[rangeIdentifier] !== null;
      });
    }
    return this.filterBasedOnZoomDomain(scatterData);
  };
  Scatter3.prototype.render = function(animate) {
    var isScatterEnabled = Tools.getProperty(this.getOptions(), "points", "enabled") || Tools.getProperty(this.getOptions(), "bubble", "enabled");
    if (!isScatterEnabled) {
      return;
    }
    var svg = this.getComponentContainer({ withinChartClip: true });
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var domainIdentifier = this.services.cartesianScales.getDomainIdentifier();
    var circles = svg.selectAll("circle.dot").data(this.getScatterData(), function(datum2) {
      return datum2[groupMapsTo] + "-" + datum2[domainIdentifier];
    });
    circles.exit().attr("opacity", 0).remove();
    var enteringCircles = circles.enter().append("circle").classed("dot", true).attr("opacity", 0);
    var circlesToStyle = enteringCircles.merge(circles);
    this.styleCircles(circlesToStyle, animate);
    this.addEventListeners();
  };
  Scatter3.prototype.isDatapointThresholdAnomaly = function(datum2, index4) {
    var _this = this;
    var handleThresholds = this.configs.handleThresholds;
    if (!handleThresholds) {
      return false;
    }
    var cartesianScales = this.services.cartesianScales;
    var orientation = cartesianScales.getOrientation();
    var _a4 = Tools.flipDomainAndRangeBasedOnOrientation(this.services.cartesianScales.getHighestDomainThreshold(), this.services.cartesianScales.getHighestRangeThreshold(), orientation), xThreshold = _a4[0], yThreshold = _a4[1];
    var _b = Tools.flipDomainAndRangeBasedOnOrientation(function(d, i) {
      return _this.services.cartesianScales.getDomainValue(d, i);
    }, function(d, i) {
      return _this.services.cartesianScales.getRangeValue(d, i);
    }, orientation), getXValue = _b[0], getYValue = _b[1];
    var xValue = getXValue(datum2, index4);
    var yValue = getYValue(datum2, index4);
    if (yThreshold && xThreshold) {
      return yValue <= yThreshold.scaleValue && xValue >= xThreshold.scaleValue;
    }
    if (yThreshold) {
      return yValue <= yThreshold.scaleValue;
    }
    if (xThreshold) {
      return xValue >= xThreshold.scaleValue;
    }
  };
  Scatter3.prototype.styleCircles = function(selection2, animate) {
    var _this = this;
    var options2 = this.getOptions();
    var _a4 = options2.points, filled = _a4.filled, fillOpacity = _a4.fillOpacity;
    var _b = this.services, cartesianScales = _b.cartesianScales, transitions2 = _b.transitions;
    var groupMapsTo = options2.data.groupMapsTo;
    var getDomainValue = function(d, i) {
      return cartesianScales.getDomainValue(d, i);
    };
    var getRangeValue = function(d, i) {
      return cartesianScales.getRangeValue(d, i);
    };
    var _c = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, cartesianScales.getOrientation()), getXValue = _c[0], getYValue = _c[1];
    var fadeInOnChartHolderMouseover = this.configs.fadeInOnChartHolderMouseover;
    selection2.raise().classed("dot", true).attr("class", function(d) {
      var domainIdentifier = cartesianScales.getDomainIdentifier(d);
      var isFilled = _this.model.getIsFilled(d[groupMapsTo], d[domainIdentifier], d, filled);
      var classNamesNeeded = isFilled ? [ColorClassNameTypes.FILL, ColorClassNameTypes.STROKE] : [ColorClassNameTypes.STROKE];
      return _this.model.getColorClassName({
        classNameTypes: classNamesNeeded,
        dataGroupName: d[groupMapsTo],
        originalClassName: "dot"
      });
    }).classed("threshold-anomaly", function(d, i) {
      return _this.isDatapointThresholdAnomaly(d, i);
    }).classed("filled", function(d) {
      var domainIdentifier = cartesianScales.getDomainIdentifier(d);
      return _this.model.getIsFilled(d[groupMapsTo], d[domainIdentifier], d, filled);
    }).classed("unfilled", function(d) {
      var domainIdentifier = cartesianScales.getDomainIdentifier(d);
      return !_this.model.getIsFilled(d[groupMapsTo], d[domainIdentifier], d, filled);
    }).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "scatter-update-enter",
        animate
      });
    }).attr("cx", getXValue).attr("cy", getYValue).attr("r", options2.points.radius).style("fill", function(d) {
      var domainIdentifier = cartesianScales.getDomainIdentifier(d);
      if (_this.model.getIsFilled(d[groupMapsTo], d[domainIdentifier], d, filled)) {
        return _this.model.getFillColor(d[groupMapsTo], d[domainIdentifier], d);
      }
    }).style("stroke", function(d) {
      var domainIdentifier = cartesianScales.getDomainIdentifier(d);
      return _this.model.getStrokeColor(d[groupMapsTo], d[domainIdentifier], d);
    }).attr("fill-opacity", filled ? fillOpacity : 1).attr("opacity", fadeInOnChartHolderMouseover ? 0 : 1).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-roledescription", "point").attr("aria-label", function(d) {
      var rangeIdentifier = cartesianScales.getRangeIdentifier(d);
      return d[rangeIdentifier];
    });
    this.addEventListeners();
  };
  Scatter3.prototype.getTooltipAdditionalItems = function(datum2) {
    return null;
  };
  Scatter3.prototype.addEventListeners = function() {
    var self2 = this;
    var groupMapsTo = self2.getOptions().data.groupMapsTo;
    this.parent.selectAll("circle").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", true).attr("class", function(d) {
        return self2.model.getColorClassName({
          classNameTypes: [ColorClassNameTypes.FILL],
          dataGroupName: d[groupMapsTo],
          originalClassName: hoveredElement.attr("class")
        });
      }).style("fill", function(d) {
        var domainIdentifier = self2.services.cartesianScales.getDomainIdentifier(d);
        return self2.model.getFillColor(d[groupMapsTo], d[domainIdentifier], d);
      }).classed("unfilled", false);
      self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event,
        hoveredElement,
        data: [datum2],
        additionalItems: self2.getTooltipAdditionalItems(datum2)
      });
      self2.services.events.dispatchEvent(Events.Scatter.SCATTER_MOUSEOVER, {
        event,
        element: hoveredElement,
        datum: datum2
      });
    }).on("mousemove", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Scatter.SCATTER_MOUSEMOVE, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Scatter.SCATTER_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", false);
      if (!self2.configs.filled) {
        var filled_1 = self2.getOptions().points.filled;
        var domainIdentifier_1 = self2.services.cartesianScales.getDomainIdentifier(datum2);
        var isFilled_1 = self2.model.getIsFilled(datum2[groupMapsTo], datum2[domainIdentifier_1], datum2, filled_1);
        hoveredElement.classed("unfilled", !isFilled_1).style("fill", function(d) {
          if (isFilled_1 || filled_1) {
            return self2.model.getFillColor(d[groupMapsTo], d[domainIdentifier_1], d);
          }
          return null;
        });
      }
      self2.services.events.dispatchEvent(Events.Scatter.SCATTER_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        hoveredElement
      });
    });
  };
  Scatter3.prototype.destroy = function() {
    this.parent.selectAll("circle").on("mousemove", null).on("mouseout", null);
    var events = this.services.events;
    events.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    events.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    events.removeEventListener(Events.Chart.MOUSEOVER, this.handleChartHolderOnHover);
    events.removeEventListener(Events.Chart.MOUSEOUT, this.handleChartHolderOnMouseOut);
  };
  return Scatter3;
}(Component);

// node_modules/@carbon/charts/components/graphs/bubble.js
var __extends29 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Bubble = function(_super) {
  __extends29(Bubble2, _super);
  function Bubble2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "bubble";
    _this.renderType = RenderTypes.SVG;
    return _this;
  }
  Bubble2.prototype.getRadiusScale = function(selection2) {
    var options2 = this.getOptions();
    var radiusMapsTo = options2.bubble.radiusMapsTo;
    var data = selection2.data();
    var allRadii = data.map(function(d) {
      return d[radiusMapsTo];
    }).filter(function(radius) {
      return radius;
    });
    var chartSize = DOMUtils.getHTMLElementSize(this.services.domUtils.getMainContainer());
    var radiusDataIsValid = allRadii.length > 0;
    var domain = radiusDataIsValid ? extent(allRadii) : [1, 1];
    return linear3().domain(domain).range(radiusDataIsValid ? options2.bubble.radiusRange(chartSize, data) : [4, 4]);
  };
  Bubble2.prototype.styleCircles = function(selection2, animate) {
    var _this = this;
    var options2 = this.getOptions();
    var radiusMapsTo = options2.bubble.radiusMapsTo;
    var radiusScale = this.getRadiusScale(selection2);
    var groupMapsTo = options2.data.groupMapsTo;
    var cartesianScales = this.services.cartesianScales;
    var getDomainValue = function(d, i) {
      return cartesianScales.getDomainValue(d, i);
    };
    var getRangeValue = function(d, i) {
      return cartesianScales.getRangeValue(d, i);
    };
    var _a4 = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, cartesianScales.getOrientation()), getXValue = _a4[0], getYValue = _a4[1];
    selection2.raise().classed("dot", true).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-label", function(d) {
      var rangeIdentifier = cartesianScales.getRangeIdentifier(d);
      return d[rangeIdentifier];
    }).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "bubble-update-enter",
        animate
      });
    }).attr("cx", getXValue).attr("cy", getYValue).attr("r", function(d) {
      return radiusScale(d[radiusMapsTo] || 1);
    }).attr("class", function(d) {
      return _this.model.getColorClassName({
        classNameTypes: [
          ColorClassNameTypes.FILL,
          ColorClassNameTypes.STROKE
        ],
        dataGroupName: d[groupMapsTo],
        originalClassName: "dot"
      });
    }).style("fill", function(d) {
      var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(d);
      return _this.model.getFillColor(d[groupMapsTo], d[domainIdentifier], d);
    }).style("stroke", function(d) {
      var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(d);
      return _this.model.getStrokeColor(d[groupMapsTo], d[domainIdentifier], d);
    }).attr("fill-opacity", options2.bubble.fillOpacity).attr("opacity", 1);
  };
  Bubble2.prototype.getTooltipAdditionalItems = function(datum2) {
    var bubbleOptions = Tools.getProperty(this.getOptions(), "bubble");
    return [
      {
        label: Tools.getProperty(bubbleOptions, "radiusLabel"),
        value: datum2[Tools.getProperty(bubbleOptions, "radiusMapsTo")]
      }
    ];
  };
  return Bubble2;
}(Scatter2);

// node_modules/@carbon/charts/components/graphs/bullet.js
var __extends30 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Bullet = function(_super) {
  __extends30(Bullet2, _super);
  function Bullet2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "bullet";
    _this.renderType = RenderTypes.SVG;
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      var groupMapsTo = _this.getOptions().data.groupMapsTo;
      _this.parent.selectAll("path.bar").transition("legend-hover-simple-bar").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-simple-bar"
        });
      }).attr("opacity", function(d) {
        return d[groupMapsTo] !== hoveredElement.datum()["name"] ? 0.3 : 1;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("path.bar").transition("legend-mouseout-simple-bar").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-simple-bar"
        });
      }).attr("opacity", 1);
    };
    return _this;
  }
  Bullet2.prototype.init = function() {
    var eventsFragment = this.services.events;
    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  Bullet2.prototype.render = function(animate) {
    var _this = this;
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var svg = this.getComponentContainer({ withinChartClip: true });
    var data = this.model.getDisplayData(this.configs.groups);
    var rangeScale = this.services.cartesianScales.getRangeScale();
    var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();
    var _a4 = rangeScale.range(), rangeScaleStart = _a4[0], rangeScaleEnd = _a4[1];
    var _b = rangeScale.domain(), rangeScaleDomainMin = _b[0], rangeScaleDomainMax = _b[1];
    var renderRangeBoxes = function() {
      var rangeBoxData = [];
      data.forEach(function(datum2) {
        if (datum2.ranges) {
          datum2.ranges.forEach(function(range3, i) {
            if (range3 !== null && range3 !== void 0 && range3 < rangeScaleDomainMax) {
              rangeBoxData.push({
                datum: datum2,
                value: range3,
                order: i + 1
              });
            }
          });
        } else {
          rangeBoxData.push({
            datum: datum2,
            order: 1
          });
        }
      });
      var rangeBoxes = DOMUtils.appendOrSelect(svg, "g.range-boxes").selectAll("path.range-box").data(rangeBoxData, function(datum2) {
        return datum2[groupMapsTo] + "-" + datum2.order;
      });
      rangeBoxes.exit().attr("opacity", 0).remove();
      var rangeBoxesEnter = rangeBoxes.enter().append("path").attr("opacity", 0);
      rangeBoxesEnter.merge(rangeBoxes).attr("class", function(d) {
        return "range-box order-" + d.order;
      }).transition().call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "bullet-range-box-update-enter",
          animate
        });
      }).attr("d", function(d, i) {
        var lineHeight = 16;
        var x0, x1, y0, y1;
        if (d.order === 1) {
          x0 = _this.services.cartesianScales.getDomainValue(d.datum, i) - lineHeight / 2;
          x1 = x0 + lineHeight;
          y0 = rangeScaleEnd - 2;
          y1 = rangeScaleStart + 1;
        } else {
          x0 = _this.services.cartesianScales.getDomainValue(d.datum, i) - lineHeight / 2;
          x1 = x0 + lineHeight;
          y0 = _this.services.cartesianScales.getRangeValue(d.value, i);
          y1 = rangeScaleEnd;
        }
        return Tools.generateSVGPathString({ x0, x1, y0, y1 }, _this.services.cartesianScales.getOrientation());
      }).attr("opacity", 1);
    };
    var renderBars = function() {
      var bars = DOMUtils.appendOrSelect(svg, "g.bars").selectAll("path.bar").data(data, function(datum2) {
        return datum2[groupMapsTo];
      });
      bars.exit().attr("opacity", 0).remove();
      var barsEnter = bars.enter().append("path").attr("opacity", 0);
      barsEnter.merge(bars).classed("bar", true).transition().call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "bullet-bar-update-enter",
          animate
        });
      }).attr("class", function(d) {
        return _this.model.getColorClassName({
          classNameTypes: [ColorClassNameTypes.FILL],
          dataGroupName: d[groupMapsTo],
          originalClassName: "bar"
        });
      }).style("fill", function(d) {
        return _this.model.getFillColor(d[groupMapsTo]);
      }).attr("d", function(d, i) {
        var barWidth = 8;
        var x0 = _this.services.cartesianScales.getDomainValue(d, i) - barWidth / 2;
        var x1 = x0 + barWidth;
        var y0 = _this.services.cartesianScales.getRangeValue(0) + 1;
        var y1 = _this.services.cartesianScales.getRangeValue(d, i);
        return Tools.generateSVGPathString({ x0, x1, y0, y1 }, _this.services.cartesianScales.getOrientation());
      }).attr("opacity", 1).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-roledescription", "bar").attr("aria-label", function(d) {
        return d.value;
      });
    };
    var renderTargetLines = function() {
      var lines2 = DOMUtils.appendOrSelect(svg, "g.markers").selectAll("path.marker").data(data.filter(function(d) {
        return Tools.getProperty(d, "marker") !== null;
      }), function(datum2) {
        return datum2[groupMapsTo];
      });
      lines2.exit().attr("opacity", 0).remove();
      var linesEnter = lines2.enter().append("path").attr("opacity", 0);
      linesEnter.merge(lines2).classed("marker", true).transition().call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "bullet-marker-update-enter",
          animate
        });
      }).attr("d", function(d, i) {
        var lineHeight = 24;
        var x0 = _this.services.cartesianScales.getDomainValue(d, i) - lineHeight / 2;
        var x1 = x0 + lineHeight;
        var y0 = _this.services.cartesianScales.getRangeValue(d.marker, i);
        var y1 = y0;
        return Tools.generateSVGPathString({ x0, x1, y0, y1 }, _this.services.cartesianScales.getOrientation());
      }).attr("opacity", 1);
    };
    var renderTargetQuartiles = function() {
      var quartilesData = [];
      data.filter(function(d) {
        return Tools.getProperty(d, "marker") !== null;
      }).forEach(function(d) {
        var value2 = d.marker;
        var barValue = d[rangeIdentifier];
        quartilesData = quartilesData.concat([
          { datum: d, value: value2 * 0.25, barValue },
          { datum: d, value: value2 * 0.5, barValue },
          { datum: d, value: value2 * 0.75, barValue }
        ]);
      });
      var lines2 = DOMUtils.appendOrSelect(svg, "g.quartiles").selectAll("path.quartile").data(quartilesData, function(datum2) {
        return datum2[groupMapsTo];
      });
      lines2.exit().attr("opacity", 0).remove();
      var linesEnter = lines2.enter().append("path").attr("opacity", 0);
      linesEnter.merge(lines2).attr("class", function(d) {
        return "quartile " + (d.value <= d.barValue ? "over-bar" : "");
      }).transition().call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "bullet-quartile-update-enter",
          animate
        });
      }).attr("d", function(_a5, i) {
        var d = _a5.datum, value2 = _a5.value;
        var lineHeight = 4;
        if (d.ranges && d.ranges.indexOf(value2) !== -1) {
          lineHeight = 8;
        }
        var x0 = _this.services.cartesianScales.getDomainValue(d, i) - lineHeight / 2;
        var x1 = x0 + lineHeight;
        var y0 = _this.services.cartesianScales.getRangeValue(value2, i);
        var y1 = y0;
        return Tools.generateSVGPathString({ x0, x1, y0, y1 }, _this.services.cartesianScales.getOrientation());
      }).attr("opacity", 1);
    };
    renderRangeBoxes();
    renderBars();
    renderTargetLines();
    renderTargetQuartiles();
    this.addEventListeners();
  };
  Bullet2.prototype.addEventListeners = function() {
    var self2 = this;
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();
    this.parent.selectAll("path.bar").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", true);
      self2.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      var performanceAreaTitles = Tools.getProperty(options2, "bullet", "performanceAreaTitles");
      var matchingRangeIndex = self2.model.getMatchingRangeIndexForDatapoint(datum2);
      self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event,
        hoveredElement,
        items: [
          {
            label: options2.tooltip.groupLabel || "Group",
            value: datum2[groupMapsTo],
            class: self2.model.getColorClassName({
              classNameTypes: [ColorClassNameTypes.TOOLTIP],
              dataGroupName: datum2[groupMapsTo]
            })
          },
          {
            label: "Value",
            value: datum2[rangeIdentifier]
          },
          {
            label: "Target",
            value: datum2.marker
          },
          {
            label: "Percentage",
            value: Math.floor(datum2[rangeIdentifier] / datum2.marker * 100) + "%"
          },
          {
            label: "Performance",
            value: performanceAreaTitles[matchingRangeIndex]
          }
        ]
      });
    }).on("mousemove", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {
        event,
        element: select_default2(this),
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", false);
      self2.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        hoveredElement
      });
    });
  };
  Bullet2.prototype.destroy = function() {
    this.parent.selectAll("path.bar").on("mouseover", null).on("mousemove", null).on("mouseout", null);
    var eventsFragment = this.services.events;
    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  return Bullet2;
}(Component);

// node_modules/@carbon/charts/components/graphs/histogram.js
var __extends31 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Histogram = function(_super) {
  __extends31(Histogram2, _super);
  function Histogram2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "histogram";
    _this.renderType = RenderTypes.SVG;
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      var options2 = _this.getOptions();
      var groupMapsTo = options2.data.groupMapsTo;
      _this.parent.selectAll("path.bar").transition("legend-hover-bar").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-bar"
        });
      }).attr("opacity", function(d) {
        return d[groupMapsTo] !== hoveredElement.datum()["name"] ? 0.3 : 1;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("path.bar").transition("legend-mouseout-bar").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-bar"
        });
      }).attr("opacity", 1);
    };
    return _this;
  }
  Histogram2.prototype.init = function() {
    var eventsFragment = this.services.events;
    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  Histogram2.prototype.render = function(animate) {
    var _this = this;
    var svg = this.getComponentContainer();
    var options2 = this.model.getOptions();
    var groupIdentifier = options2.groupIdentifier;
    var groupMapsTo = options2.data.groupMapsTo;
    var binnedStackedData = this.model.getBinnedStackedData();
    var x3 = this.services.cartesianScales.getMainXScale();
    var barGroups = svg.selectAll("g.bars").data(binnedStackedData, function(d) {
      return get_default(d, "0." + groupMapsTo);
    });
    barGroups.exit().attr("opacity", 0).remove();
    barGroups.enter().append("g").classed("bars", true).attr("role", Roles.GROUP);
    var bars = svg.selectAll("g.bars").selectAll("path.bar").data(function(data) {
      return data;
    });
    bars.exit().remove();
    bars.enter().append("path").merge(bars).classed("bar", true).attr(groupIdentifier, function(d, i) {
      return i;
    }).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "histogram-bar-update-enter",
        animate
      });
    }).attr("class", function(d) {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.FILL],
        dataGroupName: d[groupMapsTo],
        originalClassName: "bar"
      });
    }).style("fill", function(d) {
      return _this.model.getFillColor(d[groupMapsTo]);
    }).attr("d", function(d, i) {
      var bin2 = get_default(d, "data");
      if (!bin2) {
        return;
      }
      var barWidth = x3(bin2.x1) - x3(bin2.x0) - 1;
      var x0 = _this.services.cartesianScales.getDomainValue(bin2.x0, i);
      var x1 = x0 + barWidth;
      var y0 = _this.services.cartesianScales.getRangeValue(d[0], i);
      var y1 = _this.services.cartesianScales.getRangeValue(d[1], i);
      if (Math.abs(y1 - y0) > 0 && Math.abs(y1 - y0) > options2.bars.dividerSize) {
        if (_this.services.cartesianScales.getOrientation() === CartesianOrientations.VERTICAL) {
          y1 += 1;
        } else {
          y1 -= 1;
        }
      }
      return Tools.generateSVGPathString({ x0, x1, y0, y1 }, _this.services.cartesianScales.getOrientation());
    }).attr("opacity", 1).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-roledescription", "bar").attr("aria-label", function(d) {
      return Tools.getProperty(d, "data", d[groupMapsTo]);
    });
    this.addEventListeners();
  };
  Histogram2.prototype.addEventListeners = function() {
    var options2 = this.model.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var self2 = this;
    this.parent.selectAll("path.bar").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", true);
      var x0 = parseFloat(get_default(datum2, "data.x0"));
      var x1 = parseFloat(get_default(datum2, "data.x1"));
      var rangeAxisPosition = self2.services.cartesianScales.getRangeAxisPosition();
      var rangeScaleLabel = self2.services.cartesianScales.getScaleLabel(rangeAxisPosition);
      self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event,
        hoveredElement,
        items: [
          {
            label: get_default(options2, "bins.rangeLabel") || "Range",
            value: x0 + " \u2013 " + x1
          },
          {
            label: options2.tooltip.groupLabel || "Group",
            value: datum2[groupMapsTo],
            class: self2.model.getColorClassName({
              classNameTypes: [ColorClassNameTypes.TOOLTIP],
              dataGroupName: datum2[groupMapsTo]
            })
          },
          {
            label: rangeScaleLabel,
            value: get_default(datum2, "data." + datum2[groupMapsTo])
          }
        ]
      });
    }).on("mousemove", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", false);
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE);
    });
  };
  Histogram2.prototype.destroy = function() {
    this.parent.selectAll("path.bar").on("mouseover", null).on("mousemove", null).on("mouseout", null);
    var eventsFragment = this.services.events;
    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  return Histogram2;
}(Component);

// node_modules/@carbon/charts/components/graphs/line.js
var __extends32 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Line2 = function(_super) {
  __extends32(Line3, _super);
  function Line3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "line";
    _this.renderType = RenderTypes.SVG;
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      _this.parent.selectAll("path.line").transition("legend-hover-line").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-line"
        });
      }).attr("opacity", function(group3) {
        if (group3.name !== hoveredElement.datum()["name"]) {
          return lines.opacity.unselected;
        }
        return lines.opacity.selected;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("path.line").transition("legend-mouseout-line").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-line"
        });
      }).attr("opacity", lines.opacity.selected);
    };
    return _this;
  }
  Line3.prototype.init = function() {
    var events = this.services.events;
    events.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    events.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  Line3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var svg = this.getComponentContainer({ withinChartClip: true });
    var _a4 = this.services, cartesianScales = _a4.cartesianScales, curves = _a4.curves;
    var getDomainValue = function(d, i) {
      return cartesianScales.getDomainValue(d, i);
    };
    var getRangeValue = function(d, i) {
      return cartesianScales.getRangeValue(d, i);
    };
    var _b = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, cartesianScales.getOrientation()), getXValue = _b[0], getYValue = _b[1];
    var options2 = this.getOptions();
    var lineGenerator = line_default().x(getXValue).y(getYValue).curve(curves.getD3Curve()).defined(function(datum2, i) {
      var rangeIdentifier = cartesianScales.getRangeIdentifier(datum2);
      var value2 = datum2[rangeIdentifier];
      if (value2 === null || value2 === void 0) {
        return false;
      }
      return true;
    });
    var data = [];
    if (this.configs.stacked) {
      var percentage = Object.keys(options2.axes).some(function(axis3) {
        return options2.axes[axis3].percentage;
      });
      var groupMapsTo_1 = options2.data.groupMapsTo;
      var stackedData = this.model.getStackedData({
        groups: this.configs.groups,
        percentage
      });
      data = stackedData.map(function(d) {
        var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(d);
        var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(d);
        return {
          name: Tools.getProperty(d, 0, groupMapsTo_1),
          data: d.map(function(datum2) {
            var _a5;
            return _a5 = {}, _a5[domainIdentifier] = datum2.data.sharedStackKey, _a5[groupMapsTo_1] = datum2[groupMapsTo_1], _a5[rangeIdentifier] = datum2[1], _a5;
          }),
          hidden: !Tools.some(d, function(datum2) {
            return datum2[0] !== datum2[1];
          })
        };
      });
    } else {
      data = this.model.getGroupedData(this.configs.groups);
    }
    var lines2 = svg.selectAll("path.line").data(data, function(group3) {
      return group3.name;
    });
    lines2.exit().attr("opacity", 0).remove();
    var enteringLines = lines2.enter().append("path").classed("line", true).attr("opacity", 0);
    enteringLines.merge(lines2).data(data, function(group3) {
      return group3.name;
    }).attr("class", function(group3) {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.STROKE],
        dataGroupName: group3.name,
        originalClassName: "line"
      });
    }).style("stroke", function(group3) {
      return _this.model.getStrokeColor(group3.name);
    }).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-roledescription", "line").attr("aria-label", function(group3) {
      var groupData = group3.data;
      return groupData.map(function(datum2) {
        var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(datum2);
        return datum2[rangeIdentifier];
      }).join(",");
    }).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "line-update-enter",
        animate
      });
    }).attr("opacity", function(d) {
      return d.hidden ? 0 : 1;
    }).attr("d", function(group3) {
      var groupData = group3.data;
      return lineGenerator(groupData);
    });
  };
  Line3.prototype.destroy = function() {
    var eventsFragment = this.services.events;
    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  return Line3;
}(Component);

// node_modules/@carbon/charts/components/graphs/lollipop.js
var __extends33 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Lollipop = function(_super) {
  __extends33(Lollipop2, _super);
  function Lollipop2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "lollipop";
    _this.renderType = RenderTypes.SVG;
    _this.handleScatterOnHover = function(event) {
      var hoveredElement = event.detail;
      var options2 = _this.getOptions();
      var groupMapsTo = options2.data.groupMapsTo;
      _this.parent.selectAll("line.line").attr("stroke-width", function(d) {
        if (d[groupMapsTo] !== hoveredElement.datum[groupMapsTo]) {
          return lines.weight.unselected;
        }
        return lines.weight.selected;
      });
    };
    _this.handleScatterOnMouseOut = function(event) {
      _this.parent.selectAll("line.line").attr("stroke-width", lines.weight.unselected);
    };
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      var options2 = _this.getOptions();
      var groupMapsTo = options2.data.groupMapsTo;
      _this.parent.selectAll("line.line").transition("legend-hover-line").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-line"
        });
      }).attr("opacity", function(d) {
        if (d[groupMapsTo] !== hoveredElement.datum()["name"]) {
          return lines.opacity.unselected;
        }
        return lines.opacity.selected;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("line.line").transition("legend-mouseout-line").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-line"
        });
      }).attr("opacity", lines.opacity.selected);
    };
    return _this;
  }
  Lollipop2.prototype.init = function() {
    var events = this.services.events;
    events.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    events.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  Lollipop2.prototype.render = function(animate) {
    var _this = this;
    var svg = this.getComponentContainer({ withinChartClip: true });
    var options2 = this.model.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var cartesianScales = this.services.cartesianScales;
    var mainXScale = cartesianScales.getMainXScale();
    var mainYScale = cartesianScales.getMainYScale();
    var domainIdentifier = cartesianScales.getDomainIdentifier();
    var getDomainValue = function(d, i) {
      return cartesianScales.getDomainValue(d, i);
    };
    var getRangeValue = function(d, i) {
      return cartesianScales.getRangeValue(d, i);
    };
    var orientation = cartesianScales.getOrientation();
    var _a4 = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, orientation), getXValue = _a4[0], getYValue = _a4[1];
    var lines2 = svg.selectAll("line.line").data(this.getScatterData(), function(datum2) {
      return datum2[groupMapsTo] + "-" + datum2[domainIdentifier];
    });
    lines2.exit().attr("opacity", 0).remove();
    var enteringLines = lines2.enter().append("line").attr("opacity", 0);
    var allLines = enteringLines.merge(lines2).classed("line", true).attr("class", function(d) {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.STROKE],
        dataGroupName: d[groupMapsTo],
        originalClassName: "line"
      });
    }).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "lollipop-line-update-enter",
        animate
      });
    }).style("stroke", function(d) {
      return _this.model.getFillColor(d[groupMapsTo], d[domainIdentifier], d);
    }).attr("opacity", 1);
    if (orientation === CartesianOrientations.HORIZONTAL) {
      allLines.attr("y1", getYValue).attr("y2", getYValue).attr("x1", mainXScale.range()[0]).attr("x2", function(d, i) {
        return getXValue(d, i) - options2.points.radius;
      });
    } else {
      allLines.attr("x1", getXValue).attr("x2", getXValue).attr("y1", mainYScale.range()[0]).attr("y2", function(d, i) {
        return getYValue(d, i) + options2.points.radius;
      });
    }
    this.addScatterPointEventListeners();
  };
  Lollipop2.prototype.addScatterPointEventListeners = function() {
    this.services.events.addEventListener(Events.Scatter.SCATTER_MOUSEOVER, this.handleScatterOnHover);
    this.services.events.addEventListener(Events.Scatter.SCATTER_MOUSEOUT, this.handleScatterOnMouseOut);
  };
  Lollipop2.prototype.destroy = function() {
    var eventsFragment = this.services.events;
    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    eventsFragment.removeEventListener(Events.Scatter.SCATTER_MOUSEOVER, this.handleScatterOnHover);
    eventsFragment.removeEventListener(Events.Scatter.SCATTER_MOUSEOUT, this.handleScatterOnMouseOut);
  };
  return Lollipop2;
}(Scatter2);

// node_modules/@carbon/charts/components/graphs/scatter-stacked.js
var __extends34 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var StackedScatter = function(_super) {
  __extends34(StackedScatter2, _super);
  function StackedScatter2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "scatter-stacked";
    _this.renderType = RenderTypes.SVG;
    return _this;
  }
  StackedScatter2.prototype.render = function(animate) {
    var _this = this;
    var isScatterEnabled = Tools.getProperty(this.getOptions(), "points", "enabled");
    if (!isScatterEnabled) {
      return;
    }
    var svg = this.getComponentContainer({ withinChartClip: true });
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var percentage = Object.keys(options2.axes).some(function(axis3) {
      return options2.axes[axis3].percentage;
    });
    var stackedData = this.model.getStackedData({
      groups: this.configs.groups,
      percentage
    });
    var circleGroups = svg.selectAll("g.dots").data(stackedData, function(d) {
      return Tools.getProperty(d, 0, groupMapsTo);
    });
    circleGroups.exit().attr("opacity", 0).remove();
    var circleGroupsEnter = circleGroups.enter().append("g").classed("dots", true).attr("role", Roles.GROUP);
    var circles = circleGroupsEnter.merge(circleGroups).selectAll("circle.dot").data(function(d) {
      return d;
    });
    circles.exit().attr("opacity", 0).remove();
    var enteringCircles = circles.enter().append("circle").classed("dot", true).attr("opacity", 0);
    var circlesToStyle = enteringCircles.merge(circles).datum(function(d) {
      var _a4;
      var group3 = d[groupMapsTo];
      var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(d);
      var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(d);
      return _a4 = {}, _a4[groupMapsTo] = group3, _a4[domainIdentifier] = d["data"]["sharedStackKey"], _a4[rangeIdentifier] = d[1], _a4;
    });
    this.styleCircles(circlesToStyle, animate);
    this.addEventListeners();
  };
  StackedScatter2.prototype.getTooltipData = function(hoveredX, hoveredY) {
    var _this = this;
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var percentage = Object.keys(options2.axes).some(function(axis3) {
      return options2.axes[axis3].percentage;
    });
    var stackedData = this.model.getStackedData({
      groups: this.configs.groups,
      percentage
    });
    var tooltipData = [];
    stackedData.forEach(function(groupData, groupDataIndex) {
      groupData.forEach(function(datum2, dataIndex) {
        var _a4;
        var group3 = datum2[groupMapsTo];
        var domainValue = datum2["data"]["sharedStackKey"];
        var rangeValue = datum2["data"][group3];
        var stackedRangeValue = datum2[1];
        var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum2);
        var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(datum2);
        if (rangeValue !== null && rangeValue !== void 0 && hoveredX === _this.services.cartesianScales.getDomainValue(domainValue) && hoveredY === _this.services.cartesianScales.getRangeValue(stackedRangeValue)) {
          if (percentage) {
            rangeValue = _this.model.getStackedData({
              groups: _this.configs.groups
            })[groupDataIndex][dataIndex]["data"][group3];
          }
          if (rangeValue !== null) {
            tooltipData.push((_a4 = {}, _a4[groupMapsTo] = group3, _a4[domainIdentifier] = domainValue, _a4[rangeIdentifier] = rangeValue, _a4));
          }
        }
      });
    });
    return this.model.getDisplayData(this.configs.groups).filter(function(datapoint) {
      var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datapoint);
      var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(datapoint);
      return tooltipData.find(function(tooltipDatapoint) {
        return tooltipDatapoint[groupMapsTo] == datapoint[groupMapsTo] && tooltipDatapoint[domainIdentifier] == datapoint[domainIdentifier] && tooltipDatapoint[rangeIdentifier] == datapoint[rangeIdentifier];
      }) !== void 0;
    });
  };
  return StackedScatter2;
}(Scatter2);

// node_modules/@carbon/charts/components/graphs/pie.js
var __extends35 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
function arcTween(a3, arcFunc) {
  var _this = this;
  var i = value_default(this._current, a3);
  return function(t) {
    _this._current = i(t);
    return arcFunc(_this._current);
  };
}
var Pie2 = function(_super) {
  __extends35(Pie3, _super);
  function Pie3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "pie";
    _this.renderType = RenderTypes.SVG;
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      var groupMapsTo = _this.getOptions().data.groupMapsTo;
      _this.parent.selectAll("path.slice").transition("legend-hover-bar").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-bar"
        });
      }).attr("opacity", function(d) {
        return d.data[groupMapsTo] !== hoveredElement.datum()["name"] ? 0.3 : 1;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("path.slice").transition("legend-mouseout-bar").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-bar"
        });
      }).attr("opacity", 1);
    };
    return _this;
  }
  Pie3.prototype.init = function() {
    var eventsFragment = this.services.events;
    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  Pie3.prototype.getInnerRadius = function() {
    return pie.innerRadius;
  };
  Pie3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var self2 = this;
    var svg = this.getComponentContainer();
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var valueMapsTo = options2.pie.valueMapsTo;
    var displayData = this.model.getDisplayData().filter(function(data) {
      return data[valueMapsTo] > 0;
    });
    var radius = this.computeRadius();
    this.arc = arc_default().innerRadius(this.getInnerRadius()).outerRadius(radius);
    this.hoverArc = arc_default().innerRadius(this.getInnerRadius()).outerRadius(radius + pie.hoverArc.outerRadiusOffset);
    var pieLayout = pie_default().value(function(d) {
      return d[valueMapsTo];
    }).sort(Tools.getProperty(options2, "pie", "sortFunction")).padAngle(pie.padAngle);
    var pieLayoutData = pieLayout(displayData);
    var slicesGroup = DOMUtils.appendOrSelect(svg, "g.slices").attr("role", Roles.GROUP).attr("data-name", "slices");
    var paths = slicesGroup.selectAll("path.slice").data(pieLayoutData, function(d) {
      return d.data[groupMapsTo];
    });
    paths.exit().attr("opacity", 0).remove();
    var enteringPaths = paths.enter().append("path").classed("slice", true).attr("opacity", 0);
    var allPaths = enteringPaths.merge(paths).attr("class", function(d) {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.FILL],
        dataGroupName: d.data[groupMapsTo],
        originalClassName: "slice"
      });
    }).style("fill", function(d) {
      return self2.model.getFillColor(d.data[groupMapsTo]);
    }).attr("d", this.arc);
    allPaths.transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "pie_slice_enter_update",
        animate
      });
    }).attr("opacity", 1).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-roledescription", "slice").attr("aria-label", function(d) {
      return d[valueMapsTo] + ", " + (Tools.convertValueToPercentage(d.data[valueMapsTo], displayData, valueMapsTo) + "%");
    }).attrTween("d", function(a3) {
      return arcTween.bind(this)(a3, self2.arc);
    });
    var renderLabels = options2.pie.labels.enabled;
    var labelData = renderLabels ? pieLayoutData.filter(function(x3) {
      return x3.data[valueMapsTo] > 0;
    }) : [];
    var labelsGroup = DOMUtils.appendOrSelect(svg, "g.labels").attr("role", Roles.GROUP).attr("data-name", "labels");
    var labels = labelsGroup.selectAll("text.pie-label").data(labelData, function(d) {
      return d.data[groupMapsTo];
    });
    labels.exit().attr("opacity", 0).remove();
    var enteringLabels = labels.enter().append("text").classed("pie-label", true);
    var calloutData = [];
    enteringLabels.merge(labels).style("text-anchor", "middle").text(function(d) {
      if (options2.pie.labels.formatter) {
        return options2.pie.labels.formatter(d);
      }
      return Tools.convertValueToPercentage(d.data[valueMapsTo], displayData, valueMapsTo) + "%";
    }).datum(function(d) {
      var marginedRadius = radius + 7;
      var theta = (d.endAngle - d.startAngle) / 2 + d.startAngle;
      var deg = theta / Math.PI * 180;
      var textLength = this.getComputedTextLength();
      d.textOffsetX = textLength / 2;
      d.textOffsetY = deg > 90 && deg < 270 ? 10 : 0;
      d.xPosition = (d.textOffsetX + marginedRadius) * Math.sin(theta);
      d.yPosition = (d.textOffsetY + marginedRadius) * -Math.cos(theta);
      return d;
    }).attr("transform", function(d, i) {
      var totalSlices = labelData.length;
      var sliceAngleDeg = (d.endAngle - d.startAngle) * (180 / Math.PI);
      if (i >= totalSlices - 2) {
        if (sliceAngleDeg < pie.callout.minSliceDegree) {
          var labelTranslateX = void 0, labelTranslateY = void 0;
          if (d.index === totalSlices - 1) {
            labelTranslateX = d.xPosition + pie.callout.offsetX + pie.callout.textMargin + d.textOffsetX;
            labelTranslateY = d.yPosition - pie.callout.offsetY;
            d.direction = CalloutDirections.RIGHT;
            calloutData.push(d);
          } else {
            labelTranslateX = d.xPosition - pie.callout.offsetX - d.textOffsetX - pie.callout.textMargin;
            labelTranslateY = d.yPosition - pie.callout.offsetY;
            d.direction = CalloutDirections.LEFT;
            calloutData.push(d);
          }
          return "translate(" + labelTranslateX + ", " + labelTranslateY + ")";
        }
      }
      return "translate(" + d.xPosition + ", " + d.yPosition + ")";
    });
    this.renderCallouts(calloutData);
    var optionName = Tools.getProperty(options2, "donut") ? "donut" : "pie";
    var alignment = Tools.getProperty(options2, optionName, "alignment");
    var width = DOMUtils.getSVGElementSize(this.getParent(), {
      useAttrs: true
    }).width;
    var xOffset = renderLabels ? pie.xOffset : 0;
    var yOffset = renderLabels ? pie.yOffset : 0;
    var pieTranslateX = radius + xOffset;
    if (alignment === Alignments.CENTER) {
      pieTranslateX = width / 2;
    } else if (alignment === Alignments.RIGHT) {
      pieTranslateX = width - radius - pie.xOffset;
    }
    var pieTranslateY = radius + yOffset;
    if (calloutData.length > 0) {
      pieTranslateY += pie.yOffsetCallout;
    }
    svg.attr("x", pieTranslateX + 7).attr("y", pieTranslateY);
    this.addEventListeners();
  };
  Pie3.prototype.renderCallouts = function(calloutData) {
    var svg = DOMUtils.appendOrSelect(this.getComponentContainer(), "g.callouts").attr("role", Roles.GROUP).attr("data-name", "callouts");
    var callouts = svg.selectAll("g.callout").data(calloutData);
    callouts.exit().remove();
    var enteringCallouts = callouts.enter().append("g").classed("callout", true).attr("role", Roles.GROUP).attr("aria-roledescription", "label callout");
    enteringCallouts.merge(callouts).datum(function(d) {
      var xPosition = d.xPosition, yPosition = d.yPosition, direction = d.direction;
      if (direction === CalloutDirections.RIGHT) {
        d.startPos = {
          x: xPosition,
          y: yPosition + d.textOffsetY
        };
        d.endPos = {
          x: xPosition + pie.callout.offsetX,
          y: yPosition - pie.callout.offsetY + d.textOffsetY
        };
        d.intersectPointX = d.endPos.x - pie.callout.horizontalLineLength;
      } else {
        d.startPos = {
          x: xPosition,
          y: yPosition + d.textOffsetY
        };
        d.endPos = {
          x: xPosition - pie.callout.offsetX,
          y: yPosition - pie.callout.offsetY + d.textOffsetY
        };
        d.intersectPointX = d.endPos.x + pie.callout.horizontalLineLength;
      }
      return d;
    });
    var enteringVerticalLines = enteringCallouts.append("line").classed("vertical-line", true);
    enteringVerticalLines.merge(svg.selectAll("line.vertical-line")).datum(function(d) {
      return select_default2(this.parentNode).datum();
    }).style("stroke-width", "1px").attr("x1", function(d) {
      return d.startPos.x;
    }).attr("y1", function(d) {
      return d.startPos.y;
    }).attr("x2", function(d) {
      return d.intersectPointX;
    }).attr("y2", function(d) {
      return d.endPos.y;
    });
    var enteringHorizontalLines = enteringCallouts.append("line").classed("horizontal-line", true);
    enteringHorizontalLines.merge(svg.selectAll("line.horizontal-line")).datum(function(d) {
      return select_default2(this.parentNode).datum();
    }).style("stroke-width", "1px").attr("x1", function(d) {
      return d.intersectPointX;
    }).attr("y1", function(d) {
      return d.endPos.y;
    }).attr("x2", function(d) {
      return d.endPos.x;
    }).attr("y2", function(d) {
      return d.endPos.y;
    });
  };
  Pie3.prototype.addEventListeners = function() {
    var self2 = this;
    this.parent.selectAll("path.slice").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", true).transition("pie_slice_mouseover").call(function(t) {
        return self2.services.transitions.setupTransition({
          transition: t,
          name: "pie_slice_mouseover"
        });
      }).attr("d", self2.hoverArc);
      self2.services.events.dispatchEvent(Events.Pie.SLICE_MOUSEOVER, {
        event,
        element: select_default2(this),
        datum: datum2
      });
      var groupMapsTo = self2.getOptions().data.groupMapsTo;
      var valueMapsTo = self2.getOptions().pie.valueMapsTo;
      self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event,
        hoveredElement,
        items: [
          {
            label: datum2.data[groupMapsTo],
            value: datum2.data[valueMapsTo]
          }
        ]
      });
    }).on("mousemove", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Pie.SLICE_MOUSEMOVE, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Pie.SLICE_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", false).transition("pie_slice_mouseout").call(function(t) {
        return self2.services.transitions.setupTransition({
          transition: t,
          name: "pie_slice_mouseout"
        });
      }).attr("d", self2.arc);
      self2.services.events.dispatchEvent(Events.Pie.SLICE_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        hoveredElement
      });
    });
  };
  Pie3.prototype.computeRadius = function() {
    var _a4 = DOMUtils.getSVGElementSize(this.parent, {
      useAttrs: true
    }), width = _a4.width, height = _a4.height;
    var options2 = this.getOptions();
    var radius = Math.min(width, height) / 2;
    var renderLabels = options2.pie.labels.enabled;
    return renderLabels ? radius + pie.radiusOffset : radius;
  };
  return Pie3;
}(Component);

// node_modules/@carbon/charts/components/graphs/gauge.js
var __extends36 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ARROW_UP_PATH_STRING = "4,10 8,6 12,10";
var ARROW_DOWN_PATH_STRING = "12,6 8,10 4,6";
var Gauge2 = function(_super) {
  __extends36(Gauge3, _super);
  function Gauge3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "gauge";
    _this.renderType = RenderTypes.SVG;
    return _this;
  }
  Gauge3.prototype.getValue = function() {
    var _a4, _b;
    var data = this.model.getData();
    var value2 = (_b = (_a4 = data.find(function(d) {
      return d.group === "value";
    })) === null || _a4 === void 0 ? void 0 : _a4.value, _b !== null && _b !== void 0 ? _b : null);
    return value2;
  };
  Gauge3.prototype.getValueRatio = function() {
    var value2 = Tools.clamp(this.getValue(), 0, 100);
    return value2 / 100;
  };
  Gauge3.prototype.getDelta = function() {
    var _a4, _b;
    var data = this.model.getData();
    var delta = (_b = (_a4 = data.find(function(d) {
      return d.group === "delta";
    })) === null || _a4 === void 0 ? void 0 : _a4.value, _b !== null && _b !== void 0 ? _b : null);
    return delta;
  };
  Gauge3.prototype.getArcRatio = function() {
    var options2 = this.getOptions();
    var type2 = Tools.getProperty(options2, "gauge", "type");
    var arcRatio = type2 === GaugeTypes.FULL ? 1 : 0.5;
    return arcRatio;
  };
  Gauge3.prototype.getArcSize = function() {
    return this.getArcRatio() * Math.PI * 2;
  };
  Gauge3.prototype.getStartAngle = function() {
    var arcSize = this.getArcSize();
    if (arcSize === 2 * Math.PI) {
      return 0;
    }
    return -arcSize / 2;
  };
  Gauge3.prototype.getArrow = function(delta) {
    var options2 = this.getOptions();
    var arrowDirection = Tools.getProperty(options2, "gauge", "deltaArrow", "direction");
    switch (arrowDirection) {
      case ArrowDirections.UP:
        return ARROW_UP_PATH_STRING;
      case ArrowDirections.DOWN:
        return ARROW_DOWN_PATH_STRING;
      default:
        return delta > 0 ? ARROW_UP_PATH_STRING : ARROW_DOWN_PATH_STRING;
    }
  };
  Gauge3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var svg = this.getComponentContainer().attr("width", "100%").attr("height", "100%");
    var options2 = this.getOptions();
    var value2 = this.getValue();
    var valueRatio = this.getValueRatio();
    var arcSize = this.getArcSize();
    var startAngle = this.getStartAngle();
    var rotationAngle = valueRatio * arcSize;
    var currentAngle = startAngle + rotationAngle;
    var endAngle = startAngle + arcSize;
    var radius = this.computeRadius();
    var innerRadius = this.getInnerRadius();
    this.backgroundArc = arc_default().innerRadius(innerRadius).outerRadius(radius).startAngle(currentAngle).endAngle(endAngle);
    this.arc = arc_default().innerRadius(innerRadius).outerRadius(radius).startAngle(startAngle).endAngle(currentAngle);
    DOMUtils.appendOrSelect(svg, "path.arc-background").attr("d", this.backgroundArc);
    var arcValue = svg.selectAll("path.arc-foreground").data([value2]);
    var arcEnter = arcValue.enter().append("path");
    arcEnter.merge(arcValue).attr("class", this.model.getColorClassName({
      classNameTypes: [ColorClassNameTypes.FILL],
      dataGroupName: "value",
      originalClassName: "arc-foreground"
    })).style("fill", function(d) {
      return Tools.getProperty(_this.getOptions(), "color", "scale", "value");
    }).attr("d", this.arc).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-roledescription", "value").attr("aria-label", function(d) {
      return d;
    });
    this.drawValueNumber();
    this.drawDelta();
    arcValue.exit().remove();
    var alignment = Tools.getProperty(options2, "gauge", "alignment");
    var width = DOMUtils.getSVGElementSize(this.getParent(), {
      useAttrs: true
    }).width;
    var gaugeTranslateX = radius;
    if (alignment === Alignments.CENTER) {
      gaugeTranslateX = width / 2;
    } else if (alignment === Alignments.RIGHT) {
      gaugeTranslateX = width - radius;
    }
    svg.attr("x", gaugeTranslateX).attr("y", radius);
    this.addEventListeners();
  };
  Gauge3.prototype.drawValueNumber = function() {
    var svg = this.getComponentContainer();
    var options2 = this.getOptions();
    var arcType = Tools.getProperty(options2, "gauge", "type");
    var value2 = this.getValue();
    var delta = this.getDelta();
    var radius = this.computeRadius();
    var valueFontSize = Tools.getProperty(options2, "gauge", "valueFontSize");
    var deltaFontSize = Tools.getProperty(options2, "gauge", "deltaFontSize");
    var numberSpacing = Tools.getProperty(options2, "gauge", "numberSpacing");
    var showPercentageSymbol = Tools.getProperty(options2, "gauge", "showPercentageSymbol");
    var numbersYPosition = 0;
    if (arcType === GaugeTypes.FULL && !delta) {
      numbersYPosition = deltaFontSize(radius);
    } else if (arcType === GaugeTypes.SEMI && delta) {
      numbersYPosition = -(deltaFontSize(radius) + numberSpacing);
    }
    var numbersGroup = DOMUtils.appendOrSelect(svg, "g.gauge-numbers").attr("transform", "translate(0, " + numbersYPosition + ")");
    var fontSize = valueFontSize(radius);
    var valueNumberGroup = DOMUtils.appendOrSelect(numbersGroup, "g.gauge-value-number");
    var numberFormatter = Tools.getProperty(options2, "gauge", "numberFormatter");
    var valueNumber = valueNumberGroup.selectAll("text.gauge-value-number").data([value2]);
    valueNumber.enter().append("text").attr("class", "gauge-value-number").merge(valueNumber).style("font-size", fontSize + "px").attr("text-anchor", "middle").text(function(d) {
      return numberFormatter(d);
    });
    var valueNumberWidth = DOMUtils.getSVGElementSize(DOMUtils.appendOrSelect(svg, "text.gauge-value-number"), { useBBox: true }).width;
    var symbolFontSize = fontSize / 2;
    var gaugeSymbol = showPercentageSymbol ? "%" : "";
    var symbol = DOMUtils.appendOrSelect(valueNumberGroup, "text.gauge-value-symbol").style("font-size", symbolFontSize + "px").attr("x", valueNumberWidth / 2).text(gaugeSymbol);
    var _a4 = DOMUtils.getSVGElementSize(symbol, { useBBox: true }), symbolWidth = _a4.width, symbolHeight = _a4.height;
    symbol.attr("y", "-" + symbolHeight / 2 + "px");
    valueNumberGroup.attr("transform", "translate(-" + symbolWidth / 2 + ", 0)");
  };
  Gauge3.prototype.drawDelta = function() {
    var self2 = this;
    var svg = this.getComponentContainer();
    var options2 = this.getOptions();
    var delta = this.getDelta();
    var radius = this.computeRadius();
    var deltaFontSize = delta ? Tools.getProperty(options2, "gauge", "deltaFontSize") : function() {
      return 0;
    };
    var numberFormatter = delta ? Tools.getProperty(options2, "gauge", "numberFormatter") : function() {
      return null;
    };
    var arrowSize = Tools.getProperty(options2, "gauge", "deltaArrow", "size");
    var numberSpacing = Tools.getProperty(options2, "gauge", "numberSpacing");
    var showPercentageSymbol = Tools.getProperty(options2, "gauge", "showPercentageSymbol");
    var numbersGroup = DOMUtils.appendOrSelect(svg, "g.gauge-numbers");
    var deltaGroup = DOMUtils.appendOrSelect(numbersGroup, "g.gauge-delta").attr("transform", "translate(0, " + (deltaFontSize(radius) + numberSpacing) + ")");
    var deltaNumber = DOMUtils.appendOrSelect(deltaGroup, "text.gauge-delta-number");
    var gaugeSymbol = showPercentageSymbol ? "%" : "";
    deltaNumber.data(delta === null ? [] : [delta]);
    deltaNumber.enter().append("text").classed("gauge-delta-number", true).merge(deltaNumber).attr("text-anchor", "middle").style("font-size", deltaFontSize(radius) + "px").text(function(d) {
      return "" + numberFormatter(d) + gaugeSymbol;
    });
    var deltaNumberWidth = DOMUtils.getSVGElementSize(DOMUtils.appendOrSelect(svg, ".gauge-delta-number"), { useBBox: true }).width;
    var arrowEnabled = Tools.getProperty(options2, "gauge", "deltaArrow", "enabled");
    var deltaArrow = deltaGroup.selectAll("svg.gauge-delta-arrow").data(delta !== null && arrowEnabled ? [delta] : []);
    deltaArrow.enter().append("svg").merge(deltaArrow).attr("class", "gauge-delta-arrow").attr("x", -arrowSize(radius) - deltaNumberWidth / 2).attr("y", -arrowSize(radius) / 2 - deltaFontSize(radius) * 0.35).attr("width", arrowSize(radius)).attr("height", arrowSize(radius)).attr("viewBox", "0 0 16 16").each(function() {
      var deltaArrowSelection = select_default2(this);
      DOMUtils.appendOrSelect(deltaArrowSelection, "rect.gauge-delta-arrow-backdrop").attr("width", "16").attr("height", "16").attr("fill", "none");
      var status = Tools.getProperty(options2, "gauge", "status");
      DOMUtils.appendOrSelect(deltaArrowSelection, "polygon.gauge-delta-arrow").attr("class", status !== null ? "gauge-delta-arrow status--" + status : "").attr("points", self2.getArrow(delta));
    });
    deltaArrow.exit().remove();
    deltaNumber.exit().remove();
  };
  Gauge3.prototype.getInnerRadius = function() {
    var radius = this.computeRadius();
    var arcWidth = Tools.getProperty(this.getOptions(), "gauge", "arcWidth");
    return radius - arcWidth;
  };
  Gauge3.prototype.addEventListeners = function() {
    var self2 = this;
    this.parent.selectAll("path.arc-foreground").on("mouseover", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEOVER, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mousemove", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEMOVE, {
        event,
        element: hoveredElement,
        datum: datum2
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Gauge.ARC_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
    });
  };
  Gauge3.prototype.computeRadius = function() {
    var options2 = this.getOptions();
    var arcType = Tools.getProperty(options2, "gauge", "type");
    var _a4 = DOMUtils.getSVGElementSize(this.parent, {
      useAttrs: true
    }), width = _a4.width, height = _a4.height;
    var radius = arcType === GaugeTypes.SEMI ? Math.min(width / 2, height) : Math.min(width / 2, height / 2);
    return radius;
  };
  return Gauge3;
}(Component);

// node_modules/@carbon/charts/components/graphs/donut.js
var __extends37 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Donut = function(_super) {
  __extends37(Donut2, _super);
  function Donut2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "donut";
    _this.renderType = RenderTypes.SVG;
    return _this;
  }
  Donut2.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    _super.prototype.render.call(this, animate);
    var self2 = this;
    if (this.model.isDataEmpty()) {
      this.getComponentContainer().select("g.center").remove();
      return;
    }
    var svg = DOMUtils.appendOrSelect(this.getComponentContainer(), "g.center");
    var options2 = this.getOptions();
    var radius = this.computeRadius();
    var donutTitle = Tools.getProperty(options2, "donut", "center", "label");
    DOMUtils.appendOrSelect(svg, "text.donut-figure").attr("text-anchor", "middle").style("dominant-baseline", function() {
      if (donutTitle === null || donutTitle === "") {
        return "central";
      }
      return "initial";
    }).style("font-size", function() {
      return options2.donut.center.numberFontSize(radius);
    }).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "donut-figure-enter-update",
        animate
      });
    }).tween("text", function() {
      return self2.centerNumberTween(select_default2(this));
    });
    if (donutTitle !== null && donutTitle !== "") {
      DOMUtils.appendOrSelect(svg, "text.donut-title").attr("text-anchor", "middle").style("font-size", function() {
        return options2.donut.center.titleFontSize(radius);
      }).attr("y", options2.donut.center.titleYPosition(radius)).text(donutTitle);
    }
  };
  Donut2.prototype.getInnerRadius = function() {
    var radius = this.computeRadius();
    return radius * (3 / 4);
  };
  Donut2.prototype.centerNumberTween = function(d3Ref) {
    var options2 = this.getOptions();
    var donutCenterFigure = Tools.getProperty(options2, "donut", "center", "number");
    if (donutCenterFigure === null) {
      donutCenterFigure = this.model.getDisplayData().reduce(function(accumulator, d) {
        return accumulator + d[options2.pie.valueMapsTo];
      }, 0);
    }
    var currentValue = parseInt(d3Ref.text().replace(/[, ]+/g, ""), 10) || 0;
    var interpolateFunction;
    if (currentValue % 1 === 0 && donutCenterFigure % 1 === 0) {
      interpolateFunction = round_default2;
    } else {
      interpolateFunction = number_default;
    }
    var i = interpolateFunction(currentValue, donutCenterFigure);
    return function(t) {
      var numberFormatter = options2.donut.center.numberFormatter;
      d3Ref.text(numberFormatter(i(t)));
    };
  };
  return Donut2;
}(Pie2);

// node_modules/@carbon/charts/components/graphs/skeleton.js
var __extends38 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Skeleton = function(_super) {
  __extends38(Skeleton2, _super);
  function Skeleton2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "skeleton";
    return _this;
  }
  Skeleton2.prototype.render = function() {
    var isDataLoading = Tools.getProperty(this.getOptions(), "data", "loading");
    if (isDataLoading) {
      this.renderSkeleton(isDataLoading);
    } else {
      this.removeSkeleton();
    }
  };
  Skeleton2.prototype.renderSkeleton = function(showShimmerEffect) {
    if (this.configs.skeleton === Skeletons.GRID) {
      this.renderGridSkeleton(showShimmerEffect);
    } else if (this.configs.skeleton === Skeletons.VERT_OR_HORIZ) {
      this.renderVertOrHorizSkeleton(showShimmerEffect);
    } else if (this.configs.skeleton === Skeletons.PIE) {
      this.renderPieSkeleton(showShimmerEffect);
    } else if (this.configs.skeleton === Skeletons.DONUT) {
      this.renderDonutSkeleton(showShimmerEffect);
    } else {
      throw new Error('"' + this.configs.skeleton + '" is not a valid Skeleton type.');
    }
  };
  Skeleton2.prototype.renderGridSkeleton = function(showShimmerEffect) {
    this.setScales();
    this.drawBackdrop(showShimmerEffect);
    this.drawXGrid(showShimmerEffect);
    this.drawYGrid(showShimmerEffect);
    if (showShimmerEffect) {
      this.setShimmerEffect("shimmer-lines");
    }
  };
  Skeleton2.prototype.renderVertOrHorizSkeleton = function(showShimmerEffect) {
    var orientation = this.services.cartesianScales.getOrientation();
    this.setScales();
    this.drawBackdrop(showShimmerEffect);
    if (orientation === CartesianOrientations.VERTICAL) {
      this.drawYGrid(showShimmerEffect);
    }
    if (orientation === CartesianOrientations.HORIZONTAL) {
      this.drawXGrid(showShimmerEffect);
    }
    this.setShimmerEffect("shimmer-lines");
  };
  Skeleton2.prototype.renderPieSkeleton = function(showShimmerEffect) {
    var outerRadius = this.computeOuterRadius();
    var innerRadius = 0;
    this.drawRing(outerRadius, innerRadius, showShimmerEffect);
    if (showShimmerEffect) {
      this.setShimmerEffect("shimmer-areas");
    }
  };
  Skeleton2.prototype.renderDonutSkeleton = function(showShimmerEffect) {
    var outerRadius = this.computeOuterRadius();
    var innerRadius = this.computeInnerRadius();
    this.drawRing(outerRadius, innerRadius, showShimmerEffect);
    if (showShimmerEffect) {
      this.setShimmerEffect("shimmer-areas");
    }
  };
  Skeleton2.prototype.setScales = function() {
    var xRange = this.services.cartesianScales.getMainXScale().range();
    var yRange = this.services.cartesianScales.getMainYScale().range();
    this.xScale = linear3().domain([0, 1]).range(xRange);
    this.yScale = linear3().domain([0, 1]).range(yRange);
  };
  Skeleton2.prototype.drawBackdrop = function(showShimmerEffect) {
    var svg = this.parent;
    var _a4 = DOMUtils.getSVGElementSize(svg, {
      useAttrs: true
    }), width = _a4.width, height = _a4.height;
    this.backdrop = DOMUtils.appendOrSelect(svg, "svg.chart-skeleton.DAII").attr("width", width).attr("height", height);
    var backdropRect = DOMUtils.appendOrSelect(this.backdrop, "rect.chart-skeleton-backdrop");
    backdropRect.attr("width", "100%").attr("height", "100%");
    var _b = this.xScale.range(), xScaleStart = _b[0], xScaleEnd = _b[1];
    var _c = this.yScale.range(), yScaleEnd = _c[0], yScaleStart = _c[1];
    this.backdrop.merge(backdropRect).attr("x", xScaleStart).attr("y", yScaleStart);
    backdropRect.classed("shimmer-effect-lines", showShimmerEffect).classed("empty-state-lines", !showShimmerEffect).style("stroke", showShimmerEffect ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")" : null);
  };
  Skeleton2.prototype.drawXGrid = function(showShimmerEffect) {
    var width = this.backdrop.attr("width");
    var ticksNumber = Tools.getProperty(this.getOptions(), "grid", "x", "numberOfTicks");
    var ticksValues = this.xScale.ticks(ticksNumber).map(function(d) {
      return d * width;
    });
    var xGridG = DOMUtils.appendOrSelect(this.backdrop, "g.x.skeleton");
    var update2 = xGridG.selectAll("line").data(ticksValues);
    update2.enter().append("line").merge(update2).attr("x1", function(d) {
      return d;
    }).attr("x2", function(d) {
      return d;
    }).attr("y1", 0).attr("y2", "100%");
    xGridG.selectAll("line").classed("shimmer-effect-lines", showShimmerEffect).classed("empty-state-lines", !showShimmerEffect).style("stroke", showShimmerEffect ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")" : null);
  };
  Skeleton2.prototype.drawYGrid = function(showShimmerEffect) {
    var height = this.backdrop.attr("height");
    var width = this.backdrop.attr("width");
    var ticksNumber = Tools.getProperty(this.getOptions(), "grid", "y", "numberOfTicks");
    var ticksValues = this.xScale.ticks(ticksNumber).map(function(d) {
      return d * height;
    });
    var yGridG = DOMUtils.appendOrSelect(this.backdrop, "g.y.skeleton");
    var update2 = yGridG.selectAll("line").data(ticksValues);
    update2.enter().append("line").merge(update2).attr("x1", 0).attr("x2", width).attr("y1", function(d) {
      return d;
    }).attr("y2", function(d) {
      return d;
    });
    yGridG.selectAll("line").classed("shimmer-effect-lines", showShimmerEffect).classed("empty-state-lines", !showShimmerEffect).style("stroke", showShimmerEffect ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")" : null);
  };
  Skeleton2.prototype.drawRing = function(outerRadius, innerRadius, shimmer) {
    if (shimmer === void 0) {
      shimmer = true;
    }
    var svg = this.parent;
    var _a4 = DOMUtils.getSVGElementSize(svg, {
      useAttrs: true
    }), width = _a4.width, height = _a4.height;
    var container = DOMUtils.appendOrSelect(svg, "svg.chart-skeleton").attr("width", width).attr("height", height);
    var optionName = innerRadius === 0 ? "pie" : "donut";
    var alignment = Tools.getProperty(this.getOptions(), optionName, "alignment");
    DOMUtils.appendOrSelect(container, "rect.chart-skeleton-area-container").attr("width", width).attr("height", height).attr("fill", "none");
    var arcPathGenerator = arc_default().innerRadius(innerRadius).outerRadius(outerRadius).startAngle(0).endAngle(Math.PI * 2);
    var tcx = outerRadius + Math.abs(pie.radiusOffset);
    var tcy = outerRadius + (Math.min(width, height) - outerRadius * 2) / 2;
    var skeletonAreaShape = DOMUtils.appendOrSelect(container, "path").attr("class", "skeleton-area-shape").attr("transform", "translate(" + tcx + ", " + tcy + ")").attr("d", arcPathGenerator).classed("shimmer-effect-areas", shimmer).classed("empty-state-areas", !shimmer).style("fill", shimmer ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-areas") + ")" : null);
    var translateX2 = outerRadius + pie.xOffset;
    if (alignment === Alignments.CENTER) {
      translateX2 = width / 2;
    } else if (alignment === Alignments.RIGHT) {
      translateX2 = width - outerRadius - pie.xOffset;
    }
    var translateY2 = outerRadius + pie.yOffset;
    skeletonAreaShape.attr("transform", "translate(" + translateX2 + ", " + translateY2 + ")");
  };
  Skeleton2.prototype.computeOuterRadius = function() {
    var _a4 = DOMUtils.getSVGElementSize(this.parent, {
      useAttrs: true
    }), width = _a4.width, height = _a4.height;
    var radius = Math.min(width, height) / 2;
    return radius + pie.radiusOffset;
  };
  Skeleton2.prototype.computeInnerRadius = function() {
    return this.computeOuterRadius() * (3 / 4);
  };
  Skeleton2.prototype.setShimmerEffect = function(gradientId) {
    var animationDuration = 2e3;
    var delay2 = 1e3;
    var shimmerWidth = 0.2;
    var stopBgShimmerClass = "stop-bg-shimmer";
    var stopShimmerClass = "stop-shimmer";
    var container = this.parent.select(".chart-skeleton");
    var width = DOMUtils.getSVGElementSize(this.parent, {
      useAttrs: true
    }).width;
    var startPoint = 0;
    var endPoint = width;
    var defs = DOMUtils.appendOrSelect(container, "defs").lower();
    var linearGradient = DOMUtils.appendOrSelect(defs, "linearGradient").attr("id", this.services.domUtils.generateElementIDString(gradientId)).attr("class", gradientId).attr("x1", startPoint - 3 * shimmerWidth * width).attr("x2", endPoint).attr("y1", 0).attr("y2", 0).attr("gradientUnits", "userSpaceOnUse").attr("gradientTransform", "translate(0, 0)");
    var stops = '\n			<stop class="' + stopBgShimmerClass + '" offset="' + startPoint + '"></stop>\n			<stop class="' + stopShimmerClass + '" offset="' + (startPoint + shimmerWidth) + '"></stop>\n			<stop class="' + stopBgShimmerClass + '" offset="' + (startPoint + 2 * shimmerWidth) + '"></stop>\n		';
    linearGradient.html(stops);
    repeat2();
    function repeat2() {
      linearGradient.attr("gradientTransform", "translate(" + (startPoint - 3 * shimmerWidth * width) + ", 0)").transition().duration(animationDuration).delay(delay2).ease(linear).attr("gradientTransform", "translate(" + (endPoint + 3 * shimmerWidth * width) + ", 0)").on("end", repeat2);
    }
  };
  Skeleton2.prototype.removeSkeleton = function() {
    var container = this.parent.select(".chart-skeleton");
    container.remove();
  };
  return Skeleton2;
}(Component);

// node_modules/@carbon/charts/components/graphs/skeleton-lines.js
var __extends39 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var SkeletonLines = function(_super) {
  __extends39(SkeletonLines2, _super);
  function SkeletonLines2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "skeleton-lines";
    return _this;
  }
  SkeletonLines2.prototype.render = function() {
    var isDataLoading = Tools.getProperty(this.getOptions(), "data", "loading");
    var isSparkline = !Tools.getProperty(this.getOptions(), "grid", "x", "enabled") && !Tools.getProperty(this.getOptions(), "grid", "y", "enabled") && !Tools.getProperty(this.getOptions(), "axes", "bottom", "visible") && !Tools.getProperty(this.getOptions(), "axes", "left", "visible");
    if (isDataLoading && !isSparkline) {
      _super.prototype.renderGridSkeleton.call(this, isDataLoading);
    } else if (isDataLoading && isSparkline) {
      this.renderSparklineSkeleton(isDataLoading);
    } else {
      this.removeSkeleton();
    }
  };
  SkeletonLines2.prototype.renderSparklineSkeleton = function(showShimmerEffect) {
    this.setScales();
    this.drawBackdrop(showShimmerEffect);
    this.drawSparkline(showShimmerEffect);
    this.updateBackdropStyle();
    if (showShimmerEffect) {
      this.setShimmerEffect("shimmer-lines");
    }
  };
  SkeletonLines2.prototype.drawSparkline = function(showShimmerEffect) {
    var width = this.backdrop.attr("width");
    var ticksValues = [100];
    var sparklineSkeleton = DOMUtils.appendOrSelect(this.backdrop, "g.y.skeleton");
    var update2 = sparklineSkeleton.selectAll("line").data(ticksValues);
    update2.enter().append("line").merge(update2).attr("x1", 0).attr("x2", width).attr("y1", function(d) {
      return d;
    }).attr("y2", function(d) {
      return d;
    });
    sparklineSkeleton.selectAll("line").classed("shimmer-effect-lines", showShimmerEffect).classed("empty-state-lines", !showShimmerEffect).style("stroke", showShimmerEffect ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")" : null);
  };
  SkeletonLines2.prototype.updateBackdropStyle = function() {
    var svg = this.parent;
    this.backdrop = DOMUtils.appendOrSelect(svg, "svg.chart-skeleton.DAII");
    var backdropRect = DOMUtils.appendOrSelect(this.backdrop, "rect.chart-skeleton-backdrop");
    backdropRect.classed("shimmer-effect-lines", false).classed("shimmer-effect-sparkline", true).style("stroke", null);
  };
  return SkeletonLines2;
}(Skeleton);

// node_modules/d3-hierarchy/src/cluster.js
function defaultSeparation(a3, b) {
  return a3.parent === b.parent ? 1 : 2;
}
function meanX(children2) {
  return children2.reduce(meanXReduce, 0) / children2.length;
}
function meanXReduce(x3, c) {
  return x3 + c.x;
}
function maxY(children2) {
  return 1 + children2.reduce(maxYReduce, 0);
}
function maxYReduce(y3, c) {
  return Math.max(y3, c.y);
}
function leafLeft(node) {
  var children2;
  while (children2 = node.children)
    node = children2[0];
  return node;
}
function leafRight(node) {
  var children2;
  while (children2 = node.children)
    node = children2[children2.length - 1];
  return node;
}
function cluster_default() {
  var separation = defaultSeparation, dx = 1, dy = 1, nodeSize = false;
  function cluster(root3) {
    var previousNode, x3 = 0;
    root3.eachAfter(function(node) {
      var children2 = node.children;
      if (children2) {
        node.x = meanX(children2);
        node.y = maxY(children2);
      } else {
        node.x = previousNode ? x3 += separation(node, previousNode) : 0;
        node.y = 0;
        previousNode = node;
      }
    });
    var left3 = leafLeft(root3), right3 = leafRight(root3), x0 = left3.x - separation(left3, right3) / 2, x1 = right3.x + separation(right3, left3) / 2;
    return root3.eachAfter(nodeSize ? function(node) {
      node.x = (node.x - root3.x) * dx;
      node.y = (root3.y - node.y) * dy;
    } : function(node) {
      node.x = (node.x - x0) / (x1 - x0) * dx;
      node.y = (1 - (root3.y ? node.y / root3.y : 1)) * dy;
    });
  }
  cluster.separation = function(x3) {
    return arguments.length ? (separation = x3, cluster) : separation;
  };
  cluster.size = function(x3) {
    return arguments.length ? (nodeSize = false, dx = +x3[0], dy = +x3[1], cluster) : nodeSize ? null : [dx, dy];
  };
  cluster.nodeSize = function(x3) {
    return arguments.length ? (nodeSize = true, dx = +x3[0], dy = +x3[1], cluster) : nodeSize ? [dx, dy] : null;
  };
  return cluster;
}

// node_modules/d3-hierarchy/src/hierarchy/count.js
function count2(node) {
  var sum6 = 0, children2 = node.children, i = children2 && children2.length;
  if (!i)
    sum6 = 1;
  else
    while (--i >= 0)
      sum6 += children2[i].value;
  node.value = sum6;
}
function count_default() {
  return this.eachAfter(count2);
}

// node_modules/d3-hierarchy/src/hierarchy/each.js
function each_default2(callback, that) {
  let index4 = -1;
  for (const node of this) {
    callback.call(that, node, ++index4, this);
  }
  return this;
}

// node_modules/d3-hierarchy/src/hierarchy/eachBefore.js
function eachBefore_default(callback, that) {
  var node = this, nodes = [node], children2, i, index4 = -1;
  while (node = nodes.pop()) {
    callback.call(that, node, ++index4, this);
    if (children2 = node.children) {
      for (i = children2.length - 1; i >= 0; --i) {
        nodes.push(children2[i]);
      }
    }
  }
  return this;
}

// node_modules/d3-hierarchy/src/hierarchy/eachAfter.js
function eachAfter_default(callback, that) {
  var node = this, nodes = [node], next = [], children2, i, n, index4 = -1;
  while (node = nodes.pop()) {
    next.push(node);
    if (children2 = node.children) {
      for (i = 0, n = children2.length; i < n; ++i) {
        nodes.push(children2[i]);
      }
    }
  }
  while (node = next.pop()) {
    callback.call(that, node, ++index4, this);
  }
  return this;
}

// node_modules/d3-hierarchy/src/hierarchy/find.js
function find_default2(callback, that) {
  let index4 = -1;
  for (const node of this) {
    if (callback.call(that, node, ++index4, this)) {
      return node;
    }
  }
}

// node_modules/d3-hierarchy/src/hierarchy/sum.js
function sum_default2(value2) {
  return this.eachAfter(function(node) {
    var sum6 = +value2(node.data) || 0, children2 = node.children, i = children2 && children2.length;
    while (--i >= 0)
      sum6 += children2[i].value;
    node.value = sum6;
  });
}

// node_modules/d3-hierarchy/src/hierarchy/sort.js
function sort_default2(compare) {
  return this.eachBefore(function(node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
}

// node_modules/d3-hierarchy/src/hierarchy/path.js
function path_default2(end) {
  var start2 = this, ancestor = leastCommonAncestor(start2, end), nodes = [start2];
  while (start2 !== ancestor) {
    start2 = start2.parent;
    nodes.push(start2);
  }
  var k3 = nodes.length;
  while (end !== ancestor) {
    nodes.splice(k3, 0, end);
    end = end.parent;
  }
  return nodes;
}
function leastCommonAncestor(a3, b) {
  if (a3 === b)
    return a3;
  var aNodes = a3.ancestors(), bNodes = b.ancestors(), c = null;
  a3 = aNodes.pop();
  b = bNodes.pop();
  while (a3 === b) {
    c = a3;
    a3 = aNodes.pop();
    b = bNodes.pop();
  }
  return c;
}

// node_modules/d3-hierarchy/src/hierarchy/ancestors.js
function ancestors_default() {
  var node = this, nodes = [node];
  while (node = node.parent) {
    nodes.push(node);
  }
  return nodes;
}

// node_modules/d3-hierarchy/src/hierarchy/descendants.js
function descendants_default() {
  return Array.from(this);
}

// node_modules/d3-hierarchy/src/hierarchy/leaves.js
function leaves_default() {
  var leaves = [];
  this.eachBefore(function(node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
}

// node_modules/d3-hierarchy/src/hierarchy/links.js
function links_default() {
  var root3 = this, links = [];
  root3.each(function(node) {
    if (node !== root3) {
      links.push({ source: node.parent, target: node });
    }
  });
  return links;
}

// node_modules/d3-hierarchy/src/hierarchy/iterator.js
function* iterator_default2() {
  var node = this, current, next = [node], children2, i, n;
  do {
    current = next.reverse(), next = [];
    while (node = current.pop()) {
      yield node;
      if (children2 = node.children) {
        for (i = 0, n = children2.length; i < n; ++i) {
          next.push(children2[i]);
        }
      }
    }
  } while (next.length);
}

// node_modules/d3-hierarchy/src/hierarchy/index.js
function hierarchy(data, children2) {
  if (data instanceof Map) {
    data = [void 0, data];
    if (children2 === void 0)
      children2 = mapChildren;
  } else if (children2 === void 0) {
    children2 = objectChildren;
  }
  var root3 = new Node2(data), node, nodes = [root3], child, childs, i, n;
  while (node = nodes.pop()) {
    if ((childs = children2(node.data)) && (n = (childs = Array.from(childs)).length)) {
      node.children = childs;
      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = childs[i] = new Node2(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }
  return root3.eachBefore(computeHeight);
}
function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}
function objectChildren(d) {
  return d.children;
}
function mapChildren(d) {
  return Array.isArray(d) ? d[1] : null;
}
function copyData(node) {
  if (node.data.value !== void 0)
    node.value = node.data.value;
  node.data = node.data.data;
}
function computeHeight(node) {
  var height = 0;
  do
    node.height = height;
  while ((node = node.parent) && node.height < ++height);
}
function Node2(data) {
  this.data = data;
  this.depth = this.height = 0;
  this.parent = null;
}
Node2.prototype = hierarchy.prototype = {
  constructor: Node2,
  count: count_default,
  each: each_default2,
  eachAfter: eachAfter_default,
  eachBefore: eachBefore_default,
  find: find_default2,
  sum: sum_default2,
  sort: sort_default2,
  path: path_default2,
  ancestors: ancestors_default,
  descendants: descendants_default,
  leaves: leaves_default,
  links: links_default,
  copy: node_copy,
  [Symbol.iterator]: iterator_default2
};

// node_modules/d3-hierarchy/src/array.js
function array_default3(x3) {
  return typeof x3 === "object" && "length" in x3 ? x3 : Array.from(x3);
}
function shuffle2(array4) {
  var m = array4.length, t, i;
  while (m) {
    i = Math.random() * m-- | 0;
    t = array4[m];
    array4[m] = array4[i];
    array4[i] = t;
  }
  return array4;
}

// node_modules/d3-hierarchy/src/pack/enclose.js
function enclose_default(circles) {
  var i = 0, n = (circles = shuffle2(Array.from(circles))).length, B2 = [], p, e;
  while (i < n) {
    p = circles[i];
    if (e && enclosesWeak(e, p))
      ++i;
    else
      e = encloseBasis(B2 = extendBasis(B2, p)), i = 0;
  }
  return e;
}
function extendBasis(B2, p) {
  var i, j;
  if (enclosesWeakAll(p, B2))
    return [p];
  for (i = 0; i < B2.length; ++i) {
    if (enclosesNot(p, B2[i]) && enclosesWeakAll(encloseBasis2(B2[i], p), B2)) {
      return [B2[i], p];
    }
  }
  for (i = 0; i < B2.length - 1; ++i) {
    for (j = i + 1; j < B2.length; ++j) {
      if (enclosesNot(encloseBasis2(B2[i], B2[j]), p) && enclosesNot(encloseBasis2(B2[i], p), B2[j]) && enclosesNot(encloseBasis2(B2[j], p), B2[i]) && enclosesWeakAll(encloseBasis3(B2[i], B2[j], p), B2)) {
        return [B2[i], B2[j], p];
      }
    }
  }
  throw new Error();
}
function enclosesNot(a3, b) {
  var dr = a3.r - b.r, dx = b.x - a3.x, dy = b.y - a3.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}
function enclosesWeak(a3, b) {
  var dr = a3.r - b.r + Math.max(a3.r, b.r, 1) * 1e-9, dx = b.x - a3.x, dy = b.y - a3.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}
function enclosesWeakAll(a3, B2) {
  for (var i = 0; i < B2.length; ++i) {
    if (!enclosesWeak(a3, B2[i])) {
      return false;
    }
  }
  return true;
}
function encloseBasis(B2) {
  switch (B2.length) {
    case 1:
      return encloseBasis1(B2[0]);
    case 2:
      return encloseBasis2(B2[0], B2[1]);
    case 3:
      return encloseBasis3(B2[0], B2[1], B2[2]);
  }
}
function encloseBasis1(a3) {
  return {
    x: a3.x,
    y: a3.y,
    r: a3.r
  };
}
function encloseBasis2(a3, b) {
  var x1 = a3.x, y1 = a3.y, r1 = a3.r, x22 = b.x, y22 = b.y, r2 = b.r, x21 = x22 - x1, y21 = y22 - y1, r21 = r2 - r1, l = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x1 + x22 + x21 / l * r21) / 2,
    y: (y1 + y22 + y21 / l * r21) / 2,
    r: (l + r1 + r2) / 2
  };
}
function encloseBasis3(a3, b, c) {
  var x1 = a3.x, y1 = a3.y, r1 = a3.r, x22 = b.x, y22 = b.y, r2 = b.r, x3 = c.x, y3 = c.y, r3 = c.r, a22 = x1 - x22, a32 = x1 - x3, b22 = y1 - y22, b32 = y1 - y3, c2 = r2 - r1, c3 = r3 - r1, d1 = x1 * x1 + y1 * y1 - r1 * r1, d2 = d1 - x22 * x22 - y22 * y22 + r2 * r2, d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3, ab = a32 * b22 - a22 * b32, xa = (b22 * d3 - b32 * d2) / (ab * 2) - x1, xb = (b32 * c2 - b22 * c3) / ab, ya = (a32 * d2 - a22 * d3) / (ab * 2) - y1, yb = (a22 * c3 - a32 * c2) / ab, A2 = xb * xb + yb * yb - 1, B2 = 2 * (r1 + xa * xb + ya * yb), C2 = xa * xa + ya * ya - r1 * r1, r = -(A2 ? (B2 + Math.sqrt(B2 * B2 - 4 * A2 * C2)) / (2 * A2) : C2 / B2);
  return {
    x: x1 + xa + xb * r,
    y: y1 + ya + yb * r,
    r
  };
}

// node_modules/d3-hierarchy/src/pack/siblings.js
function place(b, a3, c) {
  var dx = b.x - a3.x, x3, a22, dy = b.y - a3.y, y3, b22, d2 = dx * dx + dy * dy;
  if (d2) {
    a22 = a3.r + c.r, a22 *= a22;
    b22 = b.r + c.r, b22 *= b22;
    if (a22 > b22) {
      x3 = (d2 + b22 - a22) / (2 * d2);
      y3 = Math.sqrt(Math.max(0, b22 / d2 - x3 * x3));
      c.x = b.x - x3 * dx - y3 * dy;
      c.y = b.y - x3 * dy + y3 * dx;
    } else {
      x3 = (d2 + a22 - b22) / (2 * d2);
      y3 = Math.sqrt(Math.max(0, a22 / d2 - x3 * x3));
      c.x = a3.x + x3 * dx - y3 * dy;
      c.y = a3.y + x3 * dy + y3 * dx;
    }
  } else {
    c.x = a3.x + c.r;
    c.y = a3.y;
  }
}
function intersects(a3, b) {
  var dr = a3.r + b.r - 1e-6, dx = b.x - a3.x, dy = b.y - a3.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}
function score(node) {
  var a3 = node._, b = node.next._, ab = a3.r + b.r, dx = (a3.x * b.r + b.x * a3.r) / ab, dy = (a3.y * b.r + b.y * a3.r) / ab;
  return dx * dx + dy * dy;
}
function Node3(circle) {
  this._ = circle;
  this.next = null;
  this.previous = null;
}
function packEnclose(circles) {
  if (!(n = (circles = array_default3(circles)).length))
    return 0;
  var a3, b, c, n, aa, ca, i, j, k3, sj, sk;
  a3 = circles[0], a3.x = 0, a3.y = 0;
  if (!(n > 1))
    return a3.r;
  b = circles[1], a3.x = -b.r, b.x = a3.r, b.y = 0;
  if (!(n > 2))
    return a3.r + b.r;
  place(b, a3, c = circles[2]);
  a3 = new Node3(a3), b = new Node3(b), c = new Node3(c);
  a3.next = c.previous = b;
  b.next = a3.previous = c;
  c.next = b.previous = a3;
  pack:
    for (i = 3; i < n; ++i) {
      place(a3._, b._, c = circles[i]), c = new Node3(c);
      j = b.next, k3 = a3.previous, sj = b._.r, sk = a3._.r;
      do {
        if (sj <= sk) {
          if (intersects(j._, c._)) {
            b = j, a3.next = b, b.previous = a3, --i;
            continue pack;
          }
          sj += j._.r, j = j.next;
        } else {
          if (intersects(k3._, c._)) {
            a3 = k3, a3.next = b, b.previous = a3, --i;
            continue pack;
          }
          sk += k3._.r, k3 = k3.previous;
        }
      } while (j !== k3.next);
      c.previous = a3, c.next = b, a3.next = b.previous = b = c;
      aa = score(a3);
      while ((c = c.next) !== b) {
        if ((ca = score(c)) < aa) {
          a3 = c, aa = ca;
        }
      }
      b = a3.next;
    }
  a3 = [b._], c = b;
  while ((c = c.next) !== b)
    a3.push(c._);
  c = enclose_default(a3);
  for (i = 0; i < n; ++i)
    a3 = circles[i], a3.x -= c.x, a3.y -= c.y;
  return c.r;
}

// node_modules/d3-hierarchy/src/accessors.js
function optional(f) {
  return f == null ? null : required(f);
}
function required(f) {
  if (typeof f !== "function")
    throw new Error();
  return f;
}

// node_modules/d3-hierarchy/src/constant.js
function constantZero() {
  return 0;
}
function constant_default5(x3) {
  return function() {
    return x3;
  };
}

// node_modules/d3-hierarchy/src/pack/index.js
function defaultRadius(d) {
  return Math.sqrt(d.value);
}
function pack_default() {
  var radius = null, dx = 1, dy = 1, padding = constantZero;
  function pack(root3) {
    root3.x = dx / 2, root3.y = dy / 2;
    if (radius) {
      root3.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));
    } else {
      root3.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(constantZero, 1)).eachAfter(packChildren(padding, root3.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root3.r)));
    }
    return root3;
  }
  pack.radius = function(x3) {
    return arguments.length ? (radius = optional(x3), pack) : radius;
  };
  pack.size = function(x3) {
    return arguments.length ? (dx = +x3[0], dy = +x3[1], pack) : [dx, dy];
  };
  pack.padding = function(x3) {
    return arguments.length ? (padding = typeof x3 === "function" ? x3 : constant_default5(+x3), pack) : padding;
  };
  return pack;
}
function radiusLeaf(radius) {
  return function(node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}
function packChildren(padding, k3) {
  return function(node) {
    if (children2 = node.children) {
      var children2, i, n = children2.length, r = padding(node) * k3 || 0, e;
      if (r)
        for (i = 0; i < n; ++i)
          children2[i].r += r;
      e = packEnclose(children2);
      if (r)
        for (i = 0; i < n; ++i)
          children2[i].r -= r;
      node.r = e + r;
    }
  };
}
function translateChild(k3) {
  return function(node) {
    var parent2 = node.parent;
    node.r *= k3;
    if (parent2) {
      node.x = parent2.x + k3 * node.x;
      node.y = parent2.y + k3 * node.y;
    }
  };
}

// node_modules/d3-hierarchy/src/treemap/round.js
function round_default3(node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
}

// node_modules/d3-hierarchy/src/treemap/dice.js
function dice_default(parent2, x0, y0, x1, y1) {
  var nodes = parent2.children, node, i = -1, n = nodes.length, k3 = parent2.value && (x1 - x0) / parent2.value;
  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k3;
  }
}

// node_modules/d3-hierarchy/src/tree.js
function defaultSeparation2(a3, b) {
  return a3.parent === b.parent ? 1 : 2;
}
function nextLeft(v) {
  var children2 = v.children;
  return children2 ? children2[0] : v.t;
}
function nextRight(v) {
  var children2 = v.children;
  return children2 ? children2[children2.length - 1] : v.t;
}
function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
}
function executeShifts(v) {
  var shift = 0, change = 0, children2 = v.children, i = children2.length, w;
  while (--i >= 0) {
    w = children2[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
}
function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}
function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null;
  this.a = this;
  this.z = 0;
  this.m = 0;
  this.c = 0;
  this.s = 0;
  this.t = null;
  this.i = i;
}
TreeNode.prototype = Object.create(Node2.prototype);
function treeRoot(root3) {
  var tree = new TreeNode(root3, 0), node, nodes = [tree], child, children2, i, n;
  while (node = nodes.pop()) {
    if (children2 = node._.children) {
      node.children = new Array(n = children2.length);
      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children2[i], i));
        child.parent = node;
      }
    }
  }
  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
}
function tree_default() {
  var separation = defaultSeparation2, dx = 1, dy = 1, nodeSize = null;
  function tree(root3) {
    var t = treeRoot(root3);
    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk);
    if (nodeSize)
      root3.eachBefore(sizeNode);
    else {
      var left3 = root3, right3 = root3, bottom2 = root3;
      root3.eachBefore(function(node) {
        if (node.x < left3.x)
          left3 = node;
        if (node.x > right3.x)
          right3 = node;
        if (node.depth > bottom2.depth)
          bottom2 = node;
      });
      var s3 = left3 === right3 ? 1 : separation(left3, right3) / 2, tx = s3 - left3.x, kx3 = dx / (right3.x + s3 + tx), ky3 = dy / (bottom2.depth || 1);
      root3.eachBefore(function(node) {
        node.x = (node.x + tx) * kx3;
        node.y = node.depth * ky3;
      });
    }
    return root3;
  }
  function firstWalk(v) {
    var children2 = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;
    if (children2) {
      executeShifts(v);
      var midpoint = (children2[0].z + children2[children2.length - 1].z) / 2;
      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }
    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  }
  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  }
  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }
        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }
      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }
      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }
    return ancestor;
  }
  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }
  tree.separation = function(x3) {
    return arguments.length ? (separation = x3, tree) : separation;
  };
  tree.size = function(x3) {
    return arguments.length ? (nodeSize = false, dx = +x3[0], dy = +x3[1], tree) : nodeSize ? null : [dx, dy];
  };
  tree.nodeSize = function(x3) {
    return arguments.length ? (nodeSize = true, dx = +x3[0], dy = +x3[1], tree) : nodeSize ? [dx, dy] : null;
  };
  return tree;
}

// node_modules/d3-hierarchy/src/treemap/slice.js
function slice_default2(parent2, x0, y0, x1, y1) {
  var nodes = parent2.children, node, i = -1, n = nodes.length, k3 = parent2.value && (y1 - y0) / parent2.value;
  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k3;
  }
}

// node_modules/d3-hierarchy/src/treemap/squarify.js
var phi = (1 + Math.sqrt(5)) / 2;
function squarifyRatio(ratio, parent2, x0, y0, x1, y1) {
  var rows = [], nodes = parent2.children, row, nodeValue, i0 = 0, i1 = 0, n = nodes.length, dx, dy, value2 = parent2.value, sumValue, minValue, maxValue, newRatio, minRatio, alpha, beta;
  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0;
    do
      sumValue = nodes[i1++].value;
    while (!sumValue && i1 < n);
    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value2 * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue);
    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue)
        minValue = nodeValue;
      if (nodeValue > maxValue)
        maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);
      if (newRatio > minRatio) {
        sumValue -= nodeValue;
        break;
      }
      minRatio = newRatio;
    }
    rows.push(row = { value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1) });
    if (row.dice)
      dice_default(row, x0, y0, x1, value2 ? y0 += dy * sumValue / value2 : y1);
    else
      slice_default2(row, x0, y0, value2 ? x0 += dx * sumValue / value2 : x1, y1);
    value2 -= sumValue, i0 = i1;
  }
  return rows;
}
var squarify_default = function custom17(ratio) {
  function squarify(parent2, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent2, x0, y0, x1, y1);
  }
  squarify.ratio = function(x3) {
    return custom17((x3 = +x3) > 1 ? x3 : 1);
  };
  return squarify;
}(phi);

// node_modules/d3-hierarchy/src/treemap/index.js
function treemap_default() {
  var tile = squarify_default, round2 = false, dx = 1, dy = 1, paddingStack = [0], paddingInner = constantZero, paddingTop = constantZero, paddingRight = constantZero, paddingBottom = constantZero, paddingLeft = constantZero;
  function treemap(root3) {
    root3.x0 = root3.y0 = 0;
    root3.x1 = dx;
    root3.y1 = dy;
    root3.eachBefore(positionNode);
    paddingStack = [0];
    if (round2)
      root3.eachBefore(round_default3);
    return root3;
  }
  function positionNode(node) {
    var p = paddingStack[node.depth], x0 = node.x0 + p, y0 = node.y0 + p, x1 = node.x1 - p, y1 = node.y1 - p;
    if (x1 < x0)
      x0 = x1 = (x0 + x1) / 2;
    if (y1 < y0)
      y0 = y1 = (y0 + y1) / 2;
    node.x0 = x0;
    node.y0 = y0;
    node.x1 = x1;
    node.y1 = y1;
    if (node.children) {
      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x0 += paddingLeft(node) - p;
      y0 += paddingTop(node) - p;
      x1 -= paddingRight(node) - p;
      y1 -= paddingBottom(node) - p;
      if (x1 < x0)
        x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0)
        y0 = y1 = (y0 + y1) / 2;
      tile(node, x0, y0, x1, y1);
    }
  }
  treemap.round = function(x3) {
    return arguments.length ? (round2 = !!x3, treemap) : round2;
  };
  treemap.size = function(x3) {
    return arguments.length ? (dx = +x3[0], dy = +x3[1], treemap) : [dx, dy];
  };
  treemap.tile = function(x3) {
    return arguments.length ? (tile = required(x3), treemap) : tile;
  };
  treemap.padding = function(x3) {
    return arguments.length ? treemap.paddingInner(x3).paddingOuter(x3) : treemap.paddingInner();
  };
  treemap.paddingInner = function(x3) {
    return arguments.length ? (paddingInner = typeof x3 === "function" ? x3 : constant_default5(+x3), treemap) : paddingInner;
  };
  treemap.paddingOuter = function(x3) {
    return arguments.length ? treemap.paddingTop(x3).paddingRight(x3).paddingBottom(x3).paddingLeft(x3) : treemap.paddingTop();
  };
  treemap.paddingTop = function(x3) {
    return arguments.length ? (paddingTop = typeof x3 === "function" ? x3 : constant_default5(+x3), treemap) : paddingTop;
  };
  treemap.paddingRight = function(x3) {
    return arguments.length ? (paddingRight = typeof x3 === "function" ? x3 : constant_default5(+x3), treemap) : paddingRight;
  };
  treemap.paddingBottom = function(x3) {
    return arguments.length ? (paddingBottom = typeof x3 === "function" ? x3 : constant_default5(+x3), treemap) : paddingBottom;
  };
  treemap.paddingLeft = function(x3) {
    return arguments.length ? (paddingLeft = typeof x3 === "function" ? x3 : constant_default5(+x3), treemap) : paddingLeft;
  };
  return treemap;
}

// node_modules/d3-hierarchy/src/treemap/resquarify.js
var resquarify_default = function custom18(ratio) {
  function resquarify(parent2, x0, y0, x1, y1) {
    if ((rows = parent2._squarify) && rows.ratio === ratio) {
      var rows, row, nodes, i, j = -1, n, m = rows.length, value2 = parent2.value;
      while (++j < m) {
        row = rows[j], nodes = row.children;
        for (i = row.value = 0, n = nodes.length; i < n; ++i)
          row.value += nodes[i].value;
        if (row.dice)
          dice_default(row, x0, y0, x1, value2 ? y0 += (y1 - y0) * row.value / value2 : y1);
        else
          slice_default2(row, x0, y0, value2 ? x0 += (x1 - x0) * row.value / value2 : x1, y1);
        value2 -= row.value;
      }
    } else {
      parent2._squarify = rows = squarifyRatio(ratio, parent2, x0, y0, x1, y1);
      rows.ratio = ratio;
    }
  }
  resquarify.ratio = function(x3) {
    return custom18((x3 = +x3) > 1 ? x3 : 1);
  };
  return resquarify;
}(phi);

// node_modules/@carbon/charts/components/graphs/tree.js
var __extends40 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var NODE_OFFSET = 6;
var Tree2 = function(_super) {
  __extends40(Tree3, _super);
  function Tree3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "tree";
    _this.renderType = RenderTypes.SVG;
    return _this;
  }
  Tree3.prototype.getLongestLabel = function(data) {
    var _this = this;
    var longestLabel = "";
    data.forEach(function(d) {
      var longestLabelInChildren = d.children ? _this.getLongestLabel(d.children) : "";
      if (longestLabelInChildren.length > longestLabel.length || d.name.length > longestLabel.length) {
        longestLabel = longestLabelInChildren.length > d.name.length ? longestLabelInChildren : d.name;
      }
    });
    return longestLabel;
  };
  Tree3.prototype.getMockLabelWidth = function(svg, label) {
    var mockLabel = svg.append("text").attr("dy", "0.31em").attr("x", 0).attr("text-anchor", "end").text(label);
    var mockLabelWidth = DOMUtils.getSVGElementSize(mockLabel.node(), {
      useBBox: true
    }).width;
    mockLabel.remove();
    return mockLabelWidth;
  };
  Tree3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var svg = this.getComponentContainer();
    svg.html("");
    var _a4 = DOMUtils.getSVGElementSize(this.parent, {
      useAttrs: true
    }), width = _a4.width, height = _a4.height;
    if (width < 1 || height < 1) {
      return;
    }
    var options2 = this.model.getOptions();
    var displayData = this.model.getDisplayData();
    var rootTitle = Tools.getProperty(options2, "tree", "rootTitle") || "Tree";
    var mockRootTitleWidth = this.getMockLabelWidth(svg, rootTitle);
    var longestLabel = this.getLongestLabel(displayData);
    var mockLongestLabelWidth = this.getMockLabelWidth(svg, longestLabel);
    var margin = {
      top: 0,
      right: 0,
      bottom: 0,
      left: mockRootTitleWidth > 0 ? mockRootTitleWidth + NODE_OFFSET : 30 - NODE_OFFSET
    };
    var root3 = hierarchy({
      name: rootTitle,
      children: displayData
    });
    var dx = 10;
    var dy = width / 6;
    var update2 = function(source) {
      var nodes = root3.descendants().reverse();
      var links = root3.links();
      var left3 = root3;
      var right3 = root3;
      root3.eachBefore(function(node) {
        if (node.x < left3.x)
          left3 = node;
        if (node.x > right3.x)
          right3 = node;
      });
      var height2 = right3.x - left3.x;
      var transition2 = svg.transition().call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "tree-update-viewbox",
          animate: true
        });
      }).attr("viewBox", [-margin.left, left3.x, width, height2]);
      var nodeGroups = nodeGroup.selectAll("g").data(nodes, function(d) {
        return d.id;
      });
      var self2 = _this;
      var nodeGroupsEnter = nodeGroups.enter().append("g").attr("transform", function() {
        return "translate(" + source.y0 + "," + source.x0 + ")";
      }).attr("class", function(d) {
        return d.depth !== 0 && d.children && d.children.length > 0 ? "clickable" : null;
      }).on("mouseover", function(event, d) {
        self2.services.events.dispatchEvent(Events.Tree.NODE_MOUSEOVER, {
          event,
          element: select_default2(this),
          datum: d
        });
      }).on("click", function(event, d) {
        if (d.depth !== 0) {
          d.children = d.children ? null : d._children;
          update2(d);
        }
        self2.services.events.dispatchEvent(Events.Tree.NODE_CLICK, {
          event,
          element: select_default2(this),
          datum: d
        });
      }).on("mouseout", function(event, d) {
        self2.services.events.dispatchEvent(Events.Tree.NODE_MOUSEOUT, {
          event,
          element: select_default2(this),
          datum: d
        });
      });
      nodeGroupsEnter.append("circle").attr("r", 2.5).attr("class", function(d) {
        return d._children ? "parent" : "child";
      }).attr("stroke-width", 10);
      nodeGroupsEnter.append("text").attr("dy", "0.31em").attr("x", function(d) {
        return d._children ? -NODE_OFFSET : NODE_OFFSET;
      }).attr("text-anchor", function(d) {
        return d._children ? "end" : "start";
      }).text(function(d) {
        return d.data.name;
      }).clone(true).attr("class", "text-stroke").lower();
      nodeGroups.merge(nodeGroupsEnter).transition(transition2).attr("transform", function(d) {
        return "translate(" + d.y + "," + d.x + ")";
      }).attr("fill-opacity", 1).attr("stroke-opacity", 1);
      nodeGroups.exit().transition(transition2).remove().attr("transform", function() {
        return "translate(" + source.y + "," + source.x + ")";
      }).attr("fill-opacity", 0).attr("stroke-opacity", 0);
      var linkPaths = linkGroup.selectAll("path").data(links, function(d) {
        return d.target.id;
      });
      var linkPathsEnter = linkPaths.enter().append("path").attr("d", function(d) {
        var o = { x: source.x0, y: source.y0 };
        return diagonal({ source: o, target: o });
      });
      linkPaths.merge(linkPathsEnter).transition(transition2).attr("d", diagonal);
      linkPaths.exit().transition(transition2).remove().attr("d", function() {
        var o = { x: source.x, y: source.y };
        return diagonal({ source: o, target: o });
      });
      root3.eachBefore(function(d) {
        d.x0 = d.x;
        d.y0 = d.y;
      });
    };
    var descendants = root3.descendants();
    var maxDepth = descendants[descendants.length - 1].depth;
    var tree = Tools.getProperty(options2, "tree", "type") === TreeTypes.DENDROGRAM ? cluster_default().size([
      height,
      width - mockLongestLabelWidth - maxDepth * NODE_OFFSET - mockRootTitleWidth
    ]) : tree_default().nodeSize([dx, dy]).size([
      height,
      width - mockLongestLabelWidth - maxDepth * NODE_OFFSET - mockRootTitleWidth
    ]);
    var diagonal = linkHorizontal().x(function(d) {
      return d.y;
    }).y(function(d) {
      return d.x;
    });
    root3.x0 = dy / 2;
    root3.y0 = 0;
    root3.descendants().forEach(function(d, i) {
      d.id = i;
      d._children = d.children;
    });
    tree(root3);
    svg.attr("viewBox", [-margin.left, -margin.top, width, dx]).style("user-select", "none");
    var linkGroup = svg.append("g").attr("class", "links");
    var nodeGroup = svg.append("g").attr("class", "nodes");
    update2(root3);
  };
  return Tree3;
}(Component);

// node_modules/@carbon/colors/es/index.js
var black = "#000000";
var white = "#ffffff";
var yellow10 = "#fcf4d6";
var yellow20 = "#fddc69";
var yellow30 = "#f1c21b";
var yellow40 = "#d2a106";
var yellow50 = "#b28600";
var yellow60 = "#8e6a00";
var yellow70 = "#684e00";
var yellow80 = "#483700";
var yellow90 = "#302400";
var yellow100 = "#1c1500";
var unstable_yellow = {
  10: yellow10,
  20: yellow20,
  30: yellow30,
  40: yellow40,
  50: yellow50,
  60: yellow60,
  70: yellow70,
  80: yellow80,
  90: yellow90,
  100: yellow100
};
var orange10 = "#fff2e8";
var orange20 = "#ffd9be";
var orange30 = "#ffb784";
var orange40 = "#ff832b";
var orange50 = "#eb6200";
var orange60 = "#ba4e00";
var orange70 = "#8a3800";
var orange80 = "#5e2900";
var orange90 = "#3e1a00";
var orange100 = "#231000";
var unstable_orange = {
  10: orange10,
  20: orange20,
  30: orange30,
  40: orange40,
  50: orange50,
  60: orange60,
  70: orange70,
  80: orange80,
  90: orange90,
  100: orange100
};
var red10 = "#fff1f1";
var red20 = "#ffd7d9";
var red30 = "#ffb3b8";
var red40 = "#ff8389";
var red50 = "#fa4d56";
var red60 = "#da1e28";
var red70 = "#a2191f";
var red80 = "#750e13";
var red90 = "#520408";
var red100 = "#2d0709";
var red = {
  10: red10,
  20: red20,
  30: red30,
  40: red40,
  50: red50,
  60: red60,
  70: red70,
  80: red80,
  90: red90,
  100: red100
};
var magenta10 = "#fff0f7";
var magenta20 = "#ffd6e8";
var magenta30 = "#ffafd2";
var magenta40 = "#ff7eb6";
var magenta50 = "#ee5396";
var magenta60 = "#d02670";
var magenta70 = "#9f1853";
var magenta80 = "#740937";
var magenta90 = "#510224";
var magenta100 = "#2a0a18";
var magenta = {
  10: magenta10,
  20: magenta20,
  30: magenta30,
  40: magenta40,
  50: magenta50,
  60: magenta60,
  70: magenta70,
  80: magenta80,
  90: magenta90,
  100: magenta100
};
var purple10 = "#f6f2ff";
var purple20 = "#e8daff";
var purple30 = "#d4bbff";
var purple40 = "#be95ff";
var purple50 = "#a56eff";
var purple60 = "#8a3ffc";
var purple70 = "#6929c4";
var purple80 = "#491d8b";
var purple90 = "#31135e";
var purple100 = "#1c0f30";
var purple = {
  10: purple10,
  20: purple20,
  30: purple30,
  40: purple40,
  50: purple50,
  60: purple60,
  70: purple70,
  80: purple80,
  90: purple90,
  100: purple100
};
var blue10 = "#edf5ff";
var blue20 = "#d0e2ff";
var blue30 = "#a6c8ff";
var blue40 = "#78a9ff";
var blue50 = "#4589ff";
var blue60 = "#0f62fe";
var blue70 = "#0043ce";
var blue80 = "#002d9c";
var blue90 = "#001d6c";
var blue100 = "#001141";
var blue = {
  10: blue10,
  20: blue20,
  30: blue30,
  40: blue40,
  50: blue50,
  60: blue60,
  70: blue70,
  80: blue80,
  90: blue90,
  100: blue100
};
var cyan10 = "#e5f6ff";
var cyan20 = "#bae6ff";
var cyan30 = "#82cfff";
var cyan40 = "#33b1ff";
var cyan50 = "#1192e8";
var cyan60 = "#0072c3";
var cyan70 = "#00539a";
var cyan80 = "#003a6d";
var cyan90 = "#012749";
var cyan100 = "#061727";
var cyan = {
  10: cyan10,
  20: cyan20,
  30: cyan30,
  40: cyan40,
  50: cyan50,
  60: cyan60,
  70: cyan70,
  80: cyan80,
  90: cyan90,
  100: cyan100
};
var teal10 = "#d9fbfb";
var teal20 = "#9ef0f0";
var teal30 = "#3ddbd9";
var teal40 = "#08bdba";
var teal50 = "#009d9a";
var teal60 = "#007d79";
var teal70 = "#005d5d";
var teal80 = "#004144";
var teal90 = "#022b30";
var teal100 = "#081a1c";
var teal = {
  10: teal10,
  20: teal20,
  30: teal30,
  40: teal40,
  50: teal50,
  60: teal60,
  70: teal70,
  80: teal80,
  90: teal90,
  100: teal100
};
var green10 = "#defbe6";
var green20 = "#a7f0ba";
var green30 = "#6fdc8c";
var green40 = "#42be65";
var green50 = "#24a148";
var green60 = "#198038";
var green70 = "#0e6027";
var green80 = "#044317";
var green90 = "#022d0d";
var green100 = "#071908";
var green = {
  10: green10,
  20: green20,
  30: green30,
  40: green40,
  50: green50,
  60: green60,
  70: green70,
  80: green80,
  90: green90,
  100: green100
};
var coolGray10 = "#f2f4f8";
var coolGray20 = "#dde1e6";
var coolGray30 = "#c1c7cd";
var coolGray40 = "#a2a9b0";
var coolGray50 = "#878d96";
var coolGray60 = "#697077";
var coolGray70 = "#4d5358";
var coolGray80 = "#343a3f";
var coolGray90 = "#21272a";
var coolGray100 = "#121619";
var coolGray = {
  10: coolGray10,
  20: coolGray20,
  30: coolGray30,
  40: coolGray40,
  50: coolGray50,
  60: coolGray60,
  70: coolGray70,
  80: coolGray80,
  90: coolGray90,
  100: coolGray100
};
var gray10 = "#f4f4f4";
var gray20 = "#e0e0e0";
var gray30 = "#c6c6c6";
var gray40 = "#a8a8a8";
var gray50 = "#8d8d8d";
var gray60 = "#6f6f6f";
var gray70 = "#525252";
var gray80 = "#393939";
var gray90 = "#262626";
var gray100 = "#161616";
var gray2 = {
  10: gray10,
  20: gray20,
  30: gray30,
  40: gray40,
  50: gray50,
  60: gray60,
  70: gray70,
  80: gray80,
  90: gray90,
  100: gray100
};
var warmGray10 = "#f7f3f2";
var warmGray20 = "#e5e0df";
var warmGray30 = "#cac5c4";
var warmGray40 = "#ada8a8";
var warmGray50 = "#8f8b8b";
var warmGray60 = "#726e6e";
var warmGray70 = "#565151";
var warmGray80 = "#3c3838";
var warmGray90 = "#272525";
var warmGray100 = "#171414";
var warmGray = {
  10: warmGray10,
  20: warmGray20,
  30: warmGray30,
  40: warmGray40,
  50: warmGray50,
  60: warmGray60,
  70: warmGray70,
  80: warmGray80,
  90: warmGray90,
  100: warmGray100
};
var colors = {
  black: {
    100: black
  },
  blue,
  coolGray,
  cyan,
  gray: gray2,
  green,
  magenta,
  orange: unstable_orange,
  purple,
  red,
  teal,
  warmGray,
  white: {
    0: white
  },
  yellow: unstable_yellow
};

// node_modules/@carbon/charts/components/graphs/treemap.js
var __extends41 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var findColorShade = function(hex2) {
  if (!hex2) {
    return null;
  }
  for (var _i = 0, _a4 = Object.keys(colors); _i < _a4.length; _i++) {
    var colorName = _a4[_i];
    var colorShades = colors[colorName];
    for (var _b = 0, _c = Object.keys(colorShades); _b < _c.length; _b++) {
      var colorShadeLevel = _c[_b];
      var colorShade = colorShades[colorShadeLevel];
      if (colorShade === hex2) {
        return colorShadeLevel;
      }
    }
  }
  return null;
};
var textFillColor = function() {
  var correspondingLeaf = select_default2(this.parentNode).select("rect.leaf");
  var correspondingLeafFill = getComputedStyle(correspondingLeaf.node(), null).getPropertyValue("fill");
  var cl = color2(correspondingLeafFill);
  var colorShade;
  if (cl) {
    colorShade = findColorShade(cl ? cl.hex() : null);
  }
  if (colorShade === null || colorShade === void 0) {
    var lightness = hsl(cl).l;
    colorShade = Math.abs(lightness * 100 - 100);
  }
  return colorShade > 50 ? "white" : "black";
};
var uidCounter = 0;
var Treemap2 = function(_super) {
  __extends41(Treemap3, _super);
  function Treemap3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "treemap";
    _this.renderType = RenderTypes.SVG;
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      _this.parent.selectAll("g[data-name='leaf']").transition("legend-hover-treemap").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-treemap"
        });
      }).attr("opacity", function(d) {
        return d.parent.data.name === hoveredElement.datum()["name"] ? 1 : 0.3;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("g[data-name='leaf']").transition("legend-mouseout-treemap").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-treemap"
        });
      }).attr("opacity", 1);
    };
    return _this;
  }
  Treemap3.prototype.init = function() {
    var events = this.services.events;
    events.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    events.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  Treemap3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var svg = this.getComponentContainer();
    var allData = this.model.getData();
    var displayData = this.model.getDisplayData();
    var options2 = this.model.getOptions();
    var windowLocation = Tools.getProperty(window, "location");
    var _a4 = DOMUtils.getSVGElementSize(svg, {
      useAttrs: true
    }), width = _a4.width, height = _a4.height;
    var hierarchy2 = hierarchy({
      name: options2.title || "Treemap",
      children: displayData
    }).sum(function(d) {
      return d.value;
    }).sort(function(a3, b) {
      return b.value - a3.value;
    });
    var root3 = treemap_default().size([width, height]).paddingInner(1).paddingOuter(0).round(true)(hierarchy2);
    var transitions2 = this.services.transitions;
    var leafGroups = svg.selectAll("g[data-name='leaf']").data(root3.leaves(), function(leaf) {
      return leaf.data.name;
    });
    leafGroups.exit().attr("opacity", 0).remove();
    var enteringLeafGroups = leafGroups.enter().append("g").attr("data-name", "leaf").attr("data-uid", function() {
      return uidCounter++;
    });
    var allLeafGroups = enteringLeafGroups.merge(leafGroups);
    allLeafGroups.attr("data-name", "leaf").transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "treemap-group-update",
        animate
      });
    }).attr("transform", function(d) {
      return "translate(" + d.x0 + "," + d.y0 + ")";
    });
    var rects = allLeafGroups.selectAll("rect.leaf").data(function(d) {
      return [d];
    });
    rects.exit().attr("width", 0).attr("height", 0).remove();
    var enteringRects = rects.enter().append("rect").classed("leaf", true);
    enteringRects.merge(rects).attr("width", 0).attr("height", 0).attr("id", function() {
      var uid = select_default2(this.parentNode).attr("data-uid");
      return options2.style.prefix + "-leaf-" + uid;
    }).attr("class", function(d) {
      while (d.depth > 1)
        d = d.parent;
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.FILL],
        dataGroupName: d.data.name,
        originalClassName: "leaf"
      });
    }).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "treemap-leaf-update-enter",
        animate
      });
    }).attr("width", function(d) {
      return d.x1 - d.x0;
    }).attr("height", function(d) {
      return d.y1 - d.y0;
    }).style("fill", function(d) {
      while (d.depth > 1)
        d = d.parent;
      return _this.model.getFillColor(d.data.name);
    });
    allLeafGroups.selectAll("clipPath").data(function(d) {
      if (d.data.showLabel !== true) {
        return [];
      }
      return [1];
    }, function(d) {
      return d;
    }).join(function(enter) {
      enter.append("clipPath").attr("id", function() {
        var uid = select_default2(this.parentNode).attr("data-uid");
        return options2.style.prefix + "-clip-" + uid;
      }).append("use").attr("xlink:href", function() {
        var uid = select_default2(this.parentNode.parentNode).attr("data-uid");
        var leafID = options2.style.prefix + "-leaf-" + uid;
        return new URL("#" + leafID, windowLocation) + "";
      });
    }, function(update2) {
      return null;
    }, function(exit) {
      return exit.remove();
    });
    allLeafGroups.selectAll("text").data(function(d) {
      if (d.data.showLabel !== true) {
        return [];
      }
      var parent2 = d;
      while (parent2.depth > 1)
        parent2 = parent2.parent;
      var color3 = hsl(_this.model.getFillColor(parent2.data.name));
      return [
        {
          text: d.data.name,
          color: color3.l < 0.5 ? "white" : "black"
        }
      ];
    }, function(d) {
      return d;
    }).join(function(enter) {
      var addedText = enter.append("text").text(function(d) {
        return d.text;
      }).style("fill", textFillColor).attr("x", 7).attr("y", 18);
      if (windowLocation) {
        addedText.attr("clip-path", function() {
          var uid = select_default2(this.parentNode).attr("data-uid");
          var clipPathID = options2.style.prefix + "-clip-" + uid;
          return "url(" + (new URL("#" + clipPathID, windowLocation) + "") + ")";
        });
      }
    }, function(update2) {
      return update2.text(function(d) {
        return d.text;
      }).style("fill", textFillColor);
    }, function(exit) {
      return exit.remove();
    });
    this.addEventListeners();
  };
  Treemap3.prototype.addEventListeners = function() {
    var self2 = this;
    this.parent.selectAll("rect.leaf").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      var fillColor = getComputedStyle(this, null).getPropertyValue("fill");
      var parent2 = datum2;
      while (parent2.depth > 1)
        parent2 = parent2.parent;
      hoveredElement.transition("graph_element_mouseover_fill_update").call(function(t) {
        return self2.services.transitions.setupTransition({
          transition: t,
          name: "graph_element_mouseover_fill_update"
        });
      }).style("fill", function(d) {
        var customColor = self2.model.getFillColor(d.parent.data.name);
        if (customColor) {
          fillColor = customColor;
        }
        return color2(fillColor).darker(0.7).toString();
      });
      self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event,
        hoveredElement,
        items: [
          {
            color: fillColor,
            label: parent2.data.name,
            bold: true
          },
          {
            label: datum2.data.name,
            value: datum2.data.value
          }
        ]
      });
      self2.services.events.dispatchEvent(Events.Treemap.LEAF_MOUSEOVER, {
        event,
        element: hoveredElement,
        datum: datum2
      });
    }).on("mousemove", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Treemap.LEAF_MOUSEMOVE, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Treemap.LEAF_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", false);
      var parent2 = datum2;
      while (parent2.depth > 1)
        parent2 = parent2.parent;
      hoveredElement.transition().call(function(t) {
        return self2.services.transitions.setupTransition({
          transition: t,
          name: "graph_element_mouseout_fill_update"
        });
      }).style("fill", function(d) {
        return self2.model.getFillColor(d.parent.data.name);
      });
      self2.services.events.dispatchEvent(Events.Treemap.LEAF_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        hoveredElement
      });
    });
  };
  return Treemap3;
}(Component);

// node_modules/@carbon/charts/services/angle-utils.js
function radialLabelPlacement(angleRadians) {
  var angle = mod(radToDeg(angleRadians), 360);
  if (isInRange(angle, [0, 10]) || isInRange(angle, [350, 0])) {
    return {
      textAnchor: TextAnchor.START,
      dominantBaseline: DominantBaseline.MIDDLE
    };
  } else if (isInRange(angle, [10, 80])) {
    return {
      textAnchor: TextAnchor.START,
      dominantBaseline: DominantBaseline.HANGING
    };
  } else if (isInRange(angle, [80, 100])) {
    return {
      textAnchor: TextAnchor.MIDDLE,
      dominantBaseline: DominantBaseline.HANGING
    };
  } else if (isInRange(angle, [100, 170])) {
    return {
      textAnchor: TextAnchor.END,
      dominantBaseline: DominantBaseline.HANGING
    };
  } else if (isInRange(angle, [170, 190])) {
    return {
      textAnchor: TextAnchor.END,
      dominantBaseline: DominantBaseline.MIDDLE
    };
  } else if (isInRange(angle, [190, 260])) {
    return {
      textAnchor: TextAnchor.END,
      dominantBaseline: DominantBaseline.BASELINE
    };
  } else if (isInRange(angle, [260, 280])) {
    return {
      textAnchor: TextAnchor.MIDDLE,
      dominantBaseline: DominantBaseline.BASELINE
    };
  } else {
    return {
      textAnchor: TextAnchor.START,
      dominantBaseline: DominantBaseline.BASELINE
    };
  }
}
function mod(n, m) {
  return (n % m + m) % m;
}
function isInRange(x3, _a4) {
  var min8 = _a4[0], max8 = _a4[1];
  return x3 >= min8 && x3 <= max8;
}
function radToDeg(rad) {
  return rad * (180 / Math.PI);
}
function polarToCartesianCoords(a3, r, t) {
  if (t === void 0) {
    t = { x: 0, y: 0 };
  }
  var x3 = r * Math.cos(a3) + t.x;
  var y3 = r * Math.sin(a3) + t.y;
  return { x: isNaN(x3) ? 0 : x3, y: isNaN(y3) ? 0 : y3 };
}
function distanceBetweenPointOnCircAndVerticalDiameter(a3, r) {
  return r * Math.sin(a3 - Math.PI / 2);
}

// node_modules/@carbon/charts/components/graphs/radar.js
var __extends42 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Radar2 = function(_super) {
  __extends42(Radar3, _super);
  function Radar3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "radar";
    _this.renderType = RenderTypes.SVG;
    _this.getLabelDimensions = function(label) {
      var tmpTick = DOMUtils.appendOrSelect(_this.getComponentContainer(), "g.tmp-tick");
      var tmpTickText = DOMUtils.appendOrSelect(tmpTick, "text").text(label);
      var _a4 = DOMUtils.getSVGElementSize(tmpTickText.node(), { useBBox: true }), width = _a4.width, height = _a4.height;
      tmpTick.remove();
      return { width, height };
    };
    _this.normalizeFlatData = function(dataset) {
      var options2 = _this.getOptions();
      var _a4 = Tools.getProperty(options2, "radar", "axes"), angle = _a4.angle, value2 = _a4.value;
      var groupMapsTo = Tools.getProperty(options2, "data", "groupMapsTo");
      var completeBlankData = Tools.flatMapDeep(_this.uniqueKeys.map(function(key) {
        return _this.uniqueGroups.map(function(group3) {
          var _a5;
          return _a5 = {}, _a5[angle] = key, _a5[groupMapsTo] = group3, _a5[value2] = null, _a5;
        });
      }));
      return Tools.merge(completeBlankData, dataset);
    };
    _this.normalizeGroupedData = function(dataset) {
      var options2 = _this.getOptions();
      var _a4 = Tools.getProperty(options2, "radar", "axes"), angle = _a4.angle, value2 = _a4.value;
      var groupMapsTo = Tools.getProperty(options2, "data", "groupMapsTo");
      return dataset.map(function(_a5) {
        var name = _a5.name, data = _a5.data;
        var completeBlankData = _this.uniqueKeys.map(function(k3) {
          var _a6;
          return _a6 = {}, _a6[groupMapsTo] = name, _a6[angle] = k3, _a6[value2] = null, _a6;
        });
        return { name, data: Tools.merge(completeBlankData, data) };
      });
    };
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      _this.parent.selectAll("g.blobs path").transition("legend-hover-blob").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-blob"
        });
      }).style("fill-opacity", function(group3) {
        if (group3.name !== hoveredElement.datum().name) {
          return radar.opacity.unselected;
        }
        return radar.opacity.selected;
      }).style("stroke-opacity", function(group3) {
        if (group3.name !== hoveredElement.datum().name) {
          return radar.opacity.unselected;
        }
        return 1;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("g.blobs path").transition("legend-mouseout-blob").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-blob"
        });
      }).style("fill-opacity", radar.opacity.selected).style("stroke-opacity", 1);
    };
    return _this;
  }
  Radar3.prototype.init = function() {
    var events = this.services.events;
    events.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    events.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  Radar3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var svg = this.getComponentContainer();
    var _a4 = DOMUtils.getSVGElementSize(svg, {
      useAttrs: true
    }), width = _a4.width, height = _a4.height;
    var data = this.model.getData();
    var groupedData = this.model.getGroupedData();
    var options2 = this.getOptions();
    var groupMapsTo = Tools.getProperty(options2, "data", "groupMapsTo");
    var valueMapsTo = Tools.getProperty(options2, "radar", "axes", "value");
    var _b = Tools.getProperty(options2, "radar", "axes"), angle = _b.angle, value2 = _b.value;
    var _c = radar, xLabelPadding = _c.xLabelPadding, yLabelPadding = _c.yLabelPadding, yTicksNumber = _c.yTicksNumber, minRange = _c.minRange, xAxisRectHeight = _c.xAxisRectHeight;
    this.uniqueKeys = Array.from(new Set(data.map(function(d) {
      return d[angle];
    })));
    this.uniqueGroups = Array.from(new Set(data.map(function(d) {
      return d[groupMapsTo];
    })));
    this.fullDataNormalized = this.normalizeFlatData(data);
    this.groupedDataNormalized = this.normalizeGroupedData(groupedData);
    var labelHeight = this.getLabelDimensions(this.uniqueKeys[0]).height;
    var margin = 2 * (labelHeight + yLabelPadding);
    var size2 = Math.min(width, height);
    var diameter = size2 - margin;
    var radius = diameter / 2;
    if (radius <= 0) {
      return;
    }
    var xScale = band().domain(this.fullDataNormalized.map(function(d) {
      return d[angle];
    })).range([0, 2 * Math.PI].map(function(a3) {
      return a3 - Math.PI / 2;
    }));
    var centerPointMinValue = min2(this.fullDataNormalized.map(function(d) {
      return d[value2];
    }));
    var yScale = linear3().domain([
      centerPointMinValue >= 0 ? 0 : centerPointMinValue,
      max2(this.fullDataNormalized.map(function(d) {
        return d[value2];
      }))
    ]).range([minRange, radius]).nice(yTicksNumber);
    var yTicks = yScale.ticks(yTicksNumber);
    var colorScale = function(group3) {
      return _this.model.getFillColor(group3);
    };
    var radialLineGenerator = lineRadial_default().angle(function(d) {
      return xScale(d[angle]) + Math.PI / 2;
    }).radius(function(d) {
      return yScale(d[value2]);
    }).curve(linearClosed_default);
    var horizSpaceNeededByEachXLabel = this.uniqueKeys.map(function(key) {
      var tickWidth = _this.getLabelDimensions(key).width;
      var distanceFromDiameter = distanceBetweenPointOnCircAndVerticalDiameter(xScale(key), radius);
      return tickWidth + distanceFromDiameter;
    });
    var leftPadding = max2(horizSpaceNeededByEachXLabel);
    var c = {
      x: leftPadding + xLabelPadding,
      y: height / 2
    };
    var yAxes = DOMUtils.appendOrSelect(svg, "g.y-axes").attr("role", Roles.GROUP);
    var yAxisUpdate = yAxes.selectAll("path").data(yTicks, function(tick) {
      return tick;
    });
    var shapeData = function(tick) {
      return _this.uniqueKeys.map(function(key) {
        var _a5;
        return _a5 = {}, _a5[angle] = key, _a5[value2] = tick, _a5;
      });
    };
    yAxisUpdate.join(function(enter) {
      return enter.append("path").attr("opacity", 0).attr("transform", "translate(" + c.x + ", " + c.y + ")").attr("fill", "none").call(function(selection2) {
        return selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_y_axes_enter",
            animate
          });
        }).attr("opacity", 1).attr("d", function(tick) {
          return radialLineGenerator(shapeData(tick));
        });
      });
    }, function(update2) {
      return update2.call(function(selection2) {
        return selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_y_axes_update",
            animate
          });
        }).attr("opacity", 1).attr("transform", "translate(" + c.x + ", " + c.y + ")").attr("d", function(tick) {
          return radialLineGenerator(shapeData(tick));
        });
      });
    }, function(exit) {
      return exit.call(function(selection2) {
        return selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_y_axes_exit",
            animate
          });
        }).attr("d", function(tick) {
          return radialLineGenerator(shapeData(tick));
        }).attr("opacity", 0).remove();
      });
    });
    var xAxes = DOMUtils.appendOrSelect(svg, "g.x-axes").attr("role", Roles.GROUP);
    var xAxisUpdate = xAxes.selectAll("line").data(this.uniqueKeys, function(key) {
      return key;
    });
    xAxisUpdate.join(function(enter) {
      return enter.append("line").attr("opacity", 0).attr("class", function(key) {
        return "x-axis-" + Tools.kebabCase(key);
      }).attr("stroke-dasharray", "0").attr("x1", function(key) {
        return polarToCartesianCoords(xScale(key), 0, c).x;
      }).attr("y1", function(key) {
        return polarToCartesianCoords(xScale(key), 0, c).y;
      }).attr("x2", function(key) {
        return polarToCartesianCoords(xScale(key), 0, c).x;
      }).attr("y2", function(key) {
        return polarToCartesianCoords(xScale(key), 0, c).y;
      }).call(function(selection2) {
        return selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_x_axes_enter",
            animate
          });
        }).attr("opacity", 1).attr("x1", function(key) {
          return polarToCartesianCoords(xScale(key), yScale.range()[0], c).x;
        }).attr("y1", function(key) {
          return polarToCartesianCoords(xScale(key), yScale.range()[0], c).y;
        }).attr("x2", function(key) {
          return polarToCartesianCoords(xScale(key), yScale.range()[1], c).x;
        }).attr("y2", function(key) {
          return polarToCartesianCoords(xScale(key), yScale.range()[1], c).y;
        });
      });
    }, function(update2) {
      return update2.call(function(selection2) {
        return selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_x_axes_update",
            animate
          });
        }).attr("opacity", 1).attr("x1", function(key) {
          return polarToCartesianCoords(xScale(key), yScale.range()[0], c).x;
        }).attr("y1", function(key) {
          return polarToCartesianCoords(xScale(key), yScale.range()[0], c).y;
        }).attr("x2", function(key) {
          return polarToCartesianCoords(xScale(key), yScale.range()[1], c).x;
        }).attr("y2", function(key) {
          return polarToCartesianCoords(xScale(key), yScale.range()[1], c).y;
        });
      });
    }, function(exit) {
      return exit.call(function(selection2) {
        return selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_x_axes_exit",
            animate
          });
        }).attr("opacity", 0).remove();
      });
    });
    var xLabels = DOMUtils.appendOrSelect(svg, "g.x-labels").attr("role", Roles.GROUP);
    var xLabelUpdate = xLabels.selectAll("text").data(this.uniqueKeys);
    xLabelUpdate.join(function(enter) {
      return enter.append("text").text(function(key) {
        return key;
      }).attr("opacity", 0).attr("x", function(key) {
        return polarToCartesianCoords(xScale(key), yScale.range()[1] + xLabelPadding, c).x;
      }).attr("y", function(key) {
        return polarToCartesianCoords(xScale(key), yScale.range()[1] + xLabelPadding, c).y;
      }).style("text-anchor", function(key) {
        return radialLabelPlacement(xScale(key)).textAnchor;
      }).style("dominant-baseline", function(key) {
        return radialLabelPlacement(xScale(key)).dominantBaseline;
      }).call(function(selection2) {
        return selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_x_labels_enter",
            animate
          });
        }).attr("opacity", 1);
      });
    }, function(update2) {
      return update2.call(function(selection2) {
        return selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_x_labels_update",
            animate
          });
        }).attr("opacity", 1).attr("x", function(key) {
          return polarToCartesianCoords(xScale(key), yScale.range()[1] + xLabelPadding, c).x;
        }).attr("y", function(key) {
          return polarToCartesianCoords(xScale(key), yScale.range()[1] + xLabelPadding, c).y;
        }).end().finally(function() {
          var alignment = Tools.getProperty(options2, "radar", "alignment");
          var alignmentXOffset = _this.getAlignmentXOffset(alignment, svg, _this.getParent());
          svg.attr("x", alignmentXOffset);
        });
      });
    }, function(exit) {
      return exit.call(function(selection2) {
        return selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_x_labels_exit",
            animate
          });
        }).attr("opacity", 0).remove();
      });
    });
    var blobs = DOMUtils.appendOrSelect(svg, "g.blobs").attr("role", Roles.GROUP);
    var blobUpdate = blobs.selectAll("path").data(this.groupedDataNormalized, function(group3) {
      return group3.name;
    });
    blobUpdate.join(function(enter) {
      return enter.append("path").attr("class", function(group3) {
        return _this.model.getColorClassName({
          classNameTypes: [
            ColorClassNameTypes.FILL,
            ColorClassNameTypes.STROKE
          ],
          dataGroupName: group3.name,
          originalClassName: "blob"
        });
      }).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-label", function(d) {
        return d["name"];
      }).attr("opacity", 0).attr("transform", animate ? function() {
        return "translate(" + c.x + ", " + c.y + ") scale(" + (1 + Math.random() * 0.35) + ")";
      } : "translate(" + c.x + ", " + c.y + ")").style("fill", function(group3) {
        return colorScale(group3.name);
      }).style("fill-opacity", radar.opacity.selected).style("stroke", function(group3) {
        return colorScale(group3.name);
      }).call(function(selection2) {
        var selectionUpdate = selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_blobs_enter",
            animate
          });
        });
        if (animate) {
          selectionUpdate.delay(function() {
            return Math.random() * 30;
          }).attr("transform", "translate(" + c.x + ", " + c.y + ")");
        }
        selectionUpdate.attr("opacity", 1).attr("d", function(group3) {
          return radialLineGenerator(group3.data);
        });
      });
    }, function(update2) {
      update2.attr("class", function(group3) {
        return _this.model.getColorClassName({
          classNameTypes: [
            ColorClassNameTypes.FILL,
            ColorClassNameTypes.STROKE
          ],
          dataGroupName: group3.name,
          originalClassName: "blob"
        });
      }).style("fill", function(group3) {
        return colorScale(group3.name);
      }).style("stroke", function(group3) {
        return colorScale(group3.name);
      });
      update2.call(function(selection2) {
        return selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_blobs_update",
            animate
          });
        }).attr("opacity", 1).attr("transform", "translate(" + c.x + ", " + c.y + ")").attr("d", function(group3) {
          return radialLineGenerator(group3.data);
        });
      });
    }, function(exit) {
      return exit.call(function(selection2) {
        var selectionUpdate = selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_blobs_exit",
            animate
          });
        });
        if (animate) {
          selectionUpdate.delay(function() {
            return Math.random() * 30;
          }).attr("transform", function() {
            return "translate(" + c.x + ", " + c.y + ") scale(" + (1 + Math.random() * 0.35) + ")";
          });
        }
        selectionUpdate.attr("opacity", 0).remove();
      });
    });
    var dots = DOMUtils.appendOrSelect(svg, "g.dots").attr("role", Roles.GROUP);
    var dotsUpdate = dots.selectAll("circle").data(this.fullDataNormalized.filter(function(d) {
      return Tools.getProperty(d, value2) !== null;
    }));
    dotsUpdate.join(function(enter) {
      return enter.append("circle").attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-label", function(d) {
        return d[valueMapsTo];
      });
    }, function(update2) {
      return update2;
    }, function(exit) {
      return exit.remove();
    }).attr("class", function(d) {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.FILL],
        dataGroupName: d[groupMapsTo],
        originalClassName: Tools.kebabCase(d[angle])
      });
    }).attr("cx", function(d) {
      return polarToCartesianCoords(xScale(d[angle]), yScale(d[value2]), c).x;
    }).attr("cy", function(d) {
      return polarToCartesianCoords(xScale(d[angle]), yScale(d[value2]), c).y;
    }).attr("r", 0).attr("opacity", 0).style("fill", function(d) {
      return colorScale(d[groupMapsTo]);
    });
    var xAxesRect = DOMUtils.appendOrSelect(svg, "g.x-axes-rect").attr("role", Roles.GROUP);
    var xAxisRectUpdate = xAxesRect.selectAll("rect").data(this.uniqueKeys);
    xAxisRectUpdate.join(function(enter) {
      return enter.append("rect");
    }, function(update2) {
      return update2;
    }, function(exit) {
      return exit.remove();
    }).attr("x", c.x).attr("y", c.y - xAxisRectHeight / 2).attr("width", yScale.range()[1]).attr("height", xAxisRectHeight).style("fill", "red").style("fill-opacity", 0).attr("transform", function(key) {
      return "rotate(" + radToDeg(xScale(key)) + ", " + c.x + ", " + c.y + ")";
    });
    var yLabels = DOMUtils.appendOrSelect(svg, "g.y-labels").attr("role", Roles.GROUP);
    var yLabelUpdate = yLabels.selectAll("text").data(extent(yTicks));
    yLabelUpdate.join(function(enter) {
      return enter.append("text").attr("opacity", 0).text(function(tick) {
        return tick;
      }).attr("x", function(tick) {
        return polarToCartesianCoords(-Math.PI / 2, yScale(tick), c).x + yLabelPadding;
      }).attr("y", function(tick) {
        return polarToCartesianCoords(-Math.PI / 2, yScale(tick), c).y;
      }).style("text-anchor", "start").style("dominant-baseline", "middle").call(function(selection2) {
        return selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_y_labels_enter",
            animate
          });
        }).attr("opacity", 1);
      });
    }, function(update2) {
      return update2.call(function(selection2) {
        return selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_y_labels_update",
            animate
          });
        }).text(function(tick) {
          return tick;
        }).attr("opacity", 1).attr("x", function(tick) {
          return polarToCartesianCoords(-Math.PI / 2, yScale(tick), c).x + yLabelPadding;
        }).attr("y", function(tick) {
          return polarToCartesianCoords(-Math.PI / 2, yScale(tick), c).y;
        });
      });
    }, function(exit) {
      return exit.call(function(selection2) {
        return selection2.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "radar_y_labels_exit",
            animate
          });
        }).attr("opacity", 0).remove();
      });
    });
    this.addEventListeners();
  };
  Radar3.prototype.getAlignmentXOffset = function(alignment, svg, parent2) {
    var svgDimensions = DOMUtils.getSVGElementSize(svg, {
      useBBox: true
    });
    var width = DOMUtils.getSVGElementSize(parent2, {
      useAttrs: true
    }).width;
    var alignmentOffset = 0;
    if (alignment === Alignments.CENTER) {
      alignmentOffset = Math.floor((width - svgDimensions.width) / 2);
    } else if (alignment === Alignments.RIGHT) {
      alignmentOffset = width - svgDimensions.width;
    }
    return alignmentOffset;
  };
  Radar3.prototype.destroy = function() {
    this.parent.selectAll(".x-axes-rect > rect").on("mouseover", null).on("mousemove", null).on("mouseout", null);
    var eventsFragment = this.services.events;
    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  Radar3.prototype.addEventListeners = function() {
    var self2 = this;
    var angle = Tools.getProperty(this.getOptions(), "radar").axes.angle;
    this.parent.selectAll(".x-axes-rect > rect").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Radar.X_AXIS_MOUSEOVER, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      var axisLine = self2.parent.select(".x-axes .x-axis-" + Tools.kebabCase(datum2));
      var dots = self2.parent.selectAll(".dots circle." + Tools.kebabCase(datum2));
      var activeDataGroupNames = self2.model.getActiveDataGroupNames();
      var options2 = self2.getOptions();
      var groupMapsTo = options2.data.groupMapsTo;
      var valueMapsTo = Tools.getProperty(options2, "radar", "axes", "value");
      axisLine.classed("hovered", true).attr("stroke-dasharray", "4 4");
      dots.classed("hovered", true).attr("opacity", function(d) {
        return activeDataGroupNames.indexOf(d[groupMapsTo]) !== -1 ? 1 : 0;
      }).attr("r", radar.dotsRadius);
      var itemsToHighlight = self2.fullDataNormalized.filter(function(d) {
        return d[angle] === datum2 && activeDataGroupNames.indexOf(d[groupMapsTo]) !== -1;
      });
      self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event,
        hoveredElement,
        items: itemsToHighlight.filter(function(datum3) {
          return typeof datum3[valueMapsTo] === "number";
        }).map(function(datum3) {
          return {
            label: datum3[groupMapsTo],
            value: datum3[valueMapsTo],
            color: self2.model.getFillColor(datum3[groupMapsTo]),
            class: self2.model.getColorClassName({
              classNameTypes: [ColorClassNameTypes.TOOLTIP],
              dataGroupName: datum3[groupMapsTo]
            })
          };
        })
      });
    }).on("mousemove", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Radar.X_AXIS_MOUSEMOVE, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Radar.X_AXIS_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      var axisLine = self2.parent.select(".x-axes .x-axis-" + Tools.kebabCase(datum2));
      var dots = self2.parent.selectAll(".dots circle." + Tools.kebabCase(datum2));
      axisLine.classed("hovered", false).attr("stroke-dasharray", "0");
      dots.classed("hovered", false).attr("opacity", 0).attr("r", 0);
      self2.services.events.dispatchEvent(Events.Radar.X_AXIS_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE);
    });
  };
  return Radar3;
}(Component);

// node_modules/@carbon/charts/components/graphs/circle-pack.js
var __extends43 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays4 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var CirclePack2 = function(_super) {
  __extends43(CirclePack3, _super);
  function CirclePack3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "circle-pack";
    _this.renderType = RenderTypes.SVG;
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      _this.parent.selectAll("circle.node").transition("legend-hover-circlepack").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-circlepack"
        });
      }).attr("opacity", function(d) {
        return d.data.dataGroupName === hoveredElement.datum()["name"] ? 1 : circlePack.circles.fillOpacity;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("circle.node").transition("legend-mouseout-circlepack").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-circlepack"
        });
      }).attr("opacity", 1);
    };
    return _this;
  }
  CirclePack3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var svg = this.getComponentContainer({ withinChartClip: true });
    var _a4 = DOMUtils.getSVGElementSize(this.parent, {
      useAttrs: true
    }), width = _a4.width, height = _a4.height;
    if (width < 1 || height < 1) {
      return;
    }
    var displayData = this.model.getDisplayData();
    var parentNode = this.model.hasParentNode();
    var hierarchyLevel = this.model.getHierarchyLevel();
    var options2 = this.getOptions();
    var canvasZoomEnabled = Tools.getProperty(options2, "canvasZoom", "enabled");
    if (parentNode && Tools.getProperty(displayData, 0, "children")) {
      displayData = Tools.getProperty(displayData, 0, "children");
    }
    var root3 = hierarchy({ children: displayData }).sum(function(d) {
      return d.value;
    }).sort(function(a3, b) {
      return b.value - a3.value;
    });
    var packLayout = pack_default().size([width, height]).padding(function(d) {
      return d.depth >= 1 ? circlePack.padding.children + 3 : circlePack.padding.mainGroup + 3;
    });
    var nodeData = packLayout(root3).descendants().splice(1).filter(function(node) {
      return node.depth <= hierarchyLevel;
    });
    var circles = svg.selectAll("circle.node").data(nodeData);
    circles.exit().attr("width", 0).attr("height", 0).remove();
    var enteringCircles = circles.enter().append("circle").classed("node", true);
    enteringCircles.merge(circles).attr("class", function(d) {
      var originalClass = canvasZoomEnabled && hierarchyLevel === 3 ? _this.getZoomClass(d) : "";
      return _this.model.getColorClassName({
        classNameTypes: [
          ColorClassNameTypes.FILL,
          ColorClassNameTypes.STROKE
        ],
        dataGroupName: d.data.dataGroupName,
        originalClassName: d.children ? "node " + originalClass : "node node-leaf " + originalClass
      });
    }).style("fill", function(d) {
      return _this.model.getFillColor(d.data.dataGroupName);
    }).style("stroke", function(d) {
      return _this.model.getFillColor(d.data.dataGroupName);
    }).attr("cx", function(d) {
      return d.x;
    }).attr("cy", function(d) {
      return d.y;
    }).transition("circlepack-leaf-update-enter").call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "circlepack-leaf-update-enter"
      });
    }).attr("r", function(d) {
      return d.r;
    }).attr("opacity", 1).attr("fill-opacity", circlePack.circles.fillOpacity);
    if (canvasZoomEnabled === true && this.focal) {
      this.services.canvasZoom.zoomIn(this.focal, enteringCircles, canvasZoomSettings);
      this.setBackgroundListeners();
    }
    if (!parentNode) {
      this.addLegendListeners();
    }
    this.addEventListeners();
  };
  CirclePack3.prototype.unhighlightChildren = function(childData) {
    var _this = this;
    var data = childData.map(function(d) {
      return d.data;
    });
    this.parent.selectAll("circle.node").filter(function(d) {
      return data.some(function(datum2) {
        return datum2 === d.data;
      }) && d.depth > 1;
    }).style("stroke", function(d) {
      return _this.model.getFillColor(d.data.dataGroupName);
    });
  };
  CirclePack3.prototype.highlightChildren = function(childData) {
    var data = childData.map(function(d) {
      return d.data;
    });
    this.parent.selectAll("circle.node").filter(function(d) {
      return data.some(function(datum2) {
        return datum2 === d.data;
      }) && d.depth > 1;
    }).style("stroke", circlePack.circles.hover.stroke);
  };
  CirclePack3.prototype.getZoomClass = function(node) {
    if (this.model.getHierarchyLevel() === 3 && this.focal) {
      if (node.data === this.focal.data || this.focal.children.some(function(d) {
        return d.data === node.data;
      })) {
        return "focal";
      }
    }
    return "non-focal";
  };
  CirclePack3.prototype.addLegendListeners = function() {
    var events = this.services.events;
    events.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    events.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  CirclePack3.prototype.removeBackgroundListeners = function() {
    var chartSvg = select_default2(this.services.domUtils.getMainContainer());
    chartSvg.on("click", function() {
      return null;
    });
  };
  CirclePack3.prototype.setBackgroundListeners = function() {
    var chartSvg = select_default2(this.services.domUtils.getMainContainer());
    var self2 = this;
    var canvasSelection = this.parent.selectAll("circle.node");
    var zoomSetting = Tools.getProperty(configuration_exports, "canvasZoomSettings");
    chartSvg.on("click", function() {
      self2.focal = null;
      self2.model.updateHierarchyLevel(2);
      chartSvg.classed("zoomed-in", false);
      self2.services.canvasZoom.zoomOut(canvasSelection, zoomSetting);
    });
  };
  CirclePack3.prototype.getZoomIcon = function() {
    return '\n		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 10 10">\n			<polygon points="5.93 3.71 4.45 3.71 4.45 2.23 3.71 2.23 3.71 3.71 2.23 3.71 2.23 4.45 3.71 4.45 3.71 5.93 4.45 5.93 4.45 4.45 5.93 4.45 5.93 3.71"/>\n			<path d="M7.2,6.67a4,4,0,0,0,1-2.59A4.08,4.08,0,1,0,4.07,8.15h0a4,4,0,0,0,2.59-1L9.48,10,10,9.48Zm-3.12.77A3.34,3.34,0,1,1,7.41,4.08,3.34,3.34,0,0,1,4.08,7.44Z"/>\n		</svg>';
  };
  CirclePack3.prototype.addEventListeners = function() {
    var self2 = this;
    this.parent.selectAll("circle.node").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", true);
      var hierarchyLevel = self2.model.getHierarchyLevel();
      var disabled = hierarchyLevel > 2 && !hoveredElement.classed("focal");
      var canvasZoomEnabled = Tools.getProperty(self2.model.getOptions(), "canvasZoom", "enabled");
      var zoomable = false;
      if (!disabled) {
        var childrenData = [];
        var totalValue = [];
        var parentValue = null;
        if (datum2.children) {
          if (datum2.depth > 1 && canvasZoomEnabled) {
            zoomable = true;
            hoveredElement.classed("clickable", true);
          }
          childrenData = datum2.children.map(function(child) {
            if (child !== null) {
              if (typeof child.data.value === "number") {
                return {
                  label: child.data.name,
                  value: child.data.value
                };
              } else {
                return {
                  label: child.data.name,
                  labelIcon: canvasZoomEnabled && hierarchyLevel <= 2 ? self2.getZoomIcon() : null,
                  value: child.value
                };
              }
            }
          });
          var options2 = self2.model.getOptions();
          totalValue = [
            {
              label: get_default(options2, "tooltip.totalLabel") || "Total",
              value: datum2.value,
              bold: true
            }
          ];
          self2.highlightChildren(datum2.children);
        } else {
          parentValue = datum2.value;
        }
        var fillColor = getComputedStyle(this, null).getPropertyValue("fill");
        self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
          event,
          hoveredElement,
          items: __spreadArrays4([
            {
              color: fillColor,
              label: datum2.data.name,
              labelIcon: zoomable && canvasZoomEnabled && hierarchyLevel <= 2 ? self2.getZoomIcon() : null,
              value: parentValue
            }
          ], childrenData, totalValue)
        });
      }
      self2.services.events.dispatchEvent(Events.CirclePack.CIRCLE_MOUSEOVER, {
        event,
        element: hoveredElement,
        datum: datum2
      });
    }).on("mousemove", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.CirclePack.CIRCLE_MOUSEMOVE, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      hoveredElement.classed("hovered", false);
      if (datum2.children) {
        self2.unhighlightChildren(datum2.children);
      }
      self2.services.events.dispatchEvent(Events.CirclePack.CIRCLE_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        hoveredElement
      });
    }).on("click", function(event, datum2) {
      var hoveredElement = select_default2(this);
      var disabled = hoveredElement.classed("non-focal");
      var canvasZoomEnabled = Tools.getProperty(self2.model.getOptions(), "canvasZoom", "enabled");
      if (canvasZoomEnabled && self2.model.getHierarchyLevel() > 2) {
        var canvasSelection = self2.parent.selectAll("circle.node");
        var chartSvg = select_default2(self2.services.domUtils.getMainContainer());
        chartSvg.classed("zoomed-in", false);
        self2.focal = null;
        self2.model.updateHierarchyLevel(2);
        self2.services.canvasZoom.zoomOut(canvasSelection, canvasZoomSettings);
      } else if (datum2.depth === 2 && datum2.children && !disabled && canvasZoomEnabled) {
        var canvasSelection = self2.parent.selectAll("circle.node");
        var chartSvg = select_default2(self2.services.domUtils.getMainContainer());
        chartSvg.classed("zoomed-in", true);
        self2.focal = datum2;
        self2.model.updateHierarchyLevel(3);
        self2.services.canvasZoom.zoomIn(datum2, canvasSelection, canvasZoomSettings);
        event.stopPropagation();
      }
      self2.services.events.dispatchEvent(Events.CirclePack.CIRCLE_CLICK, {
        event,
        element: hoveredElement,
        datum: datum2
      });
    });
  };
  CirclePack3.prototype.destroy = function() {
    this.parent.selectAll("circle.node").on("mouseover", null).on("mousemove", null).on("mouseout", null).on("click", null);
    var eventsFragment = this.services.events;
    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    this.removeBackgroundListeners();
  };
  return CirclePack3;
}(Component);

// node_modules/@carbon/charts/components/graphs/wordcloud.js
var import_d3_cloud = __toModule(require_d3_cloud());
var __extends44 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var WordCloud2 = function(_super) {
  __extends44(WordCloud3, _super);
  function WordCloud3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "wordcloud";
    _this.renderType = RenderTypes.SVG;
    _this.handleLegendOnHover = function(event) {
      var hoveredElement = event.detail.hoveredElement;
      var groupMapsTo = _this.getOptions().data.groupMapsTo;
      _this.parent.selectAll("text.word").transition("legend-hover-wordcloud").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-hover-wordcloud"
        });
      }).attr("opacity", function(d) {
        return d[groupMapsTo] !== hoveredElement.datum()["name"] ? 0.3 : 1;
      });
    };
    _this.handleLegendMouseOut = function(event) {
      _this.parent.selectAll("text.word").transition("legend-mouseout-wordcloud").call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "legend-mouseout-wordcloud"
        });
      }).attr("opacity", 1);
    };
    return _this;
  }
  WordCloud3.prototype.init = function() {
    var eventsFragment = this.services.events;
    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
  };
  WordCloud3.prototype.render = function(animate) {
    if (animate === void 0) {
      animate = true;
    }
    var self2 = this;
    var svg = this.getComponentContainer().attr("width", "100%").attr("height", "100%");
    var displayData = this.model.getDisplayData();
    var fontSizeScale = this.getFontSizeScale(displayData);
    var options2 = this.getOptions();
    var _a4 = options2.wordCloud, fontSizeMapsTo = _a4.fontSizeMapsTo, wordMapsTo = _a4.wordMapsTo;
    var groupMapsTo = options2.data.groupMapsTo;
    var _b = DOMUtils.getSVGElementSize(svg, {
      useAttrs: true
    }), width = _b.width, height = _b.height;
    if (width === 0 || height === 0) {
      return;
    }
    var layout = (0, import_d3_cloud.default)().size([width, height]).words(displayData.map(function(d) {
      var _a5;
      return _a5 = {}, _a5[groupMapsTo] = d[groupMapsTo], _a5.text = d[wordMapsTo], _a5.size = d[fontSizeMapsTo], _a5.value = d[fontSizeMapsTo], _a5;
    })).padding(5).rotate(0).fontSize(function(d) {
      return fontSizeScale(d.size);
    }).on("end", draw);
    layout.start();
    function draw(words2) {
      var textGroup = DOMUtils.appendOrSelect(svg, "g.words");
      textGroup.attr("transform", "translate(" + layout.size()[0] / 2 + ", " + layout.size()[1] / 2 + ")");
      var allText = textGroup.selectAll("text").data(words2, function(d) {
        return d[groupMapsTo] + "-" + d.text;
      });
      allText.exit().attr("opacity", 0).remove();
      var enteringText = allText.enter().append("text").attr("opacity", 0);
      enteringText.merge(allText).style("font-size", function(d) {
        return d.size + "px";
      }).text(function(d) {
        return d.text;
      }).attr("class", function(d) {
        return self2.model.getColorClassName({
          classNameTypes: [ColorClassNameTypes.FILL],
          dataGroupName: d[groupMapsTo],
          originalClassName: "word " + (d.size > 32 ? "light" : "")
        });
      }).style("fill", function(d) {
        return self2.model.getFillColor(d[groupMapsTo], d.text, d);
      }).attr("text-anchor", "middle").transition().call(function(t) {
        return self2.services.transitions.setupTransition({
          transition: t,
          name: "wordcloud-text-update-enter",
          animate
        });
      }).attr("transform", function(d) {
        return "translate(" + d.x + ", " + d.y + ")";
      }).attr("opacity", 1);
    }
    this.addEventListeners();
  };
  WordCloud3.prototype.getFontSizeScale = function(data) {
    var options2 = this.getOptions();
    var fontSizeMapsTo = options2.wordCloud.fontSizeMapsTo;
    var allOccurences = data.map(function(d) {
      return d[fontSizeMapsTo];
    }).filter(function(size2) {
      return size2;
    });
    var chartSize = DOMUtils.getHTMLElementSize(this.services.domUtils.getMainContainer());
    var sizeDataIsValid = allOccurences.length > 0;
    var domain = sizeDataIsValid ? extent(allOccurences) : [1, 1];
    return linear3().domain(domain).range(sizeDataIsValid ? options2.wordCloud.fontSizeRange(chartSize, data) : [4, 4]);
  };
  WordCloud3.prototype.addEventListeners = function() {
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var self2 = this;
    var debouncedHighlight = Tools.debounce(function(word) {
      var allWords = self2.parent.selectAll("text.word").transition("wordcloud-word-mouse-highlight").call(function(t) {
        return self2.services.transitions.setupTransition({
          transition: t,
          name: "wordcloud-word-mouse-highlight"
        });
      });
      if (word === null) {
        allWords.attr("opacity", 1);
      } else {
        allWords.attr("opacity", function() {
          if (word === this) {
            return 1;
          }
          return 0.3;
        });
      }
    }, 6);
    this.parent.selectAll("text.word").on("mouseover", function(event, datum2) {
      var hoveredElement = this;
      debouncedHighlight(hoveredElement);
      self2.services.events.dispatchEvent(Events.WordCloud.WORD_MOUSEOVER, {
        event,
        element: select_default2(this),
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event,
        hoveredElement,
        items: [
          {
            label: options2.tooltip.wordLabel,
            value: datum2.text
          },
          {
            label: options2.tooltip.valueLabel,
            value: datum2.value
          },
          {
            label: options2.tooltip.groupLabel,
            value: datum2[groupMapsTo],
            class: self2.model.getColorClassName({
              classNameTypes: [ColorClassNameTypes.TOOLTIP],
              dataGroupName: datum2[groupMapsTo]
            })
          }
        ]
      });
    }).on("mousemove", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.WordCloud.WORD_MOUSEMOVE, {
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.WordCloud.WORD_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      debouncedHighlight(null);
      self2.services.events.dispatchEvent(Events.WordCloud.WORD_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        hoveredElement
      });
    });
  };
  return WordCloud3;
}(Component);

// node_modules/d3-sankey/node_modules/d3-array/src/ascending.js
function ascending_default2(a3, b) {
  return a3 < b ? -1 : a3 > b ? 1 : a3 >= b ? 0 : NaN;
}

// node_modules/d3-sankey/node_modules/d3-array/src/bisector.js
function bisector_default(f) {
  let delta = f;
  let compare = f;
  if (f.length === 1) {
    delta = (d, x3) => f(d) - x3;
    compare = ascendingComparator(f);
  }
  function left3(a3, x3, lo, hi) {
    if (lo == null)
      lo = 0;
    if (hi == null)
      hi = a3.length;
    while (lo < hi) {
      const mid = lo + hi >>> 1;
      if (compare(a3[mid], x3) < 0)
        lo = mid + 1;
      else
        hi = mid;
    }
    return lo;
  }
  function right3(a3, x3, lo, hi) {
    if (lo == null)
      lo = 0;
    if (hi == null)
      hi = a3.length;
    while (lo < hi) {
      const mid = lo + hi >>> 1;
      if (compare(a3[mid], x3) > 0)
        hi = mid;
      else
        lo = mid + 1;
    }
    return lo;
  }
  function center3(a3, x3, lo, hi) {
    if (lo == null)
      lo = 0;
    if (hi == null)
      hi = a3.length;
    const i = left3(a3, x3, lo, hi - 1);
    return i > lo && delta(a3[i - 1], x3) > -delta(a3[i], x3) ? i - 1 : i;
  }
  return { left: left3, center: center3, right: right3 };
}
function ascendingComparator(f) {
  return (d, x3) => ascending_default2(f(d), x3);
}

// node_modules/d3-sankey/node_modules/d3-array/src/number.js
function number_default2(x3) {
  return x3 === null ? NaN : +x3;
}

// node_modules/d3-sankey/node_modules/d3-array/src/bisect.js
var ascendingBisect2 = bisector_default(ascending_default2);
var bisectRight2 = ascendingBisect2.right;
var bisectLeft2 = ascendingBisect2.left;
var bisectCenter2 = bisector_default(number_default2).center;

// node_modules/d3-sankey/node_modules/d3-array/src/array.js
var array3 = Array.prototype;
var slice4 = array3.slice;
var map5 = array3.map;

// node_modules/d3-sankey/node_modules/d3-array/src/ticks.js
var e102 = Math.sqrt(50);
var e52 = Math.sqrt(10);
var e22 = Math.sqrt(2);

// node_modules/d3-sankey/node_modules/d3-array/src/max.js
function max5(values2, valueof) {
  let max8;
  if (valueof === void 0) {
    for (const value2 of values2) {
      if (value2 != null && (max8 < value2 || max8 === void 0 && value2 >= value2)) {
        max8 = value2;
      }
    }
  } else {
    let index4 = -1;
    for (let value2 of values2) {
      if ((value2 = valueof(value2, ++index4, values2)) != null && (max8 < value2 || max8 === void 0 && value2 >= value2)) {
        max8 = value2;
      }
    }
  }
  return max8;
}

// node_modules/d3-sankey/node_modules/d3-array/src/min.js
function min5(values2, valueof) {
  let min8;
  if (valueof === void 0) {
    for (const value2 of values2) {
      if (value2 != null && (min8 > value2 || min8 === void 0 && value2 >= value2)) {
        min8 = value2;
      }
    }
  } else {
    let index4 = -1;
    for (let value2 of values2) {
      if ((value2 = valueof(value2, ++index4, values2)) != null && (min8 > value2 || min8 === void 0 && value2 >= value2)) {
        min8 = value2;
      }
    }
  }
  return min8;
}

// node_modules/d3-sankey/node_modules/d3-array/src/shuffle.js
var shuffle_default3 = shuffler2(Math.random);
function shuffler2(random2) {
  return function shuffle3(array4, i0 = 0, i1 = array4.length) {
    let m = i1 - (i0 = +i0);
    while (m) {
      const i = random2() * m-- | 0, t = array4[m + i0];
      array4[m + i0] = array4[i + i0];
      array4[i + i0] = t;
    }
    return array4;
  };
}

// node_modules/d3-sankey/node_modules/d3-array/src/sum.js
function sum4(values2, valueof) {
  let sum6 = 0;
  if (valueof === void 0) {
    for (let value2 of values2) {
      if (value2 = +value2) {
        sum6 += value2;
      }
    }
  } else {
    let index4 = -1;
    for (let value2 of values2) {
      if (value2 = +valueof(value2, ++index4, values2)) {
        sum6 += value2;
      }
    }
  }
  return sum6;
}

// node_modules/d3-sankey/src/align.js
function justify(node, n) {
  return node.sourceLinks.length ? node.depth : n - 1;
}

// node_modules/d3-sankey/src/constant.js
function constant3(x3) {
  return function() {
    return x3;
  };
}

// node_modules/d3-sankey/src/sankey.js
function ascendingSourceBreadth(a3, b) {
  return ascendingBreadth(a3.source, b.source) || a3.index - b.index;
}
function ascendingTargetBreadth(a3, b) {
  return ascendingBreadth(a3.target, b.target) || a3.index - b.index;
}
function ascendingBreadth(a3, b) {
  return a3.y0 - b.y0;
}
function value(d) {
  return d.value;
}
function defaultId(d) {
  return d.index;
}
function defaultNodes(graph) {
  return graph.nodes;
}
function defaultLinks(graph) {
  return graph.links;
}
function find3(nodeById, id2) {
  const node = nodeById.get(id2);
  if (!node)
    throw new Error("missing: " + id2);
  return node;
}
function computeLinkBreadths({ nodes }) {
  for (const node of nodes) {
    let y0 = node.y0;
    let y1 = y0;
    for (const link3 of node.sourceLinks) {
      link3.y0 = y0 + link3.width / 2;
      y0 += link3.width;
    }
    for (const link3 of node.targetLinks) {
      link3.y1 = y1 + link3.width / 2;
      y1 += link3.width;
    }
  }
}
function Sankey() {
  let x0 = 0, y0 = 0, x1 = 1, y1 = 1;
  let dx = 24;
  let dy = 8, py;
  let id2 = defaultId;
  let align = justify;
  let sort3;
  let linkSort;
  let nodes = defaultNodes;
  let links = defaultLinks;
  let iterations = 6;
  function sankey() {
    const graph = { nodes: nodes.apply(null, arguments), links: links.apply(null, arguments) };
    computeNodeLinks(graph);
    computeNodeValues(graph);
    computeNodeDepths(graph);
    computeNodeHeights(graph);
    computeNodeBreadths(graph);
    computeLinkBreadths(graph);
    return graph;
  }
  sankey.update = function(graph) {
    computeLinkBreadths(graph);
    return graph;
  };
  sankey.nodeId = function(_) {
    return arguments.length ? (id2 = typeof _ === "function" ? _ : constant3(_), sankey) : id2;
  };
  sankey.nodeAlign = function(_) {
    return arguments.length ? (align = typeof _ === "function" ? _ : constant3(_), sankey) : align;
  };
  sankey.nodeSort = function(_) {
    return arguments.length ? (sort3 = _, sankey) : sort3;
  };
  sankey.nodeWidth = function(_) {
    return arguments.length ? (dx = +_, sankey) : dx;
  };
  sankey.nodePadding = function(_) {
    return arguments.length ? (dy = py = +_, sankey) : dy;
  };
  sankey.nodes = function(_) {
    return arguments.length ? (nodes = typeof _ === "function" ? _ : constant3(_), sankey) : nodes;
  };
  sankey.links = function(_) {
    return arguments.length ? (links = typeof _ === "function" ? _ : constant3(_), sankey) : links;
  };
  sankey.linkSort = function(_) {
    return arguments.length ? (linkSort = _, sankey) : linkSort;
  };
  sankey.size = function(_) {
    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];
  };
  sankey.extent = function(_) {
    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];
  };
  sankey.iterations = function(_) {
    return arguments.length ? (iterations = +_, sankey) : iterations;
  };
  function computeNodeLinks({ nodes: nodes2, links: links2 }) {
    for (const [i, node] of nodes2.entries()) {
      node.index = i;
      node.sourceLinks = [];
      node.targetLinks = [];
    }
    const nodeById = new Map(nodes2.map((d, i) => [id2(d, i, nodes2), d]));
    for (const [i, link3] of links2.entries()) {
      link3.index = i;
      let { source, target } = link3;
      if (typeof source !== "object")
        source = link3.source = find3(nodeById, source);
      if (typeof target !== "object")
        target = link3.target = find3(nodeById, target);
      source.sourceLinks.push(link3);
      target.targetLinks.push(link3);
    }
    if (linkSort != null) {
      for (const { sourceLinks, targetLinks } of nodes2) {
        sourceLinks.sort(linkSort);
        targetLinks.sort(linkSort);
      }
    }
  }
  function computeNodeValues({ nodes: nodes2 }) {
    for (const node of nodes2) {
      node.value = node.fixedValue === void 0 ? Math.max(sum4(node.sourceLinks, value), sum4(node.targetLinks, value)) : node.fixedValue;
    }
  }
  function computeNodeDepths({ nodes: nodes2 }) {
    const n = nodes2.length;
    let current = new Set(nodes2);
    let next = new Set();
    let x3 = 0;
    while (current.size) {
      for (const node of current) {
        node.depth = x3;
        for (const { target } of node.sourceLinks) {
          next.add(target);
        }
      }
      if (++x3 > n)
        throw new Error("circular link");
      current = next;
      next = new Set();
    }
  }
  function computeNodeHeights({ nodes: nodes2 }) {
    const n = nodes2.length;
    let current = new Set(nodes2);
    let next = new Set();
    let x3 = 0;
    while (current.size) {
      for (const node of current) {
        node.height = x3;
        for (const { source } of node.targetLinks) {
          next.add(source);
        }
      }
      if (++x3 > n)
        throw new Error("circular link");
      current = next;
      next = new Set();
    }
  }
  function computeNodeLayers({ nodes: nodes2 }) {
    const x3 = max5(nodes2, (d) => d.depth) + 1;
    const kx3 = (x1 - x0 - dx) / (x3 - 1);
    const columns = new Array(x3);
    for (const node of nodes2) {
      const i = Math.max(0, Math.min(x3 - 1, Math.floor(align.call(null, node, x3))));
      node.layer = i;
      node.x0 = x0 + i * kx3;
      node.x1 = node.x0 + dx;
      if (columns[i])
        columns[i].push(node);
      else
        columns[i] = [node];
    }
    if (sort3)
      for (const column of columns) {
        column.sort(sort3);
      }
    return columns;
  }
  function initializeNodeBreadths(columns) {
    const ky3 = min5(columns, (c) => (y1 - y0 - (c.length - 1) * py) / sum4(c, value));
    for (const nodes2 of columns) {
      let y3 = y0;
      for (const node of nodes2) {
        node.y0 = y3;
        node.y1 = y3 + node.value * ky3;
        y3 = node.y1 + py;
        for (const link3 of node.sourceLinks) {
          link3.width = link3.value * ky3;
        }
      }
      y3 = (y1 - y3 + py) / (nodes2.length + 1);
      for (let i = 0; i < nodes2.length; ++i) {
        const node = nodes2[i];
        node.y0 += y3 * (i + 1);
        node.y1 += y3 * (i + 1);
      }
      reorderLinks(nodes2);
    }
  }
  function computeNodeBreadths(graph) {
    const columns = computeNodeLayers(graph);
    py = Math.min(dy, (y1 - y0) / (max5(columns, (c) => c.length) - 1));
    initializeNodeBreadths(columns);
    for (let i = 0; i < iterations; ++i) {
      const alpha = Math.pow(0.99, i);
      const beta = Math.max(1 - alpha, (i + 1) / iterations);
      relaxRightToLeft(columns, alpha, beta);
      relaxLeftToRight(columns, alpha, beta);
    }
  }
  function relaxLeftToRight(columns, alpha, beta) {
    for (let i = 1, n = columns.length; i < n; ++i) {
      const column = columns[i];
      for (const target of column) {
        let y3 = 0;
        let w = 0;
        for (const { source, value: value2 } of target.targetLinks) {
          let v = value2 * (target.layer - source.layer);
          y3 += targetTop(source, target) * v;
          w += v;
        }
        if (!(w > 0))
          continue;
        let dy2 = (y3 / w - target.y0) * alpha;
        target.y0 += dy2;
        target.y1 += dy2;
        reorderNodeLinks(target);
      }
      if (sort3 === void 0)
        column.sort(ascendingBreadth);
      resolveCollisions(column, beta);
    }
  }
  function relaxRightToLeft(columns, alpha, beta) {
    for (let n = columns.length, i = n - 2; i >= 0; --i) {
      const column = columns[i];
      for (const source of column) {
        let y3 = 0;
        let w = 0;
        for (const { target, value: value2 } of source.sourceLinks) {
          let v = value2 * (target.layer - source.layer);
          y3 += sourceTop(source, target) * v;
          w += v;
        }
        if (!(w > 0))
          continue;
        let dy2 = (y3 / w - source.y0) * alpha;
        source.y0 += dy2;
        source.y1 += dy2;
        reorderNodeLinks(source);
      }
      if (sort3 === void 0)
        column.sort(ascendingBreadth);
      resolveCollisions(column, beta);
    }
  }
  function resolveCollisions(nodes2, alpha) {
    const i = nodes2.length >> 1;
    const subject = nodes2[i];
    resolveCollisionsBottomToTop(nodes2, subject.y0 - py, i - 1, alpha);
    resolveCollisionsTopToBottom(nodes2, subject.y1 + py, i + 1, alpha);
    resolveCollisionsBottomToTop(nodes2, y1, nodes2.length - 1, alpha);
    resolveCollisionsTopToBottom(nodes2, y0, 0, alpha);
  }
  function resolveCollisionsTopToBottom(nodes2, y3, i, alpha) {
    for (; i < nodes2.length; ++i) {
      const node = nodes2[i];
      const dy2 = (y3 - node.y0) * alpha;
      if (dy2 > 1e-6)
        node.y0 += dy2, node.y1 += dy2;
      y3 = node.y1 + py;
    }
  }
  function resolveCollisionsBottomToTop(nodes2, y3, i, alpha) {
    for (; i >= 0; --i) {
      const node = nodes2[i];
      const dy2 = (node.y1 - y3) * alpha;
      if (dy2 > 1e-6)
        node.y0 -= dy2, node.y1 -= dy2;
      y3 = node.y0 - py;
    }
  }
  function reorderNodeLinks({ sourceLinks, targetLinks }) {
    if (linkSort === void 0) {
      for (const { source: { sourceLinks: sourceLinks2 } } of targetLinks) {
        sourceLinks2.sort(ascendingTargetBreadth);
      }
      for (const { target: { targetLinks: targetLinks2 } } of sourceLinks) {
        targetLinks2.sort(ascendingSourceBreadth);
      }
    }
  }
  function reorderLinks(nodes2) {
    if (linkSort === void 0) {
      for (const { sourceLinks, targetLinks } of nodes2) {
        sourceLinks.sort(ascendingTargetBreadth);
        targetLinks.sort(ascendingSourceBreadth);
      }
    }
  }
  function targetTop(source, target) {
    let y3 = source.y0 - (source.sourceLinks.length - 1) * py / 2;
    for (const { target: node, width } of source.sourceLinks) {
      if (node === target)
        break;
      y3 += width + py;
    }
    for (const { source: node, width } of target.targetLinks) {
      if (node === source)
        break;
      y3 -= width;
    }
    return y3;
  }
  function sourceTop(source, target) {
    let y3 = target.y0 - (target.targetLinks.length - 1) * py / 2;
    for (const { source: node, width } of target.targetLinks) {
      if (node === source)
        break;
      y3 += width + py;
    }
    for (const { target: node, width } of source.sourceLinks) {
      if (node === target)
        break;
      y3 -= width;
    }
    return y3;
  }
  return sankey;
}

// node_modules/d3-sankey/node_modules/d3-path/src/path.js
var pi4 = Math.PI;
var tau4 = 2 * pi4;
var epsilon5 = 1e-6;
var tauEpsilon2 = tau4 - epsilon5;
function Path2() {
  this._x0 = this._y0 = this._x1 = this._y1 = null;
  this._ = "";
}
function path2() {
  return new Path2();
}
Path2.prototype = path2.prototype = {
  constructor: Path2,
  moveTo: function(x3, y3) {
    this._ += "M" + (this._x0 = this._x1 = +x3) + "," + (this._y0 = this._y1 = +y3);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x3, y3) {
    this._ += "L" + (this._x1 = +x3) + "," + (this._y1 = +y3);
  },
  quadraticCurveTo: function(x1, y1, x3, y3) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x3) + "," + (this._y1 = +y3);
  },
  bezierCurveTo: function(x1, y1, x22, y22, x3, y3) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x22 + "," + +y22 + "," + (this._x1 = +x3) + "," + (this._y1 = +y3);
  },
  arcTo: function(x1, y1, x22, y22, r) {
    x1 = +x1, y1 = +y1, x22 = +x22, y22 = +y22, r = +r;
    var x0 = this._x1, y0 = this._y1, x21 = x22 - x1, y21 = y22 - y1, x01 = x0 - x1, y01 = y0 - y1, l01_2 = x01 * x01 + y01 * y01;
    if (r < 0)
      throw new Error("negative radius: " + r);
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } else if (!(l01_2 > epsilon5))
      ;
    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon5) || !r) {
      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
    } else {
      var x20 = x22 - x0, y20 = y22 - y0, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi4 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21;
      if (Math.abs(t01 - 1) > epsilon5) {
        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
      }
      this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
    }
  },
  arc: function(x3, y3, r, a0, a1, ccw) {
    x3 = +x3, y3 = +y3, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0), dy = r * Math.sin(a0), x0 = x3 + dx, y0 = y3 + dy, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;
    if (r < 0)
      throw new Error("negative radius: " + r);
    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } else if (Math.abs(this._x1 - x0) > epsilon5 || Math.abs(this._y1 - y0) > epsilon5) {
      this._ += "L" + x0 + "," + y0;
    }
    if (!r)
      return;
    if (da < 0)
      da = da % tau4 + tau4;
    if (da > tauEpsilon2) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x3 - dx) + "," + (y3 - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } else if (da > epsilon5) {
      this._ += "A" + r + "," + r + ",0," + +(da >= pi4) + "," + cw + "," + (this._x1 = x3 + r * Math.cos(a1)) + "," + (this._y1 = y3 + r * Math.sin(a1));
    }
  },
  rect: function(x3, y3, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x3) + "," + (this._y0 = this._y1 = +y3) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function() {
    return this._;
  }
};
var path_default3 = path2;

// node_modules/d3-sankey/node_modules/d3-shape/src/constant.js
function constant_default7(x3) {
  return function constant4() {
    return x3;
  };
}

// node_modules/d3-sankey/node_modules/d3-shape/src/math.js
var epsilon6 = 1e-12;
var pi5 = Math.PI;
var halfPi3 = pi5 / 2;
var tau5 = 2 * pi5;

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/linear.js
function Linear2(context) {
  this._context = context;
}
Linear2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x3, y3) : this._context.moveTo(x3, y3);
        break;
      case 1:
        this._point = 2;
      default:
        this._context.lineTo(x3, y3);
        break;
    }
  }
};
function linear_default2(context) {
  return new Linear2(context);
}

// node_modules/d3-sankey/node_modules/d3-shape/src/point.js
function x2(p) {
  return p[0];
}
function y2(p) {
  return p[1];
}

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/radial.js
var curveRadialLinear2 = curveRadial2(linear_default2);
function Radial2(curve) {
  this._curve = curve;
}
Radial2.prototype = {
  areaStart: function() {
    this._curve.areaStart();
  },
  areaEnd: function() {
    this._curve.areaEnd();
  },
  lineStart: function() {
    this._curve.lineStart();
  },
  lineEnd: function() {
    this._curve.lineEnd();
  },
  point: function(a3, r) {
    this._curve.point(r * Math.sin(a3), r * -Math.cos(a3));
  }
};
function curveRadial2(curve) {
  function radial2(context) {
    return new Radial2(curve(context));
  }
  radial2._curve = curve;
  return radial2;
}

// node_modules/d3-sankey/node_modules/d3-shape/src/array.js
var slice5 = Array.prototype.slice;

// node_modules/d3-sankey/node_modules/d3-shape/src/link/index.js
function linkSource2(d) {
  return d.source;
}
function linkTarget2(d) {
  return d.target;
}
function link2(curve) {
  var source = linkSource2, target = linkTarget2, x3 = x2, y3 = y2, context = null;
  function link3() {
    var buffer, argv = slice5.call(arguments), s3 = source.apply(this, argv), t = target.apply(this, argv);
    if (!context)
      context = buffer = path_default3();
    curve(context, +x3.apply(this, (argv[0] = s3, argv)), +y3.apply(this, argv), +x3.apply(this, (argv[0] = t, argv)), +y3.apply(this, argv));
    if (buffer)
      return context = null, buffer + "" || null;
  }
  link3.source = function(_) {
    return arguments.length ? (source = _, link3) : source;
  };
  link3.target = function(_) {
    return arguments.length ? (target = _, link3) : target;
  };
  link3.x = function(_) {
    return arguments.length ? (x3 = typeof _ === "function" ? _ : constant_default7(+_), link3) : x3;
  };
  link3.y = function(_) {
    return arguments.length ? (y3 = typeof _ === "function" ? _ : constant_default7(+_), link3) : y3;
  };
  link3.context = function(_) {
    return arguments.length ? (context = _ == null ? null : _, link3) : context;
  };
  return link3;
}
function curveHorizontal(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
}
function linkHorizontal2() {
  return link2(curveHorizontal);
}

// node_modules/d3-sankey/node_modules/d3-shape/src/symbol/diamond.js
var tan302 = Math.sqrt(1 / 3);
var tan30_22 = tan302 * 2;

// node_modules/d3-sankey/node_modules/d3-shape/src/symbol/star.js
var kr2 = Math.sin(pi5 / 10) / Math.sin(7 * pi5 / 10);
var kx2 = Math.sin(tau5 / 10) * kr2;
var ky2 = -Math.cos(tau5 / 10) * kr2;

// node_modules/d3-sankey/node_modules/d3-shape/src/symbol/triangle.js
var sqrt34 = Math.sqrt(3);

// node_modules/d3-sankey/node_modules/d3-shape/src/symbol/wye.js
var s2 = Math.sqrt(3) / 2;
var k2 = 1 / Math.sqrt(12);
var a2 = (k2 / 2 + 1) * 3;

// node_modules/d3-sankey/node_modules/d3-shape/src/noop.js
function noop_default3() {
}

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/basis.js
function point6(that, x3, y3) {
  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x3) / 6, (that._y0 + 4 * that._y1 + y3) / 6);
}
function Basis2(context) {
  this._context = context;
}
Basis2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3:
        point6(this, this._x1, this._y1);
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x3, y3) : this._context.moveTo(x3, y3);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
      default:
        point6(this, x3, y3);
        break;
    }
    this._x0 = this._x1, this._x1 = x3;
    this._y0 = this._y1, this._y1 = y3;
  }
};

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/basisClosed.js
function BasisClosed2(context) {
  this._context = context;
}
BasisClosed2.prototype = {
  areaStart: noop_default3,
  areaEnd: noop_default3,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x3, this._y2 = y3;
        break;
      case 1:
        this._point = 2;
        this._x3 = x3, this._y3 = y3;
        break;
      case 2:
        this._point = 3;
        this._x4 = x3, this._y4 = y3;
        this._context.moveTo((this._x0 + 4 * this._x1 + x3) / 6, (this._y0 + 4 * this._y1 + y3) / 6);
        break;
      default:
        point6(this, x3, y3);
        break;
    }
    this._x0 = this._x1, this._x1 = x3;
    this._y0 = this._y1, this._y1 = y3;
  }
};

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/basisOpen.js
function BasisOpen2(context) {
  this._context = context;
}
BasisOpen2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x3) / 6, y0 = (this._y0 + 4 * this._y1 + y3) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;
      case 3:
        this._point = 4;
      default:
        point6(this, x3, y3);
        break;
    }
    this._x0 = this._x1, this._x1 = x3;
    this._y0 = this._y1, this._y1 = y3;
  }
};

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/bundle.js
function Bundle2(context, beta) {
  this._basis = new Basis2(context);
  this._beta = beta;
}
Bundle2.prototype = {
  lineStart: function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  },
  lineEnd: function() {
    var x3 = this._x, y3 = this._y, j = x3.length - 1;
    if (j > 0) {
      var x0 = x3[0], y0 = y3[0], dx = x3[j] - x0, dy = y3[j] - y0, i = -1, t;
      while (++i <= j) {
        t = i / j;
        this._basis.point(this._beta * x3[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y3[i] + (1 - this._beta) * (y0 + t * dy));
      }
    }
    this._x = this._y = null;
    this._basis.lineEnd();
  },
  point: function(x3, y3) {
    this._x.push(+x3);
    this._y.push(+y3);
  }
};
var bundle_default2 = function custom19(beta) {
  function bundle(context) {
    return beta === 1 ? new Basis2(context) : new Bundle2(context, beta);
  }
  bundle.beta = function(beta2) {
    return custom19(+beta2);
  };
  return bundle;
}(0.85);

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/cardinal.js
function point7(that, x3, y3) {
  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x3), that._y2 + that._k * (that._y1 - y3), that._x2, that._y2);
}
function Cardinal2(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
Cardinal2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        point7(this, this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x3, y3) : this._context.moveTo(x3, y3);
        break;
      case 1:
        this._point = 2;
        this._x1 = x3, this._y1 = y3;
        break;
      case 2:
        this._point = 3;
      default:
        point7(this, x3, y3);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x3;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y3;
  }
};
var cardinal_default2 = function custom20(tension) {
  function cardinal(context) {
    return new Cardinal2(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom20(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/cardinalClosed.js
function CardinalClosed2(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalClosed2.prototype = {
  areaStart: noop_default3,
  areaEnd: noop_default3,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x3, this._y3 = y3;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x3, this._y4 = y3);
        break;
      case 2:
        this._point = 3;
        this._x5 = x3, this._y5 = y3;
        break;
      default:
        point7(this, x3, y3);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x3;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y3;
  }
};
var cardinalClosed_default2 = function custom21(tension) {
  function cardinal(context) {
    return new CardinalClosed2(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom21(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/cardinalOpen.js
function CardinalOpen2(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalOpen2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point7(this, x3, y3);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x3;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y3;
  }
};
var cardinalOpen_default2 = function custom22(tension) {
  function cardinal(context) {
    return new CardinalOpen2(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom22(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/catmullRom.js
function point8(that, x3, y3) {
  var x1 = that._x1, y1 = that._y1, x22 = that._x2, y22 = that._y2;
  if (that._l01_a > epsilon6) {
    var a3 = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a, n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a3 - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a3 - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }
  if (that._l23_a > epsilon6) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a, m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x22 = (x22 * b + that._x1 * that._l23_2a - x3 * that._l12_2a) / m;
    y22 = (y22 * b + that._y1 * that._l23_2a - y3 * that._l12_2a) / m;
  }
  that._context.bezierCurveTo(x1, y1, x22, y22, that._x2, that._y2);
}
function CatmullRom2(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}
CatmullRom2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        this.point(this._x2, this._y2);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    if (this._point) {
      var x23 = this._x2 - x3, y23 = this._y2 - y3;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x3, y3) : this._context.moveTo(x3, y3);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
      default:
        point8(this, x3, y3);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x3;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y3;
  }
};
var catmullRom_default2 = function custom23(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRom2(context, alpha) : new Cardinal2(context, 0);
  }
  catmullRom.alpha = function(alpha2) {
    return custom23(+alpha2);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/catmullRomClosed.js
function CatmullRomClosed2(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}
CatmullRomClosed2.prototype = {
  areaStart: noop_default3,
  areaEnd: noop_default3,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    if (this._point) {
      var x23 = this._x2 - x3, y23 = this._y2 - y3;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x3, this._y3 = y3;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x3, this._y4 = y3);
        break;
      case 2:
        this._point = 3;
        this._x5 = x3, this._y5 = y3;
        break;
      default:
        point8(this, x3, y3);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x3;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y3;
  }
};
var catmullRomClosed_default2 = function custom24(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomClosed2(context, alpha) : new CardinalClosed2(context, 0);
  }
  catmullRom.alpha = function(alpha2) {
    return custom24(+alpha2);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/catmullRomOpen.js
function CatmullRomOpen2(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}
CatmullRomOpen2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    if (this._point) {
      var x23 = this._x2 - x3, y23 = this._y2 - y3;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point8(this, x3, y3);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x3;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y3;
  }
};
var catmullRomOpen_default2 = function custom25(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomOpen2(context, alpha) : new CardinalOpen2(context, 0);
  }
  catmullRom.alpha = function(alpha2) {
    return custom25(+alpha2);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/linearClosed.js
function LinearClosed2(context) {
  this._context = context;
}
LinearClosed2.prototype = {
  areaStart: noop_default3,
  areaEnd: noop_default3,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point)
      this._context.closePath();
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    if (this._point)
      this._context.lineTo(x3, y3);
    else
      this._point = 1, this._context.moveTo(x3, y3);
  }
};

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/monotone.js
function sign2(x3) {
  return x3 < 0 ? -1 : 1;
}
function slope32(that, x22, y22) {
  var h0 = that._x1 - that._x0, h1 = x22 - that._x1, s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0), s1 = (y22 - that._y1) / (h1 || h0 < 0 && -0), p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign2(s0) + sign2(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
}
function slope22(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
}
function point9(that, t03, t13) {
  var x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 3;
  that._context.bezierCurveTo(x0 + dx, y0 + dx * t03, x1 - dx, y1 - dx * t13, x1, y1);
}
function MonotoneX2(context) {
  this._context = context;
}
MonotoneX2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
      case 3:
        point9(this, this._t0, slope22(this, this._t0));
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    var t13 = NaN;
    x3 = +x3, y3 = +y3;
    if (x3 === this._x1 && y3 === this._y1)
      return;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x3, y3) : this._context.moveTo(x3, y3);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        point9(this, slope22(this, t13 = slope32(this, x3, y3)), t13);
        break;
      default:
        point9(this, this._t0, t13 = slope32(this, x3, y3));
        break;
    }
    this._x0 = this._x1, this._x1 = x3;
    this._y0 = this._y1, this._y1 = y3;
    this._t0 = t13;
  }
};
function MonotoneY2(context) {
  this._context = new ReflectContext2(context);
}
(MonotoneY2.prototype = Object.create(MonotoneX2.prototype)).point = function(x3, y3) {
  MonotoneX2.prototype.point.call(this, y3, x3);
};
function ReflectContext2(context) {
  this._context = context;
}
ReflectContext2.prototype = {
  moveTo: function(x3, y3) {
    this._context.moveTo(y3, x3);
  },
  closePath: function() {
    this._context.closePath();
  },
  lineTo: function(x3, y3) {
    this._context.lineTo(y3, x3);
  },
  bezierCurveTo: function(x1, y1, x22, y22, x3, y3) {
    this._context.bezierCurveTo(y1, x1, y22, x22, y3, x3);
  }
};

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/natural.js
function Natural2(context) {
  this._context = context;
}
Natural2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x3 = this._x, y3 = this._y, n = x3.length;
    if (n) {
      this._line ? this._context.lineTo(x3[0], y3[0]) : this._context.moveTo(x3[0], y3[0]);
      if (n === 2) {
        this._context.lineTo(x3[1], y3[1]);
      } else {
        var px = controlPoints2(x3), py = controlPoints2(y3);
        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x3[i1], y3[i1]);
        }
      }
    }
    if (this._line || this._line !== 0 && n === 1)
      this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x3, y3) {
    this._x.push(+x3);
    this._y.push(+y3);
  }
};
function controlPoints2(x3) {
  var i, n = x3.length - 1, m, a3 = new Array(n), b = new Array(n), r = new Array(n);
  a3[0] = 0, b[0] = 2, r[0] = x3[0] + 2 * x3[1];
  for (i = 1; i < n - 1; ++i)
    a3[i] = 1, b[i] = 4, r[i] = 4 * x3[i] + 2 * x3[i + 1];
  a3[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x3[n - 1] + x3[n];
  for (i = 1; i < n; ++i)
    m = a3[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
  a3[n - 1] = r[n - 1] / b[n - 1];
  for (i = n - 2; i >= 0; --i)
    a3[i] = (r[i] - a3[i + 1]) / b[i];
  b[n - 1] = (x3[n] + a3[n - 1]) / 2;
  for (i = 0; i < n - 1; ++i)
    b[i] = 2 * x3[i + 1] - a3[i + 1];
  return [a3, b];
}

// node_modules/d3-sankey/node_modules/d3-shape/src/curve/step.js
function Step2(context, t) {
  this._context = context;
  this._t = t;
}
Step2.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2)
      this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    if (this._line >= 0)
      this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x3, y3) {
    x3 = +x3, y3 = +y3;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x3, y3) : this._context.moveTo(x3, y3);
        break;
      case 1:
        this._point = 2;
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y3);
          this._context.lineTo(x3, y3);
        } else {
          var x1 = this._x * (1 - this._t) + x3 * this._t;
          this._context.lineTo(x1, this._y);
          this._context.lineTo(x1, y3);
        }
        break;
      }
    }
    this._x = x3, this._y = y3;
  }
};

// node_modules/d3-sankey/src/sankeyLinkHorizontal.js
function horizontalSource(d) {
  return [d.source.x1, d.y0];
}
function horizontalTarget(d) {
  return [d.target.x0, d.y1];
}
function sankeyLinkHorizontal_default() {
  return linkHorizontal2().source(horizontalSource).target(horizontalTarget);
}

// node_modules/@carbon/charts/components/graphs/alluvial.js
var __extends45 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Alluvial2 = function(_super) {
  __extends45(Alluvial3, _super);
  function Alluvial3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "alluvial";
    _this.renderType = RenderTypes.SVG;
    _this.gradient_id = "gradient-id-" + Math.floor(Math.random() * 99999999999);
    return _this;
  }
  Alluvial3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var svg = this.getComponentContainer({ withinChartClip: true });
    svg.html("");
    var _a4 = DOMUtils.getSVGElementSize(svg, {
      useAttrs: true
    }), width = _a4.width, height = _a4.height;
    if (width < 1 || height < 1) {
      return;
    }
    var options2 = this.model.getOptions();
    var data = this.model.getDisplayData();
    var isGradientAllowed = Tools.getProperty(this.getOptions(), "color", "gradient", "enabled");
    var nodePadding = alluvial.minNodePadding;
    if (options2.alluvial.nodePadding > alluvial.minNodePadding) {
      nodePadding = options2.alluvial.nodePadding;
    }
    var sankey = Sankey().nodeId(function(d) {
      return d.name;
    }).nodeWidth(alluvial.nodeWidth).nodePadding(nodePadding).extent([
      [2, 30],
      [width - 2, height]
    ]);
    this.graph = sankey({
      nodes: options2.alluvial.nodes.map(function(d) {
        return Object.assign({}, d);
      }),
      links: data.map(function(d) {
        return Object.assign({}, d);
      })
    });
    this.graph.nodes = this.graph.nodes.filter(function(node2) {
      return node2.value !== 0;
    });
    var nodeCoordinates = {};
    this.graph.nodes.forEach(function(element) {
      var _a5;
      var point10 = element.x0;
      if (element.category) {
        nodeCoordinates[point10] = (_a5 = element) === null || _a5 === void 0 ? void 0 : _a5.category;
      }
    });
    var alluvialCategory = svg.append("g").classed("header-arrows", true).selectAll("g").data(Object.keys(nodeCoordinates)).join("g").attr("transform", function(d) {
      return "translate(" + d + ", 0)";
    });
    alluvialCategory.append("text").attr("id", function(d, i) {
      return _this.services.domUtils.generateElementIDString("alluvial-category-" + i);
    }).style("font-size", "14px").text(function(d) {
      if (nodeCoordinates[d]) {
        return nodeCoordinates[d];
      }
      return "";
    }).attr("y", 20).attr("x", function(d, i) {
      var elementID = _this.services.domUtils.generateElementIDString("alluvial-category-" + i);
      var width2 = DOMUtils.getSVGElementSize(select_default2("text#" + elementID), { useBBox: true }).width;
      var x3 = 0;
      if (d + x3 >= width2) {
        x3 = -width2 + 4;
      }
      return x3;
    });
    var links = svg.append("g").attr("fill", "none").selectAll("g").data(this.graph.links);
    links.exit().remove();
    if (isGradientAllowed) {
      var scale_1 = Tools.getProperty(this.getOptions(), "color", "scale");
      if (scale_1) {
        links.enter().append("linearGradient").attr("id", function(d) {
          return _this.gradient_id + "-link-" + d.index;
        }).attr("gradientUnits", "userSpaceOnUse").call(function(gradient) {
          return gradient.append("stop").attr("offset", "0%").attr("stop-color", function(d) {
            return scale_1[d.source.name];
          });
        }).call(function(gradient) {
          return gradient.append("stop").attr("offset", "100%").attr("stop-color", function(d) {
            return scale_1[d.target.name];
          });
        });
      }
      links.exit().remove();
    }
    links.enter().append("path").classed("link", true).attr("d", sankeyLinkHorizontal_default()).attr("id", function(d) {
      return _this.services.domUtils.generateElementIDString("alluvial-line-" + d.index);
    }).attr("class", function(d) {
      if (options2.alluvial.monochrome) {
        return _this.model.getColorClassName({
          classNameTypes: [ColorClassNameTypes.STROKE],
          dataGroupName: 0,
          originalClassName: "link"
        });
      }
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.STROKE],
        dataGroupName: d.source.index,
        originalClassName: "link"
      });
    }).style("stroke", function(d) {
      if (isGradientAllowed) {
        return "url(#" + _this.gradient_id + "-link-" + d.index + ")";
      }
      return _this.model.getFillColor(d.source.name);
    }).attr("stroke-width", function(d) {
      return Math.max(1, d.width);
    }).style("stroke-opacity", alluvial.opacity.default).attr("aria-label", function(d) {
      return d.source.name + " \u2192 " + d.target.name + " (" + d.value + (options2.alluvial.units ? " " + options2.alluvial.units : "") + ")";
    });
    var node = svg.append("g").selectAll("g").data(this.graph.nodes).enter().append("g").attr("id", function(d) {
      return _this.services.domUtils.generateElementIDString("alluvial-node-" + d.index);
    }).classed("node-group", true).attr("transform", function(d) {
      return "translate(" + d.x0 + ", " + d.y0 + ")";
    });
    node.append("rect").classed("node", true).attr("height", function(d) {
      return d.y1 - d.y0;
    }).attr("width", function(d) {
      return d.x1 - d.x0;
    }).attr("fill", "black");
    var textNode = node.append("g").attr("id", function(d) {
      return _this.services.domUtils.generateElementIDString("alluvial-node-title-" + d.index);
    });
    textNode.append("text").attr("id", function(d) {
      return _this.services.domUtils.generateElementIDString("alluvial-node-text-" + d.index);
    }).attr("class", "node-text").style("font-size", "12px").attr("text-anchor", "start").attr("fill", "white").attr("x", 4).attr("dy", 13).text(function(d) {
      return d.name + " (" + d.value + ")";
    }).attr("aria-label", function(d) {
      return d.name + " (" + d.value + ")";
    });
    textNode.append("rect").classed("node-text-bg", true).attr("width", function(d, i) {
      var elementID = _this.services.domUtils.generateElementIDString("alluvial-node-text-" + i);
      var width2 = DOMUtils.getSVGElementSize(select_default2("text#" + elementID), { useBBox: true }).width;
      return width2 + 8;
    }).attr("height", 18).attr("stroke-width", 2).lower();
    textNode.attr("transform", function(d, i) {
      var elementID = _this.services.domUtils.generateElementIDString("alluvial-node-text-" + i);
      var width2 = DOMUtils.getSVGElementSize(select_default2("text#" + elementID), { useBBox: true }).width;
      var y3 = (d.y1 - d.y0) / 2 - 9;
      var x3 = d.x1 - d.x0;
      if (d.x1 >= width2) {
        x3 = x3 - (width2 + 16);
      } else {
        x3 += 4;
      }
      return "translate(" + x3 + ", " + y3 + ")";
    });
    this.addLineEventListener();
    this.addNodeEventListener();
  };
  Alluvial3.prototype.addLineEventListener = function() {
    var options2 = this.getOptions();
    var self2 = this;
    var debouncedLineHighlight = Tools.debounce(function(link3, event) {
      if (event === void 0) {
        event = "mouseover";
      }
      var allLinks = self2.parent.selectAll("path.link").transition().call(function(t) {
        return self2.services.transitions.setupTransition({
          transition: t,
          name: "alluvial-links-mouse-highlight"
        });
      });
      if (event === "mouseout") {
        select_default2(link3).lower();
        allLinks.style("stroke-opacity", alluvial.opacity.default);
      } else {
        allLinks.style("stroke-opacity", function() {
          if (link3 === this) {
            select_default2(this).raise();
            return alluvial.opacity.selected;
          }
          return alluvial.opacity.unfocus;
        });
      }
    }, 33);
    this.parent.selectAll("path.link").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      debouncedLineHighlight(this, "mouseover");
      hoveredElement.classed("link-hovered", true);
      var strokeColor = getComputedStyle(this).getPropertyValue("stroke");
      self2.services.events.dispatchEvent(Events.Alluvial.LINE_MOUSEOVER, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event,
        hoveredElement,
        items: [
          {
            label: datum2.target.name,
            value: datum2.value + (options2.alluvial.units ? " " + options2.alluvial.units : ""),
            color: strokeColor,
            labelIcon: self2.getRightArrowIcon()
          }
        ]
      });
    }).on("mousemove", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Alluvial.LINE_MOUSEMOVE, {
        event,
        element: select_default2(this),
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Alluvial.LINE_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      debouncedLineHighlight(this, "mouseout");
      hoveredElement.classed("link-hovered", false);
      self2.services.events.dispatchEvent(Events.Alluvial.LINE_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        event,
        hoveredElement
      });
    });
  };
  Alluvial3.prototype.addNodeEventListener = function() {
    var _this = this;
    var self2 = this;
    var debouncedLineHighlight = Tools.debounce(function(links, event) {
      if (links === void 0) {
        links = [];
      }
      if (event === void 0) {
        event = "mouseover";
      }
      if (event === "mouseout" || links.length === 0) {
        self2.parent.selectAll("path.link").classed("link-hovered", false).data(_this.graph.links, function(d) {
          return d.index;
        }).order().style("stroke-opacity", alluvial.opacity.default);
        return;
      }
      var allLinks = self2.parent.selectAll("path.link").transition().call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "alluvial-link-mouse-highlight"
        });
      });
      allLinks.style("stroke-opacity", function(d) {
        if (links.some(function(element) {
          return element === d.index;
        })) {
          select_default2(this).classed("link-hovered", true).raise();
          return alluvial.opacity.selected;
        }
        return alluvial.opacity.unfocus;
      });
    }, 66);
    self2.parent.selectAll(".node-group").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      var paths = [];
      self2.traverse({ link: "sourceLinks", node: "target" }, datum2, paths);
      self2.traverse({ link: "targetLinks", node: "source" }, datum2, paths);
      if (paths.length) {
        var nodeMatrix = Tools.getTranformOffsets(hoveredElement.attr("transform"));
        hoveredElement.attr("transform", "translate(" + (nodeMatrix.x - 2) + ", " + nodeMatrix.y + ")");
        hoveredElement.classed("node-hovered", true).selectAll("rect.node").attr("width", 8);
        if (datum2.x0 - 2 === 0) {
          var elementID_1 = self2.services.domUtils.generateElementIDString("alluvial-node-title-" + datum2.index);
          var titleContainer = self2.parent.select("g#" + elementID_1);
          var titleMatrix = Tools.getTranformOffsets(titleContainer.attr("transform"));
          titleContainer.attr("transform", "translate(" + (titleMatrix.x + 4) + "," + titleMatrix.y + ")");
        }
        var elementID = self2.services.domUtils.generateElementIDString("alluvial-node-text-" + datum2.index);
        self2.parent.select("text#" + elementID).style("font-weight", "bold");
        debouncedLineHighlight(paths, "mouseover");
        self2.services.events.dispatchEvent(Events.Alluvial.NODE_MOUSEOVER, {
          event,
          element: hoveredElement,
          datum: datum2
        });
      }
    }).on("mousemove", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Alluvial.NODE_MOUSEMOVE, {
        event,
        element: select_default2(this),
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Alluvial.NODE_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      var nodeMatrix = Tools.getTranformOffsets(hoveredElement.attr("transform"));
      hoveredElement.classed("node-hovered", false).attr("transform", "translate(" + (nodeMatrix.x + 2) + ", " + nodeMatrix.y + ")").select("rect.node").attr("width", alluvial.nodeWidth);
      if (datum2.x0 - 2 === 0) {
        var elementID_2 = self2.services.domUtils.generateElementIDString("alluvial-node-title-" + datum2.index);
        var titleContainer = self2.parent.select("g#" + elementID_2);
        var titleMatrix = Tools.getTranformOffsets(titleContainer.attr("transform"));
        titleContainer.attr("transform", "translate(" + (titleMatrix.x - 4) + "," + titleMatrix.y + ")");
      }
      var elementID = self2.services.domUtils.generateElementIDString("alluvial-node-text-" + datum2.index);
      self2.parent.select("text#" + elementID).style("font-weight", "normal");
      debouncedLineHighlight([], "mouseout");
      self2.services.events.dispatchEvent(Events.Alluvial.NODE_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        hoveredElement
      });
    });
  };
  Alluvial3.prototype.traverse = function(direction, node, visited) {
    var _this = this;
    if (visited === void 0) {
      visited = [];
    }
    var links = node[direction.link].map(function(element) {
      visited.push(element.index);
      return element[direction.node];
    });
    links.forEach(function(element) {
      return _this.traverse(direction, element, visited);
    });
  };
  Alluvial3.prototype.getRightArrowIcon = function() {
    return '\n		<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">\n			<polygon points="18 6 16.57 7.393 24.15 15 4 15 4 17 24.15 17 16.57 24.573 18 26 28 16 18 6"/>\n			<rect  data-name="&lt;Transparent Rectangle&gt;" style="fill: none;" width="32" height="32"/>\n		</svg>';
  };
  Alluvial3.prototype.destroy = function() {
    this.parent.selectAll("path.line,.node-group").on("mouseover", null).on("mousemove", null).on("click", null).on("mouseout", null);
  };
  return Alluvial3;
}(Component);

// node_modules/@carbon/charts/components/graphs/heatmap.js
var __extends46 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Heatmap2 = function(_super) {
  __extends46(Heatmap3, _super);
  function Heatmap3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "heatmap";
    _this.renderType = RenderTypes.SVG;
    _this.matrix = {};
    _this.xBandwidth = 0;
    _this.yBandwidth = 0;
    _this.translationUnits = {
      x: 0,
      y: 0
    };
    _this.handleAxisOnHover = function(event) {
      var detail = event.detail;
      var datum2 = detail.datum;
      var ranges = _this.model.getUniqueRanges();
      var domains = _this.model.getUniqueDomain();
      var domainLabel = _this.services.cartesianScales.getDomainLabel();
      var rangeLabel = _this.services.cartesianScales.getRangeLabel();
      var mainXScale = _this.services.cartesianScales.getMainXScale();
      var mainYScale = _this.services.cartesianScales.getMainYScale();
      var label = "", sum6 = 0, minimum = 0, maximum = 0;
      if (_this.matrix[datum2] !== void 0) {
        label = domainLabel;
        ranges.forEach(function(element) {
          var value2 = _this.matrix[datum2][element].value || 0;
          sum6 += value2;
          minimum = value2 < minimum ? value2 : minimum;
          maximum = value2 > maximum ? value2 : maximum;
        });
      } else {
        label = rangeLabel;
        domains.forEach(function(element) {
          var value2 = _this.matrix[element][datum2].value || 0;
          sum6 += value2;
          minimum = value2 < minimum ? value2 : minimum;
          maximum = value2 > maximum ? value2 : maximum;
        });
      }
      if (mainXScale(datum2) !== void 0) {
        _this.parent.select("g.multi-cell.column-highlight").classed("highlighter-hidden", false).attr("transform", "translate(" + mainXScale(datum2) + ", " + min2(mainYScale.range()) + ")");
      } else if (mainYScale(datum2) !== void 0) {
        _this.parent.select("g.multi-cell.row-highlight").classed("highlighter-hidden", false).attr("transform", "translate(" + min2(mainXScale.range()) + "," + mainYScale(datum2) + ")");
      }
      _this.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        event: detail.event,
        hoveredElement: select_default2(event.detail.element),
        items: [
          {
            label,
            value: datum2,
            bold: true
          },
          {
            label: "Min",
            value: minimum
          },
          {
            label: "Max",
            value: maximum
          },
          {
            label: "Average",
            value: sum6 / domains.length
          }
        ]
      });
    };
    _this.handleAxisMouseOut = function(event) {
      _this.parent.selectAll("g.multi-cell").classed("highlighter-hidden", true);
      _this.services.events.dispatchEvent(Events.Tooltip.HIDE, {
        event
      });
    };
    return _this;
  }
  Heatmap3.prototype.init = function() {
    var eventsFragment = this.services.events;
    eventsFragment.addEventListener(Events.Axis.LABEL_MOUSEOVER, this.handleAxisOnHover);
    eventsFragment.addEventListener(Events.Axis.LABEL_MOUSEOUT, this.handleAxisMouseOut);
    eventsFragment.addEventListener(Events.Axis.LABEL_FOCUS, this.handleAxisOnHover);
    eventsFragment.addEventListener(Events.Axis.LABEL_BLUR, this.handleAxisMouseOut);
  };
  Heatmap3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var svg = this.getComponentContainer({ withinChartClip: true });
    svg.lower();
    var cartesianScales = this.services.cartesianScales;
    this.matrix = this.model.getMatrix();
    svg.html("");
    if (Tools.getProperty(this.getOptions(), "data", "loading")) {
      return;
    }
    var mainXScale = cartesianScales.getMainXScale();
    var mainYScale = cartesianScales.getMainYScale();
    var domainIdentifier = cartesianScales.getDomainIdentifier();
    var rangeIdentifier = cartesianScales.getRangeIdentifier();
    var uniqueDomain = this.model.getUniqueDomain();
    var uniqueRange = this.model.getUniqueRanges();
    var matrixArray = this.model.getMatrixAsArray();
    var xRange = mainXScale.range();
    var yRange = mainYScale.range();
    this.xBandwidth = Math.abs((xRange[1] - xRange[0]) / uniqueDomain.length);
    this.yBandwidth = Math.abs((yRange[1] - yRange[0]) / uniqueRange.length);
    var patternID = this.services.domUtils.generateElementIDString("heatmap-pattern-stripes");
    svg.append("defs").append("pattern").attr("id", patternID).attr("width", 3).attr("height", 3).attr("patternUnits", "userSpaceOnUse").attr("patternTransform", "rotate(45)").append("rect").classed("pattern-fill", true).attr("width", 0.5).attr("height", 8);
    var rectangles = svg.selectAll().data(matrixArray).enter().append("g").attr("class", function(d) {
      return "heat-" + d.index;
    }).classed("cell", true).attr("transform", function(d) {
      return "translate(" + mainXScale(d[domainIdentifier]) + ", " + mainYScale(d[rangeIdentifier]) + ")";
    }).append("rect").attr("class", function(d) {
      return _this.model.getColorClassName({
        value: d.value,
        originalClassName: "heat-" + d.index
      });
    }).classed("heat", true).classed("null-state", function(d) {
      return d.index === -1 || d.value === null ? true : false;
    }).attr("width", this.xBandwidth).attr("height", this.yBandwidth).style("fill", function(d) {
      if (d.index === -1 || d.value === null) {
        return "url(#" + patternID + ")";
      }
      return _this.model.getFillColor(Number(d.value));
    }).attr("aria-label", function(d) {
      return d.value;
    });
    this.createOuterBox("g.cell-highlight", this.xBandwidth, this.yBandwidth);
    this.createOuterBox("g.multi-cell.column-highlight", this.xBandwidth, Math.abs(yRange[1] - yRange[0]));
    this.createOuterBox("g.multi-cell.row-highlight", Math.abs(xRange[1] - xRange[0]), this.yBandwidth);
    if (this.determineDividerStatus()) {
      rectangles.style("stroke-width", "1px");
      this.parent.select("g.cell-highlight").classed("cell-2", true);
    }
    this.addEventListener();
  };
  Heatmap3.prototype.createOuterBox = function(parentTag, xBandwidth, yBandwidth) {
    var highlight = DOMUtils.appendOrSelect(this.parent, parentTag).classed("shadows", true).classed("highlighter-hidden", true);
    DOMUtils.appendOrSelect(highlight, "line.top").attr("x1", -1).attr("x2", xBandwidth + 1);
    DOMUtils.appendOrSelect(highlight, "line.left").attr("x1", 0).attr("y1", -1).attr("x2", 0).attr("y2", yBandwidth + 1);
    DOMUtils.appendOrSelect(highlight, "line.down").attr("x1", -1).attr("x2", xBandwidth + 1).attr("y1", yBandwidth).attr("y2", yBandwidth);
    DOMUtils.appendOrSelect(highlight, "line.right").attr("x1", xBandwidth).attr("x2", xBandwidth).attr("y1", -1).attr("y2", yBandwidth + 1);
  };
  Heatmap3.prototype.determineDividerStatus = function() {
    var dividerStatus = Tools.getProperty(this.getOptions(), "heatmap", "divider", "state");
    if (dividerStatus !== DividerStatus.OFF) {
      if (dividerStatus === DividerStatus.AUTO && heatmap.minCellDividerDimension <= this.xBandwidth && heatmap.minCellDividerDimension <= this.yBandwidth || dividerStatus === DividerStatus.ON) {
        return true;
      }
    }
    return false;
  };
  Heatmap3.prototype.addEventListener = function() {
    var self2 = this;
    var cartesianScales = this.services.cartesianScales;
    var options2 = this.getOptions();
    var totalLabel = get_default(options2, "tooltip.totalLabel");
    var domainIdentifier = cartesianScales.getDomainIdentifier();
    var rangeIdentifier = cartesianScales.getRangeIdentifier();
    var domainLabel = cartesianScales.getDomainLabel();
    var rangeLabel = cartesianScales.getRangeLabel();
    this.parent.selectAll("g.cell").on("mouseover", function(event, datum2) {
      var cell = select_default2(this);
      var hoveredElement = cell.select("rect.heat");
      var nullState = hoveredElement.classed("null-state");
      if (!nullState) {
        var transform2 = Tools.getTranformOffsets(cell.attr("transform"));
        select_default2("g.cell-highlight").attr("transform", "translate(" + (transform2.x + self2.translationUnits.x) + ", " + (transform2.y + self2.translationUnits.y) + ")").classed("highlighter-hidden", false);
        self2.services.events.dispatchEvent(Events.Heatmap.HEATMAP_MOUSEOVER, {
          event,
          element: hoveredElement,
          datum: datum2
        });
        self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
          event,
          items: [
            {
              label: domainLabel,
              value: datum2[domainIdentifier]
            },
            {
              label: rangeLabel,
              value: datum2[rangeIdentifier]
            },
            {
              label: totalLabel || "Total",
              value: datum2["value"],
              color: hoveredElement.style("fill")
            }
          ]
        });
      }
    }).on("mousemove", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Heatmap.HEATMAP_MOUSEMOVE, {
        event,
        element: select_default2(this),
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Heatmap.HEATMAP_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var cell = select_default2(this);
      var hoveredElement = cell.select("rect.heat");
      var nullState = hoveredElement.classed("null-state");
      select_default2("g.cell-highlight").classed("highlighter-hidden", true);
      if (!nullState) {
        self2.services.events.dispatchEvent(Events.Heatmap.HEATMAP_MOUSEOUT, {
          event,
          element: hoveredElement,
          datum: datum2
        });
        self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
          event,
          hoveredElement
        });
      }
    });
  };
  Heatmap3.prototype.destroy = function() {
    this.parent.selectAll("rect.heat").on("mouseover", null).on("mousemove", null).on("click", null).on("mouseout", null);
    var eventsFragment = this.services.events;
    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleAxisOnHover);
    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleAxisMouseOut);
  };
  return Heatmap3;
}(Component);

// node_modules/@carbon/charts/components/layout/spacer.js
var __extends47 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Spacer = function(_super) {
  __extends47(Spacer2, _super);
  function Spacer2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "spacer";
    return _this;
  }
  Spacer2.prototype.render = function() {
    this.getComponentContainer().style("width", (this.configs.size || spacers.default.size) + "px").style("height", (this.configs.size || spacers.default.size) + "px").attr("opacity", 0);
  };
  return Spacer2;
}(Component);

// node_modules/@carbon/charts/components/layout/layout.js
var __extends48 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var LayoutComponent = function(_super) {
  __extends48(LayoutComponent2, _super);
  function LayoutComponent2(model, services, children2, configs) {
    var _this = _super.call(this, model, services, configs) || this;
    _this.type = "layout";
    _this.configs = configs;
    _this.children = children2;
    _this._instanceID = LayoutComponent2.instanceID++;
    _this.init();
    return _this;
  }
  LayoutComponent2.prototype.init = function() {
    this.children.forEach(function(child) {
      child.components.forEach(function(component) {
        component.init();
      });
    });
  };
  LayoutComponent2.prototype.getPreferedAndFixedSizeSum = function() {
    var svg = this.parent;
    var sum6 = 0;
    svg.selectAll("div.layout-child-" + this._instanceID).filter(function(d) {
      var growth = Tools.getProperty(d, "growth");
      return growth === LayoutGrowth.PREFERRED || growth === LayoutGrowth.FIXED;
    }).each(function(d) {
      sum6 += d.size;
    });
    return sum6;
  };
  LayoutComponent2.prototype.getNumOfStretchChildren = function() {
    var svg = this.parent;
    return svg.selectAll("div.layout-child-" + this._instanceID).filter(function(d) {
      return Tools.getProperty(d, "growth") === LayoutGrowth.STRETCH;
    }).size();
  };
  LayoutComponent2.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var parent2 = this.parent;
    var _a4 = DOMUtils.getHTMLElementSize(parent2.node()), width = _a4.width, height = _a4.height;
    var horizontal = this.configs.direction === LayoutDirection.ROW || this.configs.direction === LayoutDirection.ROW_REVERSE;
    var chartprefix = Tools.getProperty(this.model.getOptions(), "style", "prefix");
    var updatedBoxes = parent2.classed(settings_default.prefix + "--" + chartprefix + "--layout-row", this.configs.direction === LayoutDirection.ROW).classed(settings_default.prefix + "--" + chartprefix + "--layout-row-reverse", this.configs.direction === LayoutDirection.ROW_REVERSE).classed(settings_default.prefix + "--" + chartprefix + "--layout-column", this.configs.direction === LayoutDirection.COLUMN).classed(settings_default.prefix + "--" + chartprefix + "--layout-column-reverse", this.configs.direction === LayoutDirection.COLUMN_REVERSE).classed(settings_default.prefix + "--" + chartprefix + "--layout-alignitems-center", this.configs.alignItems === LayoutAlignItems.CENTER).selectAll("div.layout-child-" + this._instanceID).data(this.children, function(d) {
      return d.id;
    });
    var enteringBoxes = updatedBoxes.enter().append("div");
    enteringBoxes.merge(parent2.selectAll("div.layout-child-" + this._instanceID)).attr("class", function(d) {
      return "layout-child layout-child-" + _this._instanceID + " " + d.id;
    }).each(function(d) {
      var _this2 = this;
      d.components.forEach(function(itemComponent) {
        var selection2 = select_default2(_this2);
        var renderType = Tools.getProperty(d, "renderType");
        var isRenderingSVG = renderType === RenderTypes.SVG;
        itemComponent.setParent(isRenderingSVG ? DOMUtils.appendOrSelect(selection2, "svg.layout-svg-wrapper").attr("width", "100%").attr("height", "100%") : selection2);
        var growth = Tools.getProperty(d, "growth");
        if (growth === LayoutGrowth.PREFERRED || growth === LayoutGrowth.FIXED) {
          itemComponent.render(animate);
        }
      });
    });
    parent2.selectAll("div.layout-child-" + this._instanceID).style("height", null).style("width", null).each(function(d) {
      var growth = Tools.getProperty(d, "growth");
      var renderType = Tools.getProperty(d, "renderType");
      var matchingElementDimensions = renderType === RenderTypes.SVG ? DOMUtils.getSVGElementSize(select_default2(this).select("svg.layout-svg-wrapper"), {
        useBBox: true
      }) : DOMUtils.getHTMLElementSize(this);
      if (growth === LayoutGrowth.PREFERRED) {
        var matchingElementWidth = horizontal ? matchingElementDimensions.width : matchingElementDimensions.height;
        var elementWidth = horizontal ? width : height;
        d.size = matchingElementWidth / elementWidth * 100;
      }
    });
    updatedBoxes.exit().remove();
    this.children.filter(function(child) {
      var growth = Tools.getProperty(child, "growth");
      return growth === LayoutGrowth.STRETCH;
    }).forEach(function(child, i) {
      child.size = (100 - +_this.getPreferedAndFixedSizeSum()) / +_this.getNumOfStretchChildren();
    });
    var allUpdatedBoxes = parent2.selectAll("div.layout-child-" + this._instanceID).data(this.children, function(d) {
      return d.id;
    });
    if (horizontal) {
      allUpdatedBoxes.style("width", function(d) {
        return d.size / 100 * width + "px";
      }).style("height", "100%");
    } else {
      allUpdatedBoxes.style("height", function(d) {
        return d.size / 100 * height + "px";
      }).style("width", "100%");
    }
    allUpdatedBoxes.each(function(d, i) {
      d.components.forEach(function(itemComponent) {
        var growth = Tools.getProperty(d, "growth");
        if (growth === LayoutGrowth.STRETCH) {
          itemComponent.render(animate);
        }
      });
    });
  };
  LayoutComponent2.prototype.setModel = function(newObj) {
    _super.prototype.setModel.call(this, newObj);
    this.children.forEach(function(child) {
      child.components.forEach(function(component) {
        return component.setModel(newObj);
      });
    });
  };
  LayoutComponent2.prototype.setServices = function(newObj) {
    _super.prototype.setServices.call(this, newObj);
    this.children.forEach(function(child) {
      child.components.forEach(function(component) {
        return component.setServices(newObj);
      });
    });
  };
  LayoutComponent2.prototype.destroy = function() {
    this.children.forEach(function(child) {
      child.components.forEach(function(component) {
        return component.destroy();
      });
    });
  };
  LayoutComponent2.instanceID = Math.floor(Math.random() * 99999999999);
  return LayoutComponent2;
}(Component);

// node_modules/@carbon/charts/components/axes/axis.js
var __extends49 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Axis2 = function(_super) {
  __extends49(Axis3, _super);
  function Axis3(model, services, configs) {
    var _a4;
    var _this = _super.call(this, model, services, configs) || this;
    _this.type = "axes";
    _this.renderType = RenderTypes.SVG;
    _this.truncation = (_a4 = {}, _a4[AxisPositions.LEFT] = false, _a4[AxisPositions.RIGHT] = false, _a4[AxisPositions.TOP] = false, _a4[AxisPositions.BOTTOM] = false, _a4);
    if (configs) {
      _this.configs = configs;
    }
    _this.margins = _this.configs.margins;
    return _this;
  }
  Axis3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var axisPosition = this.configs.position;
    var options2 = this.getOptions();
    var isAxisVisible = Tools.getProperty(options2, "axes", axisPosition, "visible");
    var svg = this.getComponentContainer();
    var _a4 = DOMUtils.getSVGElementSize(svg, {
      useAttrs: true
    }), width = _a4.width, height = _a4.height;
    var container = DOMUtils.appendOrSelect(svg, "g.axis." + axisPosition);
    var startPosition, endPosition;
    if (axisPosition === AxisPositions.BOTTOM || axisPosition === AxisPositions.TOP) {
      startPosition = this.configs.axes[AxisPositions.LEFT] ? this.margins.left : 0;
      endPosition = this.configs.axes[AxisPositions.RIGHT] ? width - this.margins.right : width;
    } else {
      startPosition = height - this.margins.bottom;
      endPosition = this.margins.top;
    }
    var scale = this.services.cartesianScales.getScaleByPosition(axisPosition);
    if (this.scaleType === ScaleTypes.LABELS || this.scaleType === ScaleTypes.LABELS_RATIO) {
      scale.rangeRound([startPosition, endPosition]);
    } else {
      scale.range([startPosition, endPosition]);
    }
    var axisFunction;
    switch (axisPosition) {
      case AxisPositions.LEFT:
        axisFunction = axisLeft;
        break;
      case AxisPositions.BOTTOM:
        axisFunction = axisBottom;
        break;
      case AxisPositions.RIGHT:
        axisFunction = axisRight;
        break;
      case AxisPositions.TOP:
        axisFunction = axisTop;
        break;
    }
    container.attr("aria-label", axisPosition + " axis");
    var axisRefExists = !container.select("g.ticks").empty();
    var axisRef = DOMUtils.appendOrSelect(container, "g.ticks");
    if (!axisRefExists) {
      axisRef.attr("role", Roles.GRAPHICS_OBJECT + " " + Roles.GROUP);
      axisRef.attr("aria-label", axisPosition + " ticks");
    }
    var invisibleAxisRef = DOMUtils.appendOrSelect(container, "g.ticks.invisible").style("opacity", "0").style("pointer-events", "none").attr("aria-hidden", true).attr("aria-label", "invisible " + axisPosition + " ticks");
    var axisOptions = Tools.getProperty(options2, "axes", axisPosition);
    var isTimeScaleType = this.scaleType === ScaleTypes.TIME || axisOptions.scaleType === ScaleTypes.TIME;
    var isVerticalAxis = axisPosition === AxisPositions.LEFT || axisPosition === AxisPositions.RIGHT;
    var zoomDomain = this.model.get("zoomDomain");
    if (zoomDomain && isTimeScaleType && !isVerticalAxis) {
      scale.domain(zoomDomain);
    }
    if (!isAxisVisible) {
      axisRef.attr("aria-hidden", true);
      return;
    }
    var axisScaleType = Tools.getProperty(axisOptions, "scaleType");
    var isDataLoading = Tools.getProperty(options2, "data", "loading");
    var numberOfTicksProvided = Tools.getProperty(axisOptions, "ticks", "number");
    var userProvidedTickValues = Tools.getProperty(axisOptions, "ticks", "values");
    var truncationType = Tools.getProperty(axisOptions, "truncation", "type");
    var truncationThreshold = Tools.getProperty(axisOptions, "truncation", "threshold");
    var truncationNumCharacter = Tools.getProperty(axisOptions, "truncation", "numCharacter");
    var isNumberOfTicksProvided = numberOfTicksProvided !== null;
    var timeScaleOptions = Tools.getProperty(options2, "timeScale");
    var fakeTick = DOMUtils.appendOrSelect(invisibleAxisRef, "g.tick");
    var fakeTickText = DOMUtils.appendOrSelect(fakeTick, "text").text("0");
    var tickHeight = DOMUtils.getSVGElementSize(fakeTickText.node(), {
      useBBox: true
    }).height;
    fakeTick.remove();
    var scaleType = this.scaleType || axisOptions.scaleType || ScaleTypes.LINEAR;
    var axis3 = axisFunction(scale).tickSizeOuter(0);
    if (scale.ticks) {
      var numberOfTicks = void 0;
      if (isNumberOfTicksProvided) {
        numberOfTicks = numberOfTicksProvided;
      } else {
        numberOfTicks = axis.ticks.number;
        if (isVerticalAxis) {
          numberOfTicks = this.getNumberOfFittingTicks(height, tickHeight, axis.ticks.verticalSpaceRatio);
        }
      }
      if (scale.ticks().length === 1 && scale.ticks()[0] === 0) {
        numberOfTicks = 0;
      }
      axis3.ticks(numberOfTicks);
      if (isTimeScaleType) {
        if (!scale.ticks(numberOfTicks).length) {
          axis3.tickValues([]);
        } else {
          var addSpaceOnEdges = Tools.getProperty(options2, "timeScale", "addSpaceOnEdges");
          var customDomain = Tools.getProperty(options2, "axes", axisPosition, "domain");
          var tickValues = void 0;
          var tempScale = scale.copy();
          if (addSpaceOnEdges && !customDomain) {
            tempScale.nice(numberOfTicks);
          }
          tickValues = tempScale.ticks(numberOfTicks);
          if (addSpaceOnEdges && tickValues.length > 2 && !customDomain) {
            tickValues.splice(tickValues.length - 1, 1);
            tickValues.splice(0, 1);
          }
          axis3.tickValues(tickValues);
        }
      }
    }
    var formatter;
    var userProvidedFormatter = Tools.getProperty(axisOptions, "ticks", "formatter");
    if (isTimeScaleType) {
      var timeInterval_1 = computeTimeIntervalName(axis3.tickValues());
      if (userProvidedFormatter === null) {
        formatter = function(t, i) {
          return formatTick(t, i, axis3.tickValues(), timeInterval_1, timeScaleOptions);
        };
      } else {
        formatter = function(t, i) {
          var defaultFormattedValue = formatTick(t, i, axis3.tickValues(), timeInterval_1, timeScaleOptions);
          return userProvidedFormatter(t, i, defaultFormattedValue);
        };
      }
    } else {
      if (userProvidedFormatter === null) {
        if (scaleType === ScaleTypes.LINEAR) {
          formatter = function(t) {
            return t.toLocaleString();
          };
        }
      } else {
        formatter = userProvidedFormatter;
      }
    }
    axis3.tickFormat(formatter);
    var _b = this.services.cartesianScales.getScaleByPosition(axisPosition).domain(), lowerBound = _b[0], upperBound = _b[1];
    var validTicks;
    if (userProvidedTickValues) {
      if (isTimeScaleType) {
        userProvidedTickValues.forEach(function(userProvidedTickValue, i) {
          if (userProvidedTickValue.getTime === void 0) {
            userProvidedTickValues[i] = new Date(userProvidedTickValue);
          }
        });
        validTicks = userProvidedTickValues.filter(function(tick) {
          var tickTimestamp = tick.getTime();
          return tickTimestamp >= new Date(lowerBound).getTime() && tickTimestamp <= new Date(upperBound).getTime();
        });
      } else if (axisScaleType === ScaleTypes.LABELS) {
        var discreteDomain_1 = this.services.cartesianScales.getScaleByPosition(axisPosition).domain();
        validTicks = userProvidedTickValues.filter(function(tick) {
          return discreteDomain_1.includes(tick);
        });
      } else {
        validTicks = userProvidedTickValues.filter(function(tick) {
          return tick >= lowerBound && tick <= upperBound;
        });
      }
      axis3.tickValues(validTicks);
    }
    switch (axisPosition) {
      case AxisPositions.LEFT:
        axisRef.attr("transform", "translate(" + this.margins.left + ", 0)");
        break;
      case AxisPositions.BOTTOM:
        axisRef.attr("transform", "translate(0, " + (height - this.margins.bottom) + ")");
        break;
      case AxisPositions.RIGHT:
        axisRef.attr("transform", "translate(" + (width - this.margins.right) + ", 0)");
        break;
      case AxisPositions.TOP:
        axisRef.attr("transform", "translate(0, " + this.margins.top + ")");
        break;
    }
    var isDataEmpty = this.model.isDataEmpty();
    if (axisOptions.title) {
      var axisTitleRef = DOMUtils.appendOrSelect(container, "text.axis-title").html(isDataEmpty || isDataLoading ? "" : axisOptions.title);
      var titleOrientation = Tools.getProperty(axisOptions, "titleOrientation");
      switch (axisPosition) {
        case AxisPositions.LEFT:
          if (titleOrientation === AxisTitleOrientations.RIGHT) {
            axisTitleRef.attr("transform", "rotate(90)").attr("y", 0).attr("x", scale.range()[0] / 2).attr("dy", "-0.5em").style("text-anchor", "middle");
          } else {
            axisTitleRef.attr("transform", "rotate(-90)").attr("y", 0).attr("x", -(scale.range()[0] / 2)).attr("dy", "0.75em").style("text-anchor", "middle");
          }
          break;
        case AxisPositions.BOTTOM:
          axisTitleRef.attr("transform", "translate(" + (this.margins.left / 2 + scale.range()[1] / 2) + ", " + (height + 4) + ")").style("text-anchor", "middle");
          break;
        case AxisPositions.RIGHT:
          if (titleOrientation === AxisTitleOrientations.LEFT) {
            axisTitleRef.attr("transform", "rotate(-90)").attr("y", width).attr("x", -(scale.range()[0] / 2)).style("text-anchor", "middle");
          } else {
            axisTitleRef.attr("transform", "rotate(90)").attr("y", -width).attr("x", scale.range()[0] / 2).attr("dy", "0.75em").style("text-anchor", "middle");
          }
          break;
        case AxisPositions.TOP:
          var titleHeight = DOMUtils.getSVGElementSize(axisTitleRef, {
            useBBox: true
          }).height;
          axisTitleRef.attr("transform", "translate(" + (this.margins.left / 2 + scale.range()[1] / 2) + ", " + titleHeight / 2 + ")").style("text-anchor", "middle");
          break;
      }
    }
    if (isTimeScaleType) {
      var timeInterval_2 = computeTimeIntervalName(axis3.tickValues());
      var showDayName_1 = timeScaleOptions.showDayName;
      var axisRefSelection = axisRef;
      if (animate) {
        axisRef = axisRef.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "axis-update",
            animate
          });
        });
      }
      axisRef = axisRef.call(axis3);
      var ticks2 = axisRefSelection.selectAll(".tick").data(axis3.tickValues(), scale).order().select("text");
      ticks2.style("font-weight", function(tick, i) {
        return isTickPrimary(tick, i, axis3.tickValues(), timeInterval_2, showDayName_1) ? "bold" : "normal";
      });
    } else {
      if (!animate || !axisRefExists) {
        axisRef = axisRef.call(axis3);
      } else {
        axisRef = axisRef.transition().call(function(t) {
          return _this.services.transitions.setupTransition({
            transition: t,
            name: "axis-update",
            animate
          });
        }).call(axis3);
      }
    }
    invisibleAxisRef.call(axis3);
    if (axisPosition === AxisPositions.BOTTOM || axisPosition === AxisPositions.TOP) {
      var shouldRotateTicks_1 = false;
      var tickRotation = Tools.getProperty(axisOptions, "ticks", "rotation");
      if (tickRotation === TickRotations.ALWAYS) {
        shouldRotateTicks_1 = true;
      } else if (tickRotation === TickRotations.NEVER) {
        shouldRotateTicks_1 = false;
      } else if (!tickRotation || tickRotation === TickRotations.AUTO) {
        if (scale.step) {
          var textNodes = invisibleAxisRef.selectAll("g.tick text").nodes();
          shouldRotateTicks_1 = textNodes.some(function(textNode) {
            return DOMUtils.getSVGElementSize(textNode, {
              useBBox: true
            }).width >= scale.step();
          });
        } else {
          shouldRotateTicks_1 = false;
          var mockTextPiece = invisibleAxisRef.append("text").text("A");
          var averageLetterWidth_1 = DOMUtils.getSVGElementSize(mockTextPiece.node(), {
            useBBox: true
          }).width;
          var lastStartPosition_1;
          invisibleAxisRef.selectAll("g.tick").each(function() {
            var selection2 = select_default2(this);
            var xTransformation = parseFloat(Tools.getProperty(Tools.getTranslationValues(this), "tx"));
            if (xTransformation !== null && lastStartPosition_1 + selection2.text().length * averageLetterWidth_1 * 0.8 >= xTransformation) {
              shouldRotateTicks_1 = true;
            }
            lastStartPosition_1 = xTransformation;
          });
        }
      }
      if (shouldRotateTicks_1) {
        if (!isNumberOfTicksProvided) {
          axis3.ticks(this.getNumberOfFittingTicks(width, tickHeight, axis.ticks.horizontalSpaceRatio));
          invisibleAxisRef.call(axis3);
          axisRef.call(axis3);
        }
        container.selectAll("g.ticks g.tick text").attr("transform", "rotate(-45)").style("text-anchor", axisPosition === AxisPositions.TOP ? "start" : "end");
      } else {
        container.selectAll("g.ticks g.tick text").attr("transform", null).style("text-anchor", null);
      }
    }
    if (isDataLoading) {
      container.attr("opacity", 0);
    } else {
      container.attr("opacity", 1);
    }
    axisRef.selectAll("g.tick").attr("aria-label", function(d) {
      return d;
    });
    invisibleAxisRef.selectAll("g.tick").attr("aria-label", function(d) {
      return d;
    });
    if (truncationType !== TruncationTypes.NONE && axisScaleType === ScaleTypes.LABELS && !userProvidedTickValues) {
      var axisTickLabels = this.services.cartesianScales.getScaleDomain(axisPosition);
      if (axisTickLabels.length > 0) {
        var tick_html = svg.select("g.axis." + axisPosition + " g.ticks g.tick").html();
        container.selectAll("g.ticks g.tick").html(tick_html);
        var self_1 = this;
        container.selectAll("g.tick text").data(axisTickLabels).text(function(d) {
          if (d.length > truncationThreshold) {
            self_1.truncation[axisPosition] = true;
            return Tools.truncateLabel(d, truncationType, truncationNumCharacter);
          } else {
            return d;
          }
        });
        this.getInvisibleAxisRef().selectAll("g.tick text").data(axisTickLabels).text(function(d) {
          if (d.length > truncationThreshold) {
            return Tools.truncateLabel(d, truncationType, truncationNumCharacter);
          } else {
            return d;
          }
        });
        container.selectAll("g.ticks").html(this.getInvisibleAxisRef().html());
        container.selectAll("g.tick text").data(axisTickLabels);
      }
    }
    this.addEventListeners();
  };
  Axis3.prototype.addEventListeners = function() {
    var svg = this.getComponentContainer();
    var axisPosition = this.configs.position;
    var container = DOMUtils.appendOrSelect(svg, "g.axis." + axisPosition);
    var options2 = this.getOptions();
    var axisOptions = Tools.getProperty(options2, "axes", axisPosition);
    var axisScaleType = Tools.getProperty(axisOptions, "scaleType");
    var truncationThreshold = Tools.getProperty(axisOptions, "truncation", "threshold");
    var self2 = this;
    container.selectAll("g.tick text").on("mouseover", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEOVER, {
        event,
        element: select_default2(this),
        datum: datum2
      });
      if (axisScaleType === ScaleTypes.LABELS && datum2.length > truncationThreshold) {
        self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
          event,
          hoveredElement: select_default2(this),
          content: datum2
        });
      }
    }).on("mousemove", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEMOVE, {
        event,
        element: select_default2(this),
        datum: datum2
      });
      if (axisScaleType === ScaleTypes.LABELS && datum2.length > truncationThreshold) {
        self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
          event
        });
      }
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Axis.LABEL_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEOUT, {
        event,
        element: select_default2(this),
        datum: datum2
      });
      if (axisScaleType === ScaleTypes.LABELS) {
        self2.services.events.dispatchEvent(Events.Tooltip.HIDE);
      }
    });
  };
  Axis3.prototype.getInvisibleAxisRef = function() {
    var axisPosition = this.configs.position;
    return this.getComponentContainer().select("g.axis." + axisPosition + " g.ticks.invisible");
  };
  Axis3.prototype.getTitleRef = function() {
    var axisPosition = this.configs.position;
    return this.getComponentContainer().select("g.axis." + axisPosition + " text.axis-title");
  };
  Axis3.prototype.getNumberOfFittingTicks = function(size2, tickSize, spaceRatio) {
    var numberOfTicksFit = Math.floor(size2 / (tickSize * spaceRatio));
    return Tools.clamp(numberOfTicksFit, 2, axis.ticks.number);
  };
  Axis3.prototype.destroy = function() {
    var svg = this.getComponentContainer();
    var axisPosition = this.configs.position;
    var container = DOMUtils.appendOrSelect(svg, "g.axis." + axisPosition);
    container.selectAll("g.tick text").on("mouseover", null).on("mousemove", null).on("mouseout", null);
  };
  return Axis3;
}(Component);

// node_modules/@carbon/charts/components/axes/hover-axis.js
var __extends50 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s3, i = 1, n = arguments.length; i < n; i++) {
      s3 = arguments[i];
      for (var p in s3)
        if (Object.prototype.hasOwnProperty.call(s3, p))
          t[p] = s3[p];
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
var HoverAxis = function(_super) {
  __extends50(HoverAxis2, _super);
  function HoverAxis2(model, services, configs) {
    return _super.call(this, model, services, configs) || this;
  }
  HoverAxis2.prototype.render = function(animate) {
    if (animate === void 0) {
      animate = true;
    }
    _super.prototype.render.call(this, animate);
    _super.prototype.destroy.call(this);
    var axisPosition = this.configs.position;
    var svg = this.getComponentContainer();
    var container = DOMUtils.appendOrSelect(svg, "g.axis." + axisPosition);
    var self2 = this;
    container.selectAll("g.tick").each(function(_, index4) {
      var g = select_default2(this);
      g.classed("tick-hover", true).attr("tabindex", index4 === 0 ? 0 : -1);
      var textNode = g.select("text");
      var _a4 = DOMUtils.getSVGElementSize(textNode, {
        useBBox: true
      }), width = _a4.width, height = _a4.height;
      var rectangle = DOMUtils.appendOrSelect(g, "rect.axis-holder");
      var x3 = 0, y3 = 0;
      switch (axisPosition) {
        case AxisPositions.LEFT:
          x3 = -width + Number(textNode.attr("x"));
          y3 = -(height / 2);
          break;
        case AxisPositions.RIGHT:
          x3 = Math.abs(Number(textNode.attr("x")));
          y3 = -(height / 2);
          break;
        case AxisPositions.TOP:
          x3 = -(width / 2);
          y3 = -height + Number(textNode.attr("y")) / 2;
          if (self2.truncation[axisPosition]) {
            x3 = 0;
            rectangle.attr("transform", "rotate(-45)");
          }
          break;
        case AxisPositions.BOTTOM:
          x3 = -(width / 2);
          y3 = height / 2 - 2;
          if (self2.truncation[axisPosition]) {
            x3 = -width;
            rectangle.attr("transform", "rotate(-45)");
          }
          break;
      }
      rectangle.attr("x", x3 - axis.hover.rectanglePadding).attr("y", y3).attr("width", width + axis.hover.rectanglePadding * 2).attr("height", height).lower();
      g.on("keydown", function(event) {
        if (axisPosition === AxisPositions.LEFT || axisPosition === AxisPositions.RIGHT) {
          if (event.key && event.key === "ArrowUp") {
            self2.goNext(this, event);
          } else if (event.key && event.key === "ArrowDown") {
            self2.goPrevious(this, event);
          }
        } else {
          if (event.key && event.key === "ArrowLeft") {
            self2.goPrevious(this, event);
          } else if (event.key && event.key === "ArrowRight") {
            self2.goNext(this, event);
          }
        }
      });
    });
    this.addEventListeners();
  };
  HoverAxis2.prototype.addEventListeners = function() {
    var svg = this.getComponentContainer();
    var axisPosition = this.configs.position;
    var container = DOMUtils.appendOrSelect(svg, "g.axis." + axisPosition);
    var options2 = this.getOptions();
    var axisOptions = Tools.getProperty(options2, "axes", axisPosition);
    var axisScaleType = Tools.getProperty(axisOptions, "scaleType");
    var truncationThreshold = Tools.getProperty(axisOptions, "truncation", "threshold");
    var self2 = this;
    container.selectAll("g.tick.tick-hover").on("mouseover", function(event) {
      var hoveredElement = select_default2(this).select("text");
      var datum2 = hoveredElement.datum();
      self2.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEOVER, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      if (axisScaleType === ScaleTypes.LABELS && datum2.length > truncationThreshold) {
        self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
          event,
          element: hoveredElement,
          datum: datum2
        });
      }
    }).on("mousemove", function(event) {
      var hoveredElement = select_default2(this).select("text");
      var datum2 = hoveredElement.datum();
      self2.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEMOVE, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        event
      });
    }).on("click", function(event) {
      self2.services.events.dispatchEvent(Events.Axis.LABEL_CLICK, {
        event,
        element: select_default2(this).select("text"),
        datum: select_default2(this).select("text").datum()
      });
    }).on("mouseout", function(event) {
      self2.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEOUT, {
        event,
        element: select_default2(this).select("text"),
        datum: select_default2(this).select("text").datum()
      });
      if (axisScaleType === ScaleTypes.LABELS) {
        self2.services.events.dispatchEvent(Events.Tooltip.HIDE);
      }
    }).on("focus", function(event) {
      var coordinates = { clientX: 0, clientY: 0 };
      if (event.target) {
        event.target.focus();
        var boundingRect = event.target.getBoundingClientRect();
        coordinates.clientX = boundingRect.x;
        coordinates.clientY = boundingRect.y;
      }
      self2.services.events.dispatchEvent(Events.Axis.LABEL_FOCUS, {
        event: __assign2(__assign2({}, event), coordinates),
        element: select_default2(this),
        datum: select_default2(this).select("text").datum()
      });
    }).on("blur", function(event) {
      self2.services.events.dispatchEvent(Events.Axis.LABEL_BLUR, {
        event,
        element: select_default2(this),
        datum: select_default2(this).select("text").datum()
      });
    });
  };
  HoverAxis2.prototype.goNext = function(element, event) {
    if (element.nextElementSibling && element.nextElementSibling.tagName !== "path") {
      element.nextElementSibling.dispatchEvent(new Event("focus"));
    }
    event.preventDefault();
  };
  HoverAxis2.prototype.goPrevious = function(element, event) {
    if (element.previousElementSibling && element.previousElementSibling.tagName !== "path") {
      element.previousElementSibling.dispatchEvent(new Event("focus"));
    }
    event.preventDefault();
  };
  HoverAxis2.prototype.destroy = function() {
    var svg = this.getComponentContainer();
    var axisPosition = this.configs.position;
    var container = DOMUtils.appendOrSelect(svg, "g.axis." + axisPosition);
    container.selectAll("g.tick.tick-hover").on("mouseover", null).on("mousemove", null).on("mouseout", null).on("focus", null).on("blur", null);
  };
  return HoverAxis2;
}(Axis2);

// node_modules/@carbon/charts/components/axes/two-dimensional-axes.js
var __extends51 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var TwoDimensionalAxes = function(_super) {
  __extends51(TwoDimensionalAxes2, _super);
  function TwoDimensionalAxes2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "2D-axes";
    _this.renderType = RenderTypes.SVG;
    _this.children = {};
    _this.thresholds = [];
    _this.margins = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    };
    return _this;
  }
  TwoDimensionalAxes2.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = false;
    }
    var axes2 = {};
    var axisPositions = Object.keys(AxisPositions);
    var axesOptions = Tools.getProperty(this.getOptions(), "axes");
    axisPositions.forEach(function(axisPosition) {
      var axisOptions = axesOptions[AxisPositions[axisPosition]];
      if (axisOptions) {
        axes2[AxisPositions[axisPosition]] = true;
      }
    });
    this.configs.axes = axes2;
    axisPositions.forEach(function(axisPositionKey) {
      var axisPosition = AxisPositions[axisPositionKey];
      if (_this.configs.axes[axisPosition] && !_this.children[axisPosition]) {
        var configs = {
          position: axisPosition,
          axes: _this.configs.axes,
          margins: _this.margins
        };
        var axisComponent = _this.model.axisFlavor === AxisFlavor.DEFAULT ? new Axis2(_this.model, _this.services, configs) : new HoverAxis(_this.model, _this.services, configs);
        axisComponent.setModel(_this.model);
        axisComponent.setServices(_this.services);
        axisComponent.setParent(_this.parent);
        _this.children[axisPosition] = axisComponent;
      }
    });
    Object.keys(this.children).forEach(function(childKey) {
      var child = _this.children[childKey];
      child.render(animate);
    });
    var margins = {};
    Object.keys(this.children).forEach(function(childKey) {
      var child = _this.children[childKey];
      var axisPosition = child.configs.position;
      var invisibleAxisRef = child.getInvisibleAxisRef();
      var _a4 = DOMUtils.getSVGElementSize(invisibleAxisRef, { useBBox: true }), width = _a4.width, height = _a4.height;
      var offset;
      if (child.getTitleRef().empty()) {
        offset = 0;
      } else {
        offset = DOMUtils.getSVGElementSize(child.getTitleRef(), {
          useBBox: true
        }).height;
        if (axisPosition === AxisPositions.LEFT || axisPosition === AxisPositions.RIGHT) {
          offset += 5;
        }
      }
      switch (axisPosition) {
        case AxisPositions.TOP:
          margins.top = height + offset;
          break;
        case AxisPositions.BOTTOM:
          margins.bottom = height + offset;
          break;
        case AxisPositions.LEFT:
          margins.left = width + offset;
          break;
        case AxisPositions.RIGHT:
          margins.right = width + offset;
          break;
      }
    });
    this.services.events.dispatchEvent(Events.Axis.RENDER_COMPLETE);
    var isNotEqual = Object.keys(margins).some(function(marginKey) {
      return _this.margins[marginKey] !== margins[marginKey];
    });
    if (isNotEqual) {
      this.margins = Object.assign(this.margins, margins);
      this.model.set({ axesMargins: this.margins }, { skipUpdate: true });
      this.services.events.dispatchEvent(Events.ZoomBar.UPDATE);
      Object.keys(this.children).forEach(function(childKey) {
        var child = _this.children[childKey];
        child.margins = _this.margins;
      });
      this.render(true);
    }
  };
  return TwoDimensionalAxes2;
}(Component);

// node_modules/d3-dispatch/src/dispatch.js
var noop3 = { value: () => {
} };
function dispatch2() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || t in _ || /[\s.]/.test(t))
      throw new Error("illegal type: " + t);
    _[t] = [];
  }
  return new Dispatch2(_);
}
function Dispatch2(_) {
  this._ = _;
}
function parseTypenames3(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0)
      name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t))
      throw new Error("unknown type: " + t);
    return { type: t, name };
  });
}
Dispatch2.prototype = dispatch2.prototype = {
  constructor: Dispatch2,
  on: function(typename, callback) {
    var _ = this._, T = parseTypenames3(typename + "", _), t, i = -1, n = T.length;
    if (arguments.length < 2) {
      while (++i < n)
        if ((t = (typename = T[i]).type) && (t = get3(_[t], typename.name)))
          return t;
      return;
    }
    if (callback != null && typeof callback !== "function")
      throw new Error("invalid callback: " + callback);
    while (++i < n) {
      if (t = (typename = T[i]).type)
        _[t] = set5(_[t], typename.name, callback);
      else if (callback == null)
        for (t in _)
          _[t] = set5(_[t], typename.name, null);
    }
    return this;
  },
  copy: function() {
    var copy3 = {}, _ = this._;
    for (var t in _)
      copy3[t] = _[t].slice();
    return new Dispatch2(copy3);
  },
  call: function(type2, that) {
    if ((n = arguments.length - 2) > 0)
      for (var args = new Array(n), i = 0, n, t; i < n; ++i)
        args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type2))
      throw new Error("unknown type: " + type2);
    for (t = this._[type2], i = 0, n = t.length; i < n; ++i)
      t[i].value.apply(that, args);
  },
  apply: function(type2, that, args) {
    if (!this._.hasOwnProperty(type2))
      throw new Error("unknown type: " + type2);
    for (var t = this._[type2], i = 0, n = t.length; i < n; ++i)
      t[i].value.apply(that, args);
  }
};
function get3(type2, name) {
  for (var i = 0, n = type2.length, c; i < n; ++i) {
    if ((c = type2[i]).name === name) {
      return c.value;
    }
  }
}
function set5(type2, name, callback) {
  for (var i = 0, n = type2.length; i < n; ++i) {
    if (type2[i].name === name) {
      type2[i] = noop3, type2 = type2.slice(0, i).concat(type2.slice(i + 1));
      break;
    }
  }
  if (callback != null)
    type2.push({ name, value: callback });
  return type2;
}
var dispatch_default3 = dispatch2;

// node_modules/d3-drag/src/noevent.js
var nonpassivecapture = { capture: true, passive: false };
function noevent_default(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}

// node_modules/d3-drag/src/nodrag.js
function nodrag_default(view) {
  var root3 = view.document.documentElement, selection2 = select_default2(view).on("dragstart.drag", noevent_default, nonpassivecapture);
  if ("onselectstart" in root3) {
    selection2.on("selectstart.drag", noevent_default, nonpassivecapture);
  } else {
    root3.__noselect = root3.style.MozUserSelect;
    root3.style.MozUserSelect = "none";
  }
}
function yesdrag(view, noclick) {
  var root3 = view.document.documentElement, selection2 = select_default2(view).on("dragstart.drag", null);
  if (noclick) {
    selection2.on("click.drag", noevent_default, nonpassivecapture);
    setTimeout(function() {
      selection2.on("click.drag", null);
    }, 0);
  }
  if ("onselectstart" in root3) {
    selection2.on("selectstart.drag", null);
  } else {
    root3.style.MozUserSelect = root3.__noselect;
    delete root3.__noselect;
  }
}

// node_modules/d3-drag/src/event.js
function DragEvent(type2, {
  sourceEvent,
  subject,
  target,
  identifier,
  active,
  x: x3,
  y: y3,
  dx,
  dy,
  dispatch: dispatch3
}) {
  Object.defineProperties(this, {
    type: { value: type2, enumerable: true, configurable: true },
    sourceEvent: { value: sourceEvent, enumerable: true, configurable: true },
    subject: { value: subject, enumerable: true, configurable: true },
    target: { value: target, enumerable: true, configurable: true },
    identifier: { value: identifier, enumerable: true, configurable: true },
    active: { value: active, enumerable: true, configurable: true },
    x: { value: x3, enumerable: true, configurable: true },
    y: { value: y3, enumerable: true, configurable: true },
    dx: { value: dx, enumerable: true, configurable: true },
    dy: { value: dy, enumerable: true, configurable: true },
    _: { value: dispatch3 }
  });
}
DragEvent.prototype.on = function() {
  var value2 = this._.on.apply(this._, arguments);
  return value2 === this._ ? this : value2;
};

// node_modules/d3-timer/src/timer.js
var frame = 0;
var timeout = 0;
var interval = 0;
var pokeDelay = 1e3;
var taskHead;
var taskTail;
var clockLast = 0;
var clockNow = 0;
var clockSkew = 0;
var clock = typeof performance === "object" && performance.now ? performance : Date;
var setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) {
  setTimeout(f, 17);
};
function now2() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}
function clearNow() {
  clockNow = 0;
}
function Timer() {
  this._call = this._time = this._next = null;
}
Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function(callback, delay2, time2) {
    if (typeof callback !== "function")
      throw new TypeError("callback is not a function");
    time2 = (time2 == null ? now2() : +time2) + (delay2 == null ? 0 : +delay2);
    if (!this._next && taskTail !== this) {
      if (taskTail)
        taskTail._next = this;
      else
        taskHead = this;
      taskTail = this;
    }
    this._call = callback;
    this._time = time2;
    sleep();
  },
  stop: function() {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};
function timer(callback, delay2, time2) {
  var t = new Timer();
  t.restart(callback, delay2, time2);
  return t;
}
function timerFlush() {
  now2();
  ++frame;
  var t = taskHead, e;
  while (t) {
    if ((e = clockNow - t._time) >= 0)
      t._call.call(void 0, e);
    t = t._next;
  }
  --frame;
}
function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout = 0;
  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}
function poke() {
  var now3 = clock.now(), delay2 = now3 - clockLast;
  if (delay2 > pokeDelay)
    clockSkew -= delay2, clockLast = now3;
}
function nap() {
  var t03, t13 = taskHead, t22, time2 = Infinity;
  while (t13) {
    if (t13._call) {
      if (time2 > t13._time)
        time2 = t13._time;
      t03 = t13, t13 = t13._next;
    } else {
      t22 = t13._next, t13._next = null;
      t13 = t03 ? t03._next = t22 : taskHead = t22;
    }
  }
  taskTail = t03;
  sleep(time2);
}
function sleep(time2) {
  if (frame)
    return;
  if (timeout)
    timeout = clearTimeout(timeout);
  var delay2 = time2 - clockNow;
  if (delay2 > 24) {
    if (time2 < Infinity)
      timeout = setTimeout(wake, time2 - clock.now() - clockSkew);
    if (interval)
      interval = clearInterval(interval);
  } else {
    if (!interval)
      clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}

// node_modules/d3-timer/src/timeout.js
function timeout_default(callback, delay2, time2) {
  var t = new Timer();
  delay2 = delay2 == null ? 0 : +delay2;
  t.restart((elapsed) => {
    t.stop();
    callback(elapsed + delay2);
  }, delay2, time2);
  return t;
}

// node_modules/d3-transition/src/transition/schedule.js
var emptyOn = dispatch_default3("start", "end", "cancel", "interrupt");
var emptyTween = [];
var CREATED = 0;
var SCHEDULED = 1;
var STARTING = 2;
var STARTED = 3;
var RUNNING = 4;
var ENDING = 5;
var ENDED = 6;
function schedule_default(node, name, id2, index4, group3, timing) {
  var schedules = node.__transition;
  if (!schedules)
    node.__transition = {};
  else if (id2 in schedules)
    return;
  create2(node, id2, {
    name,
    index: index4,
    group: group3,
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}
function init(node, id2) {
  var schedule = get4(node, id2);
  if (schedule.state > CREATED)
    throw new Error("too late; already scheduled");
  return schedule;
}
function set6(node, id2) {
  var schedule = get4(node, id2);
  if (schedule.state > STARTED)
    throw new Error("too late; already running");
  return schedule;
}
function get4(node, id2) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id2]))
    throw new Error("transition not found");
  return schedule;
}
function create2(node, id2, self2) {
  var schedules = node.__transition, tween;
  schedules[id2] = self2;
  self2.timer = timer(schedule, 0, self2.time);
  function schedule(elapsed) {
    self2.state = SCHEDULED;
    self2.timer.restart(start2, self2.delay, self2.time);
    if (self2.delay <= elapsed)
      start2(elapsed - self2.delay);
  }
  function start2(elapsed) {
    var i, j, n, o;
    if (self2.state !== SCHEDULED)
      return stop();
    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self2.name)
        continue;
      if (o.state === STARTED)
        return timeout_default(start2);
      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      } else if (+i < id2) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("cancel", node, node.__data__, o.index, o.group);
        delete schedules[i];
      }
    }
    timeout_default(function() {
      if (self2.state === STARTED) {
        self2.state = RUNNING;
        self2.timer.restart(tick, self2.delay, self2.time);
        tick(elapsed);
      }
    });
    self2.state = STARTING;
    self2.on.call("start", node, node.__data__, self2.index, self2.group);
    if (self2.state !== STARTING)
      return;
    self2.state = STARTED;
    tween = new Array(n = self2.tween.length);
    for (i = 0, j = -1; i < n; ++i) {
      if (o = self2.tween[i].value.call(node, node.__data__, self2.index, self2.group)) {
        tween[++j] = o;
      }
    }
    tween.length = j + 1;
  }
  function tick(elapsed) {
    var t = elapsed < self2.duration ? self2.ease.call(null, elapsed / self2.duration) : (self2.timer.restart(stop), self2.state = ENDING, 1), i = -1, n = tween.length;
    while (++i < n) {
      tween[i].call(node, t);
    }
    if (self2.state === ENDING) {
      self2.on.call("end", node, node.__data__, self2.index, self2.group);
      stop();
    }
  }
  function stop() {
    self2.state = ENDED;
    self2.timer.stop();
    delete schedules[id2];
    for (var i in schedules)
      return;
    delete node.__transition;
  }
}

// node_modules/d3-transition/src/interrupt.js
function interrupt_default(node, name) {
  var schedules = node.__transition, schedule, active, empty3 = true, i;
  if (!schedules)
    return;
  name = name == null ? null : name + "";
  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) {
      empty3 = false;
      continue;
    }
    active = schedule.state > STARTING && schedule.state < ENDING;
    schedule.state = ENDED;
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }
  if (empty3)
    delete node.__transition;
}

// node_modules/d3-transition/src/selection/interrupt.js
function interrupt_default2(name) {
  return this.each(function() {
    interrupt_default(this, name);
  });
}

// node_modules/d3-transition/src/transition/tween.js
function tweenRemove(id2, name) {
  var tween0, tween1;
  return function() {
    var schedule = set6(this, id2), tween = schedule.tween;
    if (tween !== tween0) {
      tween1 = tween0 = tween;
      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }
    schedule.tween = tween1;
  };
}
function tweenFunction(id2, name, value2) {
  var tween0, tween1;
  if (typeof value2 !== "function")
    throw new Error();
  return function() {
    var schedule = set6(this, id2), tween = schedule.tween;
    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();
      for (var t = { name, value: value2 }, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }
      if (i === n)
        tween1.push(t);
    }
    schedule.tween = tween1;
  };
}
function tween_default(name, value2) {
  var id2 = this._id;
  name += "";
  if (arguments.length < 2) {
    var tween = get4(this.node(), id2).tween;
    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }
    return null;
  }
  return this.each((value2 == null ? tweenRemove : tweenFunction)(id2, name, value2));
}
function tweenValue(transition2, name, value2) {
  var id2 = transition2._id;
  transition2.each(function() {
    var schedule = set6(this, id2);
    (schedule.value || (schedule.value = {}))[name] = value2.apply(this, arguments);
  });
  return function(node) {
    return get4(node, id2).value[name];
  };
}

// node_modules/d3-transition/src/transition/interpolate.js
function interpolate_default(a3, b) {
  var c;
  return (typeof b === "number" ? number_default : b instanceof color2 ? rgb_default : (c = color2(b)) ? (b = c, rgb_default) : string_default)(a3, b);
}

// node_modules/d3-transition/src/transition/attr.js
function attrRemove2(name) {
  return function() {
    this.removeAttribute(name);
  };
}
function attrRemoveNS2(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}
function attrConstant2(name, interpolate, value1) {
  var string00, string1 = value1 + "", interpolate0;
  return function() {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}
function attrConstantNS2(fullname, interpolate, value1) {
  var string00, string1 = value1 + "", interpolate0;
  return function() {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}
function attrFunction2(name, interpolate, value2) {
  var string00, string10, interpolate0;
  return function() {
    var string0, value1 = value2(this), string1;
    if (value1 == null)
      return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}
function attrFunctionNS2(fullname, interpolate, value2) {
  var string00, string10, interpolate0;
  return function() {
    var string0, value1 = value2(this), string1;
    if (value1 == null)
      return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}
function attr_default2(name, value2) {
  var fullname = namespace_default(name), i = fullname === "transform" ? interpolateTransformSvg : interpolate_default;
  return this.attrTween(name, typeof value2 === "function" ? (fullname.local ? attrFunctionNS2 : attrFunction2)(fullname, i, tweenValue(this, "attr." + name, value2)) : value2 == null ? (fullname.local ? attrRemoveNS2 : attrRemove2)(fullname) : (fullname.local ? attrConstantNS2 : attrConstant2)(fullname, i, value2));
}

// node_modules/d3-transition/src/transition/attrTween.js
function attrInterpolate(name, i) {
  return function(t) {
    this.setAttribute(name, i.call(this, t));
  };
}
function attrInterpolateNS(fullname, i) {
  return function(t) {
    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
  };
}
function attrTweenNS(fullname, value2) {
  var t03, i0;
  function tween() {
    var i = value2.apply(this, arguments);
    if (i !== i0)
      t03 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t03;
  }
  tween._value = value2;
  return tween;
}
function attrTween(name, value2) {
  var t03, i0;
  function tween() {
    var i = value2.apply(this, arguments);
    if (i !== i0)
      t03 = (i0 = i) && attrInterpolate(name, i);
    return t03;
  }
  tween._value = value2;
  return tween;
}
function attrTween_default(name, value2) {
  var key = "attr." + name;
  if (arguments.length < 2)
    return (key = this.tween(key)) && key._value;
  if (value2 == null)
    return this.tween(key, null);
  if (typeof value2 !== "function")
    throw new Error();
  var fullname = namespace_default(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value2));
}

// node_modules/d3-transition/src/transition/delay.js
function delayFunction(id2, value2) {
  return function() {
    init(this, id2).delay = +value2.apply(this, arguments);
  };
}
function delayConstant(id2, value2) {
  return value2 = +value2, function() {
    init(this, id2).delay = value2;
  };
}
function delay_default2(value2) {
  var id2 = this._id;
  return arguments.length ? this.each((typeof value2 === "function" ? delayFunction : delayConstant)(id2, value2)) : get4(this.node(), id2).delay;
}

// node_modules/d3-transition/src/transition/duration.js
function durationFunction(id2, value2) {
  return function() {
    set6(this, id2).duration = +value2.apply(this, arguments);
  };
}
function durationConstant(id2, value2) {
  return value2 = +value2, function() {
    set6(this, id2).duration = value2;
  };
}
function duration_default(value2) {
  var id2 = this._id;
  return arguments.length ? this.each((typeof value2 === "function" ? durationFunction : durationConstant)(id2, value2)) : get4(this.node(), id2).duration;
}

// node_modules/d3-transition/src/transition/ease.js
function easeConstant(id2, value2) {
  if (typeof value2 !== "function")
    throw new Error();
  return function() {
    set6(this, id2).ease = value2;
  };
}
function ease_default(value2) {
  var id2 = this._id;
  return arguments.length ? this.each(easeConstant(id2, value2)) : get4(this.node(), id2).ease;
}

// node_modules/d3-transition/src/transition/easeVarying.js
function easeVarying(id2, value2) {
  return function() {
    var v = value2.apply(this, arguments);
    if (typeof v !== "function")
      throw new Error();
    set6(this, id2).ease = v;
  };
}
function easeVarying_default(value2) {
  if (typeof value2 !== "function")
    throw new Error();
  return this.each(easeVarying(this._id, value2));
}

// node_modules/d3-transition/src/transition/filter.js
function filter_default3(match2) {
  if (typeof match2 !== "function")
    match2 = matcher_default(match2);
  for (var groups3 = this._groups, m = groups3.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group3 = groups3[j], n = group3.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group3[i]) && match2.call(node, node.__data__, i, group3)) {
        subgroup.push(node);
      }
    }
  }
  return new Transition(subgroups, this._parents, this._name, this._id);
}

// node_modules/d3-transition/src/transition/merge.js
function merge_default3(transition2) {
  if (transition2._id !== this._id)
    throw new Error();
  for (var groups0 = this._groups, groups1 = transition2._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge4 = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge4[i] = node;
      }
    }
  }
  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }
  return new Transition(merges, this._parents, this._name, this._id);
}

// node_modules/d3-transition/src/transition/on.js
function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function(t) {
    var i = t.indexOf(".");
    if (i >= 0)
      t = t.slice(0, i);
    return !t || t === "start";
  });
}
function onFunction(id2, name, listener) {
  var on0, on1, sit = start(name) ? init : set6;
  return function() {
    var schedule = sit(this, id2), on2 = schedule.on;
    if (on2 !== on0)
      (on1 = (on0 = on2).copy()).on(name, listener);
    schedule.on = on1;
  };
}
function on_default2(name, listener) {
  var id2 = this._id;
  return arguments.length < 2 ? get4(this.node(), id2).on.on(name) : this.each(onFunction(id2, name, listener));
}

// node_modules/d3-transition/src/transition/remove.js
function removeFunction(id2) {
  return function() {
    var parent2 = this.parentNode;
    for (var i in this.__transition)
      if (+i !== id2)
        return;
    if (parent2)
      parent2.removeChild(this);
  };
}
function remove_default3() {
  return this.on("end.remove", removeFunction(this._id));
}

// node_modules/d3-transition/src/transition/select.js
function select_default3(select) {
  var name = this._name, id2 = this._id;
  if (typeof select !== "function")
    select = selector_default(select);
  for (var groups3 = this._groups, m = groups3.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group3 = groups3[j], n = group3.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group3[i]) && (subnode = select.call(node, node.__data__, i, group3))) {
        if ("__data__" in node)
          subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        schedule_default(subgroup[i], name, id2, i, subgroup, get4(node, id2));
      }
    }
  }
  return new Transition(subgroups, this._parents, name, id2);
}

// node_modules/d3-transition/src/transition/selectAll.js
function selectAll_default3(select) {
  var name = this._name, id2 = this._id;
  if (typeof select !== "function")
    select = selectorAll_default(select);
  for (var groups3 = this._groups, m = groups3.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group3 = groups3[j], n = group3.length, node, i = 0; i < n; ++i) {
      if (node = group3[i]) {
        for (var children2 = select.call(node, node.__data__, i, group3), child, inherit2 = get4(node, id2), k3 = 0, l = children2.length; k3 < l; ++k3) {
          if (child = children2[k3]) {
            schedule_default(child, name, id2, k3, children2, inherit2);
          }
        }
        subgroups.push(children2);
        parents.push(node);
      }
    }
  }
  return new Transition(subgroups, parents, name, id2);
}

// node_modules/d3-transition/src/transition/selection.js
var Selection2 = selection_default.prototype.constructor;
function selection_default2() {
  return new Selection2(this._groups, this._parents);
}

// node_modules/d3-transition/src/transition/style.js
function styleNull(name, interpolate) {
  var string00, string10, interpolate0;
  return function() {
    var string0 = styleValue(this, name), string1 = (this.style.removeProperty(name), styleValue(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}
function styleRemove2(name) {
  return function() {
    this.style.removeProperty(name);
  };
}
function styleConstant2(name, interpolate, value1) {
  var string00, string1 = value1 + "", interpolate0;
  return function() {
    var string0 = styleValue(this, name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}
function styleFunction2(name, interpolate, value2) {
  var string00, string10, interpolate0;
  return function() {
    var string0 = styleValue(this, name), value1 = value2(this), string1 = value1 + "";
    if (value1 == null)
      string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}
function styleMaybeRemove(id2, name) {
  var on0, on1, listener0, key = "style." + name, event = "end." + key, remove3;
  return function() {
    var schedule = set6(this, id2), on2 = schedule.on, listener = schedule.value[key] == null ? remove3 || (remove3 = styleRemove2(name)) : void 0;
    if (on2 !== on0 || listener0 !== listener)
      (on1 = (on0 = on2).copy()).on(event, listener0 = listener);
    schedule.on = on1;
  };
}
function style_default2(name, value2, priority) {
  var i = (name += "") === "transform" ? interpolateTransformCss : interpolate_default;
  return value2 == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove2(name)) : typeof value2 === "function" ? this.styleTween(name, styleFunction2(name, i, tweenValue(this, "style." + name, value2))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant2(name, i, value2), priority).on("end.style." + name, null);
}

// node_modules/d3-transition/src/transition/styleTween.js
function styleInterpolate(name, i, priority) {
  return function(t) {
    this.style.setProperty(name, i.call(this, t), priority);
  };
}
function styleTween(name, value2, priority) {
  var t, i0;
  function tween() {
    var i = value2.apply(this, arguments);
    if (i !== i0)
      t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }
  tween._value = value2;
  return tween;
}
function styleTween_default(name, value2, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2)
    return (key = this.tween(key)) && key._value;
  if (value2 == null)
    return this.tween(key, null);
  if (typeof value2 !== "function")
    throw new Error();
  return this.tween(key, styleTween(name, value2, priority == null ? "" : priority));
}

// node_modules/d3-transition/src/transition/text.js
function textConstant2(value2) {
  return function() {
    this.textContent = value2;
  };
}
function textFunction2(value2) {
  return function() {
    var value1 = value2(this);
    this.textContent = value1 == null ? "" : value1;
  };
}
function text_default2(value2) {
  return this.tween("text", typeof value2 === "function" ? textFunction2(tweenValue(this, "text", value2)) : textConstant2(value2 == null ? "" : value2 + ""));
}

// node_modules/d3-transition/src/transition/textTween.js
function textInterpolate(i) {
  return function(t) {
    this.textContent = i.call(this, t);
  };
}
function textTween(value2) {
  var t03, i0;
  function tween() {
    var i = value2.apply(this, arguments);
    if (i !== i0)
      t03 = (i0 = i) && textInterpolate(i);
    return t03;
  }
  tween._value = value2;
  return tween;
}
function textTween_default(value2) {
  var key = "text";
  if (arguments.length < 1)
    return (key = this.tween(key)) && key._value;
  if (value2 == null)
    return this.tween(key, null);
  if (typeof value2 !== "function")
    throw new Error();
  return this.tween(key, textTween(value2));
}

// node_modules/d3-transition/src/transition/transition.js
function transition_default() {
  var name = this._name, id0 = this._id, id1 = newId();
  for (var groups3 = this._groups, m = groups3.length, j = 0; j < m; ++j) {
    for (var group3 = groups3[j], n = group3.length, node, i = 0; i < n; ++i) {
      if (node = group3[i]) {
        var inherit2 = get4(node, id0);
        schedule_default(node, name, id1, i, group3, {
          time: inherit2.time + inherit2.delay + inherit2.duration,
          delay: 0,
          duration: inherit2.duration,
          ease: inherit2.ease
        });
      }
    }
  }
  return new Transition(groups3, this._parents, name, id1);
}

// node_modules/d3-transition/src/transition/end.js
function end_default() {
  var on0, on1, that = this, id2 = that._id, size2 = that.size();
  return new Promise(function(resolve, reject2) {
    var cancel = { value: reject2 }, end = { value: function() {
      if (--size2 === 0)
        resolve();
    } };
    that.each(function() {
      var schedule = set6(this, id2), on2 = schedule.on;
      if (on2 !== on0) {
        on1 = (on0 = on2).copy();
        on1._.cancel.push(cancel);
        on1._.interrupt.push(cancel);
        on1._.end.push(end);
      }
      schedule.on = on1;
    });
    if (size2 === 0)
      resolve();
  });
}

// node_modules/d3-transition/src/transition/index.js
var id = 0;
function Transition(groups3, parents, name, id2) {
  this._groups = groups3;
  this._parents = parents;
  this._name = name;
  this._id = id2;
}
function transition(name) {
  return selection_default().transition(name);
}
function newId() {
  return ++id;
}
var selection_prototype = selection_default.prototype;
Transition.prototype = transition.prototype = {
  constructor: Transition,
  select: select_default3,
  selectAll: selectAll_default3,
  selectChild: selection_prototype.selectChild,
  selectChildren: selection_prototype.selectChildren,
  filter: filter_default3,
  merge: merge_default3,
  selection: selection_default2,
  transition: transition_default,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: on_default2,
  attr: attr_default2,
  attrTween: attrTween_default,
  style: style_default2,
  styleTween: styleTween_default,
  text: text_default2,
  textTween: textTween_default,
  remove: remove_default3,
  tween: tween_default,
  delay: delay_default2,
  duration: duration_default,
  ease: ease_default,
  easeVarying: easeVarying_default,
  end: end_default,
  [Symbol.iterator]: selection_prototype[Symbol.iterator]
};

// node_modules/d3-transition/src/selection/transition.js
var defaultTiming = {
  time: null,
  delay: 0,
  duration: 250,
  ease: cubicInOut
};
function inherit(node, id2) {
  var timing;
  while (!(timing = node.__transition) || !(timing = timing[id2])) {
    if (!(node = node.parentNode)) {
      throw new Error(`transition ${id2} not found`);
    }
  }
  return timing;
}
function transition_default2(name) {
  var id2, timing;
  if (name instanceof Transition) {
    id2 = name._id, name = name._name;
  } else {
    id2 = newId(), (timing = defaultTiming).time = now2(), name = name == null ? null : name + "";
  }
  for (var groups3 = this._groups, m = groups3.length, j = 0; j < m; ++j) {
    for (var group3 = groups3[j], n = group3.length, node, i = 0; i < n; ++i) {
      if (node = group3[i]) {
        schedule_default(node, name, id2, i, group3, timing || inherit(node, id2));
      }
    }
  }
  return new Transition(groups3, this._parents, name, id2);
}

// node_modules/d3-transition/src/selection/index.js
selection_default.prototype.interrupt = interrupt_default2;
selection_default.prototype.transition = transition_default2;

// node_modules/d3-brush/src/constant.js
var constant_default9 = (x3) => () => x3;

// node_modules/d3-brush/src/event.js
function BrushEvent(type2, {
  sourceEvent,
  target,
  selection: selection2,
  mode: mode2,
  dispatch: dispatch3
}) {
  Object.defineProperties(this, {
    type: { value: type2, enumerable: true, configurable: true },
    sourceEvent: { value: sourceEvent, enumerable: true, configurable: true },
    target: { value: target, enumerable: true, configurable: true },
    selection: { value: selection2, enumerable: true, configurable: true },
    mode: { value: mode2, enumerable: true, configurable: true },
    _: { value: dispatch3 }
  });
}

// node_modules/d3-brush/src/noevent.js
function nopropagation2(event) {
  event.stopImmediatePropagation();
}
function noevent_default2(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}

// node_modules/d3-brush/src/brush.js
var MODE_DRAG = { name: "drag" };
var MODE_SPACE = { name: "space" };
var MODE_HANDLE = { name: "handle" };
var MODE_CENTER = { name: "center" };
var { abs: abs3, max: max7, min: min7 } = Math;
function number1(e) {
  return [+e[0], +e[1]];
}
function number22(e) {
  return [number1(e[0]), number1(e[1])];
}
var X = {
  name: "x",
  handles: ["w", "e"].map(type),
  input: function(x3, e) {
    return x3 == null ? null : [[+x3[0], e[0][1]], [+x3[1], e[1][1]]];
  },
  output: function(xy) {
    return xy && [xy[0][0], xy[1][0]];
  }
};
var Y = {
  name: "y",
  handles: ["n", "s"].map(type),
  input: function(y3, e) {
    return y3 == null ? null : [[e[0][0], +y3[0]], [e[1][0], +y3[1]]];
  },
  output: function(xy) {
    return xy && [xy[0][1], xy[1][1]];
  }
};
var XY = {
  name: "xy",
  handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
  input: function(xy) {
    return xy == null ? null : number22(xy);
  },
  output: function(xy) {
    return xy;
  }
};
var cursors = {
  overlay: "crosshair",
  selection: "move",
  n: "ns-resize",
  e: "ew-resize",
  s: "ns-resize",
  w: "ew-resize",
  nw: "nwse-resize",
  ne: "nesw-resize",
  se: "nwse-resize",
  sw: "nesw-resize"
};
var flipX = {
  e: "w",
  w: "e",
  nw: "ne",
  ne: "nw",
  se: "sw",
  sw: "se"
};
var flipY = {
  n: "s",
  s: "n",
  nw: "sw",
  ne: "se",
  se: "ne",
  sw: "nw"
};
var signsX = {
  overlay: 1,
  selection: 1,
  n: null,
  e: 1,
  s: null,
  w: -1,
  nw: -1,
  ne: 1,
  se: 1,
  sw: -1
};
var signsY = {
  overlay: 1,
  selection: 1,
  n: -1,
  e: null,
  s: 1,
  w: null,
  nw: -1,
  ne: -1,
  se: 1,
  sw: 1
};
function type(t) {
  return { type: t };
}
function defaultFilter(event) {
  return !event.ctrlKey && !event.button;
}
function defaultExtent() {
  var svg = this.ownerSVGElement || this;
  if (svg.hasAttribute("viewBox")) {
    svg = svg.viewBox.baseVal;
    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];
  }
  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
}
function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}
function local2(node) {
  while (!node.__brush)
    if (!(node = node.parentNode))
      return;
  return node.__brush;
}
function empty2(extent2) {
  return extent2[0][0] === extent2[1][0] || extent2[0][1] === extent2[1][1];
}
function brushX() {
  return brush(X);
}
function brush(dim) {
  var extent2 = defaultExtent, filter5 = defaultFilter, touchable = defaultTouchable, keys2 = true, listeners = dispatch_default3("start", "brush", "end"), handleSize = 6, touchending;
  function brush2(group3) {
    var overlay = group3.property("__brush", initialize).selectAll(".overlay").data([type("overlay")]);
    overlay.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", cursors.overlay).merge(overlay).each(function() {
      var extent3 = local2(this).extent;
      select_default2(this).attr("x", extent3[0][0]).attr("y", extent3[0][1]).attr("width", extent3[1][0] - extent3[0][0]).attr("height", extent3[1][1] - extent3[0][1]);
    });
    group3.selectAll(".selection").data([type("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", cursors.selection).attr("fill", "#777").attr("fill-opacity", 0.3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");
    var handle = group3.selectAll(".handle").data(dim.handles, function(d) {
      return d.type;
    });
    handle.exit().remove();
    handle.enter().append("rect").attr("class", function(d) {
      return "handle handle--" + d.type;
    }).attr("cursor", function(d) {
      return cursors[d.type];
    });
    group3.each(redraw).attr("fill", "none").attr("pointer-events", "all").on("mousedown.brush", started).filter(touchable).on("touchstart.brush", started).on("touchmove.brush", touchmoved).on("touchend.brush touchcancel.brush", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }
  brush2.move = function(group3, selection2, event) {
    if (group3.tween) {
      group3.on("start.brush", function(event2) {
        emitter(this, arguments).beforestart().start(event2);
      }).on("interrupt.brush end.brush", function(event2) {
        emitter(this, arguments).end(event2);
      }).tween("brush", function() {
        var that = this, state = that.__brush, emit = emitter(that, arguments), selection0 = state.selection, selection1 = dim.input(typeof selection2 === "function" ? selection2.apply(this, arguments) : selection2, state.extent), i = value_default(selection0, selection1);
        function tween(t) {
          state.selection = t === 1 && selection1 === null ? null : i(t);
          redraw.call(that);
          emit.brush();
        }
        return selection0 !== null && selection1 !== null ? tween : tween(1);
      });
    } else {
      group3.each(function() {
        var that = this, args = arguments, state = that.__brush, selection1 = dim.input(typeof selection2 === "function" ? selection2.apply(that, args) : selection2, state.extent), emit = emitter(that, args).beforestart();
        interrupt_default(that);
        state.selection = selection1 === null ? null : selection1;
        redraw.call(that);
        emit.start(event).brush(event).end(event);
      });
    }
  };
  brush2.clear = function(group3, event) {
    brush2.move(group3, null, event);
  };
  function redraw() {
    var group3 = select_default2(this), selection2 = local2(this).selection;
    if (selection2) {
      group3.selectAll(".selection").style("display", null).attr("x", selection2[0][0]).attr("y", selection2[0][1]).attr("width", selection2[1][0] - selection2[0][0]).attr("height", selection2[1][1] - selection2[0][1]);
      group3.selectAll(".handle").style("display", null).attr("x", function(d) {
        return d.type[d.type.length - 1] === "e" ? selection2[1][0] - handleSize / 2 : selection2[0][0] - handleSize / 2;
      }).attr("y", function(d) {
        return d.type[0] === "s" ? selection2[1][1] - handleSize / 2 : selection2[0][1] - handleSize / 2;
      }).attr("width", function(d) {
        return d.type === "n" || d.type === "s" ? selection2[1][0] - selection2[0][0] + handleSize : handleSize;
      }).attr("height", function(d) {
        return d.type === "e" || d.type === "w" ? selection2[1][1] - selection2[0][1] + handleSize : handleSize;
      });
    } else {
      group3.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null);
    }
  }
  function emitter(that, args, clean) {
    var emit = that.__brush.emitter;
    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);
  }
  function Emitter(that, args, clean) {
    this.that = that;
    this.args = args;
    this.state = that.__brush;
    this.active = 0;
    this.clean = clean;
  }
  Emitter.prototype = {
    beforestart: function() {
      if (++this.active === 1)
        this.state.emitter = this, this.starting = true;
      return this;
    },
    start: function(event, mode2) {
      if (this.starting)
        this.starting = false, this.emit("start", event, mode2);
      else
        this.emit("brush", event);
      return this;
    },
    brush: function(event, mode2) {
      this.emit("brush", event, mode2);
      return this;
    },
    end: function(event, mode2) {
      if (--this.active === 0)
        delete this.state.emitter, this.emit("end", event, mode2);
      return this;
    },
    emit: function(type2, event, mode2) {
      var d = select_default2(this.that).datum();
      listeners.call(type2, this.that, new BrushEvent(type2, {
        sourceEvent: event,
        target: brush2,
        selection: dim.output(this.state.selection),
        mode: mode2,
        dispatch: listeners
      }), d);
    }
  };
  function started(event) {
    if (touchending && !event.touches)
      return;
    if (!filter5.apply(this, arguments))
      return;
    var that = this, type2 = event.target.__data__.type, mode2 = (keys2 && event.metaKey ? type2 = "overlay" : type2) === "selection" ? MODE_DRAG : keys2 && event.altKey ? MODE_CENTER : MODE_HANDLE, signX = dim === Y ? null : signsX[type2], signY = dim === X ? null : signsY[type2], state = local2(that), extent3 = state.extent, selection2 = state.selection, W = extent3[0][0], w0, w1, N = extent3[0][1], n0, n1, E2 = extent3[1][0], e0, e1, S = extent3[1][1], s0, s1, dx = 0, dy = 0, moving, shifting = signX && signY && keys2 && event.shiftKey, lockX, lockY, points = Array.from(event.touches || [event], (t) => {
      const i = t.identifier;
      t = pointer_default(t, that);
      t.point0 = t.slice();
      t.identifier = i;
      return t;
    });
    interrupt_default(that);
    var emit = emitter(that, arguments, true).beforestart();
    if (type2 === "overlay") {
      if (selection2)
        moving = true;
      const pts = [points[0], points[1] || points[0]];
      state.selection = selection2 = [[
        w0 = dim === Y ? W : min7(pts[0][0], pts[1][0]),
        n0 = dim === X ? N : min7(pts[0][1], pts[1][1])
      ], [
        e0 = dim === Y ? E2 : max7(pts[0][0], pts[1][0]),
        s0 = dim === X ? S : max7(pts[0][1], pts[1][1])
      ]];
      if (points.length > 1)
        move(event);
    } else {
      w0 = selection2[0][0];
      n0 = selection2[0][1];
      e0 = selection2[1][0];
      s0 = selection2[1][1];
    }
    w1 = w0;
    n1 = n0;
    e1 = e0;
    s1 = s0;
    var group3 = select_default2(that).attr("pointer-events", "none");
    var overlay = group3.selectAll(".overlay").attr("cursor", cursors[type2]);
    if (event.touches) {
      emit.moved = moved;
      emit.ended = ended;
    } else {
      var view = select_default2(event.view).on("mousemove.brush", moved, true).on("mouseup.brush", ended, true);
      if (keys2)
        view.on("keydown.brush", keydowned, true).on("keyup.brush", keyupped, true);
      nodrag_default(event.view);
    }
    redraw.call(that);
    emit.start(event, mode2.name);
    function moved(event2) {
      for (const p of event2.changedTouches || [event2]) {
        for (const d of points)
          if (d.identifier === p.identifier)
            d.cur = pointer_default(p, that);
      }
      if (shifting && !lockX && !lockY && points.length === 1) {
        const point10 = points[0];
        if (abs3(point10.cur[0] - point10[0]) > abs3(point10.cur[1] - point10[1]))
          lockY = true;
        else
          lockX = true;
      }
      for (const point10 of points)
        if (point10.cur)
          point10[0] = point10.cur[0], point10[1] = point10.cur[1];
      moving = true;
      noevent_default2(event2);
      move(event2);
    }
    function move(event2) {
      const point10 = points[0], point0 = point10.point0;
      var t;
      dx = point10[0] - point0[0];
      dy = point10[1] - point0[1];
      switch (mode2) {
        case MODE_SPACE:
        case MODE_DRAG: {
          if (signX)
            dx = max7(W - w0, min7(E2 - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
          if (signY)
            dy = max7(N - n0, min7(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
          break;
        }
        case MODE_HANDLE: {
          if (points[1]) {
            if (signX)
              w1 = max7(W, min7(E2, points[0][0])), e1 = max7(W, min7(E2, points[1][0])), signX = 1;
            if (signY)
              n1 = max7(N, min7(S, points[0][1])), s1 = max7(N, min7(S, points[1][1])), signY = 1;
          } else {
            if (signX < 0)
              dx = max7(W - w0, min7(E2 - w0, dx)), w1 = w0 + dx, e1 = e0;
            else if (signX > 0)
              dx = max7(W - e0, min7(E2 - e0, dx)), w1 = w0, e1 = e0 + dx;
            if (signY < 0)
              dy = max7(N - n0, min7(S - n0, dy)), n1 = n0 + dy, s1 = s0;
            else if (signY > 0)
              dy = max7(N - s0, min7(S - s0, dy)), n1 = n0, s1 = s0 + dy;
          }
          break;
        }
        case MODE_CENTER: {
          if (signX)
            w1 = max7(W, min7(E2, w0 - dx * signX)), e1 = max7(W, min7(E2, e0 + dx * signX));
          if (signY)
            n1 = max7(N, min7(S, n0 - dy * signY)), s1 = max7(N, min7(S, s0 + dy * signY));
          break;
        }
      }
      if (e1 < w1) {
        signX *= -1;
        t = w0, w0 = e0, e0 = t;
        t = w1, w1 = e1, e1 = t;
        if (type2 in flipX)
          overlay.attr("cursor", cursors[type2 = flipX[type2]]);
      }
      if (s1 < n1) {
        signY *= -1;
        t = n0, n0 = s0, s0 = t;
        t = n1, n1 = s1, s1 = t;
        if (type2 in flipY)
          overlay.attr("cursor", cursors[type2 = flipY[type2]]);
      }
      if (state.selection)
        selection2 = state.selection;
      if (lockX)
        w1 = selection2[0][0], e1 = selection2[1][0];
      if (lockY)
        n1 = selection2[0][1], s1 = selection2[1][1];
      if (selection2[0][0] !== w1 || selection2[0][1] !== n1 || selection2[1][0] !== e1 || selection2[1][1] !== s1) {
        state.selection = [[w1, n1], [e1, s1]];
        redraw.call(that);
        emit.brush(event2, mode2.name);
      }
    }
    function ended(event2) {
      nopropagation2(event2);
      if (event2.touches) {
        if (event2.touches.length)
          return;
        if (touchending)
          clearTimeout(touchending);
        touchending = setTimeout(function() {
          touchending = null;
        }, 500);
      } else {
        yesdrag(event2.view, moving);
        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
      }
      group3.attr("pointer-events", "all");
      overlay.attr("cursor", cursors.overlay);
      if (state.selection)
        selection2 = state.selection;
      if (empty2(selection2))
        state.selection = null, redraw.call(that);
      emit.end(event2, mode2.name);
    }
    function keydowned(event2) {
      switch (event2.keyCode) {
        case 16: {
          shifting = signX && signY;
          break;
        }
        case 18: {
          if (mode2 === MODE_HANDLE) {
            if (signX)
              e0 = e1 - dx * signX, w0 = w1 + dx * signX;
            if (signY)
              s0 = s1 - dy * signY, n0 = n1 + dy * signY;
            mode2 = MODE_CENTER;
            move(event2);
          }
          break;
        }
        case 32: {
          if (mode2 === MODE_HANDLE || mode2 === MODE_CENTER) {
            if (signX < 0)
              e0 = e1 - dx;
            else if (signX > 0)
              w0 = w1 - dx;
            if (signY < 0)
              s0 = s1 - dy;
            else if (signY > 0)
              n0 = n1 - dy;
            mode2 = MODE_SPACE;
            overlay.attr("cursor", cursors.selection);
            move(event2);
          }
          break;
        }
        default:
          return;
      }
      noevent_default2(event2);
    }
    function keyupped(event2) {
      switch (event2.keyCode) {
        case 16: {
          if (shifting) {
            lockX = lockY = shifting = false;
            move(event2);
          }
          break;
        }
        case 18: {
          if (mode2 === MODE_CENTER) {
            if (signX < 0)
              e0 = e1;
            else if (signX > 0)
              w0 = w1;
            if (signY < 0)
              s0 = s1;
            else if (signY > 0)
              n0 = n1;
            mode2 = MODE_HANDLE;
            move(event2);
          }
          break;
        }
        case 32: {
          if (mode2 === MODE_SPACE) {
            if (event2.altKey) {
              if (signX)
                e0 = e1 - dx * signX, w0 = w1 + dx * signX;
              if (signY)
                s0 = s1 - dy * signY, n0 = n1 + dy * signY;
              mode2 = MODE_CENTER;
            } else {
              if (signX < 0)
                e0 = e1;
              else if (signX > 0)
                w0 = w1;
              if (signY < 0)
                s0 = s1;
              else if (signY > 0)
                n0 = n1;
              mode2 = MODE_HANDLE;
            }
            overlay.attr("cursor", cursors[type2]);
            move(event2);
          }
          break;
        }
        default:
          return;
      }
      noevent_default2(event2);
    }
  }
  function touchmoved(event) {
    emitter(this, arguments).moved(event);
  }
  function touchended(event) {
    emitter(this, arguments).ended(event);
  }
  function initialize() {
    var state = this.__brush || { selection: null };
    state.extent = number22(extent2.apply(this, arguments));
    state.dim = dim;
    return state;
  }
  brush2.extent = function(_) {
    return arguments.length ? (extent2 = typeof _ === "function" ? _ : constant_default9(number22(_)), brush2) : extent2;
  };
  brush2.filter = function(_) {
    return arguments.length ? (filter5 = typeof _ === "function" ? _ : constant_default9(!!_), brush2) : filter5;
  };
  brush2.touchable = function(_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : constant_default9(!!_), brush2) : touchable;
  };
  brush2.handleSize = function(_) {
    return arguments.length ? (handleSize = +_, brush2) : handleSize;
  };
  brush2.keyModifiers = function(_) {
    return arguments.length ? (keys2 = !!_, brush2) : keys2;
  };
  brush2.on = function() {
    var value2 = listeners.on.apply(listeners, arguments);
    return value2 === listeners ? brush2 : value2;
  };
  return brush2;
}

// node_modules/@carbon/charts/components/axes/grid-brush.js
var __extends52 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ChartBrush = function(_super) {
  __extends52(ChartBrush2, _super);
  function ChartBrush2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "grid-brush";
    _this.renderType = RenderTypes.SVG;
    _this.selectionSelector = "rect.selection";
    _this.frontSelectionSelector = "rect.frontSelection";
    return _this;
  }
  ChartBrush2.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var svg = this.parent;
    var frontSelectionArea = this.getComponentContainer();
    var backdrop = DOMUtils.appendOrSelect(svg, "svg.chart-grid-backdrop");
    var brushArea = DOMUtils.appendOrSelect(backdrop, "g." + this.type);
    var d3Selection = DOMUtils.appendOrSelect(brushArea, this.selectionSelector);
    var _a4 = DOMUtils.getSVGElementSize(backdrop, {
      useAttrs: true
    }), width = _a4.width, height = _a4.height;
    var cartesianScales = this.services.cartesianScales;
    var mainXScaleType = cartesianScales.getMainXScaleType();
    var mainXScale = cartesianScales.getMainXScale();
    var _b = mainXScale.range(), xScaleStart = _b[0], xScaleEnd = _b[1];
    frontSelectionArea.attr("transform", "translate(" + xScaleStart + ",0)");
    var frontSelection = DOMUtils.appendOrSelect(frontSelectionArea, this.frontSelectionSelector);
    if (mainXScale && mainXScaleType === ScaleTypes.TIME) {
      var zoomDomain_1 = this.model.get("zoomDomain");
      if (zoomDomain_1 === void 0) {
        zoomDomain_1 = this.services.zoom.getDefaultZoomBarDomain();
        if (zoomDomain_1) {
          this.model.set({ zoomDomain: zoomDomain_1 }, { animate: false });
        }
      }
      var updateSelectionDash_1 = function(selection2) {
        var selectionWidth = selection2[1] - selection2[0];
        var dashArray = "0," + selectionWidth.toString();
        var dashCount = Math.floor(height / ChartBrush2.DASH_LENGTH);
        var totalRightDash = dashCount * ChartBrush2.DASH_LENGTH;
        for (var i = 0; i < dashCount; i++) {
          dashArray += "," + ChartBrush2.DASH_LENGTH;
        }
        dashArray += "," + (height - totalRightDash);
        if (dashCount % 2 === 1) {
          dashArray += ",0";
        }
        dashArray += "," + selectionWidth.toString();
        dashArray += "," + height.toString();
        frontSelection.attr("stroke-dasharray", dashArray);
      };
      var brushEventHandler = function(event) {
        var selection2 = event.selection;
        if (selection2 === null || selection2[0] === selection2[1]) {
          return;
        }
        frontSelection.attr("x", parseFloat(d3Selection.attr("x")) + parseFloat(backdrop.attr("x"))).attr("y", d3Selection.attr("y")).attr("width", d3Selection.attr("width")).attr("height", d3Selection.attr("height")).style("cursor", "pointer").style("display", null);
        updateSelectionDash_1(selection2);
      };
      var updateZoomDomain_1 = function(startPoint, endPoint) {
        var xScale = time().range([0, width]).domain(zoomDomain_1);
        var newDomain = [
          xScale.invert(startPoint),
          xScale.invert(endPoint)
        ];
        if (newDomain[0].valueOf() === newDomain[1].valueOf()) {
          newDomain = _this.services.zoom.getDefaultZoomBarDomain();
        }
        if (zoomDomain_1[0].valueOf() !== newDomain[0].valueOf() || zoomDomain_1[1].valueOf() !== newDomain[1].valueOf()) {
          _this.services.zoom.handleDomainChange(newDomain);
        }
      };
      var brushed = function(event) {
        var selection2 = event.selection;
        if (selection2 !== null) {
          updateZoomDomain_1(selection2[0], selection2[1]);
          brushArea.call(brush_1.move, null);
          frontSelection.style("display", "none");
        }
      };
      var brush_1 = brushX().extent([
        [0, 0],
        [width - 1, height]
      ]).on("start brush end", brushEventHandler).on("end.brushed", brushed);
      brushArea.call(brush_1);
      var zoomRatio_1 = this.services.zoom.getZoomRatio();
      backdrop.on("click", function(event) {
        if (event.shiftKey) {
          var holder = this.services.domUtils.getHolder();
          var clickedX = pointer_default(brushArea.node(), holder)[0];
          var leftPoint = clickedX - width * zoomRatio_1 / 2;
          if (leftPoint < 0) {
            leftPoint = 0;
          }
          var rightPoint = clickedX + width * zoomRatio_1 / 2;
          if (rightPoint > width) {
            rightPoint = width;
          }
          updateZoomDomain_1(leftPoint, rightPoint);
        }
      });
    }
  };
  ChartBrush2.DASH_LENGTH = 4;
  return ChartBrush2;
}(Component);

// node_modules/@carbon/charts/components/axes/grid.js
var __extends53 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Grid = function(_super) {
  __extends53(Grid2, _super);
  function Grid2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "grid";
    _this.renderType = RenderTypes.SVG;
    return _this;
  }
  Grid2.prototype.render = function(animate) {
    if (animate === void 0) {
      animate = true;
    }
    var isXGridEnabled = Tools.getProperty(this.getOptions(), "grid", "x", "enabled");
    var isYGridEnabled = Tools.getProperty(this.getOptions(), "grid", "y", "enabled");
    this.drawBackdrop(isXGridEnabled, isYGridEnabled);
    if (!isXGridEnabled && !isYGridEnabled) {
      return;
    }
    if (isXGridEnabled) {
      DOMUtils.appendOrSelect(this.backdrop, "g.x.grid");
      this.drawXGrid(animate);
    }
    if (isYGridEnabled) {
      DOMUtils.appendOrSelect(this.backdrop, "g.y.grid");
      this.drawYGrid(animate);
    }
  };
  Grid2.prototype.drawXGrid = function(animate) {
    var _this = this;
    var svg = this.parent;
    var height = this.backdrop.attr("height");
    var mainXScale = this.services.cartesianScales.getMainXScale();
    var xGrid = axisBottom(mainXScale).tickSizeInner(-height).tickSizeOuter(0);
    var alignToTicks = Tools.getProperty(this.getOptions(), "grid", "x", "alignWithAxisTicks");
    if (alignToTicks) {
      var mainXPosition = this.services.cartesianScales.getDomainAxisPosition();
      var customDomain = Tools.getProperty(this.getOptions(), "axes", mainXPosition, "ticks", "values");
      if (customDomain) {
        xGrid.tickValues(customDomain);
      }
    } else {
      var numberOfTicks = Tools.getProperty(this.getOptions(), "grid", "x", "numberOfTicks");
      xGrid.ticks(numberOfTicks);
    }
    var g = svg.select(".x.grid").attr("transform", "translate(" + -this.backdrop.attr("x") + ", " + height + ")");
    if (animate) {
      g.transition().call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "grid-update",
          animate
        });
      }).call(xGrid);
    } else {
      g.call(xGrid);
    }
    this.cleanGrid(g);
  };
  Grid2.prototype.drawYGrid = function(animate) {
    var _this = this;
    var svg = this.parent;
    var width = this.backdrop.attr("width");
    var mainYScale = this.services.cartesianScales.getMainYScale();
    var yGrid = axisLeft(mainYScale).tickSizeInner(-width).tickSizeOuter(0);
    var alignToTicks = Tools.getProperty(this.getOptions(), "grid", "y", "alignWithAxisTicks");
    if (alignToTicks) {
      var mainYPosition = this.services.cartesianScales.getRangeAxisPosition();
      var customDomain = Tools.getProperty(this.getOptions(), "axes", mainYPosition, "ticks", "values");
      if (customDomain) {
        yGrid.tickValues(customDomain);
      }
    } else {
      var numberOfTicks = Tools.getProperty(this.getOptions(), "grid", "y", "numberOfTicks");
      yGrid.ticks(numberOfTicks);
    }
    var g = svg.select(".y.grid").attr("transform", "translate(0, " + -this.backdrop.attr("y") + ")");
    if (animate) {
      g.transition().call(function(t) {
        return _this.services.transitions.setupTransition({
          transition: t,
          name: "grid-update",
          animate
        });
      }).call(yGrid);
    } else {
      g.call(yGrid);
    }
    this.cleanGrid(g);
  };
  Grid2.prototype.getGridlineThreshold = function(mousePos) {
    var svg = this.parent;
    var gridlinesX = svg.selectAll(".x.grid .tick").nodes().sort(function(a3, b) {
      return Number(Tools.getTranslationValues(a3).tx) - Number(Tools.getTranslationValues(b).tx);
    });
    var floor2 = -1;
    var ceiling;
    if (!gridlinesX.length) {
      return;
    }
    gridlinesX.forEach(function(line, i) {
      if (mousePos[0] >= +Tools.getTranslationValues(line).tx) {
        floor2++;
      }
    });
    ceiling = floor2 + 1 < gridlinesX.length ? floor2 + 1 : gridlinesX.length;
    var line1 = gridlinesX[floor2];
    var line2 = gridlinesX[ceiling];
    var lineSpacing;
    if (!line1) {
      lineSpacing = +Tools.getTranslationValues(line2).tx;
    } else if (!line2) {
      var gridElement = svg.select("rect.chart-grid-backdrop").node();
      var width = DOMUtils.getSVGElementSize(gridElement).width;
      lineSpacing = width - +Tools.getTranslationValues(line1).tx;
    } else {
      lineSpacing = +Tools.getTranslationValues(line2).tx - +Tools.getTranslationValues(line1).tx;
    }
    var threshold2 = this.getOptions().tooltip.gridline.threshold;
    return lineSpacing * threshold2;
  };
  Grid2.prototype.getActiveGridline = function(position2) {
    var userSpecifiedThreshold = Tools.getProperty(this.getOptions, "tooltip", "gridline", "threshold");
    var threshold2 = userSpecifiedThreshold ? userSpecifiedThreshold : this.getGridlineThreshold(position2);
    var svg = this.parent;
    var xGridlines = svg.selectAll(".x.grid .tick").filter(function() {
      var translations = Tools.getTranslationValues(this);
      var bounds = {
        min: Number(translations.tx) - threshold2,
        max: Number(translations.tx) + threshold2
      };
      return bounds.min <= position2[0] && position2[0] <= bounds.max;
    });
    return xGridlines;
  };
  Grid2.prototype.drawBackdrop = function(isXGridEnabled, isYGridEnabled) {
    var svg = this.parent;
    var mainXScale = this.services.cartesianScales.getMainXScale();
    var mainYScale = this.services.cartesianScales.getMainYScale();
    var _a4 = mainXScale.range(), xScaleStart = _a4[0], xScaleEnd = _a4[1];
    var _b = mainYScale.range(), yScaleEnd = _b[0], yScaleStart = _b[1];
    this.backdrop = DOMUtils.appendOrSelect(svg, "svg.chart-grid-backdrop");
    var backdropRect = DOMUtils.appendOrSelect(this.backdrop, isXGridEnabled || isYGridEnabled ? "rect.chart-grid-backdrop.stroked" : "rect.chart-grid-backdrop");
    this.backdrop.merge(backdropRect).attr("x", xScaleStart).attr("y", yScaleStart).attr("width", Math.abs(xScaleEnd - xScaleStart)).attr("height", Math.abs(yScaleEnd - yScaleStart)).lower();
    backdropRect.attr("width", "100%").attr("height", "100%");
  };
  Grid2.prototype.cleanGrid = function(g) {
    g.selectAll("text").remove();
    g.select(".domain").remove();
  };
  return Grid2;
}(Component);

// node_modules/@carbon/charts/components/axes/ruler.js
var __extends54 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var THRESHOLD = 5;
function pointIsWithinThreshold(dx, x3) {
  return dx > x3 - THRESHOLD && dx < x3 + THRESHOLD;
}
var Ruler = function(_super) {
  __extends54(Ruler2, _super);
  function Ruler2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "ruler";
    _this.renderType = RenderTypes.SVG;
    _this.isXGridEnabled = Tools.getProperty(_this.getOptions(), "grid", "x", "enabled");
    _this.isYGridEnabled = Tools.getProperty(_this.getOptions(), "grid", "y", "enabled");
    _this.isEventListenerAdded = false;
    return _this;
  }
  Ruler2.prototype.render = function() {
    var isRulerEnabled = Tools.getProperty(this.getOptions(), "ruler", "enabled");
    this.drawBackdrop();
    if (isRulerEnabled && !this.isEventListenerAdded) {
      this.addBackdropEventListeners();
    } else if (!isRulerEnabled && this.isEventListenerAdded) {
      this.removeBackdropEventListeners();
    }
  };
  Ruler2.prototype.removeBackdropEventListeners = function() {
    this.isEventListenerAdded = false;
    this.backdrop.on("mousemove mouseover mouseout", null);
  };
  Ruler2.prototype.formatTooltipData = function(tooltipData) {
    return tooltipData;
  };
  Ruler2.prototype.showRuler = function(event, _a4) {
    var _this = this;
    var x3 = _a4[0], y3 = _a4[1];
    var svg = this.parent;
    var orientation = this.services.cartesianScales.getOrientation();
    var displayData = this.model.getDisplayData();
    var rangeScale = this.services.cartesianScales.getRangeScale();
    var _b = rangeScale.range(), yScaleEnd = _b[0], yScaleStart = _b[1];
    var mouseCoordinate = orientation === CartesianOrientations.HORIZONTAL ? y3 : x3;
    var ruler2 = DOMUtils.appendOrSelect(svg, "g.ruler").attr("aria-label", "ruler");
    var rulerLine = DOMUtils.appendOrSelect(ruler2, "line.ruler-line");
    var dataPointElements = svg.selectAll("[role=graphics-symbol]");
    var pointsWithinLine = displayData.map(function(d) {
      return {
        domainValue: _this.services.cartesianScales.getDomainValue(d),
        originalData: d
      };
    }).filter(function(d) {
      return pointIsWithinThreshold(d.domainValue, mouseCoordinate);
    });
    if (this.pointsWithinLine && pointsWithinLine.length === this.pointsWithinLine.length && pointsWithinLine.map(function(point10) {
      return point10.domainValue;
    }).join() === this.pointsWithinLine.map(function(point10) {
      return point10.domainValue;
    }).join()) {
      this.pointsWithinLine = pointsWithinLine;
      return this.services.events.dispatchEvent(Events.Tooltip.MOVE, {
        mousePosition: [x3, y3]
      });
    }
    this.pointsWithinLine = pointsWithinLine;
    var dataPointsMatchingRulerLine = this.pointsWithinLine.reduce(function(accum, currentValue) {
      if (accum.length === 0) {
        accum.push(currentValue);
        return accum;
      }
      var sampleAccumValue = accum[0].domainValue;
      var distanceToCurrentValue = Math.abs(mouseCoordinate - currentValue.domainValue);
      var distanceToAccumValue = Math.abs(mouseCoordinate - sampleAccumValue);
      if (distanceToCurrentValue > distanceToAccumValue) {
        return accum;
      } else if (distanceToCurrentValue < distanceToAccumValue) {
        accum = [currentValue];
      } else {
        accum.push(currentValue);
      }
      return accum;
    }, []);
    if (dataPointsMatchingRulerLine.length > 0) {
      var tooltipData = dataPointsMatchingRulerLine.map(function(d) {
        return d.originalData;
      }).filter(function(d) {
        var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(d);
        var value2 = d[rangeIdentifier];
        return value2 !== null && value2 !== void 0;
      });
      var domainValuesMatchingRulerLine_1 = dataPointsMatchingRulerLine.map(function(d) {
        return d.domainValue;
      });
      var elementsToHighlight = dataPointElements.filter(function(d) {
        var domainValue = _this.services.cartesianScales.getDomainValue(d);
        return domainValuesMatchingRulerLine_1.includes(domainValue);
      });
      if (this.elementsToHighlight && this.elementsToHighlight.size() > 0 && !Tools.isEqual(this.elementsToHighlight, elementsToHighlight)) {
        this.hideRuler();
      }
      elementsToHighlight.dispatch("mouseover");
      this.elementsToHighlight = elementsToHighlight;
      this.services.events.dispatchEvent(Events.Tooltip.SHOW, {
        mousePosition: [x3, y3],
        hoveredElement: rulerLine,
        data: this.formatTooltipData(tooltipData)
      });
      ruler2.attr("opacity", 1);
      var sampleMatch = dataPointsMatchingRulerLine[0];
      if (orientation === "horizontal") {
        rulerLine.attr("x1", yScaleStart).attr("x2", yScaleEnd).attr("y1", sampleMatch.domainValue).attr("y2", sampleMatch.domainValue);
      } else {
        rulerLine.attr("y1", yScaleStart).attr("y2", yScaleEnd).attr("x1", sampleMatch.domainValue).attr("x2", sampleMatch.domainValue);
      }
    } else {
      this.hideRuler();
    }
  };
  Ruler2.prototype.hideRuler = function() {
    var svg = this.parent;
    var ruler2 = DOMUtils.appendOrSelect(svg, "g.ruler");
    var dataPointElements = svg.selectAll("[role=graphics-symbol]");
    dataPointElements.dispatch("mouseout");
    this.services.events.dispatchEvent(Events.Tooltip.HIDE);
    ruler2.attr("opacity", 0);
  };
  Ruler2.prototype.addBackdropEventListeners = function() {
    this.isEventListenerAdded = true;
    var self2 = this;
    var holder = this.services.domUtils.getHolder();
    var displayData = this.model.getDisplayData();
    var mouseMoveCallback = function(event) {
      var pos = pointer_default(event, self2.parent.node());
      self2.showRuler(event, pos);
    };
    if (displayData.length > 100) {
      var debounceThreshold = displayData.length % 50 * 12.5;
      mouseMoveCallback = Tools.debounceWithD3MousePosition(function(event) {
        var mousePosition = this.mousePosition;
        self2.showRuler(event, mousePosition);
      }, debounceThreshold, holder);
    }
    this.backdrop.on("mousemove mouseover", mouseMoveCallback).on("mouseout", this.hideRuler.bind(this));
  };
  Ruler2.prototype.drawBackdrop = function() {
    var svg = this.parent;
    this.backdrop = DOMUtils.appendOrSelect(svg, "svg.chart-grid-backdrop");
  };
  return Ruler2;
}(Component);

// node_modules/@carbon/charts/components/axes/ruler-binned.js
var __extends55 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays5 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var BinnedRuler = function(_super) {
  __extends55(BinnedRuler2, _super);
  function BinnedRuler2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "ruler-binned";
    _this.renderType = RenderTypes.SVG;
    return _this;
  }
  BinnedRuler2.prototype.showRuler = function(event, _a4) {
    var _this = this;
    var x3 = _a4[0], y3 = _a4[1];
    var svg = this.parent;
    var options2 = this.model.getOptions();
    var orientation = this.services.cartesianScales.getOrientation();
    var rangeScale = this.services.cartesianScales.getRangeScale();
    var _b = rangeScale.range(), yScaleEnd = _b[0], yScaleStart = _b[1];
    var domainScale = this.services.cartesianScales.getDomainScale();
    var correspondingDomainValue = domainScale.invert(orientation === CartesianOrientations.VERTICAL ? x3 : y3);
    var ruler2 = DOMUtils.appendOrSelect(svg, "g.ruler").attr("aria-label", "ruler");
    var rulerLine = DOMUtils.appendOrSelect(ruler2, "line.ruler-line");
    var dataPointElements = svg.selectAll("[role=graphics-symbol]");
    var elementsToHighlight = dataPointElements.filter(function(d) {
      if (parseFloat(get_default(d, "data.x0")) <= correspondingDomainValue && parseFloat(get_default(d, "data.x1")) >= correspondingDomainValue) {
        return true;
      }
    });
    if (elementsToHighlight.size() > 0) {
      if (this.elementsToHighlight && this.elementsToHighlight.size() > 0 && !Tools.isEqual(this.elementsToHighlight, elementsToHighlight)) {
        this.hideRuler();
      }
      elementsToHighlight.dispatch("mouseover");
      this.elementsToHighlight = elementsToHighlight;
      var sampleMatchData_1 = select_default2(elementsToHighlight.nodes()[0]).datum();
      var x0 = parseFloat(get_default(sampleMatchData_1, "data.x0"));
      var x1 = parseFloat(get_default(sampleMatchData_1, "data.x1"));
      var activeDataGroupNames = this.model.getActiveDataGroupNames();
      var tooltipDataGroups = activeDataGroupNames.reverse().map(function(dataGroupName) {
        return {
          label: dataGroupName,
          value: get_default(sampleMatchData_1, "data." + dataGroupName),
          class: _this.model.getColorClassName({
            classNameTypes: [ColorClassNameTypes.TOOLTIP],
            dataGroupName
          })
        };
      }).filter(function(d) {
        return d.value !== 0;
      });
      var thereIsMatchingData = tooltipDataGroups.length > 0;
      if (thereIsMatchingData) {
        this.services.events.dispatchEvent(Events.Tooltip.SHOW, {
          mousePosition: [x3, y3],
          hoveredElement: rulerLine,
          items: __spreadArrays5([
            {
              label: get_default(options2, "bins.rangeLabel") || "Range",
              value: x0 + " \u2013 " + x1
            }
          ], tooltipDataGroups, Tools.getProperty(options2, "tooltip", "showTotal") === true ? [
            {
              label: get_default(options2, "tooltip.totalLabel") || "Total",
              value: activeDataGroupNames.reduce(function(accum, currentValue) {
                return accum + parseFloat(get_default(sampleMatchData_1, "data." + currentValue));
              }, 0)
            }
          ] : [])
        });
        ruler2.attr("opacity", 1);
        var rulerPosition = domainScale((x0 + x1) / 2);
        if (orientation === "horizontal") {
          rulerLine.attr("x1", yScaleStart).attr("x2", yScaleEnd).attr("y1", rulerPosition).attr("y2", rulerPosition);
        } else {
          rulerLine.attr("y1", yScaleStart).attr("y2", yScaleEnd).attr("x1", rulerPosition).attr("x2", rulerPosition);
        }
      } else {
        this.hideRuler();
      }
    } else {
      this.hideRuler();
    }
  };
  return BinnedRuler2;
}(Ruler);

// node_modules/@carbon/charts/components/axes/ruler-stacked.js
var __extends56 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var StackedRuler = function(_super) {
  __extends56(StackedRuler2, _super);
  function StackedRuler2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  StackedRuler2.prototype.formatTooltipData = function(tooltipData) {
    return tooltipData.reverse();
  };
  return StackedRuler2;
}(Ruler);

// node_modules/@carbon/charts/components/axes/toolbar.js
var __extends57 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var Toolbar3 = function(_super) {
  __extends57(Toolbar4, _super);
  function Toolbar4() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "toolbar";
    _this.renderType = RenderTypes.HTML;
    return _this;
  }
  Toolbar4.prototype.init = function() {
    var _this = this;
    var bodyOnClickHandler = function() {
      return _this.updateOverflowMenu(false);
    };
    this.services.events.addEventListener(Events.Toolbar.SHOW_OVERFLOW_MENU, function() {
      _this.renderOverflowMenu();
      document.body.addEventListener("click", bodyOnClickHandler);
    });
    this.services.events.addEventListener(Events.Toolbar.HIDE_OVERFLOW_MENU, function() {
      document.body.removeEventListener("click", bodyOnClickHandler);
    });
  };
  Toolbar4.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var container = this.getComponentContainer().attr("role", "toolbar");
    var isDataLoading = Tools.getProperty(this.getOptions(), "data", "loading");
    if (isDataLoading) {
      container.html("");
      this.overflowMenu = null;
    } else {
      if (!this.overflowMenu) {
        this.overflowMenu = container.append("div").attr("class", "bx--overflow-menu-options bx--overflow-menu--flip").attr("tabindex", -1).attr("role", "menu").html("<ul></ul>");
      }
      var _a4 = this.getControlConfigs(), buttonList = _a4.buttonList, overflowMenuItemList = _a4.overflowMenuItemList;
      if (!!overflowMenuItemList) {
        buttonList.push(this.getOverflowButtonConfig());
      }
      var toolbarControls = container.selectAll("div.toolbar-control").data(buttonList, function(button) {
        return button.id;
      });
      toolbarControls.exit().remove();
      var enteringToolbarControls = toolbarControls.enter().append("div").attr("class", "toolbar-control bx--overflow-menu").attr("role", "button");
      var self_1 = this;
      var allToolbarControls = enteringToolbarControls.merge(toolbarControls).classed("disabled", function(d) {
        return d.shouldBeDisabled();
      }).attr("aria-disabled", function(d) {
        return d.shouldBeDisabled();
      }).attr("aria-label", function(d) {
        return d.title;
      }).html(function(d) {
        return '\n			<button\n				class="bx--overflow-menu__trigger"\n				aria-haspopup="true" aria-expanded="false" id="' + _this.services.domUtils.generateElementIDString("control-" + d.id) + '" aria-label="' + d.title + '">\n				<svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform; width: ' + (d.iconSVG.width !== void 0 ? d.iconSVG.width : "20px") + "; height: " + (d.iconSVG.height !== void 0 ? d.iconSVG.height : "20px") + '" xmlns="http://www.w3.org/2000/svg" class="bx--overflow-menu__icon" viewBox="0 0 32 32" aria-hidden="true">\n					' + d.iconSVG.content + "\n				</svg>\n			</button>";
      }).each(function(d, index4) {
        var _this2 = this;
        select_default2(this).select("button").on("click", function(event) {
          if (!d.shouldBeDisabled()) {
            self_1.triggerFunctionAndEvent(d, event, _this2);
          }
        }).on("keydown", function(event) {
          if (event.key && event.key === "Enter" || event.key === " ") {
            event.preventDefault();
            self_1.triggerFunctionAndEvent(d, event, _this2);
          } else if (event.key && event.key === "ArrowLeft") {
            self_1.focusOnPreviousEnabledToolbarItem(index4);
          } else if (event.key && event.key === "ArrowRight") {
            self_1.focusOnNextEnabledToolbarItem(index4);
          }
        });
      });
      this.overflowButton = this.getComponentContainer().select("button.bx--overflow-menu__trigger#" + this.services.domUtils.generateElementIDString("control-toolbar-overflow-menu"));
    }
  };
  Toolbar4.prototype.renderOverflowMenu = function() {
    var _this = this;
    var overflowMenuItemList = this.getControlConfigs().overflowMenuItemList;
    var overflowMenuControls = this.overflowMenu.select("ul").selectAll("li.bx--overflow-menu-options__option").data(overflowMenuItemList, function(button) {
      return Tools.getProperty(button, "id");
    });
    overflowMenuControls.exit().remove();
    var enteringOverflowMenuControls = overflowMenuControls.enter().append("li").attr("id", function(d) {
      return _this.services.domUtils.generateElementIDString("control-" + d.id);
    }).attr("class", "bx--overflow-menu-options__option").attr("role", "menuitem");
    enteringOverflowMenuControls.append("button").attr("class", "bx--overflow-menu-options__btn");
    enteringOverflowMenuControls.merge(overflowMenuControls).classed("bx--overflow-menu-options__option--disabled", function(d) {
      return d.shouldBeDisabled();
    }).attr("aria-disabled", function(d) {
      return d.shouldBeDisabled();
    }).selectAll("button").text(function(d) {
      return d.text;
    });
  };
  Toolbar4.prototype.isOverflowMenuOpen = function() {
    return this.overflowMenu.classed("is-open");
  };
  Toolbar4.prototype.updateOverflowMenu = function(show) {
    if (!this.overflowMenu) {
      return;
    }
    this.overflowMenu.classed("is-open", show);
    if (this.overflowButton) {
      this.overflowButton.attr("aria-expanded", show);
      select_default2(this.overflowButton.node().parentNode).classed("bx--overflow-menu--open", show);
    }
    if (show) {
      this.services.events.dispatchEvent(Events.Toolbar.SHOW_OVERFLOW_MENU);
    } else {
      this.services.events.dispatchEvent(Events.Toolbar.HIDE_OVERFLOW_MENU);
    }
  };
  Toolbar4.prototype.focusOnPreviousEnabledToolbarItem = function(currentItemIndex) {
    var buttonList = this.getToolbarButtonItems();
    var previousItemIndex = buttonList.length;
    for (var i = currentItemIndex - 1; i >= 0; i--) {
      var previousButtonItem = buttonList[i];
      if (!previousButtonItem.shouldBeDisabled()) {
        previousItemIndex = i;
        break;
      }
    }
    if (previousItemIndex < buttonList.length) {
      var previousItemNode = select_default2("button#" + this.services.domUtils.generateElementIDString("control-" + buttonList[previousItemIndex].id)).node();
      if ("focus" in previousItemNode) {
        previousItemNode.focus();
      }
    }
  };
  Toolbar4.prototype.focusOnNextEnabledToolbarItem = function(currentItemIndex) {
    var buttonList = this.getToolbarButtonItems();
    var nextItemIndex = -1;
    for (var i = currentItemIndex + 1; i < buttonList.length; i++) {
      var nextOverflowMenuItem = buttonList[i];
      if (!nextOverflowMenuItem.shouldBeDisabled()) {
        nextItemIndex = i;
        break;
      }
    }
    if (nextItemIndex > -1) {
      var nextItemNode = select_default2("button#" + this.services.domUtils.generateElementIDString("control-" + buttonList[nextItemIndex].id)).node();
      if ("focus" in nextItemNode) {
        nextItemNode.focus();
      }
    }
  };
  Toolbar4.prototype.focusOnPreviousEnabledMenuItem = function(currentItemIndex) {
    var overflowMenuItems = this.getOverflowMenuItems();
    var previousItemIndex = overflowMenuItems.length;
    for (var i = currentItemIndex - 1; i >= 0; i--) {
      var previousOverflowMenuItem = overflowMenuItems[i];
      if (!previousOverflowMenuItem.shouldBeDisabled()) {
        previousItemIndex = i;
        break;
      }
    }
    if (previousItemIndex < overflowMenuItems.length) {
      var previousItemNode = select_default2("#" + this.services.domUtils.generateElementIDString("control-" + overflowMenuItems[previousItemIndex].id) + " button").node();
      if ("focus" in previousItemNode) {
        previousItemNode.focus();
      }
    }
  };
  Toolbar4.prototype.focusOnNextEnabledMenuItem = function(currentItemIndex) {
    var overflowMenuItems = this.getOverflowMenuItems();
    var nextItemIndex = -1;
    for (var i = currentItemIndex + 1; i < overflowMenuItems.length; i++) {
      var nextOverflowMenuItem = overflowMenuItems[i];
      if (!nextOverflowMenuItem.shouldBeDisabled()) {
        nextItemIndex = i;
        break;
      }
    }
    if (nextItemIndex > -1) {
      var nextItemNode = select_default2("#" + this.services.domUtils.generateElementIDString("control-" + overflowMenuItems[nextItemIndex].id) + " button").node();
      if ("focus" in nextItemNode) {
        nextItemNode.focus();
      }
    }
  };
  Toolbar4.prototype.toggleOverflowMenu = function(event) {
    var _this = this;
    if (this.isOverflowMenuOpen()) {
      this.updateOverflowMenu(false);
    } else {
      this.updateOverflowMenu(true);
      var self_2 = this;
      var overflowMenuItems = this.getOverflowMenuItems();
      overflowMenuItems.forEach(function(menuItem, index4) {
        var element = select_default2("#" + _this.services.domUtils.generateElementIDString("control-" + menuItem.id));
        if (element !== null) {
          element.on("click", function() {
            self_2.triggerFunctionAndEvent(menuItem, event, element.node());
            self_2.updateOverflowMenu(false);
          });
          element.on("keydown", function(keyEvent) {
            if (keyEvent && keyEvent.key === "Enter") {
              self_2.triggerFunctionAndEvent(menuItem, event, element.node());
            } else if (keyEvent && keyEvent.key === "ArrowUp") {
              self_2.focusOnPreviousEnabledMenuItem(index4);
            } else if (keyEvent && keyEvent.key === "ArrowDown") {
              self_2.focusOnNextEnabledMenuItem(index4);
            } else if (keyEvent && keyEvent.key === "Escape") {
              self_2.updateOverflowMenu(false);
            }
            keyEvent.preventDefault();
          });
        }
      });
      self_2.focusOnNextEnabledMenuItem(-1);
    }
    if (!!event) {
      event.stopImmediatePropagation();
    }
  };
  Toolbar4.prototype.triggerFunctionAndEvent = function(control, event, element) {
    if (typeof control.clickFunction === "function") {
      control.clickFunction(event);
    }
    this.services.events.dispatchEvent(Events.Toolbar.BUTTON_CLICK, {
      control,
      event,
      element
    });
  };
  Toolbar4.prototype.getControlConfigs = function() {
    var _this = this;
    var numberOfIcons = Tools.getProperty(this.getOptions(), "toolbar", "numberOfIcons") - 1;
    var controls = Tools.getProperty(this.getOptions(), "toolbar", "controls");
    var overflowSpecificControls = [];
    var buttonList = [];
    var overflowList = [];
    controls.forEach(function(control) {
      var controlConfig = null;
      if (control.type === ToolbarControlTypes.CUSTOM) {
        if (Tools.getProperty(control, "id") === null) {
          control.id = "toolbar-button-" + Toolbar4.buttonID++;
        }
        if (Tools.getProperty(control, "shouldBeDisabled") === null) {
          control.shouldBeDisabled = function() {
            return false;
          };
        }
        controlConfig = control;
      } else {
        controlConfig = _this.getControlConfigByType(control.type);
      }
      if (controlConfig) {
        controlConfig.text = control.text ? control.text : control.type;
        if (controlConfig.id.indexOf("toolbar-export") !== -1) {
          overflowSpecificControls.push(controlConfig);
        } else if (buttonList.length < numberOfIcons) {
          if (Tools.getProperty(controlConfig, "iconSVG", "content") === null) {
            overflowList.push(controlConfig);
          } else {
            buttonList.push(controlConfig);
          }
        } else {
          overflowList.push(controlConfig);
        }
      }
    });
    overflowList.push.apply(overflowList, overflowSpecificControls);
    if (!overflowList.length) {
      return {
        buttonList
      };
    }
    return {
      buttonList,
      overflowMenuItemList: overflowList
    };
  };
  Toolbar4.prototype.getToolbarButtonItems = function() {
    var _a4 = this.getControlConfigs(), buttonList = _a4.buttonList, overflowMenuItemList = _a4.overflowMenuItemList;
    if (!!overflowMenuItemList) {
      buttonList.push(this.getOverflowButtonConfig());
    }
    if (!!buttonList) {
      return buttonList;
    }
    return [];
  };
  Toolbar4.prototype.getOverflowMenuItems = function() {
    var overflowMenuItemList = this.getControlConfigs().overflowMenuItemList;
    if (!!overflowMenuItemList) {
      return overflowMenuItemList;
    } else {
      return [];
    }
  };
  Toolbar4.prototype.getOverflowButtonConfig = function() {
    var _this = this;
    return {
      id: "toolbar-overflow-menu",
      title: "More options",
      shouldBeDisabled: function() {
        return false;
      },
      iconSVG: {
        content: '<circle cx="16" cy="8" r="2"></circle>\n				<circle cx="16" cy="16" r="2"></circle>\n				<circle cx="16" cy="24" r="2"></circle>'
      },
      clickFunction: function(event) {
        return _this.toggleOverflowMenu(event);
      }
    };
  };
  Toolbar4.prototype.getControlConfigByType = function(controlType) {
    var _this = this;
    var isZoomBarEnabled = this.services.zoom && this.services.zoom.isZoomBarEnabled() && !this.services.zoom.isEmptyState();
    var displayData = this.model.getDisplayData();
    var controlConfig;
    switch (controlType) {
      case ToolbarControlTypes.ZOOM_IN:
        if (isZoomBarEnabled) {
          controlConfig = {
            id: "toolbar-zoomIn",
            title: "Zoom in",
            shouldBeDisabled: function() {
              return _this.services.zoom.isMinZoomDomain();
            },
            iconSVG: {
              content: this.getControlIconByType(controlType)
            },
            clickFunction: function() {
              return _this.services.zoom.zoomIn();
            }
          };
        }
        break;
      case ToolbarControlTypes.ZOOM_OUT:
        if (isZoomBarEnabled) {
          controlConfig = {
            id: "toolbar-zoomOut",
            title: "Zoom out",
            shouldBeDisabled: function() {
              return _this.services.zoom.isMaxZoomDomain();
            },
            iconSVG: {
              content: this.getControlIconByType(controlType)
            },
            clickFunction: function() {
              return _this.services.zoom.zoomOut();
            }
          };
        }
        break;
      case ToolbarControlTypes.RESET_ZOOM:
        if (isZoomBarEnabled) {
          controlConfig = {
            id: "toolbar-resetZoom",
            title: "Reset zoom",
            shouldBeDisabled: function() {
              return _this.services.zoom.isMaxZoomDomain();
            },
            iconSVG: {
              content: this.getControlIconByType(controlType)
            },
            clickFunction: function() {
              return _this.services.zoom.resetZoomDomain();
            }
          };
        }
        break;
      case ToolbarControlTypes.MAKE_FULLSCREEN:
        controlConfig = {
          id: "toolbar-makefullscreen",
          iconSVG: {
            content: this.getControlIconByType(controlType),
            width: "15px",
            height: "15px"
          },
          title: "Make fullscreen",
          shouldBeDisabled: function() {
            return false;
          },
          clickFunction: function() {
            _this.services.domUtils.toggleFullscreen();
          }
        };
        break;
      case ToolbarControlTypes.SHOW_AS_DATATABLE:
        controlConfig = {
          id: "toolbar-showasdatatable",
          iconSVG: {
            content: this.getControlIconByType(controlType)
          },
          title: "Show as table",
          shouldBeDisabled: function() {
            return displayData.length === 0;
          },
          clickFunction: function() {
            return _this.services.events.dispatchEvent(Events.Modal.SHOW);
          }
        };
        break;
      case ToolbarControlTypes.EXPORT_CSV:
        controlConfig = {
          id: "toolbar-export-CSV",
          title: "Export as CSV",
          shouldBeDisabled: function() {
            return false;
          },
          iconSVG: {
            content: this.getControlIconByType(controlType)
          },
          clickFunction: function() {
            return _this.model.exportToCSV();
          }
        };
        break;
      case ToolbarControlTypes.EXPORT_PNG:
        controlConfig = {
          id: "toolbar-export-PNG",
          title: "Export as PNG",
          shouldBeDisabled: function() {
            return false;
          },
          iconSVG: {
            content: this.getControlIconByType(controlType)
          },
          clickFunction: function() {
            return _this.services.domUtils.exportToPNG();
          }
        };
        break;
      case ToolbarControlTypes.EXPORT_JPG:
        controlConfig = {
          id: "toolbar-export-JPG",
          title: "Export as JPG",
          shouldBeDisabled: function() {
            return false;
          },
          iconSVG: {
            content: this.getControlIconByType(controlType)
          },
          clickFunction: function() {
            return _this.services.domUtils.exportToJPG();
          }
        };
        break;
      default:
        throw Error("Not supported toolbar control type: " + controlType);
    }
    return controlConfig;
  };
  Toolbar4.prototype.getControlIconByType = function(controlType) {
    switch (controlType) {
      case ToolbarControlTypes.ZOOM_IN:
        return '<polygon points="19 13 15 13 15 9 13 9 13 13 9 13 9 15 13 15 13 19 15 19 15 15 19 15 19 13"/>\n						<path d="M22.45,21A10.87,10.87,0,0,0,25,14,11,11,0,1,0,14,25a10.87,10.87,0,0,0,7-2.55L28.59,30,30,28.59ZM14,23a9,9,0,1,1,9-9A9,9,0,0,1,14,23Z"/>';
      case ToolbarControlTypes.ZOOM_OUT:
        return '<rect x="9" y="13" width="10" height="2"/>\n						<path d="M22.45,21A10.87,10.87,0,0,0,25,14,11,11,0,1,0,14,25a10.87,10.87,0,0,0,7-2.55L28.59,30,30,28.59ZM14,23a9,9,0,1,1,9-9A9,9,0,0,1,14,23Z"/>';
      case ToolbarControlTypes.RESET_ZOOM:
        return '<path d="M22.4478,21A10.855,10.855,0,0,0,25,14,10.99,10.99,0,0,0,6,6.4658V2H4v8h8V8H7.332a8.9768,8.9768,0,1,1-2.1,8H3.1912A11.0118,11.0118,0,0,0,14,25a10.855,10.855,0,0,0,7-2.5522L28.5859,30,30,28.5859Z"/>';
      case ToolbarControlTypes.MAKE_FULLSCREEN:
        return '<polygon points="21 2 21 4 26.59 4 17 13.58 18.41 15 28 5.41 28 11 30 11 30 2 21 2"/><polygon points="15 18.42 13.59 17 4 26.59 4 21 2 21 2 30 11 30 11 28 5.41 28 15 18.42"/>';
      case ToolbarControlTypes.SHOW_AS_DATATABLE:
        return '<rect x="4" y="6" width="18" height="2"/><rect x="4" y="12" width="18" height="2"/><rect x="4" y="18" width="18" height="2"/><rect x="4" y="24" width="18" height="2"/><rect x="26" y="6" width="2" height="2"/><rect x="26" y="12" width="2" height="2"/><rect x="26" y="18" width="2" height="2"/><rect x="26" y="24" width="2" height="2"/>';
      case ToolbarControlTypes.EXPORT_CSV:
        return '<path d="M22.4478,21A10.855,10.855,0,0,0,25,14,10.99,10.99,0,0,0,6,6.4658V2H4v8h8V8H7.332a8.9768,8.9768,0,1,1-2.1,8H3.1912A11.0118,11.0118,0,0,0,14,25a10.855,10.855,0,0,0,7-2.5522L28.5859,30,30,28.5859Z"/>';
      case ToolbarControlTypes.EXPORT_JPG:
        return '<path d="M22.4478,21A10.855,10.855,0,0,0,25,14,10.99,10.99,0,0,0,6,6.4658V2H4v8h8V8H7.332a8.9768,8.9768,0,1,1-2.1,8H3.1912A11.0118,11.0118,0,0,0,14,25a10.855,10.855,0,0,0,7-2.5522L28.5859,30,30,28.5859Z"/>';
      case ToolbarControlTypes.EXPORT_PNG:
        return '<path d="M22.4478,21A10.855,10.855,0,0,0,25,14,10.99,10.99,0,0,0,6,6.4658V2H4v8h8V8H7.332a8.9768,8.9768,0,1,1-2.1,8H3.1912A11.0118,11.0118,0,0,0,14,25a10.855,10.855,0,0,0,7-2.5522L28.5859,30,30,28.5859Z"/>';
      default:
        throw Error("Not supported toolbar control type: " + controlType);
    }
  };
  Toolbar4.buttonID = 0;
  return Toolbar4;
}(Component);

// node_modules/@carbon/charts/components/axes/zero-line.js
var __extends58 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ZeroLine = function(_super) {
  __extends58(ZeroLine2, _super);
  function ZeroLine2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "zero-line";
    _this.renderType = RenderTypes.SVG;
    return _this;
  }
  ZeroLine2.prototype.render = function(animate) {
    var _this = this;
    var axisPosition = this.services.cartesianScales.getRangeAxisPosition({ groups: this.configs.groups });
    var rangeScale = this.services.cartesianScales.getScaleByPosition(axisPosition);
    var _a4 = rangeScale.domain(), minDomainValue = _a4[0], maxDomainValue = _a4[1];
    var drawZeroLine = minDomainValue > 0 && maxDomainValue < 0 || minDomainValue < 0 && maxDomainValue > 0;
    var svg = this.getComponentContainer();
    if (!drawZeroLine) {
      svg.selectAll("line.domain").remove();
      return;
    }
    var _b = this.services.cartesianScales.getDomainScale().range(), x0 = _b[0], x1 = _b[1];
    var yPosition = +rangeScale(0) + 0.5;
    if (!yPosition) {
      yPosition = rangeScale.range()[0];
    }
    var lineCoordinates = Tools.flipSVGCoordinatesBasedOnOrientation({
      x0,
      x1,
      y0: yPosition,
      y1: yPosition
    }, this.services.cartesianScales.getOrientation());
    var line = DOMUtils.appendOrSelect(svg, "line.domain");
    line.transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "zero-line-update",
        animate
      });
    }).attr("y1", lineCoordinates.y0).attr("y2", lineCoordinates.y1).attr("x1", lineCoordinates.x0).attr("x2", lineCoordinates.x1);
  };
  return ZeroLine2;
}(Component);

// node_modules/@carbon/charts/components/axes/zoom-bar.js
var __extends59 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ZoomBar2 = function(_super) {
  __extends59(ZoomBar3, _super);
  function ZoomBar3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "zoom-bar";
    _this.renderType = RenderTypes.SVG;
    _this.MIN_SELECTION_DIFF = 9e-10;
    _this.brushSelector = "g.zoom-bar-brush";
    _this.clipId = "zoomBarClip-" + Math.floor(Math.random() * 99999999999);
    _this.brush = brushX();
    _this.highlightStrokeWidth = 1;
    return _this;
  }
  ZoomBar3.prototype.init = function() {
    this.services.events.addEventListener(Events.ZoomBar.UPDATE, this.render.bind(this));
    var definedZoomBarData = Tools.getProperty(this.getOptions(), "zoomBar", AxisPositions.TOP, "data");
    this.model.setZoomBarData(definedZoomBarData);
  };
  ZoomBar3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var svg = this.getComponentContainer();
    var isTopZoomBarLoading = this.services.zoom.isZoomBarLoading(AxisPositions.TOP);
    var isTopZoomBarLocked = this.services.zoom.isZoomBarLocked(AxisPositions.TOP);
    var zoombarType = Tools.getProperty(this.getOptions(), "zoomBar", AxisPositions.TOP, "type");
    var highlight = Tools.getProperty(this.getOptions(), "axes", AxisPositions.BOTTOM, "highlights");
    var zoombarHeight = zoomBar.height[zoombarType];
    var width = DOMUtils.getSVGElementSize(this.parent, {
      useAttrs: true
    }).width;
    if (width === 0) {
      return;
    }
    var axesLeftMargin = 0;
    var axesMargins = this.model.get("axesMargins");
    if (axesMargins && axesMargins.left) {
      axesLeftMargin = axesMargins.left;
    }
    var container = DOMUtils.appendOrSelect(svg, "svg.zoom-container").attr("width", "100%").attr("height", zoombarHeight).attr("opacity", 1);
    var spacer = DOMUtils.appendOrSelect(svg, "rect.zoom-spacer").attr("x", 0).attr("y", zoombarHeight).attr("width", "100%").attr("height", zoomBar.spacerHeight).attr("opacity", 1).attr("fill", "none");
    if (zoombarType === ZoomBarTypes.GRAPH_VIEW) {
      DOMUtils.appendOrSelect(container, "rect.zoom-bg").attr("x", axesLeftMargin).attr("y", 0).attr("width", width - axesLeftMargin).attr("height", "100%").classed("zoom-bg-skeleton", isTopZoomBarLoading).style("stroke", isTopZoomBarLoading ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")" : null);
    } else if (zoombarType === ZoomBarTypes.SLIDER_VIEW) {
      DOMUtils.appendOrSelect(container, "rect.zoom-slider-bg").attr("x", axesLeftMargin).attr("y", zoombarHeight / 2 - 1).attr("width", width - axesLeftMargin).attr("height", 2).classed("zoom-slider-bg-skeleton", isTopZoomBarLoading).style("stroke", isTopZoomBarLoading ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")" : null);
    }
    if (isTopZoomBarLoading) {
      this.renderSkeleton(container, axesLeftMargin, width);
      return;
    }
    var cartesianScales = this.services.cartesianScales;
    var mainXScale = cartesianScales.getMainXScale();
    var mainYScale = cartesianScales.getMainYScale();
    var mainXScaleType = cartesianScales.getMainXScaleType();
    if (mainXScale && mainXScaleType === ScaleTypes.TIME) {
      var zoomBarData = this.services.zoom.getZoomBarData();
      if (Tools.isEmpty(zoomBarData) || zoomBarData.length === 1) {
        return;
      }
      this.xScale = mainXScale.copy();
      this.yScale = mainYScale.copy();
      var defaultDomain = this.services.zoom.getDefaultZoomBarDomain(zoomBarData);
      zoomBarData = this.compensateDataForDefaultDomain(zoomBarData, defaultDomain);
      var oldInitialZoomDomain = this.model.get("initialZoomDomain");
      var newInitialZoomDomain = Tools.getProperty(this.getOptions(), "zoomBar", AxisPositions.TOP, "initialZoomDomain");
      if (newInitialZoomDomain && newInitialZoomDomain[0] && newInitialZoomDomain[1]) {
        newInitialZoomDomain[0] = new Date(newInitialZoomDomain[0]);
        newInitialZoomDomain[1] = new Date(newInitialZoomDomain[1]);
      }
      if (newInitialZoomDomain && !(oldInitialZoomDomain && oldInitialZoomDomain[0].valueOf() === newInitialZoomDomain[0].valueOf() && oldInitialZoomDomain[1].valueOf() === newInitialZoomDomain[1].valueOf())) {
        this.model.set({
          initialZoomDomain: Tools.merge([], newInitialZoomDomain),
          zoomDomain: newInitialZoomDomain ? Tools.merge([], newInitialZoomDomain) : defaultDomain
        }, { skipUpdate: true });
      } else if (newInitialZoomDomain === null && oldInitialZoomDomain !== null) {
        this.model.set({
          initialZoomDomain: null,
          zoomDomain: Tools.merge([], defaultDomain)
        }, { skipUpdate: true });
      }
      this.xScale.range([axesLeftMargin, width]).domain(defaultDomain);
      this.maxSelectionRange = this.xScale.range();
      this.yScale.range([0, zoombarHeight - 6]).domain(extent(zoomBarData, function(d) {
        return d.value;
      }));
      var zoomDomain = this.model.get("zoomDomain");
      if (zoombarType === ZoomBarTypes.GRAPH_VIEW) {
        this.renderZoomBarArea(container, "path.zoom-graph-area-unselected", zoomBarData, null);
        this.updateClipPath(svg, this.clipId, 0, 0, 0, 0);
        this.renderZoomBarArea(container, "path.zoom-graph-area", zoomBarData, this.clipId);
        this.renderZoomBarBaseline(container, axesLeftMargin, width);
        if (highlight) {
          var startHighlight_1 = highlight.highlightStartMapsTo;
          var endHighlight_1 = highlight.highlightEndMapsTo;
          var color_1 = highlight.color;
          var labelMapTo_1 = highlight.labelMapsTo;
          highlight.data.forEach(function(element, index4) {
            DOMUtils.appendOrSelect(container, "rect.highlight-" + index4).attr("height", zoombarHeight - 2 * _this.highlightStrokeWidth).attr("y", _this.highlightStrokeWidth).attr("x", _this.xScale(element[startHighlight_1])).attr("width", _this.xScale(element[endHighlight_1]) - _this.xScale(element[startHighlight_1])).style("fill", color_1 && color_1.scale[element[labelMapTo_1]] ? color_1.scale[element[labelMapTo_1]] : null).style("fill-opacity", 0.1).style("stroke", color_1 && color_1.scale[element[labelMapTo_1]] ? color_1.scale[element[labelMapTo_1]] : null).style("stroke-dasharray", "2, 2").attr("stroke-width", 1 + "px");
          });
        }
      }
      this.addBrushEventListener(zoomDomain, axesLeftMargin, width);
      var brushArea = DOMUtils.appendOrSelect(svg, this.brushSelector).call(this.brush);
      if (zoomDomain === void 0) {
      } else if (zoomDomain[0].valueOf() === zoomDomain[1].valueOf()) {
        brushArea.call(this.brush.move, this.xScale.range());
        this.updateBrushHandle(this.getComponentContainer(), this.xScale.range(), this.xScale.domain());
      } else {
        var selected = zoomDomain.map(function(domain) {
          return _this.xScale(domain);
        });
        if (selected[1] - selected[0] < this.MIN_SELECTION_DIFF) {
        } else {
          brushArea.call(this.brush.move, selected);
          this.updateBrushHandle(this.getComponentContainer(), selected, zoomDomain);
        }
      }
      if (isTopZoomBarLocked) {
        this.brush.filter(function() {
          return false;
        });
        brushArea.selectAll("rect").attr("cursor", "auto");
      }
    }
  };
  ZoomBar3.prototype.addBrushEventListener = function(zoomDomain, axesLeftMargin, width) {
    var _this = this;
    var brushEventListener = function(event) {
      var selection2 = event.selection;
      if (selection2 === null) {
        _this.handleBrushedEvent(event, zoomDomain, _this.xScale, _this.xScale.range());
      } else if (selection2[0] === selection2[1]) {
      } else {
        _this.handleBrushedEvent(event, zoomDomain, _this.xScale, selection2);
      }
    };
    var zoombarType = Tools.getProperty(this.getOptions(), "zoomBar", AxisPositions.TOP, "type");
    var zoombarHeight = zoomBar.height[zoombarType];
    this.brush.extent([
      [axesLeftMargin, 0],
      [width, zoombarHeight]
    ]).on("start brush end", null).on("start brush end", brushEventListener);
  };
  ZoomBar3.prototype.handleBrushedEvent = function(event, zoomDomain, scale, selection2) {
    var newDomain = [
      scale.invert(selection2[0]),
      scale.invert(selection2[1])
    ];
    this.updateBrushHandle(this.getComponentContainer(), selection2, newDomain);
    if (event.sourceEvent != null && (event.sourceEvent.type === "mousemove" || event.sourceEvent.type === "mouseup" || event.sourceEvent.type === "mousedown" || event.sourceEvent.type === "touchstart" || event.sourceEvent.type === "touchmove" || event.sourceEvent.type === "touchend")) {
      if (zoomDomain === void 0 || zoomDomain[0] !== newDomain[0] || zoomDomain[1] !== newDomain[1]) {
        this.services.zoom.handleDomainChange(newDomain, {
          dispatchEvent: false
        });
      }
      var zoomBarEventType = void 0;
      if (event.type === "start") {
        zoomBarEventType = Events.ZoomBar.SELECTION_START;
      } else if (event.type === "brush") {
        zoomBarEventType = Events.ZoomBar.SELECTION_IN_PROGRESS;
      } else if (event.type === "end") {
        zoomBarEventType = Events.ZoomBar.SELECTION_END;
        this.services.events.dispatchEvent(Events.ZoomDomain.CHANGE, {
          newDomain
        });
      }
      this.services.events.dispatchEvent(zoomBarEventType, {
        selection: selection2,
        newDomain
      });
    }
  };
  ZoomBar3.prototype.updateBrushHandle = function(svg, selection2, domain) {
    var self2 = this;
    var handleWidth = zoomBar.handleWidth;
    var zoombarType = Tools.getProperty(this.getOptions(), "zoomBar", AxisPositions.TOP, "type");
    var handleHeight = zoomBar.height[zoombarType];
    var handleXDiff = -handleWidth / 2;
    var handleBarWidth = zoomBar.handleBarWidth;
    var handleBarHeight = zoombarType === ZoomBarTypes.GRAPH_VIEW ? zoomBar.handleBarHeight : 6;
    var handleBarXDiff = -handleBarWidth / 2;
    var handleYBarDiff = (handleHeight - handleBarHeight) / 2;
    svg.select(this.brushSelector).selectAll("rect.handle").data([{ type: "w" }, { type: "e" }]).attr("x", function(d) {
      if (d.type === "w") {
        return Math.max(selection2[0] + handleXDiff, self2.maxSelectionRange[0]);
      } else if (d.type === "e") {
        return Math.min(selection2[1] + handleXDiff, self2.maxSelectionRange[1] - handleWidth);
      }
    }).attr("y", 0).attr("width", handleWidth).attr("height", handleHeight).attr("cursor", "ew-resize").style("display", null);
    var handleBars = svg.select(this.brushSelector).selectAll("rect.handle-bar").data([{ type: "w" }, { type: "e" }]);
    handleBars.enter().append("rect").attr("class", function(d) {
      return "handle-bar handle-bar--" + d.type;
    });
    handleBars.attr("x", function(d) {
      if (d.type === "w") {
        return Math.max(selection2[0] + handleBarXDiff, self2.maxSelectionRange[0] - handleXDiff + handleBarXDiff);
      } else if (d.type === "e") {
        return Math.min(selection2[1] + handleBarXDiff, self2.maxSelectionRange[1] + handleXDiff + handleBarXDiff);
      }
    }).attr("y", handleYBarDiff).attr("width", handleBarWidth).attr("height", handleBarHeight).attr("cursor", "ew-resize");
    if (zoombarType === ZoomBarTypes.SLIDER_VIEW) {
      this.updateSliderSelectedArea(selection2);
    }
    this.updateClipPath(svg, this.clipId, selection2[0], 0, selection2[1] - selection2[0], handleHeight);
  };
  ZoomBar3.prototype.updateSliderSelectedArea = function(selection2) {
    var zoombarType = Tools.getProperty(this.getOptions(), "zoomBar", AxisPositions.TOP, "type");
    var zoombarHeight = zoomBar.height[zoombarType];
    var width = DOMUtils.getSVGElementSize(this.parent, {
      useAttrs: true
    }).width;
    var axesLeftMargin = 0;
    var axesMargins = this.model.get("axesMargins");
    if (axesMargins && axesMargins.left) {
      axesLeftMargin = axesMargins.left;
    }
    var svg = this.getComponentContainer();
    var container = svg.select("svg.zoom-container");
    DOMUtils.appendOrSelect(container, "rect.zoom-slider-selected-area").attr("x", selection2[0]).attr("y", zoombarHeight / 2 - 1).attr("width", selection2[1] - selection2[0]).attr("height", 2);
  };
  ZoomBar3.prototype.renderZoomBarArea = function(container, querySelector, data, clipId) {
    var cartesianScales = this.services.cartesianScales;
    var mainXAxisPosition = cartesianScales.getMainXAxisPosition();
    var mainYAxisPosition = cartesianScales.getMainYAxisPosition();
    var mainXScaleType = cartesianScales.getMainXScaleType();
    var mainYScaleType = cartesianScales.getMainYScaleType();
    var accessorFunction = function(scale, scaleType, axisPosition) {
      return function(d, i) {
        return cartesianScales.getValueFromScale(scale, scaleType, axisPosition, d, i);
      };
    };
    var xAccessor = accessorFunction(this.xScale, mainXScaleType, mainXAxisPosition);
    var yAccessor = accessorFunction(this.yScale, mainYScaleType, mainYAxisPosition);
    var zoombarType = Tools.getProperty(this.getOptions(), "zoomBar", AxisPositions.TOP, "type");
    var zoombarHeight = zoomBar.height[zoombarType];
    var areaGenerator = area_default().x(function(d, i) {
      return xAccessor(d, i);
    }).y0(zoombarHeight).y1(function(d, i) {
      return zoombarHeight - yAccessor(d, i);
    });
    var areaGraph = DOMUtils.appendOrSelect(container, querySelector).datum(data).attr("d", areaGenerator);
    if (clipId) {
      areaGraph.attr("clip-path", "url(#" + clipId + ")");
    }
  };
  ZoomBar3.prototype.updateClipPath = function(svg, clipId, x3, y3, width, height) {
    var zoomBarClipPath = DOMUtils.appendOrSelect(svg, "clipPath").attr("id", clipId);
    DOMUtils.appendOrSelect(zoomBarClipPath, "rect").attr("x", x3).attr("y", y3).attr("width", width).attr("height", height);
  };
  ZoomBar3.prototype.compensateDataForDefaultDomain = function(data, defaultDomain) {
    if (!data || data.length < 2) {
      return;
    }
    var zoomBarData = Tools.clone(data);
    var domainIdentifier = this.services.cartesianScales.getDomainIdentifier();
    var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();
    if (Number(defaultDomain[0]) < Number(zoomBarData[0][domainIdentifier])) {
      var newDatum = {};
      newDatum[domainIdentifier] = defaultDomain[0];
      newDatum[rangeIdentifier] = 0;
      zoomBarData.unshift(newDatum);
    }
    if (Number(defaultDomain[1]) > Number(zoomBarData[zoomBarData.length - 1][domainIdentifier])) {
      var newDatum = {};
      newDatum[domainIdentifier] = defaultDomain[1];
      newDatum[rangeIdentifier] = 0;
      zoomBarData.push(newDatum);
    }
    return zoomBarData;
  };
  ZoomBar3.prototype.renderZoomBarBaseline = function(container, startX, endX, skeletonClass) {
    if (skeletonClass === void 0) {
      skeletonClass = false;
    }
    var zoombarType = Tools.getProperty(this.model.getOptions(), "zoomBar", AxisPositions.TOP, "type");
    var zoombarHeight = zoomBar.height[zoombarType];
    var baselineGenerator = line_default()([
      [startX, zoombarHeight],
      [endX, zoombarHeight]
    ]);
    DOMUtils.appendOrSelect(container, "path.zoom-bg-baseline").attr("d", baselineGenerator).classed("zoom-bg-baseline-skeleton", skeletonClass).style("stroke", skeletonClass ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")" : null);
  };
  ZoomBar3.prototype.renderSkeleton = function(container, startX, endX) {
    this.renderZoomBarArea(container, "path.zoom-graph-area-unselected", [], null);
    this.renderZoomBarArea(container, "path.zoom-graph-area", [], this.clipId);
    this.brush.on("start brush end", null);
    DOMUtils.appendOrSelect(this.getComponentContainer(), this.brushSelector).html(null);
    var zoombarType = Tools.getProperty(this.getOptions(), "zoomBar", AxisPositions.TOP, "type");
    if (zoombarType === ZoomBarTypes.GRAPH_VIEW) {
      this.renderZoomBarBaseline(container, startX, endX, true);
    }
  };
  ZoomBar3.prototype.destroy = function() {
    this.brush.on("start brush end", null);
    this.services.events.removeEventListener(Events.ZoomBar.UPDATE, this.render.bind(this));
  };
  return ZoomBar3;
}(Component);

// node_modules/@carbon/charts/chart.js
var __spreadArrays6 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var Chart2 = function() {
  function Chart3(holder, chartConfigs) {
    this.services = {
      domUtils: DOMUtils,
      files: Files,
      events: Events2,
      gradientUtils: GradientUtils,
      transitions: Transitions,
      canvasZoom: CanvasZoom2
    };
    this.model = new ChartModel(this.services);
  }
  Chart3.prototype.init = function(holder, chartConfigs) {
    var _this = this;
    this.model.set({ holder }, { skipUpdate: true });
    Object.keys(this.services).forEach(function(serviceName) {
      var serviceObj = _this.services[serviceName];
      _this.services[serviceName] = new serviceObj(_this.model, _this.services);
    });
    this.services.events.addEventListener(Events.Model.UPDATE, function(e) {
      var animate = !!Tools.getProperty(e, "detail", "animate");
      _this.update(animate);
    });
    this.model.setData(chartConfigs.data);
    this.services.events.addEventListener(Events.Chart.RESIZE, function() {
      _this.update(false);
    });
    this.components = this.getComponents();
    this.update();
  };
  Chart3.prototype.getComponents = function() {
    console.error("getComponents() method is not implemented");
    return null;
  };
  Chart3.prototype.update = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    if (!this.components) {
      return;
    }
    Object.keys(this.services).forEach(function(serviceName) {
      var serviceObj = _this.services[serviceName];
      serviceObj.update();
    });
    this.components.forEach(function(component) {
      return component.render(animate);
    });
    var pendingTransitions = this.services.transitions.getPendingTransitions();
    var promises = Object.keys(pendingTransitions).map(function(transitionID) {
      var transition2 = pendingTransitions[transitionID];
      return transition2.end().catch(function(e) {
        return e;
      });
    });
    Promise.all(promises).then(function() {
      return _this.services.events.dispatchEvent(Events.Chart.RENDER_FINISHED);
    });
  };
  Chart3.prototype.destroy = function() {
    this.components.forEach(function(component) {
      return component.destroy();
    });
    this.services.domUtils.getHolder().remove();
    this.model.set({ destroyed: true }, { skipUpdate: true });
  };
  Chart3.prototype.getChartComponents = function(graphFrameComponents, configs) {
    var options2 = this.model.getOptions();
    var toolbarEnabled = Tools.getProperty(options2, "toolbar", "enabled");
    var legendComponent = {
      id: "legend",
      components: [new Legend2(this.model, this.services)],
      growth: LayoutGrowth.PREFERRED
    };
    var isZoomEnabled = Tools.getProperty(options2, "canvasZoom", "enabled");
    if (isZoomEnabled && isZoomEnabled === true) {
      graphFrameComponents.push(new CanvasChartClip(this.model, this.services));
    }
    var titleAvailable = !!this.model.getOptions().title;
    var titleComponent = {
      id: "title",
      components: [new Title(this.model, this.services)],
      growth: LayoutGrowth.STRETCH
    };
    var toolbarComponent = {
      id: "toolbar",
      components: [new Toolbar3(this.model, this.services)],
      growth: LayoutGrowth.PREFERRED
    };
    var headerComponent = {
      id: "header",
      components: [
        new LayoutComponent(this.model, this.services, __spreadArrays6([
          titleComponent
        ], toolbarEnabled ? [toolbarComponent] : []), {
          direction: LayoutDirection.ROW,
          alignItems: LayoutAlignItems.CENTER
        })
      ],
      growth: LayoutGrowth.PREFERRED
    };
    var graphFrameComponent = {
      id: "graph-frame",
      components: graphFrameComponents,
      growth: LayoutGrowth.STRETCH,
      renderType: Tools.getProperty(configs, "graphFrameRenderType") || RenderTypes.SVG
    };
    var isLegendEnabled = Tools.getProperty(configs, "excludeLegend") !== true && options2.legend.enabled !== false;
    var fullFrameComponentDirection = LayoutDirection.COLUMN;
    if (isLegendEnabled) {
      var legendPosition = Tools.getProperty(options2, "legend", "position");
      if (legendPosition === "left") {
        fullFrameComponentDirection = LayoutDirection.ROW;
        if (!options2.legend.orientation) {
          options2.legend.orientation = LegendOrientations.VERTICAL;
        }
      } else if (legendPosition === "right") {
        fullFrameComponentDirection = LayoutDirection.ROW_REVERSE;
        if (!options2.legend.orientation) {
          options2.legend.orientation = LegendOrientations.VERTICAL;
        }
      } else if (legendPosition === "bottom") {
        fullFrameComponentDirection = LayoutDirection.COLUMN_REVERSE;
      }
    }
    var legendSpacerComponent = {
      id: "spacer",
      components: [new Spacer(this.model, this.services)],
      growth: LayoutGrowth.PREFERRED
    };
    var fullFrameComponent = {
      id: "full-frame",
      components: [
        new LayoutComponent(this.model, this.services, __spreadArrays6(isLegendEnabled ? [legendComponent] : [], isLegendEnabled ? [legendSpacerComponent] : [], [
          graphFrameComponent
        ]), {
          direction: fullFrameComponentDirection
        })
      ],
      growth: LayoutGrowth.STRETCH
    };
    var topLevelLayoutComponents = [];
    if (titleAvailable || toolbarEnabled) {
      topLevelLayoutComponents.push(headerComponent);
      var titleSpacerComponent = {
        id: "spacer",
        components: [
          new Spacer(this.model, this.services, toolbarEnabled ? { size: 15 } : void 0)
        ],
        growth: LayoutGrowth.PREFERRED
      };
      topLevelLayoutComponents.push(titleSpacerComponent);
    }
    topLevelLayoutComponents.push(fullFrameComponent);
    return [
      new Tooltip3(this.model, this.services),
      new Modal3(this.model, this.services),
      new LayoutComponent(this.model, this.services, topLevelLayoutComponents, {
        direction: LayoutDirection.COLUMN
      })
    ];
  };
  return Chart3;
}();

// node_modules/@carbon/charts/model/cartesian-charts.js
var __extends60 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays7 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var ChartModelCartesian = function(_super) {
  __extends60(ChartModelCartesian2, _super);
  function ChartModelCartesian2(services) {
    var _this = _super.call(this, services) || this;
    _this.axisFlavor = AxisFlavor.DEFAULT;
    return _this;
  }
  ChartModelCartesian2.prototype.assignRangeAndDomains = function() {
    var cartesianScales = this.services.cartesianScales;
    var options2 = this.getOptions();
    var isDualAxes = cartesianScales.isDualAxes();
    var scales = {
      primaryDomain: cartesianScales.domainAxisPosition,
      primaryRange: cartesianScales.rangeAxisPosition,
      secondaryDomain: null,
      secondaryRange: null
    };
    if (isDualAxes) {
      scales.secondaryDomain = cartesianScales.secondaryDomainAxisPosition;
      scales.secondaryRange = cartesianScales.secondaryRangeAxisPosition;
    }
    Object.keys(scales).forEach(function(scale) {
      var position2 = scales[scale];
      if (cartesianScales.scales[position2]) {
        scales[scale] = {
          position: position2,
          label: cartesianScales.getScaleLabel(position2),
          identifier: Tools.getProperty(options2, "axes", position2, "mapsTo")
        };
      } else {
        scales[scale] = null;
      }
    });
    return scales;
  };
  ChartModelCartesian2.prototype.getTabularDataArray = function() {
    var displayData = this.getDisplayData();
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var cartesianScales = this.services.cartesianScales;
    var _a4 = this.assignRangeAndDomains(), primaryDomain = _a4.primaryDomain, primaryRange = _a4.primaryRange, secondaryDomain = _a4.secondaryDomain, secondaryRange = _a4.secondaryRange;
    var domainScaleType = cartesianScales.getDomainAxisScaleType();
    var domainValueFormatter;
    if (domainScaleType === ScaleTypes.TIME) {
      domainValueFormatter = function(d) {
        return format2(d, "MMM d, yyyy");
      };
    }
    var result2 = __spreadArrays7([
      __spreadArrays7([
        "Group",
        primaryDomain.label,
        primaryRange.label
      ], secondaryDomain ? [secondaryDomain.label] : [], secondaryRange ? [secondaryRange.label] : [])
    ], displayData.map(function(datum2) {
      return __spreadArrays7([
        datum2[groupMapsTo],
        datum2[primaryDomain.identifier] === null ? "&ndash;" : domainValueFormatter ? domainValueFormatter(datum2[primaryDomain.identifier]) : datum2[primaryDomain.identifier],
        datum2[primaryRange.identifier] === null || isNaN(datum2[primaryRange.identifier]) ? "&ndash;" : datum2[primaryRange.identifier].toLocaleString()
      ], secondaryDomain ? [
        datum2[secondaryDomain.identifier] === null ? "&ndash;" : datum2[secondaryDomain.identifier]
      ] : [], secondaryRange ? [
        datum2[secondaryRange.identifier] === null || isNaN(datum2[secondaryRange.identifier]) ? "&ndash;" : datum2[secondaryRange.identifier]
      ] : []);
    }));
    return result2;
  };
  ChartModelCartesian2.prototype.setData = function(newData) {
    var data;
    if (newData) {
      data = _super.prototype.setData.call(this, newData);
      if (Tools.getProperty(this.getOptions(), "zoomBar", AxisPositions.TOP, "enabled")) {
        var definedZoomBarData = Tools.getProperty(this.getOptions(), "zoomBar", AxisPositions.TOP, "data");
        this.setZoomBarData(definedZoomBarData);
      }
    }
    return data;
  };
  ChartModelCartesian2.prototype.setZoomBarData = function(newZoomBarData) {
    var sanitizedData = newZoomBarData ? this.sanitize(Tools.clone(newZoomBarData)) : this.getDisplayData();
    var zoomBarNormalizedValues = sanitizedData;
    var cartesianScales = this.services.cartesianScales;
    if (sanitizedData && cartesianScales.domainAxisPosition && cartesianScales.rangeAxisPosition) {
      var domainIdentifier_1 = cartesianScales.getDomainIdentifier();
      var rangeIdentifier_1 = cartesianScales.getRangeIdentifier();
      var allDates = sanitizedData.map(function(datum2) {
        return datum2[domainIdentifier_1].getTime();
      });
      allDates = Tools.removeArrayDuplicates(allDates).sort();
      zoomBarNormalizedValues = allDates.map(function(date2) {
        var sum6 = 0;
        var datum2 = {};
        sanitizedData.forEach(function(data) {
          if (data[domainIdentifier_1].getTime() === date2) {
            sum6 += data[rangeIdentifier_1];
          }
        });
        datum2[domainIdentifier_1] = new Date(date2);
        datum2[rangeIdentifier_1] = sum6;
        return datum2;
      });
    }
    this.set({ zoomBarData: zoomBarNormalizedValues });
  };
  ChartModelCartesian2.prototype.getZoomBarData = function() {
    return this.get("zoomBarData");
  };
  ChartModelCartesian2.prototype.sanitizeDateValues = function(data) {
    var options2 = this.getOptions();
    if (!options2.axes) {
      return data;
    }
    var keysToCheck = [];
    Object.keys(AxisPositions).forEach(function(axisPositionKey) {
      var axisPosition = AxisPositions[axisPositionKey];
      var axisOptions = options2.axes[axisPosition];
      if (axisOptions && axisOptions.scaleType === ScaleTypes.TIME) {
        var axisMapsTo = axisOptions.mapsTo;
        if (axisMapsTo !== null || axisMapsTo !== void 0) {
          keysToCheck.push(axisMapsTo);
        }
      }
    });
    if (keysToCheck.length > 0) {
      data.forEach(function(datum2) {
        keysToCheck.forEach(function(key) {
          if (Tools.getProperty(datum2, key, "getTime") === null) {
            datum2[key] = new Date(datum2[key]);
          }
        });
      });
    }
    return data;
  };
  ChartModelCartesian2.prototype.sanitize = function(data) {
    data = _super.prototype.sanitize.call(this, data);
    data = this.sanitizeDateValues(data);
    return data;
  };
  return ChartModelCartesian2;
}(ChartModel);

// node_modules/@carbon/charts/axis-chart.js
var __extends61 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays8 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var AxisChart = function(_super) {
  __extends61(AxisChart2, _super);
  function AxisChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.services = Object.assign(_this.services, {
      cartesianScales: CartesianScales,
      curves: Curves,
      zoom: Zoom
    });
    _this.model = new ChartModelCartesian(_this.services);
    return _this;
  }
  AxisChart2.prototype.getAxisChartComponents = function(graphFrameComponents, configs) {
    var options2 = this.model.getOptions();
    var isZoomBarEnabled = Tools.getProperty(options2, "zoomBar", AxisPositions.TOP, "enabled");
    var toolbarEnabled = Tools.getProperty(options2, "toolbar", "enabled");
    this.services.cartesianScales.determineAxisDuality();
    this.services.cartesianScales.findDomainAndRangeAxes();
    this.services.cartesianScales.determineOrientation();
    var mainXAxisPosition = this.services.cartesianScales.getMainXAxisPosition();
    var mainXScaleType = Tools.getProperty(options2, "axes", mainXAxisPosition, "scaleType");
    var zoomBarEnabled = isZoomBarEnabled && mainXAxisPosition === AxisPositions.BOTTOM && mainXScaleType === ScaleTypes.TIME;
    var isZoomBarLocked = this.services.zoom.isZoomBarLocked(AxisPositions.TOP);
    var titleAvailable = !!this.model.getOptions().title;
    var titleComponent = {
      id: "title",
      components: [new Title(this.model, this.services)],
      growth: LayoutGrowth.STRETCH
    };
    var toolbarComponent = {
      id: "toolbar",
      components: [new Toolbar3(this.model, this.services)],
      growth: LayoutGrowth.PREFERRED
    };
    var headerComponent = {
      id: "header",
      components: [
        new LayoutComponent(this.model, this.services, __spreadArrays8([
          titleComponent
        ], toolbarEnabled ? [toolbarComponent] : []), {
          direction: LayoutDirection.ROW,
          alignItems: LayoutAlignItems.CENTER
        })
      ],
      growth: LayoutGrowth.PREFERRED
    };
    var legendComponent = {
      id: "legend",
      components: [new Legend2(this.model, this.services)],
      growth: LayoutGrowth.PREFERRED
    };
    if (zoomBarEnabled && !isZoomBarLocked) {
      graphFrameComponents.push(new ChartClip(this.model, this.services), new ChartBrush(this.model, this.services));
    }
    graphFrameComponents.push(new Threshold2(this.model, this.services));
    graphFrameComponents.push(new Highlight(this.model, this.services));
    var graphFrameComponent = {
      id: "graph-frame",
      components: graphFrameComponents,
      growth: LayoutGrowth.STRETCH,
      renderType: RenderTypes.SVG
    };
    var isLegendEnabled = Tools.getProperty(configs, "legend", "enabled") !== false && this.model.getOptions().legend.enabled !== false;
    var fullFrameComponentDirection = LayoutDirection.COLUMN;
    if (isLegendEnabled) {
      var legendPosition = Tools.getProperty(this.model.getOptions(), "legend", "position");
      if (legendPosition === LegendPositions.LEFT) {
        fullFrameComponentDirection = LayoutDirection.ROW;
        if (!this.model.getOptions().legend.orientation) {
          this.model.getOptions().legend.orientation = LegendOrientations.VERTICAL;
        }
      } else if (legendPosition === LegendPositions.RIGHT) {
        fullFrameComponentDirection = LayoutDirection.ROW_REVERSE;
        if (!this.model.getOptions().legend.orientation) {
          this.model.getOptions().legend.orientation = LegendOrientations.VERTICAL;
        }
      } else if (legendPosition === LegendPositions.BOTTOM) {
        fullFrameComponentDirection = LayoutDirection.COLUMN_REVERSE;
      }
    }
    var legendSpacerComponent = {
      id: "spacer",
      components: [new Spacer(this.model, this.services)],
      growth: LayoutGrowth.PREFERRED
    };
    var fullFrameComponent = {
      id: "full-frame",
      components: [
        new LayoutComponent(this.model, this.services, __spreadArrays8(isLegendEnabled ? [legendComponent] : [], isLegendEnabled ? [legendSpacerComponent] : [], [
          graphFrameComponent
        ]), {
          direction: fullFrameComponentDirection
        })
      ],
      growth: LayoutGrowth.STRETCH
    };
    var zoomBarComponent = {
      id: "zoom-bar",
      components: [new ZoomBar2(this.model, this.services)],
      growth: LayoutGrowth.PREFERRED,
      renderType: RenderTypes.SVG
    };
    var topLevelLayoutComponents = [];
    if (titleAvailable || toolbarEnabled) {
      topLevelLayoutComponents.push(headerComponent);
      var titleSpacerComponent = {
        id: "spacer",
        components: [
          new Spacer(this.model, this.services, toolbarEnabled ? { size: 15 } : void 0)
        ],
        growth: LayoutGrowth.PREFERRED
      };
      topLevelLayoutComponents.push(titleSpacerComponent);
    }
    if (zoomBarEnabled) {
      topLevelLayoutComponents.push(zoomBarComponent);
    }
    topLevelLayoutComponents.push(fullFrameComponent);
    return [
      new AxisChartsTooltip(this.model, this.services),
      new Modal3(this.model, this.services),
      new LayoutComponent(this.model, this.services, topLevelLayoutComponents, {
        direction: LayoutDirection.COLUMN
      })
    ];
  };
  return AxisChart2;
}(Chart2);

// node_modules/@carbon/charts/charts/area.js
var __extends62 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var AreaChart = function(_super) {
  __extends62(AreaChart2, _super);
  function AreaChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model.setOptions(Tools.mergeDefaultChartOptions(Tools.clone(options.areaChart), chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  AreaChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new TwoDimensionalAxes(this.model, this.services),
      new Grid(this.model, this.services),
      new Ruler(this.model, this.services),
      new Line2(this.model, this.services),
      new Area2(this.model, this.services),
      new Scatter2(this.model, this.services, {
        fadeInOnChartHolderMouseover: true,
        handleThresholds: true
      }),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.GRID
      })
    ];
    var components = this.getAxisChartComponents(graphFrameComponents);
    return components;
  };
  return AreaChart2;
}(AxisChart);

// node_modules/@carbon/charts/charts/area-stacked.js
var __extends63 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var StackedAreaChart = function(_super) {
  __extends63(StackedAreaChart2, _super);
  function StackedAreaChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.stackedAreaChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  StackedAreaChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new TwoDimensionalAxes(this.model, this.services),
      new Grid(this.model, this.services),
      new StackedRuler(this.model, this.services),
      new StackedArea(this.model, this.services),
      new Line2(this.model, this.services, { stacked: true }),
      new StackedScatter(this.model, this.services, {
        fadeInOnChartHolderMouseover: true,
        handleThresholds: true,
        stacked: true
      }),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.GRID
      })
    ];
    var components = this.getAxisChartComponents(graphFrameComponents);
    return components;
  };
  return StackedAreaChart2;
}(AxisChart);

// node_modules/@carbon/charts/charts/bar-simple.js
var __extends64 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var SimpleBarChart = function(_super) {
  __extends64(SimpleBarChart2, _super);
  function SimpleBarChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.simpleBarChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  SimpleBarChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new TwoDimensionalAxes(this.model, this.services),
      new Grid(this.model, this.services),
      new SimpleBar(this.model, this.services),
      new ZeroLine(this.model, this.services),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.VERT_OR_HORIZ
      })
    ];
    var components = this.getAxisChartComponents(graphFrameComponents);
    return components;
  };
  return SimpleBarChart2;
}(AxisChart);

// node_modules/@carbon/charts/charts/bar-grouped.js
var __extends65 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var GroupedBarChart = function(_super) {
  __extends65(GroupedBarChart2, _super);
  function GroupedBarChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.groupedBarChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  GroupedBarChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new TwoDimensionalAxes(this.model, this.services),
      new Grid(this.model, this.services),
      new GroupedBar(this.model, this.services),
      new ZeroLine(this.model, this.services),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.VERT_OR_HORIZ
      })
    ];
    var components = this.getAxisChartComponents(graphFrameComponents);
    return components;
  };
  return GroupedBarChart2;
}(AxisChart);

// node_modules/@carbon/charts/charts/bar-stacked.js
var __extends66 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var StackedBarChart = function(_super) {
  __extends66(StackedBarChart2, _super);
  function StackedBarChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.stackedBarChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  StackedBarChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new TwoDimensionalAxes(this.model, this.services),
      new Grid(this.model, this.services),
      new StackedRuler(this.model, this.services),
      new StackedBar(this.model, this.services),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.VERT_OR_HORIZ
      }),
      new ZeroLine(this.model, this.services)
    ];
    var components = this.getAxisChartComponents(graphFrameComponents);
    return components;
  };
  return StackedBarChart2;
}(AxisChart);

// node_modules/@carbon/charts/model/boxplot.js
var __extends67 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays9 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var BoxplotChartModel = function(_super) {
  __extends67(BoxplotChartModel2, _super);
  function BoxplotChartModel2(services) {
    return _super.call(this, services) || this;
  }
  BoxplotChartModel2.prototype.getBoxQuartiles = function(d) {
    return {
      q_25: quantile(d, 0.25),
      q_50: quantile(d, 0.5),
      q_75: quantile(d, 0.75)
    };
  };
  BoxplotChartModel2.prototype.getBoxplotData = function() {
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var groupedData = this.getGroupedData();
    var boxplotData = [];
    var _loop_1 = function(group4, data2) {
      var _a5;
      var rangeIdentifier = this_1.services.cartesianScales.getRangeIdentifier();
      var values2 = data2.map(function(d) {
        return d[rangeIdentifier];
      }).sort(ascending2);
      var record = (_a5 = {}, _a5[groupMapsTo] = group4, _a5.counts = values2, _a5.quartiles = this_1.getBoxQuartiles(values2), _a5.outliers = null, _a5.whiskers = null, _a5);
      var q1 = record.quartiles.q_25;
      var q3 = record.quartiles.q_75;
      var iqr = (q3 - q1) * 1.5;
      var irq1 = q1 - iqr;
      var irq3 = q3 + iqr;
      var outliers = [];
      var normalValues = [];
      for (var _i2 = 0, values_1 = values2; _i2 < values_1.length; _i2++) {
        var value2 = values_1[_i2];
        if (value2 < irq1) {
          outliers.push(value2);
        } else if (value2 > irq3) {
          outliers.push(value2);
        } else {
          normalValues.push(value2);
        }
      }
      record.outliers = outliers;
      var minNormalValue = min2(normalValues);
      var maxNormalValue = max2(normalValues);
      record.whiskers = {
        min: minNormalValue ? minNormalValue : min2([
          record.quartiles.q_25,
          record.quartiles.q_50,
          record.quartiles.q_75
        ]),
        max: maxNormalValue ? maxNormalValue : max2([
          record.quartiles.q_25,
          record.quartiles.q_50,
          record.quartiles.q_75
        ])
      };
      boxplotData.push(record);
    };
    var this_1 = this;
    for (var _i = 0, groupedData_1 = groupedData; _i < groupedData_1.length; _i++) {
      var _a4 = groupedData_1[_i], group3 = _a4.name, data = _a4.data;
      _loop_1(group3, data);
    }
    return boxplotData;
  };
  BoxplotChartModel2.prototype.getTabularDataArray = function() {
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var boxplotData = this.getBoxplotData();
    var result2 = __spreadArrays9([
      [
        "Group",
        "Minimum",
        "Q1",
        "Median",
        "Q3",
        "Maximum",
        "IQR",
        "Outlier(s)"
      ]
    ], boxplotData.map(function(datum2) {
      var outliers = Tools.getProperty(datum2, "outliers");
      if (outliers === null || outliers.length === 0) {
        outliers = ["&ndash;"];
      }
      return [
        datum2[groupMapsTo],
        Tools.getProperty(datum2, "whiskers", "min") !== null ? Tools.getProperty(datum2, "whiskers", "min").toLocaleString() : "&ndash;",
        Tools.getProperty(datum2, "quartiles", "q_25") !== null ? Tools.getProperty(datum2, "quartiles", "q_25").toLocaleString() : "&ndash;",
        Tools.getProperty(datum2, "quartiles", "q_50") !== null ? Tools.getProperty(datum2, "quartiles", "q_50").toLocaleString() : "&ndash;",
        Tools.getProperty(datum2, "quartiles", "q_75") !== null ? Tools.getProperty(datum2, "quartiles", "q_75").toLocaleString() : "&ndash;",
        Tools.getProperty(datum2, "whiskers", "max") !== null ? Tools.getProperty(datum2, "whiskers", "max").toLocaleString() : "&ndash;",
        Tools.getProperty(datum2, "quartiles", "q_75") !== null && Tools.getProperty(datum2, "quartiles", "q_25") !== null ? (Tools.getProperty(datum2, "quartiles", "q_75") - Tools.getProperty(datum2, "quartiles", "q_25")).toLocaleString() : "&ndash;",
        outliers.map(function(d) {
          return d.toLocaleString();
        }).join(",")
      ];
    }));
    return result2;
  };
  BoxplotChartModel2.prototype.setColorClassNames = function() {
    var numberOfColors = 1;
    var colorPairingOptions = Tools.getProperty(this.getOptions(), "color", "pairing");
    var pairingOption = Tools.getProperty(colorPairingOptions, "option");
    var colorPairingCounts = color.pairingOptions;
    pairingOption = pairingOption <= colorPairingCounts[numberOfColors + "-color"] ? pairingOption : 1;
    var colorPairing = this.allDataGroups.map(function(dataGroup, index4) {
      return numberOfColors + "-" + pairingOption + "-1";
    });
    this.colorClassNames = ordinal().range(colorPairing).domain(this.allDataGroups);
  };
  return BoxplotChartModel2;
}(ChartModelCartesian);

// node_modules/@carbon/charts/charts/boxplot.js
var __extends68 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var BoxplotChart = function(_super) {
  __extends68(BoxplotChart2, _super);
  function BoxplotChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model = new BoxplotChartModel(_this.services);
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.boxplotChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  BoxplotChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new TwoDimensionalAxes(this.model, this.services),
      new Grid(this.model, this.services),
      new Boxplot2(this.model, this.services),
      new ZeroLine(this.model, this.services),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.VERT_OR_HORIZ
      })
    ];
    var components = this.getAxisChartComponents(graphFrameComponents, {
      legend: {
        enabled: false
      }
    });
    return components;
  };
  return BoxplotChart2;
}(AxisChart);

// node_modules/@carbon/charts/charts/bubble.js
var __extends69 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var BubbleChart = function(_super) {
  __extends69(BubbleChart2, _super);
  function BubbleChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.bubbleChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  BubbleChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new TwoDimensionalAxes(this.model, this.services),
      new Grid(this.model, this.services),
      new Ruler(this.model, this.services),
      new Bubble(this.model, this.services),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.GRID
      })
    ];
    var components = this.getAxisChartComponents(graphFrameComponents);
    return components;
  };
  return BubbleChart2;
}(AxisChart);

// node_modules/@carbon/charts/model/bullet.js
var __extends70 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays10 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var BulletChartModel = function(_super) {
  __extends70(BulletChartModel2, _super);
  function BulletChartModel2(services) {
    return _super.call(this, services) || this;
  }
  BulletChartModel2.prototype.getMatchingRangeIndexForDatapoint = function(datum2) {
    var matchingRangeIndex;
    for (var i = datum2.ranges.length - 1; i > 0; i--) {
      var range3 = datum2.ranges[i];
      if (datum2.value >= range3) {
        matchingRangeIndex = i;
        return matchingRangeIndex;
      }
    }
    return 0;
  };
  BulletChartModel2.prototype.getTabularDataArray = function() {
    var _this = this;
    var displayData = this.getDisplayData();
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();
    var performanceAreaTitles = Tools.getProperty(options2, "bullet", "performanceAreaTitles");
    var result2 = __spreadArrays10([
      ["Title", "Group", "Value", "Target", "Percentage", "Performance"]
    ], displayData.map(function(datum2) {
      return [
        datum2["title"],
        datum2[groupMapsTo],
        datum2["value"] === null ? "&ndash;" : datum2["value"],
        Tools.getProperty(datum2, "marker") === null ? "&ndash;" : datum2["marker"],
        Tools.getProperty(datum2, "marker") === null ? "&ndash;" : Math.floor(datum2[rangeIdentifier] / datum2.marker * 100) + "%",
        performanceAreaTitles[_this.getMatchingRangeIndexForDatapoint(datum2)]
      ];
    }));
    return result2;
  };
  return BulletChartModel2;
}(ChartModelCartesian);

// node_modules/@carbon/charts/charts/bullet.js
var __extends71 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var BulletChart = function(_super) {
  __extends71(BulletChart2, _super);
  function BulletChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model = new BulletChartModel(_this.services);
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.bulletChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  BulletChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new TwoDimensionalAxes(this.model, this.services),
      new Grid(this.model, this.services),
      new Bullet(this.model, this.services),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.GRID
      })
    ];
    var components = this.getAxisChartComponents(graphFrameComponents);
    return components;
  };
  return BulletChart2;
}(AxisChart);

// node_modules/@carbon/charts/model/binned-charts.js
var __extends72 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays11 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var ChartModelBinned = function(_super) {
  __extends72(ChartModelBinned2, _super);
  function ChartModelBinned2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  ChartModelBinned2.prototype.getTabularDataArray = function() {
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var binnedStackedData = this.getBinnedStackedData();
    var result2 = __spreadArrays11([
      __spreadArrays11([
        get_default(options2, "bins.rangeLabel") || "Range"
      ], binnedStackedData.map(function(datum2) {
        return get_default(datum2, "0." + groupMapsTo);
      }))
    ], get_default(binnedStackedData, 0).map(function(d, i) {
      return __spreadArrays11([
        get_default(d, "data.x0") + " \u2013 " + get_default(d, "data.x1")
      ], binnedStackedData.map(function(datum2) {
        return get_default(datum2[i], "data." + get_default(datum2[i], groupMapsTo));
      }));
    }));
    return result2;
  };
  return ChartModelBinned2;
}(ChartModelCartesian);

// node_modules/@carbon/charts/charts/histogram.js
var __extends73 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var HistogramChart = function(_super) {
  __extends73(HistogramChart2, _super);
  function HistogramChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model = new ChartModelBinned(_this.services);
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.histogramChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    _this.update();
    return _this;
  }
  HistogramChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new TwoDimensionalAxes(this.model, this.services),
      new Grid(this.model, this.services),
      new BinnedRuler(this.model, this.services),
      new Histogram(this.model, this.services)
    ];
    var components = this.getAxisChartComponents(graphFrameComponents);
    return components;
  };
  return HistogramChart2;
}(AxisChart);

// node_modules/@carbon/charts/charts/line.js
var __extends74 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var LineChart = function(_super) {
  __extends74(LineChart2, _super);
  function LineChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.lineChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  LineChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new TwoDimensionalAxes(this.model, this.services),
      new Grid(this.model, this.services),
      new Ruler(this.model, this.services),
      new Line2(this.model, this.services),
      new Scatter2(this.model, this.services, { handleThresholds: true }),
      new SkeletonLines(this.model, this.services),
      new ZeroLine(this.model, this.services)
    ];
    var components = this.getAxisChartComponents(graphFrameComponents);
    return components;
  };
  return LineChart2;
}(AxisChart);

// node_modules/@carbon/charts/charts/lollipop.js
var __extends75 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var LollipopChart = function(_super) {
  __extends75(LollipopChart2, _super);
  function LollipopChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.lollipopChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  LollipopChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new TwoDimensionalAxes(this.model, this.services),
      new Grid(this.model, this.services),
      new Ruler(this.model, this.services),
      new Lollipop(this.model, this.services),
      new Scatter2(this.model, this.services),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.GRID
      })
    ];
    var components = this.getAxisChartComponents(graphFrameComponents);
    return components;
  };
  return LollipopChart2;
}(AxisChart);

// node_modules/@carbon/charts/charts/scatter.js
var __extends76 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ScatterChart = function(_super) {
  __extends76(ScatterChart2, _super);
  function ScatterChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.scatterChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  ScatterChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new TwoDimensionalAxes(this.model, this.services),
      new Grid(this.model, this.services),
      new Ruler(this.model, this.services),
      new Scatter2(this.model, this.services),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.GRID
      })
    ];
    var components = this.getAxisChartComponents(graphFrameComponents);
    return components;
  };
  return ScatterChart2;
}(AxisChart);

// node_modules/@carbon/charts/model/pie.js
var __extends77 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays12 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var PieChartModel = function(_super) {
  __extends77(PieChartModel2, _super);
  function PieChartModel2(services) {
    return _super.call(this, services) || this;
  }
  PieChartModel2.prototype.getTabularData = function(data) {
    var tabularData = _super.prototype.getTabularData.call(this, data);
    if (data !== tabularData) {
      tabularData.forEach(function(d) {
        if (d.key && d.key !== d.group) {
          d.group = d.key;
        }
      });
    }
    return tabularData;
  };
  PieChartModel2.prototype.getTabularDataArray = function() {
    var displayData = this.getDisplayData();
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var result2 = __spreadArrays12([
      ["Group", "Value"]
    ], displayData.map(function(datum2) {
      return [
        datum2[groupMapsTo],
        datum2["value"] === null ? "&ndash;" : datum2["value"].toLocaleString()
      ];
    }));
    return result2;
  };
  PieChartModel2.prototype.sanitize = function(data) {
    var tabularData = this.getTabularData(data);
    return tabularData.sort(function(a3, b) {
      return b.value - a3.value;
    });
  };
  return PieChartModel2;
}(ChartModel);

// node_modules/@carbon/charts/charts/pie.js
var __extends78 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var PieChart = function(_super) {
  __extends78(PieChart2, _super);
  function PieChart2(holder, chartConfigs, extending) {
    if (extending === void 0) {
      extending = false;
    }
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model = new PieChartModel(_this.services);
    if (extending) {
      return _this;
    }
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.pieChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  PieChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new Pie2(this.model, this.services),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.PIE
      })
    ];
    var components = this.getChartComponents(graphFrameComponents);
    return components;
  };
  return PieChart2;
}(Chart2);

// node_modules/@carbon/charts/charts/donut.js
var __extends79 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var DonutChart = function(_super) {
  __extends79(DonutChart2, _super);
  function DonutChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs, true) || this;
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.donutChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  DonutChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new Donut(this.model, this.services),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.DONUT
      })
    ];
    var components = this.getChartComponents(graphFrameComponents);
    return components;
  };
  return DonutChart2;
}(PieChart);

// node_modules/@carbon/charts/model/meter.js
var __extends80 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays13 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var MeterChartModel = function(_super) {
  __extends80(MeterChartModel2, _super);
  function MeterChartModel2(services) {
    return _super.call(this, services) || this;
  }
  MeterChartModel2.prototype.getMaximumDomain = function(data) {
    var max8 = data.reduce(function(accumulator, datum2) {
      return accumulator + datum2.value;
    }, 0);
    return max8;
  };
  MeterChartModel2.prototype.getFillColor = function(group3) {
    var options2 = this.getOptions();
    var userProvidedScale = Tools.getProperty(options2, "color", "scale");
    var status = this.getStatus();
    if (userProvidedScale || !status) {
      return _super.prototype.getFillColor.call(this, group3);
    } else {
      return null;
    }
  };
  MeterChartModel2.prototype.getStatus = function() {
    var options2 = this.getOptions();
    var dataValues = Tools.getProperty(this.getDisplayData());
    var totalValue = (dataValues ? dataValues.reduce(function(previous, current) {
      return { value: previous.value + current.value };
    }) : 0).value;
    var boundedValue = Tools.getProperty(options2, "meter", "proportional") ? totalValue : totalValue > 100 ? 100 : totalValue;
    var allRanges = Tools.getProperty(options2, "meter", "status", "ranges");
    if (allRanges) {
      var result2 = allRanges.filter(function(step) {
        return step.range[0] <= boundedValue && boundedValue <= step.range[1];
      });
      if (result2.length > 0) {
        return result2[0].status;
      }
    }
    return null;
  };
  MeterChartModel2.prototype.getTabularDataArray = function() {
    var displayData = this.getDisplayData();
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var status = this.getStatus();
    var proportional = Tools.getProperty(options2, "meter", "proportional");
    var result2 = [];
    var domainMax;
    if (proportional === null) {
      domainMax = 100;
      var datum2 = displayData[0];
      result2 = [
        __spreadArrays13(["Group", "Value"], status ? ["Status"] : []),
        __spreadArrays13([
          datum2[groupMapsTo],
          datum2["value"]
        ], status ? [status] : [])
      ];
    } else {
      var total = Tools.getProperty(proportional, "total");
      domainMax = total ? total : this.getMaximumDomain(displayData);
      result2 = __spreadArrays13([
        ["Group", "Value", "Percentage of total"]
      ], displayData.map(function(datum3) {
        return [
          datum3[groupMapsTo],
          datum3["value"],
          (datum3["value"] / domainMax * 100).toFixed(2) + " %"
        ];
      }));
    }
    return result2;
  };
  return MeterChartModel2;
}(ChartModel);

// node_modules/@carbon/charts/components/graphs/meter.js
var __extends81 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign3 = function() {
  __assign3 = Object.assign || function(t) {
    for (var s3, i = 1, n = arguments.length; i < n; i++) {
      s3 = arguments[i];
      for (var p in s3)
        if (Object.prototype.hasOwnProperty.call(s3, p))
          t[p] = s3[p];
    }
    return t;
  };
  return __assign3.apply(this, arguments);
};
var Meter2 = function(_super) {
  __extends81(Meter3, _super);
  function Meter3() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.type = "meter";
    _this.renderType = RenderTypes.SVG;
    return _this;
  }
  Meter3.prototype.getStackedBounds = function(data, scale) {
    var prevX = 0;
    var stackedData = data.map(function(d, i) {
      if (i !== 0) {
        prevX += scale(d.value);
        return __assign3(__assign3({}, d), { width: Math.abs(scale(d.value) - meter.dividerWidth), x: prevX - scale(d.value) });
      } else {
        prevX = scale(d.value);
        return __assign3(__assign3({}, d), { width: Math.abs(scale(d.value) - meter.dividerWidth), x: 0 });
      }
    });
    return stackedData;
  };
  Meter3.prototype.render = function(animate) {
    var _this = this;
    if (animate === void 0) {
      animate = true;
    }
    var self2 = this;
    var svg = this.getComponentContainer();
    var options2 = this.getOptions();
    var proportional = Tools.getProperty(options2, "meter", "proportional");
    var data = this.model.getDisplayData();
    var status = this.model.getStatus();
    var width = DOMUtils.getSVGElementSize(svg, {
      useAttrs: true
    }).width;
    var groupMapsTo = options2.data.groupMapsTo;
    var domainMax;
    if (Tools.getProperty(options2, "meter", "proportional") === null) {
      domainMax = 100;
    } else {
      var total = Tools.getProperty(options2, "meter", "proportional", "total");
      domainMax = total ? total : this.model.getMaximumDomain(this.model.getDisplayData());
    }
    var xScale = linear3().domain([0, domainMax]).range([0, width]);
    var stackedData = this.getStackedBounds(data, xScale);
    var userProvidedHeight = Tools.getProperty(options2, "meter", "height");
    DOMUtils.appendOrSelect(svg, "rect.container").attr("x", 0).attr("y", 0).attr("width", width).attr("height", userProvidedHeight ? userProvidedHeight : proportional ? meter.height.proportional : meter.height.default);
    DOMUtils.appendOrSelect(svg, "line.rangeIndicator").attr("x1", width).attr("x2", width).attr("y1", 0).attr("y2", userProvidedHeight ? userProvidedHeight : proportional ? meter.height.proportional : meter.height.default);
    var valued = svg.selectAll("rect.value").data(stackedData);
    var className = status != null && !self2.model.isUserProvidedColorScaleValid() && !proportional ? "value status--" + status : "value";
    valued.enter().append("rect").classed("value", true).merge(valued).attr("x", function(d) {
      return d.x;
    }).attr("y", 0).attr("height", function() {
      var userProvidedHeight2 = Tools.getProperty(options2, "meter", "height");
      return userProvidedHeight2 ? userProvidedHeight2 : proportional ? meter.height.proportional : meter.height.default;
    }).attr("class", function(d) {
      return _this.model.getColorClassName({
        classNameTypes: [ColorClassNameTypes.FILL],
        dataGroupName: d[groupMapsTo],
        originalClassName: className
      });
    }).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "meter-bar-update",
        animate
      });
    }).attr("width", function(d, i) {
      return d.value > domainMax ? xScale(domainMax) : d.width;
    }).style("fill", function(d) {
      return self2.model.getFillColor(d[groupMapsTo]);
    }).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-roledescription", "value").attr("aria-label", function(d) {
      return d.value;
    });
    valued.exit().remove();
    var peakValue = Tools.getProperty(options2, "meter", "peak");
    var peakData = peakValue;
    if (peakValue !== null) {
      if (peakValue > domainMax) {
        peakData = domainMax;
      } else if (peakValue < data[0].value) {
        peakData = data[0].value > domainMax ? domainMax : data[0].value;
      }
    }
    var peak = svg.selectAll("line.peak").data(peakData == null ? [] : [peakData]);
    peak.enter().append("line").classed("peak", true).merge(peak).attr("y1", 0).attr("y2", function() {
      var userProvidedHeight2 = Tools.getProperty(options2, "meter", "height");
      return userProvidedHeight2 ? userProvidedHeight2 : proportional ? meter.height.proportional : meter.height.default;
    }).transition().call(function(t) {
      return _this.services.transitions.setupTransition({
        transition: t,
        name: "peak-line-update",
        animate
      });
    }).attr("x1", function(d) {
      return xScale(d);
    }).attr("x2", function(d) {
      return xScale(d);
    }).attr("role", Roles.GRAPHICS_SYMBOL).attr("aria-roledescription", "peak").attr("aria-label", function(d) {
      return d;
    });
    peak.exit().remove();
    this.services.domUtils.setSVGMaxHeight();
    this.addEventListeners();
  };
  Meter3.prototype.addEventListeners = function() {
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var self2 = this;
    var proportional = Tools.getProperty(options2, "meter", "proportional");
    this.parent.selectAll("rect.value").on("mouseover", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Meter.METER_MOUSEOVER, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      if (proportional) {
        hoveredElement.classed("hovered", true);
        self2.services.events.dispatchEvent(Events.Tooltip.SHOW, {
          event,
          hoveredElement,
          items: [
            {
              label: datum2[groupMapsTo],
              value: datum2.value
            }
          ]
        });
      }
    }).on("mousemove", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Meter.METER_MOUSEMOVE, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      if (proportional) {
        self2.services.events.dispatchEvent(Events.Tooltip.MOVE, {
          event
        });
      }
    }).on("click", function(event, datum2) {
      self2.services.events.dispatchEvent(Events.Meter.METER_CLICK, {
        event,
        element: select_default2(this),
        datum: datum2
      });
    }).on("mouseout", function(event, datum2) {
      var hoveredElement = select_default2(this);
      self2.services.events.dispatchEvent(Events.Meter.METER_MOUSEOUT, {
        event,
        element: hoveredElement,
        datum: datum2
      });
      if (proportional) {
        hoveredElement.classed("hovered", false);
        self2.services.events.dispatchEvent(Events.Tooltip.HIDE, {
          hoveredElement
        });
      }
    });
  };
  Meter3.prototype.destroy = function() {
    this.parent.selectAll("rect.value").on("mouseover", null).on("mousemove", null).on("mouseout", null).on("click", null);
  };
  return Meter3;
}(Component);

// node_modules/@carbon/charts/charts/meter.js
var __extends82 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays14 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var MeterChart = function(_super) {
  __extends82(MeterChart2, _super);
  function MeterChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model = new MeterChartModel(_this.services);
    var options2 = chartConfigs.options.meter.proportional ? Tools.merge(Tools.clone(options.proportionalMeterChart), chartConfigs.options) : Tools.merge(Tools.clone(options.meterChart), chartConfigs.options);
    _this.model.setOptions(options2);
    _this.init(holder, chartConfigs);
    return _this;
  }
  MeterChart2.prototype.getComponents = function() {
    var showLabels = Tools.getProperty(this.model.getOptions(), "meter", "showLabels");
    var meterComponents = __spreadArrays14(showLabels ? [
      {
        id: "meter-title",
        components: [
          new MeterTitle(this.model, this.services)
        ],
        growth: LayoutGrowth.STRETCH,
        renderType: RenderTypes.SVG
      },
      {
        id: "spacer",
        components: [
          new Spacer(this.model, this.services, {
            size: 8
          })
        ],
        growth: LayoutGrowth.STRETCH
      }
    ] : [], [
      {
        id: "meter-graph",
        components: [new Meter2(this.model, this.services)],
        growth: LayoutGrowth.STRETCH,
        renderType: RenderTypes.SVG
      }
    ]);
    var graphFrame = [
      new LayoutComponent(this.model, this.services, meterComponents, {
        direction: LayoutDirection.COLUMN
      })
    ];
    var components = this.getChartComponents(graphFrame, {
      graphFrameRenderType: RenderTypes.HTML
    });
    return components;
  };
  return MeterChart2;
}(Chart2);

// node_modules/@carbon/charts/model/radar.js
var __extends83 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays15 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var RadarChartModel = function(_super) {
  __extends83(RadarChartModel2, _super);
  function RadarChartModel2(services) {
    return _super.call(this, services) || this;
  }
  RadarChartModel2.prototype.getTabularDataArray = function() {
    var options2 = this.getOptions();
    var groupedData = this.getGroupedData();
    var _a4 = Tools.getProperty(options2, "radar", "axes"), angle = _a4.angle, value2 = _a4.value;
    var additionalHeaders = Tools.getProperty(groupedData, "0", "data").map(function(d) {
      return d[angle];
    });
    var result2 = __spreadArrays15([
      __spreadArrays15(["Group"], additionalHeaders)
    ], groupedData.map(function(datum2) {
      return __spreadArrays15([
        datum2["name"]
      ], additionalHeaders.map(function(additionalHeader, i) {
        return Tools.getProperty(datum2, "data", i, value2) !== null ? Tools.getProperty(datum2, "data", i, value2).toLocaleString() : "&ndash;";
      }));
    }));
    return result2;
  };
  return RadarChartModel2;
}(ChartModelCartesian);

// node_modules/@carbon/charts/charts/radar.js
var __extends84 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var RadarChart = function(_super) {
  __extends84(RadarChart2, _super);
  function RadarChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model = new RadarChartModel(_this.services);
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.radarChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  RadarChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new Radar2(this.model, this.services)
    ];
    var components = this.getChartComponents(graphFrameComponents);
    return components;
  };
  return RadarChart2;
}(Chart2);

// node_modules/@carbon/charts/model/gauge.js
var __extends85 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays16 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var GaugeChartModel = function(_super) {
  __extends85(GaugeChartModel2, _super);
  function GaugeChartModel2(services) {
    return _super.call(this, services) || this;
  }
  GaugeChartModel2.prototype.getDataGroups = function() {
    return _super.prototype.getDataGroups.call(this).filter(function(item) {
      return item.name !== "delta";
    });
  };
  GaugeChartModel2.prototype.getTabularDataArray = function() {
    var displayData = this.getDisplayData();
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var result2 = __spreadArrays16([
      ["Group", "Value"]
    ], displayData.map(function(datum2) {
      return [
        datum2[groupMapsTo],
        datum2["value"] === null ? "&ndash;" : datum2["value"].toLocaleString()
      ];
    }));
    return result2;
  };
  return GaugeChartModel2;
}(ChartModel);

// node_modules/@carbon/charts/charts/gauge.js
var __extends86 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var GaugeChart = function(_super) {
  __extends86(GaugeChart2, _super);
  function GaugeChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model = new GaugeChartModel(_this.services);
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.gaugeChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  GaugeChart2.prototype.getComponents = function() {
    var graphFrameComponents = [new Gauge2(this.model, this.services)];
    var components = this.getChartComponents(graphFrameComponents);
    return components;
  };
  return GaugeChart2;
}(Chart2);

// node_modules/@carbon/charts/charts/combo.js
var __extends87 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays17 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var _a3;
var graphComponentsMap = (_a3 = {}, _a3[ChartTypes.LINE] = [Line2, Scatter2], _a3[ChartTypes.SCATTER] = [Scatter2], _a3[ChartTypes.AREA] = [Area2, Line2, Scatter2], _a3[ChartTypes.STACKED_AREA] = [
  StackedArea,
  Line2,
  StackedScatter,
  StackedRuler
], _a3[ChartTypes.SIMPLE_BAR] = [SimpleBar], _a3[ChartTypes.GROUPED_BAR] = [GroupedBar, ZeroLine], _a3[ChartTypes.STACKED_BAR] = [StackedBar, StackedRuler], _a3);
var ComboChart = function(_super) {
  __extends87(ComboChart2, _super);
  function ComboChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    var chartOptions = Tools.mergeDefaultChartOptions(options.comboChart, chartConfigs.options);
    if (!chartConfigs.options.comboChartTypes) {
      console.error("No comboChartTypes defined for the Combo Chart!");
      chartOptions.comboChartTypes = [
        { type: ChartTypes.LINE, correspondingDatasets: [] }
      ];
    }
    _this.model.setOptions(chartOptions);
    _this.init(holder, chartConfigs);
    return _this;
  }
  ComboChart2.prototype.getGraphComponents = function() {
    var _this = this;
    var comboChartTypes = this.model.getOptions().comboChartTypes;
    var counter = 0;
    var graphComponents = comboChartTypes.map(function(graph) {
      var type2 = graph.type;
      var options2;
      if (typeof graph.type === "string") {
        if (!Object.keys(graphComponentsMap).includes(graph.type)) {
          console.error('Invalid chart type "' + graph.type + '" specified for combo chart. Please refer to the ComboChart tutorial for more guidance.');
          return null;
        }
        var stacked_1;
        options2 = Tools.merge({}, options[Tools.camelCase(graph.type) + "Chart"], _this.model.getOptions(), graph.options);
        if (graph.type === ChartTypes.STACKED_AREA) {
          stacked_1 = true;
        }
        return graphComponentsMap[graph.type].map(function(Component2, i) {
          return new Component2(_this.model, _this.services, {
            groups: graph.correspondingDatasets,
            id: counter++,
            options: options2,
            stacked: stacked_1
          });
        });
      } else {
        options2 = Tools.merge({}, _this.model.getOptions(), graph.options);
        return new type2(_this.model, _this.services, {
          groups: graph.correspondingDatasets,
          id: counter++,
          options: options2
        });
      }
    }).filter(function(item) {
      return item !== null;
    });
    return Tools.flatten(graphComponents);
  };
  ComboChart2.prototype.getComponents = function() {
    var comboChartTypes = this.model.getOptions().comboChartTypes;
    var stackedRulerEnabled = comboChartTypes.some(function(chartObject) {
      return chartObject.type === ChartTypes.STACKED_BAR || chartObject.type === ChartTypes.STACKED_AREA;
    });
    var graphFrameComponents = __spreadArrays17([
      new TwoDimensionalAxes(this.model, this.services),
      new Grid(this.model, this.services),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.GRID
      })
    ], stackedRulerEnabled ? [] : [new Ruler(this.model, this.services)], this.getGraphComponents());
    var components = this.getAxisChartComponents(graphFrameComponents);
    return components;
  };
  return ComboChart2;
}(AxisChart);

// node_modules/@carbon/charts/model/tree.js
var __extends88 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var TreeChartModel = function(_super) {
  __extends88(TreeChartModel2, _super);
  function TreeChartModel2(services) {
    return _super.call(this, services) || this;
  }
  TreeChartModel2.prototype.getTabularDataArray = function() {
    var _this = this;
    var displayData = this.getDisplayData();
    var result2 = [["Child", "Parent"]];
    displayData.forEach(function(datum2) {
      _this.getChildrenDatums(datum2, result2);
      result2.push([datum2.name, "&ndash;"]);
    });
    return result2;
  };
  TreeChartModel2.prototype.getChildrenDatums = function(datum2, result2) {
    var _this = this;
    if (result2 === void 0) {
      result2 = [];
    }
    if (datum2.children) {
      if (datum2.children.length > 0) {
        datum2.children.forEach(function(child) {
          _this.getChildrenDatums(child, result2);
          result2.push([child.name, datum2.name]);
        });
      }
    }
  };
  return TreeChartModel2;
}(ChartModel);

// node_modules/@carbon/charts/charts/tree.js
var __extends89 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var TreeChart = function(_super) {
  __extends89(TreeChart2, _super);
  function TreeChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model = new TreeChartModel(_this.services);
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.treeChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  TreeChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new Tree2(this.model, this.services)
    ];
    var components = this.getChartComponents(graphFrameComponents, {
      excludeLegend: true
    });
    return components;
  };
  return TreeChart2;
}(Chart2);

// node_modules/@carbon/charts/model/treemap.js
var __extends90 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var TreemapChartModel = function(_super) {
  __extends90(TreemapChartModel2, _super);
  function TreemapChartModel2(services) {
    return _super.call(this, services) || this;
  }
  TreemapChartModel2.prototype.getTabularDataArray = function() {
    var displayData = this.getDisplayData();
    var result2 = [["Child", "Group", "Value"]];
    displayData.forEach(function(datum2) {
      if (Array.isArray(datum2.children)) {
        datum2.children.forEach(function(child) {
          result2.push([child.name, datum2.name, child.value]);
        });
      } else if (Tools.getProperty(datum2.name) !== null && Tools.getProperty(datum2.value)) {
        result2.push(["\u2013", datum2.name, datum2.value]);
      }
    });
    return result2;
  };
  return TreemapChartModel2;
}(ChartModel);

// node_modules/@carbon/charts/charts/treemap.js
var __extends91 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var TreemapChart = function(_super) {
  __extends91(TreemapChart2, _super);
  function TreemapChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model = new TreemapChartModel(_this.services);
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.treemapChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  TreemapChart2.prototype.getComponents = function() {
    var graphFrameComponents = [new Treemap2(this.model, this.services)];
    var components = this.getChartComponents(graphFrameComponents);
    return components;
  };
  return TreemapChart2;
}(Chart2);

// node_modules/@carbon/charts/model/circle-pack.js
var __extends92 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign4 = function() {
  __assign4 = Object.assign || function(t) {
    for (var s3, i = 1, n = arguments.length; i < n; i++) {
      s3 = arguments[i];
      for (var p in s3)
        if (Object.prototype.hasOwnProperty.call(s3, p))
          t[p] = s3[p];
    }
    return t;
  };
  return __assign4.apply(this, arguments);
};
var CirclePackChartModel = function(_super) {
  __extends92(CirclePackChartModel2, _super);
  function CirclePackChartModel2(services) {
    var _this = _super.call(this, services) || this;
    _this.parentNode = false;
    _this.set({ depth: 2 }, { skipUpdate: true });
    return _this;
  }
  CirclePackChartModel2.prototype.setData = function(newData) {
    _super.prototype.setData.call(this, newData);
    this.setDataGroups();
    if (newData.length === 1) {
      this.parentNode = true;
    }
    this.setZoom();
  };
  CirclePackChartModel2.prototype.setOptions = function(newOptions) {
    var options2 = this.getOptions();
    var zoomOptions = Tools.merge({}, newOptions, this.getZoomOptions(newOptions));
    Tools.updateLegendAdditionalItems(options2, zoomOptions);
    var depth = this.getHierarchyLevel();
    var userProvidedDepth = Tools.getProperty(options2, "circlePack", "hierarchyLevel");
    this.set({
      options: Tools.merge(options2, zoomOptions),
      depth: userProvidedDepth && userProvidedDepth < 4 ? userProvidedDepth : depth
    });
  };
  CirclePackChartModel2.prototype.getZoomOptions = function(options2) {
    if (!this.getDisplayData()) {
      return {};
    }
    var displayData = this.getDisplayData();
    var zoomOptions = options2 ? options2 : this.getOptions();
    var data = displayData.length === 1 && Tools.getProperty(displayData, 0, "children") ? Tools.getProperty(displayData, 0, "children") : displayData;
    var depth = this.getHierarchyLevel();
    data.some(function(datum2) {
      if (datum2.children) {
        if (datum2.children.some(function(item) {
          return item.children;
        })) {
          depth = 3;
          return false;
        }
      }
    });
    if (Tools.getProperty(zoomOptions, "canvasZoom", "enabled") === true && depth > 2) {
      return {
        legend: {
          additionalItems: [
            {
              type: LegendItemType.ZOOM,
              name: "Click to zoom"
            }
          ]
        }
      };
    }
    return null;
  };
  CirclePackChartModel2.prototype.setZoom = function(options2) {
    this.setOptions(this.getZoomOptions(options2));
  };
  CirclePackChartModel2.prototype.updateHierarchyLevel = function(depth) {
    this.set({ depth });
  };
  CirclePackChartModel2.prototype.getHierarchyLevel = function() {
    return this.get("depth");
  };
  CirclePackChartModel2.prototype.hasParentNode = function() {
    return this.parentNode;
  };
  CirclePackChartModel2.prototype.setDataGroups = function() {
    var _this = this;
    var data = this.getData();
    var options2 = this.getOptions();
    var groupMapsTo = options2.data.groupMapsTo;
    var newData = data.map(function(depthOne) {
      var groupName = depthOne[groupMapsTo];
      return _this.setChildrenDataGroup(depthOne, groupName);
    });
    this.set({
      data: newData
    }, { skipUpdate: true });
  };
  CirclePackChartModel2.prototype.setChildrenDataGroup = function(node, name) {
    var _this = this;
    if (node.children) {
      return __assign4(__assign4({}, node), { dataGroupName: name, children: node.children.map(function(child, i) {
        return _this.setChildrenDataGroup(child, name);
      }) });
    } else {
      return __assign4(__assign4({}, node), { dataGroupName: name });
    }
  };
  CirclePackChartModel2.prototype.getTabularDataArray = function() {
    var _this = this;
    var displayData = this.getDisplayData();
    var result2 = [["Child", "Parent", "Value"]];
    displayData.forEach(function(datum2) {
      var value2 = datum2.value ? datum2.value : 0;
      if (datum2.children) {
        value2 += _this.getChildrenDatums(datum2.children, datum2.name, result2, 0);
      }
      result2.push(["&ndash;", datum2.name, value2]);
    });
    return result2;
  };
  CirclePackChartModel2.prototype.getChildrenDatums = function(children2, parent2, result2, totalSum) {
    var _this = this;
    if (result2 === void 0) {
      result2 = [];
    }
    if (totalSum === void 0) {
      totalSum = 0;
    }
    var grandParent = parent2;
    children2.forEach(function(child) {
      var parent3 = child.name;
      var sum6 = 0;
      if (child.children) {
        if (child.children.length > 0) {
          if (typeof child.value === "number") {
            totalSum += child.value;
          }
          sum6 += _this.getChildrenDatums(child.children, parent3, result2, sum6);
          result2.push([parent3, grandParent, sum6]);
          totalSum += sum6;
        }
      } else {
        var value2 = 0;
        if (typeof child.value === "number") {
          value2 = child.value;
          totalSum += child.value;
        }
        result2.push([child.name, grandParent, value2]);
      }
    });
    return totalSum;
  };
  return CirclePackChartModel2;
}(ChartModel);

// node_modules/@carbon/charts/charts/circle-pack.js
var __extends93 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var CirclePackChart = function(_super) {
  __extends93(CirclePackChart2, _super);
  function CirclePackChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model = new CirclePackChartModel(_this.services);
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.circlePackChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  CirclePackChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new CirclePack2(this.model, this.services)
    ];
    var components = this.getChartComponents(graphFrameComponents);
    return components;
  };
  return CirclePackChart2;
}(Chart2);

// node_modules/@carbon/charts/model/wordcloud.js
var __extends94 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays18 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var WordCloudModel = function(_super) {
  __extends94(WordCloudModel2, _super);
  function WordCloudModel2(services) {
    return _super.call(this, services) || this;
  }
  WordCloudModel2.prototype.getTabularDataArray = function() {
    var displayData = this.getDisplayData();
    var options2 = this.getOptions();
    var _a4 = options2.wordCloud, fontSizeMapsTo = _a4.fontSizeMapsTo, wordMapsTo = _a4.wordMapsTo;
    var groupMapsTo = options2.data.groupMapsTo;
    var result2 = __spreadArrays18([
      [options2.tooltip.wordLabel, "Group", options2.tooltip.valueLabel]
    ], displayData.map(function(datum2) {
      return [
        datum2[wordMapsTo],
        datum2[groupMapsTo],
        datum2[fontSizeMapsTo]
      ];
    }));
    return result2;
  };
  return WordCloudModel2;
}(ChartModel);

// node_modules/@carbon/charts/charts/wordcloud.js
var __extends95 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var WordCloudChart = function(_super) {
  __extends95(WordCloudChart2, _super);
  function WordCloudChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model = new WordCloudModel(_this.services);
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.wordCloudChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  WordCloudChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new WordCloud2(this.model, this.services),
      new Skeleton(this.model, this.services, {
        skeleton: Skeletons.PIE
      })
    ];
    var components = this.getChartComponents(graphFrameComponents);
    return components;
  };
  return WordCloudChart2;
}(Chart2);

// node_modules/@carbon/charts/model/alluvial.js
var __extends96 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays19 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var AlluvialChartModel = function(_super) {
  __extends96(AlluvialChartModel2, _super);
  function AlluvialChartModel2(services) {
    return _super.call(this, services) || this;
  }
  AlluvialChartModel2.prototype.getTabularDataArray = function() {
    var displayData = this.getDisplayData();
    displayData.sort(function(a3, b) {
      return a3["source"].localeCompare(b["source"]);
    });
    var result2 = __spreadArrays19([
      ["Source", "Target", "Value"]
    ], displayData.map(function(datum2) {
      return [
        datum2["source"],
        datum2["target"],
        datum2["value"]
      ];
    }));
    return result2;
  };
  return AlluvialChartModel2;
}(ChartModelCartesian);

// node_modules/@carbon/charts/charts/alluvial.js
var __extends97 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var AlluvialChart = function(_super) {
  __extends97(AlluvialChart2, _super);
  function AlluvialChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model = new AlluvialChartModel(_this.services);
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.alluvialChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  AlluvialChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new Alluvial2(this.model, this.services)
    ];
    var components = this.getChartComponents(graphFrameComponents, {
      excludeLegend: true
    });
    return components;
  };
  return AlluvialChart2;
}(Chart2);

// node_modules/@carbon/charts/model/heatmap.js
var __extends98 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays20 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var HeatmapModel = function(_super) {
  __extends98(HeatmapModel2, _super);
  function HeatmapModel2(services) {
    var _this = _super.call(this, services) || this;
    _this.axisFlavor = AxisFlavor.HOVERABLE;
    _this._colorScale = void 0;
    _this._domains = [];
    _this._ranges = [];
    _this._matrix = {};
    var axis3 = Tools.getProperty(_this.getOptions(), "axes");
    if (!!Tools.getProperty(axis3, "left", "scaleType") && Tools.getProperty(axis3, "left", "scaleType") !== ScaleTypes.LABELS || !!Tools.getProperty(axis3, "right", "scaleType") && Tools.getProperty(axis3, "right", "scaleType") !== ScaleTypes.LABELS || !!Tools.getProperty(axis3, "top", "scaleType") && Tools.getProperty(axis3, "top", "scaleType") !== ScaleTypes.LABELS || !!Tools.getProperty(axis3, "bottom", "scaleType") && Tools.getProperty(axis3, "bottom", "scaleType") !== ScaleTypes.LABELS) {
      throw Error("Heatmap only supports label scaletypes.");
    }
    return _this;
  }
  HeatmapModel2.prototype.getValueDomain = function() {
    var data = this.getDisplayData().map(function(element) {
      return element.value;
    });
    var limits = extent(data);
    var domain = [];
    limits.forEach(function(number5, index4) {
      var value2 = Number(number5);
      if (index4 === 0 && value2 >= 0) {
        value2 = 0;
      } else if (value2 % 10 === 0 || value2 === 0) {
        value2;
      } else if (value2 < 0) {
        value2 = Math.floor(value2 / 10) * 10;
      } else {
        value2 = Math.ceil(value2 / 10) * 10;
      }
      domain.push(value2);
    });
    if (domain[0] < 0 && domain[1] > 0) {
      if (Math.abs(domain[0]) > domain[1]) {
        domain[1] = Math.abs(domain[0]);
      } else {
        domain[0] = -domain[1];
      }
    }
    return domain;
  };
  HeatmapModel2.prototype.getFillColor = function(value2) {
    return this._colorScale(value2);
  };
  HeatmapModel2.prototype.getUniqueDomain = function() {
    if (Tools.isEmpty(this._domains)) {
      var displayData = this.getDisplayData();
      var cartesianScales = this.services.cartesianScales;
      var domainIdentifier_1 = cartesianScales.getDomainIdentifier();
      var mainXAxisPosition = cartesianScales.getMainXAxisPosition();
      var customDomain = cartesianScales.getCustomDomainValuesByposition(mainXAxisPosition);
      if (!!customDomain) {
        return customDomain;
      }
      this._domains = Array.from(new Set(displayData.map(function(d) {
        return d[domainIdentifier_1];
      })));
    }
    return this._domains;
  };
  HeatmapModel2.prototype.getUniqueRanges = function() {
    if (Tools.isEmpty(this._ranges)) {
      var displayData = this.getDisplayData();
      var cartesianScales = this.services.cartesianScales;
      var rangeIdentifier_1 = cartesianScales.getRangeIdentifier();
      var mainYAxisPosition = cartesianScales.getMainYAxisPosition();
      var customDomain = cartesianScales.getCustomDomainValuesByposition(mainYAxisPosition);
      if (!!customDomain) {
        return customDomain;
      }
      this._ranges = Array.from(new Set(displayData.map(function(d) {
        return d[rangeIdentifier_1];
      })));
    }
    return this._ranges;
  };
  HeatmapModel2.prototype.getMatrix = function() {
    var _this = this;
    if (Tools.isEmpty(this._matrix)) {
      var uniqueDomain = this.getUniqueDomain();
      var uniqueRange = this.getUniqueRanges();
      var domainIdentifier_2 = this.services.cartesianScales.getDomainIdentifier();
      var rangeIdentifier_2 = this.services.cartesianScales.getRangeIdentifier();
      var range_1 = {};
      uniqueRange.forEach(function(ran) {
        range_1[ran] = {
          value: null,
          index: -1
        };
      });
      uniqueDomain.forEach(function(dom) {
        _this._matrix[dom] = Tools.clone(range_1);
      });
      this.getDisplayData().forEach(function(d, i) {
        _this._matrix[d[domainIdentifier_2]][d[rangeIdentifier_2]] = {
          value: d["value"],
          index: i
        };
      });
    }
    return this._matrix;
  };
  HeatmapModel2.prototype.setData = function(newData) {
    var sanitizedData = this.sanitize(Tools.clone(newData));
    var dataGroups = this.generateDataGroups(sanitizedData);
    this.set({
      data: sanitizedData,
      dataGroups
    });
    this._domains = [];
    this._ranges = [];
    this._matrix = {};
    return sanitizedData;
  };
  HeatmapModel2.prototype.getMatrixAsArray = function() {
    var _this = this;
    if (Tools.isEmpty(this._matrix)) {
      this.getMatrix();
    }
    var uniqueDomain = this.getUniqueDomain();
    var uniqueRange = this.getUniqueRanges();
    var domainIdentifier = this.services.cartesianScales.getDomainIdentifier();
    var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();
    var arr = [];
    uniqueDomain.forEach(function(domain) {
      uniqueRange.forEach(function(range3) {
        var element = {
          value: _this._matrix[domain][range3].value,
          index: _this._matrix[domain][range3].index
        };
        element[domainIdentifier] = domain;
        element[rangeIdentifier] = range3;
        arr.push(element);
      });
    });
    return arr;
  };
  HeatmapModel2.prototype.getTabularDataArray = function() {
    var displayData = this.getDisplayData();
    var _a4 = this.assignRangeAndDomains(), primaryDomain = _a4.primaryDomain, primaryRange = _a4.primaryRange, secondaryDomain = _a4.secondaryDomain, secondaryRange = _a4.secondaryRange;
    var domainValueFormatter;
    var result2 = __spreadArrays20([
      [primaryDomain.label, primaryRange.label, "Value"]
    ], displayData.map(function(datum2) {
      return [
        datum2[primaryDomain.identifier] === null ? "&ndash;" : domainValueFormatter ? domainValueFormatter(datum2[primaryDomain.identifier]) : datum2[primaryDomain.identifier],
        datum2[primaryRange.identifier] === null ? "&ndash;" : datum2[primaryRange.identifier].toLocaleString(),
        datum2["value"]
      ];
    }));
    return result2;
  };
  HeatmapModel2.prototype.getColorClassName = function(configs) {
    return configs.originalClassName + " " + this._colorScale(configs.value);
  };
  HeatmapModel2.prototype.setColorClassNames = function() {
    var options2 = this.getOptions();
    var customColors = Tools.getProperty(options2, "color", "gradient", "colors");
    var customColorsEnabled = !Tools.isEmpty(customColors);
    var colorPairingOption = Tools.getProperty(options2, "color", "pairing", "option");
    var domain = this.getValueDomain();
    var colorScheme = domain[0] < 0 && domain[1] > 0 ? "diverge" : "mono";
    if (colorPairingOption < 1 && colorPairingOption > 4 && colorScheme === "mono") {
      colorPairingOption = 1;
    } else if (colorPairingOption < 1 && colorPairingOption > 2 && colorScheme === "diverge") {
      colorPairingOption = 1;
    }
    var colorPairing = customColorsEnabled ? customColors : [];
    if (!customColorsEnabled) {
      var colorGroupingLength = colorScheme === "diverge" ? 17 : 11;
      for (var i = 1; i < colorGroupingLength + 1; i++) {
        colorPairing.push("fill-" + colorScheme + "-" + colorPairingOption + "-" + i);
      }
    }
    this._colorScale = quantize().domain(this.getValueDomain()).range(colorPairing);
  };
  return HeatmapModel2;
}(ChartModelCartesian);

// node_modules/@carbon/charts/charts/heatmap.js
var __extends99 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b10) {
      d2.__proto__ = b10;
    } || function(d2, b10) {
      for (var p in b10)
        if (b10.hasOwnProperty(p))
          d2[p] = b10[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __spreadArrays21 = function() {
  for (var s3 = 0, i = 0, il = arguments.length; i < il; i++)
    s3 += arguments[i].length;
  for (var r = Array(s3), k3 = 0, i = 0; i < il; i++)
    for (var a3 = arguments[i], j = 0, jl = a3.length; j < jl; j++, k3++)
      r[k3] = a3[j];
  return r;
};
var HeatmapChart = function(_super) {
  __extends99(HeatmapChart2, _super);
  function HeatmapChart2(holder, chartConfigs) {
    var _this = _super.call(this, holder, chartConfigs) || this;
    _this.model = new HeatmapModel(_this.services);
    _this.model.setOptions(Tools.mergeDefaultChartOptions(options.heatmapChart, chartConfigs.options));
    _this.init(holder, chartConfigs);
    return _this;
  }
  HeatmapChart2.prototype.getAxisChartComponents = function(graphFrameComponents, configs) {
    var options2 = this.model.getOptions();
    var toolbarEnabled = Tools.getProperty(options2, "toolbar", "enabled");
    this.services.cartesianScales.determineAxisDuality();
    this.services.cartesianScales.findDomainAndRangeAxes();
    this.services.cartesianScales.determineOrientation();
    var titleAvailable = !!this.model.getOptions().title;
    var titleComponent = {
      id: "title",
      components: [new Title(this.model, this.services)],
      growth: LayoutGrowth.STRETCH
    };
    var toolbarComponent = {
      id: "toolbar",
      components: [new Toolbar3(this.model, this.services)],
      growth: LayoutGrowth.PREFERRED
    };
    var headerComponent = {
      id: "header",
      components: [
        new LayoutComponent(this.model, this.services, __spreadArrays21([
          titleComponent
        ], toolbarEnabled ? [toolbarComponent] : []), {
          direction: LayoutDirection.ROW,
          alignItems: LayoutAlignItems.CENTER
        })
      ],
      growth: LayoutGrowth.PREFERRED
    };
    var legendComponent = {
      id: "legend",
      components: [new ColorScaleLegend(this.model, this.services)],
      growth: LayoutGrowth.PREFERRED,
      renderType: RenderTypes.SVG
    };
    var graphFrameComponent = {
      id: "graph-frame",
      components: graphFrameComponents,
      growth: LayoutGrowth.STRETCH,
      renderType: RenderTypes.SVG
    };
    var isLegendEnabled = Tools.getProperty(configs, "legend", "enabled") !== false && this.model.getOptions().legend.enabled !== false;
    var fullFrameComponentDirection = LayoutDirection.COLUMN_REVERSE;
    var legendSpacerComponent = {
      id: "spacer",
      components: [new Spacer(this.model, this.services, { size: 15 })],
      growth: LayoutGrowth.PREFERRED
    };
    var fullFrameComponent = {
      id: "full-frame",
      components: [
        new LayoutComponent(this.model, this.services, __spreadArrays21(isLegendEnabled ? [legendComponent] : [], isLegendEnabled ? [legendSpacerComponent] : [], [
          graphFrameComponent
        ]), {
          direction: fullFrameComponentDirection
        })
      ],
      growth: LayoutGrowth.STRETCH
    };
    var topLevelLayoutComponents = [];
    if (titleAvailable || toolbarEnabled) {
      topLevelLayoutComponents.push(headerComponent);
      var titleSpacerComponent = {
        id: "spacer",
        components: [
          new Spacer(this.model, this.services, toolbarEnabled ? { size: 15 } : void 0)
        ],
        growth: LayoutGrowth.PREFERRED
      };
      topLevelLayoutComponents.push(titleSpacerComponent);
    }
    topLevelLayoutComponents.push(fullFrameComponent);
    return [
      new AxisChartsTooltip(this.model, this.services),
      new Modal3(this.model, this.services),
      new LayoutComponent(this.model, this.services, topLevelLayoutComponents, {
        direction: LayoutDirection.COLUMN
      })
    ];
  };
  HeatmapChart2.prototype.getComponents = function() {
    var graphFrameComponents = [
      new TwoDimensionalAxes(this.model, this.services),
      new Heatmap2(this.model, this.services)
    ];
    var components = this.getAxisChartComponents(graphFrameComponents);
    return components;
  };
  return HeatmapChart2;
}(AxisChart);
export {
  AlluvialChart,
  AreaChart,
  BoxplotChart,
  BubbleChart,
  BulletChart,
  CirclePackChart,
  ComboChart,
  DonutChart,
  GaugeChart,
  GroupedBarChart,
  HeatmapChart,
  HistogramChart,
  LineChart,
  LollipopChart,
  MeterChart,
  PieChart,
  RadarChart,
  ScatterChart,
  SimpleBarChart,
  StackedAreaChart,
  StackedBarChart,
  TreeChart,
  TreemapChart,
  WordCloudChart,
  configuration_exports as configurations,
  interfaces_exports as interfaces
};
/* flatpickr v4.6.1, @license MIT */
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="es" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
//# sourceMappingURL=@carbon_charts.js.map
