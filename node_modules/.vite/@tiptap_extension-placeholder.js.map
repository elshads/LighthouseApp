{
  "version": 3,
  "sources": ["../@tiptap/extension-placeholder/src/placeholder.ts", "dep:@tiptap_extension-placeholder"],
  "sourcesContent": ["import { Editor, Extension } from '@tiptap/core'\nimport { Node as ProsemirrorNode } from 'prosemirror-model'\nimport { Decoration, DecorationSet } from 'prosemirror-view'\nimport { Plugin } from 'prosemirror-state'\n\nexport interface PlaceholderOptions {\n  emptyEditorClass: string,\n  emptyNodeClass: string,\n  placeholder: ((PlaceholderProps: {\n    editor: Editor,\n    node: ProsemirrorNode,\n    pos: number,\n    hasAnchor: boolean,\n  }) => string) | string,\n  showOnlyWhenEditable: boolean,\n  showOnlyCurrent: boolean,\n  includeChildren: boolean,\n}\n\nexport const Placeholder = Extension.create<PlaceholderOptions>({\n  name: 'placeholder',\n\n  addOptions() {\n    return {\n      emptyEditorClass: 'is-editor-empty',\n      emptyNodeClass: 'is-empty',\n      placeholder: 'Write something \u2026',\n      showOnlyWhenEditable: true,\n      showOnlyCurrent: true,\n      includeChildren: false,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        props: {\n          decorations: ({ doc, selection }) => {\n            const active = this.editor.isEditable || !this.options.showOnlyWhenEditable\n            const { anchor } = selection\n            const decorations: Decoration[] = []\n\n            if (!active) {\n              return\n            }\n\n            doc.descendants((node, pos) => {\n              const hasAnchor = anchor >= pos && anchor <= (pos + node.nodeSize)\n              const isEmpty = !node.isLeaf && !node.childCount\n\n              if ((hasAnchor || !this.options.showOnlyCurrent) && isEmpty) {\n                const classes = [this.options.emptyNodeClass]\n\n                if (this.editor.isEmpty) {\n                  classes.push(this.options.emptyEditorClass)\n                }\n\n                const decoration = Decoration.node(pos, pos + node.nodeSize, {\n                  class: classes.join(' '),\n                  'data-placeholder': typeof this.options.placeholder === 'function'\n                    ? this.options.placeholder({\n                      editor: this.editor,\n                      node,\n                      pos,\n                      hasAnchor,\n                    })\n                    : this.options.placeholder,\n                })\n\n                decorations.push(decoration)\n              }\n\n              return this.options.includeChildren\n            })\n\n            return DecorationSet.create(doc, decorations)\n          },\n        },\n      }),\n    ]\n  },\n})\n", "import d from \"./node_modules/@tiptap/extension-placeholder/dist/tiptap-extension-placeholder.esm.js\";export default d;\nexport * from \"./node_modules/@tiptap/extension-placeholder/dist/tiptap-extension-placeholder.esm.js\""],
  "mappings": ";;;;;;;;;IAmBa,cAAc,UAAU,OAA2B;EAC9D,MAAM;EAEN,aAAU;AACR,WAAO;MACL,kBAAkB;MAClB,gBAAgB;MAChB,aAAa;MACb,sBAAsB;MACtB,iBAAiB;MACjB,iBAAiB;;;EAIrB,wBAAqB;AACnB,WAAO;MACL,IAAI,OAAO;QACT,OAAO;UACL,aAAa,CAAC,EAAE,KAAK,gBAAW;AAC9B,kBAAM,SAAS,KAAK,OAAO,cAAc,CAAC,KAAK,QAAQ;AACvD,kBAAM,EAAE,WAAW;AACnB,kBAAM,cAA4B;AAElC,gBAAI,CAAC,QAAQ;AACX;;AAGF,gBAAI,YAAY,CAAC,MAAM,QAAG;AACxB,oBAAM,YAAY,UAAU,OAAO,UAAW,MAAM,KAAK;AACzD,oBAAM,UAAU,CAAC,KAAK,UAAU,CAAC,KAAK;AAEtC,kBAAK,cAAa,CAAC,KAAK,QAAQ,oBAAoB,SAAS;AAC3D,sBAAM,UAAU,CAAC,KAAK,QAAQ;AAE9B,oBAAI,KAAK,OAAO,SAAS;AACvB,0BAAQ,KAAK,KAAK,QAAQ;;AAG5B,sBAAM,aAAa,WAAW,KAAK,KAAK,MAAM,KAAK,UAAU;kBAC3D,OAAO,QAAQ,KAAK;kBACpB,oBAAoB,OAAO,KAAK,QAAQ,gBAAgB,aACpD,KAAK,QAAQ,YAAY;oBACzB,QAAQ,KAAK;oBACb;oBACA;oBACA;uBAEA,KAAK,QAAQ;;AAGnB,4BAAY,KAAK;;AAGnB,qBAAO,KAAK,QAAQ;;AAGtB,mBAAO,cAAc,OAAO,KAAK;;;;;;;;;AC3EyD,IAAO,uCAAQ;",
  "names": []
}
