{
  "version": 3,
  "sources": ["../@tiptap/extension-image/src/image.ts", "dep:@tiptap_extension-image"],
  "sourcesContent": ["import {\n  Node,\n  nodeInputRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface ImageOptions {\n  inline: boolean,\n  allowBase64: boolean,\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    image: {\n      /**\n       * Add an image\n       */\n      setImage: (options: { src: string, alt?: string, title?: string }) => ReturnType,\n    }\n  }\n}\n\nexport const inputRegex = /(!\\[(.+|:?)]\\((\\S+)(?:(?:\\s+)[\"'](\\S+)[\"'])?\\))$/\n\nexport const Image = Node.create<ImageOptions>({\n  name: 'image',\n\n  addOptions() {\n    return {\n      inline: false,\n      allowBase64: false,\n      HTMLAttributes: {},\n    }\n  },\n\n  inline() {\n    return this.options.inline\n  },\n\n  group() {\n    return this.options.inline ? 'inline' : 'block'\n  },\n\n  draggable: true,\n\n  addAttributes() {\n    return {\n      src: {\n        default: null,\n      },\n      alt: {\n        default: null,\n      },\n      title: {\n        default: null,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: this.options.allowBase64\n          ? 'img[src]'\n          : 'img[src]:not([src^=\"data:\"])',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['img', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  addCommands() {\n    return {\n      setImage: options => ({ commands }) => {\n        return commands.insertContent({\n          type: this.name,\n          attrs: options,\n        })\n      },\n    }\n  },\n\n  addInputRules() {\n    return [\n      nodeInputRule({\n        find: inputRegex,\n        type: this.type,\n        getAttributes: match => {\n          const [,, alt, src, title] = match\n\n          return { src, alt, title }\n        },\n      }),\n    ]\n  },\n})\n", "import d from \"./node_modules/@tiptap/extension-image/dist/tiptap-extension-image.esm.js\";export default d;\nexport * from \"./node_modules/@tiptap/extension-image/dist/tiptap-extension-image.esm.js\""],
  "mappings": ";;;;;;;;IAuBa,aAAa;IAEb,QAAQ,KAAK,OAAqB;EAC7C,MAAM;EAEN,aAAU;AACR,WAAO;MACL,QAAQ;MACR,aAAa;MACb,gBAAgB;;;EAIpB,SAAM;AACJ,WAAO,KAAK,QAAQ;;EAGtB,QAAK;AACH,WAAO,KAAK,QAAQ,SAAS,WAAW;;EAG1C,WAAW;EAEX,gBAAa;AACX,WAAO;MACL,KAAK;QACH,SAAS;;MAEX,KAAK;QACH,SAAS;;MAEX,OAAO;QACL,SAAS;;;;EAKf,YAAS;AACP,WAAO;MACL;QACE,KAAK,KAAK,QAAQ,cACd,aACA;;;;EAKV,WAAW,EAAE,kBAAgB;AAC3B,WAAO,CAAC,OAAO,gBAAgB,KAAK,QAAQ,gBAAgB;;EAG9D,cAAW;AACT,WAAO;MACL,UAAU,aAAW,CAAC,EAAE,eAAU;AAChC,eAAO,SAAS,cAAc;UAC5B,MAAM,KAAK;UACX,OAAO;;;;;EAMf,gBAAa;AACX,WAAO;MACL,cAAc;QACZ,MAAM;QACN,MAAM,KAAK;QACX,eAAe,WAAK;AAClB,gBAAM,CAAA,EAAA,EAAI,KAAK,KAAK,SAAS;AAE7B,iBAAO,EAAE,KAAK,KAAK;;;;;;;;AC7F6D,IAAO,iCAAQ;",
  "names": []
}
